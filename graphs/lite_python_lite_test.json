{"Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.TestModels.assertValidDebugInfo": ["<builtin>.set", "os.path.basename", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNotIn"], "<builtin>.set": [], "os.path.basename": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNotIn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromConstructor.testInvalidConstructor": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.lite.TFLiteConverter", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises": [], "tensorflow.lite.python.lite.TFLiteConverter": [], "<builtin>.str": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromConstructor.testValidConstructor": ["tensorflow.lite.python.lite.TFLiteConverter", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromConstructor.testRedundantArgumentsWarning": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.lite.python.lite.TFLiteConverter", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "logging.StreamHandler", "tensorflow.python.ops.math_ops.add", "io.StringIO", "tensorflow.python.framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "io.BytesIO", "logging.root.addHandler", "logging.root.removeHandler"], "tensorflow.python.framework.ops.Graph": [], "tensorflow.python.ops.array_ops.placeholder": [], "tensorflow.python.ops.math_ops.add": [], "tensorflow.python.client.session.Session": [], "tensorflow.python.framework.convert_to_constants.convert_variables_to_constants_from_session_graph": [], "io.BytesIO": [], "io.StringIO": [], "logging.StreamHandler": [], "logging.root.addHandler": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone": [], "logging.root.removeHandler": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromConstructor.testShapeOverriding": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.lite.python.lite.TFLiteConverter", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.add", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "tensorflow.lite.python.interpreter.Interpreter"], "tensorflow.lite.python.interpreter.Interpreter": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromConstructor.testPartialShapeOverriding": ["tensorflow.python.client.session.Session", "tensorflow.lite.python.lite.TFLiteConverter", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.add", "tensorflow.python.framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromConstructor.testInvalidShapeOverriding": ["tensorflow.python.client.session.Session", "tensorflow.lite.python.lite.TFLiteConverter", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.add", "tensorflow.python.framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testFloatModel": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "tensorflow.lite.python.lite.TFLiteConverter.from_session": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testFloatModelQuantizedInput": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testForgottenCallToAllocateTensors": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "numpy.ones", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "numpy.ones": [], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest": ["absl.testing.parameterized.named_parameters", "tensorflow.python.framework.test_util.run_in_graph_and_eager_modes"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testIntegerQuantizationWithUnsupportedOps": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.ops.math_ops.ceil", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.add", "tensorflow.python.ops.math_ops.tanh", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "tensorflow.python.ops.math_ops.ceil": [], "tensorflow.python.ops.math_ops.tanh": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testIntegerQuantizationWithUnsupportedOps.calibration_gen": ["numpy.random.uniform", "six.moves.range"], "six.moves.range": [], "numpy.random.uniform": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testDisablePerChannelQuantization": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "<builtin>.next", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest._getIntegerQuantizeModel", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest._getIntegerQuantizeModel": ["tensorflow.python.ops.nn_ops.conv2d", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.nn_ops.relu", "numpy.random.seed", "tensorflow.python.ops.array_ops.ones"], "<builtin>.next": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testString": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.reshape", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "tensorflow.python.ops.array_ops.reshape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testIntermediateInputArray": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testSizeNoneInvalid": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testScalarValid": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEmpty", "tensorflow.lite.python.interpreter.Interpreter", "numpy.array", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEmpty": [], "numpy.array": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testSizeInvalid": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testSizeNone": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testResizeTensorInputStrict": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.interpreter.Interpreter", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testBatchSizeValid": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testBatchSizeNonZero": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.ops.math_ops.matmul"], "tensorflow.python.ops.math_ops.matmul": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testFreezeGraph": ["tensorflow.python.ops.nn_ops.top_k", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.ops.variables.global_variables_initializer"], "tensorflow.python.ops.variable_scope.get_variable": [], "tensorflow.python.ops.nn_ops.top_k": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testGraphviz": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testDumpGraphviz": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "<builtin>.len", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertGreater", "os.listdir", "os.path.exists", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "tensorflow.lite.python.interpreter.Interpreter", "os.path.join", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir": [], "os.listdir": [], "<builtin>.len": [], "os.path.join": [], "os.path.exists": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertGreater": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testDumpConversionSummary": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNotEmpty", "os.listdir", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNotEmpty": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testDumpConversionSummaryWithOldConverter": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "<builtin>.len", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "os.listdir", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testQuantizeDynamicRange": ["numpy.random.uniform", "tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "<builtin>.len", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLess", "tensorflow.python.framework.constant_op.constant", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.ops.math_ops.matmul", "numpy.random.seed"], "numpy.random.seed": [], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLess": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testQuantizeDynamicRangeDeprecatedPostTrainingQuantizeAttribute": ["numpy.random.uniform", "tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue"], "tensorflow.python.ops.array_ops.ones": [], "tensorflow.python.ops.nn_ops.conv2d": [], "tensorflow.python.ops.nn_ops.relu": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest._getIntegerQuantizeModel.calibration_gen": ["numpy.random.uniform", "six.moves.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testQuantizeInt8AllowFloat": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "<builtin>.len", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLess", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest._getIntegerQuantizeModel", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testQuantizeInt8And16x8": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "<builtin>.len", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLess", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest._getIntegerQuantizeModel", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testQuantizeInt8InputOutput": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "<builtin>.len", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLess", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest._getIntegerQuantizeModel", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testInvalidQuantizeInt8": ["numpy.random.uniform", "tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "<builtin>.str", "tensorflow.python.ops.math_ops.matmul", "numpy.random.seed"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testQuantizeUInt8": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertGreater", "tensorflow.python.ops.array_ops.fake_quant_with_min_max_args", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "tensorflow.python.ops.array_ops.fake_quant_with_min_max_args": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testQuantizeUInt8UsingDefaultRangeStats": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertGreater", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testQuantizeFloat16": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "<builtin>.ValueError", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest._getIntegerQuantizeModel", "tensorflow.lite.python.interpreter.Interpreter", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "<builtin>.ValueError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testInvalidQuantizeFloat16": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest._getIntegerQuantizeModel", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testInvalidQuantizeQATModelRequiresInputStats": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.fake_quant_with_min_max_args", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testInvalidQuantizeQATModelMissingInputStats": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.fake_quant_with_min_max_args", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testTrainingTimeAndPostTrainingCalibrateAndQuantize": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "<builtin>.len", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLess", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest._getIntegerQuantizeModel", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.convert.mlir_quantize", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "tensorflow.lite.python.convert.mlir_quantize": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testFloatTocoConverter": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.lite.TocoConverter.from_session", "tensorflow.lite.python.interpreter.Interpreter"], "tensorflow.lite.python.lite.TocoConverter.from_session": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testMultipleOutputNodeNames": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "numpy.asarray", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.ops.array_ops.split"], "tensorflow.python.ops.array_ops.split": [], "numpy.asarray": [], "tensorflow.python.framework.test_util.run_in_graph_and_eager_modes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testFunctions": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.ops.variables.variables_initializer", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testFunctions.plus_placeholder", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.variables.Variable", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.ops.math_ops.multiply"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testFunctions.plus_placeholder": [], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.ops.math_ops.multiply": [], "tensorflow.python.ops.variables.variables_initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testInferenceInputOutputTypeFloatDefault": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testInferenceInputOutputTypeQuantizedUint8Default": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.fake_quant_with_min_max_args", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testReusingConverterWithDifferentPostTrainingQuantization": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.fake_quant_with_min_max_args", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testResizeWithShape": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.reshape", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.ops.array_ops.shape"], "tensorflow.python.ops.array_ops.shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testResizingIntermediateDynamicTensor": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.negative", "tensorflow.python.ops.array_ops.pad", "tensorflow.lite.python.interpreter.Interpreter", "numpy.array", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "tensorflow.python.ops.math_ops.negative": [], "tensorflow.python.ops.array_ops.pad": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testGraphDebugInfo": ["tensorflow.python.client.session.Session", "tensorflow.python.ops.variables.variables_initializer", "six.ensure_str", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testGraphDebugInfo.plus_placeholder", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.TestModels.assertValidDebugInfo", "tensorflow.python.ops.variables.Variable", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.ops.math_ops.multiply"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testGraphDebugInfo.plus_placeholder": [], "six.ensure_str": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSessionTest.testOutputOnlyModel": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.ops.random_ops.random_normal", "tensorflow.python.framework.ops.Graph", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue"], "tensorflow.python.ops.random_ops.random_normal": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphFile.testFloat": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph", "tensorflow.python.training.training_util.write_graph"], "tensorflow.python.training.training_util.write_graph": [], "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphFile.testFloatWithShapesArray": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph", "tensorflow.python.training.training_util.write_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphFile.testInvalidShapesArray": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph", "tensorflow.python.training.training_util.write_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphFile.testPartialShapesArray": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.add", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph", "tensorflow.python.training.training_util.write_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphFile.testFreezeGraph": ["tensorflow.python.client.session.Session", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "<builtin>.str", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph", "tensorflow.python.training.training_util.write_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphFile.testPbtxt": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph", "tensorflow.python.training.training_util.write_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphFile.testInvalidFileNotFound": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphFile.testInvalidFileBadData": ["tensorflow.python.platform.gfile.Open", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "<builtin>.str", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph"], "tensorflow.python.platform.gfile.Open": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphFile.testFloatTocoConverter": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.lite.TocoConverter.from_frozen_graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.python.training.training_util.write_graph"], "tensorflow.lite.python.lite.TocoConverter.from_frozen_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphFile.testGraphDebugInfo": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.lite.TocoConverter.from_frozen_graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "tensorflow.python.training.training_util.write_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphObjectDetection._initObjectDetectionArgs": ["tensorflow.python.platform.resource_loader.get_root_dir_with_all_resources", "<builtin>.IOError", "os.path.exists", "os.path.join", "tensorflow.python.platform.resource_loader.get_path_to_datafile"], "tensorflow.python.platform.resource_loader.get_path_to_datafile": [], "tensorflow.python.platform.resource_loader.get_root_dir_with_all_resources": [], "<builtin>.IOError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphObjectDetection.testTFLiteGraphDef": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphObjectDetection._initObjectDetectionArgs", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphObjectDetection.testTFLiteGraphDefWithControlOutput": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.lite.python.lite.TFLiteConverter", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.logging_ops.print_v2", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.util._convert_model_from_bytearray_to_object"], "tensorflow.python.ops.logging_ops.print_v2": [], "tensorflow.lite.python.util._convert_model_from_bytearray_to_object": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphObjectDetection.testModifyIOToUint8": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphObjectDetection._initObjectDetectionArgs", "tensorflow.lite.python.util._convert_tflite_enum_type_to_tf_type", "tensorflow.lite.python.util.get_quantize_opcode_idx", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.util._convert_model_from_bytearray_to_object", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromFrozenGraphObjectDetection.testModifyIOToUint8.representative_dataset_gen": ["numpy.random.uniform", "six.moves.range"], "tensorflow.lite.python.util.get_quantize_opcode_idx": [], "tensorflow.lite.python.util._convert_tflite_enum_type_to_tf_type": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel": ["tensorflow.python.client.session.Session", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "tensorflow.python.saved_model.saved_model.simple_save"], "tensorflow.python.saved_model.saved_model.simple_save": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest.testSimpleModel": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.lite.python.lite.TFLiteConverter.from_saved_model", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertStartsWith", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter"], "tensorflow.lite.python.lite.TFLiteConverter.from_saved_model": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertStartsWith": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest.testOldConverterWarning": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn", "tensorflow.lite.python.lite.TFLiteConverter.from_saved_model", "logging.StreamHandler", "io.StringIO", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel", "io.BytesIO", "logging.root.addHandler", "logging.root.removeHandler"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest.testNewConverterOptOut": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn", "tensorflow.lite.python.lite.TFLiteConverter.from_saved_model", "logging.StreamHandler", "io.StringIO", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel", "io.BytesIO", "logging.root.addHandler", "logging.root.removeHandler"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest.testNoneBatchSize": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.lite.python.lite.TFLiteConverter.from_saved_model", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertStartsWith", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest.testOrderInputArrays": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.lite.python.lite.TFLiteConverter.from_saved_model", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertStartsWith", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest.testShapeOverriding": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.lite.python.lite.TFLiteConverter.from_saved_model", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertStartsWith", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest.testWrongInputShapes": ["Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel", "tensorflow.lite.python.lite.TFLiteConverter.from_saved_model", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest.testSubsetInputShaapes": ["Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel", "tensorflow.lite.python.lite.TFLiteConverter.from_saved_model", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest.testSimpleModelTocoConverter": ["Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel", "tensorflow.lite.python.lite.TocoConverter.from_saved_model", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone"], "tensorflow.lite.python.lite.TocoConverter.from_saved_model": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest.testGraphDebugInfo": ["Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.TestModels.assertValidDebugInfo", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromSavedModelTest._createSavedModel", "tensorflow.lite.python.lite.TFLiteConverter.from_saved_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.MyAddLayer.__init__": ["<builtin>.super"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.MyAddLayer.call": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.MyAddLayer.get_config": ["<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.setUp": ["tensorflow.keras.backend.clear_session", "<builtin>.super", "tensorflow.python.eager.context.executing_eagerly"], "tensorflow.python.eager.context.executing_eagerly": [], "tensorflow.keras.backend.clear_session": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.tearDown": ["<builtin>.super", "os.remove"], "os.remove": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getSequentialModel": ["tensorflow.keras.layers.RepeatVector", "tempfile.mkstemp", "numpy.random.random", "tensorflow.keras.layers.TimeDistributed", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.MyAddLayer.__init__", "os.close", "tensorflow.keras.models.save_model", "tensorflow.keras.models.Sequential", "tensorflow.keras.layers.Dense"], "tensorflow.keras.models.Sequential": [], "tensorflow.keras.layers.Dense": [], "tensorflow.keras.layers.RepeatVector": [], "tensorflow.keras.layers.TimeDistributed": [], "numpy.random.random": [], "tempfile.mkstemp": [], "tensorflow.keras.models.save_model": [], "os.close": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testSequentialModel": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getSequentialModel", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "numpy.testing.assert_almost_equal", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.keras.models.load_model", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEndsWith", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "numpy.array"], "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEndsWith": [], "tensorflow.keras.models.load_model": [], "numpy.testing.assert_almost_equal": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testCustomLayer": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getSequentialModel", "numpy.testing.assert_almost_equal", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.keras.models.load_model", "tensorflow.lite.python.interpreter.Interpreter", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testSequentialModelInputArray": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getSequentialModel", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.python.framework.ops.disable_eager_execution"], "tensorflow.python.framework.ops.disable_eager_execution": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testSequentialModelInputShape": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getSequentialModel", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEndsWith", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testSequentialModelOutputArray": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getSequentialModel", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.python.framework.ops.disable_eager_execution"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testFunctionalModel": ["tempfile.mkstemp", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "numpy.random.random", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "numpy.testing.assert_almost_equal", "os.close", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.keras.models.load_model", "tensorflow.keras.models.Model", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "tensorflow.keras.layers.Input", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.keras.models.save_model", "tensorflow.keras.layers.Dense"], "tensorflow.keras.layers.Input": [], "tensorflow.keras.models.Model": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getFunctionalModelMultipleInputs": ["tempfile.mkstemp", "numpy.random.random", "os.close", "tensorflow.keras.models.Model", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Input", "tensorflow.keras.models.save_model", "tensorflow.keras.layers.Dense"], "tensorflow.keras.layers.Dropout": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testFunctionalModelMultipleInputs": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEndsWith", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getFunctionalModelMultipleInputs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testShapeOverriding": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEndsWith", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getFunctionalModelMultipleInputs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testPartialShapeOverriding": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEndsWith", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getFunctionalModelMultipleInputs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testWrongShapeOverriding": ["Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getFunctionalModelMultipleInputs", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testFunctionalSequentialModel": ["tempfile.mkstemp", "numpy.random.random", "os.close", "tensorflow.keras.models.Model", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "numpy.testing.assert_almost_equal", "tensorflow.keras.models.load_model", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "numpy.array", "tensorflow.keras.models.save_model", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.TimeDistributed", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.keras.models.Sequential", "tensorflow.keras.layers.RepeatVector", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEndsWith", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testSequentialModelTocoConverter": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.lite.python.lite.TocoConverter.from_keras_model_file", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getSequentialModel", "tensorflow.lite.python.interpreter.Interpreter"], "tensorflow.lite.python.lite.TocoConverter.from_keras_model_file": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testGraphDebugInfo": ["Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.TestModels.assertValidDebugInfo", "tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getSequentialModel"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testSparsifyModel": ["tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getSequentialModel"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile.testSparsifyQuantizedModel": ["tensorflow.lite.python.lite.TFLiteConverter.from_keras_model_file", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.FromKerasFile._getSequentialModel", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.GrapplerTest.testConstantFolding": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.gen_array_ops.broadcast_to", "tensorflow.python.framework.ops.disable_eager_execution"], "tensorflow.python.ops.gen_array_ops.broadcast_to": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.GrapplerTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.GrapplerTest.testInputNodeIsNotFolded": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session", "tensorflow.python.framework.ops.disable_eager_execution"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.GrapplerTest.testGrapplerConstFolding": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.GrapplerTest.testGrapplerConstFolding.plus_placeholder", "tensorflow.python.ops.array_ops.reshape", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.interpreter.Interpreter", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.GrapplerTest.testGrapplerConstFolding.plus_placeholder": [], "tensorflow.python.ops.array_ops.zeros": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.DefaultConverterAttrsTest.testAttrs": ["tensorflow.python.client.session.Session", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNotNone", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNone", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse", "tensorflow.lite.python.lite.TFLiteConverter.from_session"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.ControlFlowV1OpsTest.testConverterErrorOnControlFlowV1Ops": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn", "<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.python.platform.resource_loader.get_path_to_datafile", "tensorflow.lite.python.lite.TFLiteConverter.from_frozen_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.QuantizationModeTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\lite_test.QuantizationModeTest.testDeprecatedOptionWarning": ["tensorflow.lite.python.lite.QuantizationMode", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn", "logging.StreamHandler", "io.StringIO", "tensorflow.lite.python.lite.TargetSpec", "logging.root.addHandler", "logging.root.removeHandler"], "tensorflow.lite.python.lite.TargetSpec": [], "tensorflow.lite.python.lite.QuantizationMode": [], "tensorflow.python.platform.test.main": []}
