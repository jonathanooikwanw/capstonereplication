{"linalg.linear_operator_algebra": [], "linalg.linear_operator_algebra._registered_function": ["<builtin>.tuple", "util.tf_inspect.getmro", "<builtin>.list", "<builtin>.min", "<builtin>.enumerate", "itertools.product"], "util.tf_inspect.getmro": [], "<builtin>.enumerate": [], "itertools.product": [], "<builtin>.list": [], "linalg.linear_operator_algebra._registered_function.hierarchy_distance": ["<builtin>.tuple", "<builtin>.sum"], "<builtin>.sum": [], "<builtin>.tuple": [], "<builtin>.min": [], "linalg.linear_operator_algebra._registered_adjoint": ["linalg.linear_operator_algebra._registered_function"], "linalg.linear_operator_algebra._registered_cholesky": ["linalg.linear_operator_algebra._registered_function"], "linalg.linear_operator_algebra._registered_matmul": ["linalg.linear_operator_algebra._registered_function"], "linalg.linear_operator_algebra._registered_solve": ["linalg.linear_operator_algebra._registered_function"], "linalg.linear_operator_algebra._registered_inverse": ["linalg.linear_operator_algebra._registered_function"], "linalg.linear_operator_algebra.adjoint": ["<builtin>.type", "framework.ops.name_scope", "linalg.linear_operator_algebra._registered_adjoint", "<builtin>.ValueError"], "<builtin>.type": [], "<builtin>.ValueError": [], "framework.ops.name_scope": [], "linalg.linear_operator_algebra.cholesky": ["<builtin>.type", "framework.ops.name_scope", "linalg.linear_operator_algebra._registered_cholesky", "<builtin>.ValueError"], "linalg.linear_operator_algebra.matmul": ["linalg.linear_operator_algebra._registered_matmul", "<builtin>.type", "framework.ops.name_scope", "<builtin>.ValueError"], "linalg.linear_operator_algebra.solve": ["<builtin>.type", "framework.ops.name_scope", "<builtin>.ValueError", "linalg.linear_operator_algebra._registered_solve"], "linalg.linear_operator_algebra.inverse": ["<builtin>.type", "framework.ops.name_scope", "<builtin>.ValueError", "linalg.linear_operator_algebra._registered_inverse"], "linalg.linear_operator_algebra.RegisterAdjoint.__init__": [], "linalg.linear_operator_algebra.RegisterAdjoint.__call__": ["<builtin>.callable", "<builtin>.TypeError", "<builtin>.ValueError"], "<builtin>.callable": [], "<builtin>.TypeError": [], "linalg.linear_operator_algebra.RegisterCholesky.__init__": [], "linalg.linear_operator_algebra.RegisterCholesky.__call__": ["<builtin>.callable", "<builtin>.TypeError", "<builtin>.ValueError"], "linalg.linear_operator_algebra.RegisterMatmul.__init__": [], "linalg.linear_operator_algebra.RegisterMatmul.__call__": ["<builtin>.callable", "<builtin>.TypeError", "<builtin>.ValueError"], "linalg.linear_operator_algebra.RegisterSolve.__init__": [], "linalg.linear_operator_algebra.RegisterSolve.__call__": ["<builtin>.callable", "<builtin>.TypeError", "<builtin>.ValueError"], "linalg.linear_operator_algebra.RegisterInverse.__init__": [], "linalg.linear_operator_algebra.RegisterInverse.__call__": ["<builtin>.callable", "<builtin>.TypeError", "<builtin>.ValueError"]}