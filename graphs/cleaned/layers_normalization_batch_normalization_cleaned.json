{"normalization.batch_normalization": [], "normalization.batch_normalization.BatchNormalizationBase.__init__": ["<builtin>.ValueError", "<builtin>.super", "keras.initializers.get", "<builtin>.set", "<builtin>.isinstance", "normalization.batch_normalization.BatchNormalizationBase._raise_if_fused_cannot_be_used", "keras.regularizers.get", "<builtin>.TypeError", "keras.constraints.get", "normalization.batch_normalization.BatchNormalizationBase._fused_can_be_used"], "<builtin>.super": [], "<builtin>.isinstance": [], "<builtin>.TypeError": [], "keras.initializers.get": [], "keras.regularizers.get": [], "keras.constraints.get": [], "normalization.batch_normalization.BatchNormalizationBase._raise_if_fused_cannot_be_used": ["<builtin>.len", "<builtin>.ValueError", "<builtin>.isinstance"], "normalization.batch_normalization.BatchNormalizationBase._fused_can_be_used": ["normalization.batch_normalization.BatchNormalizationBase._raise_if_fused_cannot_be_used"], "<builtin>.set": [], "<builtin>.ValueError": [], "<builtin>.len": [], "normalization.batch_normalization.BatchNormalizationBase.trainable": [], "normalization.batch_normalization.BatchNormalizationBase._param_dtype": [], "normalization.batch_normalization.BatchNormalizationBase._support_zero_size_input": ["distribute.distribution_strategy_context.get_strategy", "distribute.distribution_strategy_context.has_strategy", "<builtin>.getattr"], "distribute.distribution_strategy_context.has_strategy": [], "distribute.distribution_strategy_context.get_strategy": [], "<builtin>.getattr": [], "normalization.batch_normalization.BatchNormalizationBase.build": ["<builtin>.range", "distribute.distribution_strategy_context.get_strategy", "<builtin>.list", "<builtin>.len", "keras.backend.constant", "<builtin>.set", "base_layer.Layer.add_weight", "Layer._scope.set_partitioner", "<builtin>.enumerate", "<builtin>.isinstance", "framework.tensor_shape.TensorShape", "<builtin>.hasattr", "engine.input_spec.InputSpec", "<builtin>.tuple", "normalization.batch_normalization.BatchNormalizationBase.build._renorm_variable", "<builtin>.ValueError", "normalization.batch_normalization.BatchNormalizationBase._fused_can_be_used"], "framework.tensor_shape.TensorShape": [], "<builtin>.enumerate": [], "<builtin>.tuple": [], "engine.input_spec.InputSpec": [], "<builtin>.list": [], "<builtin>.range": [], "base_layer.Layer.add_weight": [], "keras.backend.constant": [], "<builtin>.hasattr": [], "Layer._scope.set_partitioner": [], "normalization.batch_normalization.BatchNormalizationBase.build.moving_stddev_initializer": ["ops.math_ops.sqrt"], "ops.math_ops.sqrt": [], "normalization.batch_normalization.BatchNormalizationBase.build._renorm_variable": ["base_layer.Layer.add_weight"], "normalization.batch_normalization.BatchNormalizationBase._assign_moving_average": ["framework.ops.executing_eagerly_outside_functions", "keras.backend.name_scope", "normalization.batch_normalization.BatchNormalizationBase._assign_moving_average.calculate_update_delta", "ops.state_ops.assign_sub", "framework.ops._colocate_with"], "normalization.batch_normalization.BatchNormalizationBase._assign_moving_average.calculate_update_delta": ["ops.array_ops.where", "keras.backend.zeros_like", "framework.ops.convert_to_tensor_v2_with_dispatch", "ops.math_ops.cast"], "framework.ops.convert_to_tensor_v2_with_dispatch": [], "ops.math_ops.cast": [], "keras.backend.zeros_like": [], "ops.array_ops.where": [], "keras.backend.name_scope": [], "framework.ops.executing_eagerly_outside_functions": [], "framework.ops._colocate_with": [], "ops.state_ops.assign_sub": [], "normalization.batch_normalization.BatchNormalizationBase._assign_new_value": ["ops.state_ops.assign", "framework.ops.executing_eagerly_outside_functions", "framework.ops._colocate_with", "keras.backend.name_scope"], "ops.state_ops.assign": [], "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm": ["framework.ops.executing_eagerly_outside_functions", "framework.ops.convert_to_tensor_v2_with_dispatch", "<builtin>.isinstance", "normalization.batch_normalization.BatchNormalizationBase._support_zero_size_input", "utils.control_flow_util.constant_value", "ops.array_ops.shape", "ops.control_flow_ops.get_enclosing_xla_context", "base_layer.Layer.add_update", "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm._maybe_add_or_remove_bessels_correction", "utils.control_flow_util.smart_cond"], "ops.array_ops.shape": [], "ops.control_flow_ops.get_enclosing_xla_context": [], "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm._maybe_add_or_remove_bessels_correction": ["ops.array_ops.size", "ops.math_ops.cast"], "ops.array_ops.size": [], "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm._fused_batch_norm_training": ["ops.nn.fused_batch_norm", "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm._maybe_add_or_remove_bessels_correction"], "ops.nn.fused_batch_norm": [], "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm._fused_batch_norm_training_empty": [], "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm._fused_batch_norm_inference": ["ops.nn.fused_batch_norm"], "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm.<lambda1>": ["utils.control_flow_util.smart_cond"], "utils.control_flow_util.smart_cond": [], "utils.control_flow_util.constant_value": [], "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm.<lambda2>": [], "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm.<lambda3>": [], "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm.mean_update": ["normalization.batch_normalization.BatchNormalizationBase._assign_new_value", "normalization.batch_normalization.BatchNormalizationBase._assign_moving_average"], "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm.variance_update": ["normalization.batch_normalization.BatchNormalizationBase._assign_new_value", "normalization.batch_normalization.BatchNormalizationBase._assign_moving_average"], "base_layer.Layer.add_update": [], "normalization.batch_normalization.BatchNormalizationBase._renorm_correction_and_moments": ["normalization.batch_normalization.BatchNormalizationBase._renorm_correction_and_moments._update_renorm_variable", "framework.ops.control_dependencies", "ops.array_ops.identity", "ops.math_ops.minimum", "ops.math_ops.maximum", "ops.math_ops.sqrt", "utils.control_flow_util.smart_cond"], "ops.math_ops.maximum": [], "framework.ops.control_dependencies": [], "ops.array_ops.identity": [], "ops.math_ops.minimum": [], "normalization.batch_normalization.BatchNormalizationBase._renorm_correction_and_moments.<lambda1>": [], "normalization.batch_normalization.BatchNormalizationBase._renorm_correction_and_moments.<lambda2>": ["ops.array_ops.ones_like"], "ops.array_ops.ones_like": [], "normalization.batch_normalization.BatchNormalizationBase._renorm_correction_and_moments.<lambda3>": [], "normalization.batch_normalization.BatchNormalizationBase._renorm_correction_and_moments.<lambda4>": ["ops.array_ops.zeros_like"], "ops.array_ops.zeros_like": [], "normalization.batch_normalization.BatchNormalizationBase._renorm_correction_and_moments._update_renorm_variable": ["ops.array_ops.identity", "utils.control_flow_util.smart_cond"], "normalization.batch_normalization.BatchNormalizationBase._renorm_correction_and_moments._update_renorm_variable._do_update": ["normalization.batch_normalization.BatchNormalizationBase._assign_moving_average"], "normalization.batch_normalization.BatchNormalizationBase._renorm_correction_and_moments._update_renorm_variable._fake_update": ["ops.array_ops.identity"], "normalization.batch_normalization.BatchNormalizationBase._calculate_mean_and_var": ["ops.nn.moments"], "ops.nn.moments": [], "normalization.batch_normalization.BatchNormalizationBase._moments": ["ops.array_ops.where", "normalization.batch_normalization.BatchNormalizationBase._support_zero_size_input", "normalization.batch_normalization.BatchNormalizationBase._calculate_mean_and_var", "ops.array_ops.shape", "keras.backend.zeros_like"], "normalization.batch_normalization.BatchNormalizationBase._get_training_value": ["keras.backend.learning_phase", "<builtin>.bool", "<builtin>.isinstance"], "keras.backend.learning_phase": [], "<builtin>.bool": [], "normalization.batch_normalization.BatchNormalizationBase.call": ["ops.array_ops.concat", "normalization.batch_normalization.BatchNormalizationBase._moments", "ops.math_ops.cast", "ops.nn.batch_normalization", "normalization.batch_normalization.BatchNormalizationBase._get_training_value", "framework.constant_op.constant", "utils.control_flow_util.constant_value", "normalization.batch_normalization.BatchNormalizationBase.call._broadcast", "normalization.batch_normalization.BatchNormalizationBase._fused_batch_norm", "<builtin>.len", "normalization.batch_normalization.BatchNormalizationBase.call.undo_virtual_batching", "ops.math_ops.reduce_mean", "base_layer.Layer.add_update", "normalization.batch_normalization.BatchNormalizationBase.call._compose_transforms", "normalization.batch_normalization.BatchNormalizationBase._renorm_correction_and_moments", "<builtin>.range", "ops.array_ops.reshape", "normalization.batch_normalization.BatchNormalizationBase._support_zero_size_input", "ops.array_ops.shape", "ops.array_ops.stop_gradient", "utils.control_flow_util.smart_cond"], "framework.constant_op.constant": [], "ops.array_ops.concat": [], "ops.array_ops.reshape": [], "normalization.batch_normalization.BatchNormalizationBase.call.undo_virtual_batching": ["ops.array_ops.reshape"], "normalization.batch_normalization.BatchNormalizationBase.call._broadcast": ["<builtin>.range", "ops.array_ops.reshape", "<builtin>.list", "<builtin>.len"], "normalization.batch_normalization.BatchNormalizationBase.call._compose_transforms": [], "normalization.batch_normalization.BatchNormalizationBase.call.<lambda1>": [], "normalization.batch_normalization.BatchNormalizationBase.call.<lambda2>": ["ops.array_ops.ones_like"], "normalization.batch_normalization.BatchNormalizationBase.call.<lambda3>": [], "normalization.batch_normalization.BatchNormalizationBase.call.<lambda4>": ["ops.array_ops.zeros_like"], "normalization.batch_normalization.BatchNormalizationBase.call.<lambda5>": [], "normalization.batch_normalization.BatchNormalizationBase.call.<lambda6>": ["framework.ops.convert_to_tensor_v2_with_dispatch"], "normalization.batch_normalization.BatchNormalizationBase.call.<lambda7>": [], "normalization.batch_normalization.BatchNormalizationBase.call.<lambda8>": ["framework.ops.convert_to_tensor_v2_with_dispatch"], "ops.math_ops.reduce_mean": [], "ops.array_ops.stop_gradient": [], "normalization.batch_normalization.BatchNormalizationBase.call._do_update": ["normalization.batch_normalization.BatchNormalizationBase._assign_moving_average"], "normalization.batch_normalization.BatchNormalizationBase.call.mean_update": ["utils.control_flow_util.smart_cond"], "normalization.batch_normalization.BatchNormalizationBase.call.mean_update.<lambda1>": ["normalization.batch_normalization.BatchNormalizationBase.call._do_update"], "normalization.batch_normalization.BatchNormalizationBase.call.mean_update.<lambda2>": [], "normalization.batch_normalization.BatchNormalizationBase.call.variance_update": ["utils.control_flow_util.smart_cond"], "normalization.batch_normalization.BatchNormalizationBase.call.variance_update.true_branch_renorm": ["normalization.batch_normalization.BatchNormalizationBase._assign_new_value", "keras.backend.relu", "normalization.batch_normalization.BatchNormalizationBase.call._do_update", "ops.math_ops.sqrt"], "keras.backend.relu": [], "normalization.batch_normalization.BatchNormalizationBase.call.variance_update.<lambda1>": ["normalization.batch_normalization.BatchNormalizationBase.call._do_update"], "normalization.batch_normalization.BatchNormalizationBase.call.variance_update.<lambda2>": [], "ops.nn.batch_normalization": [], "normalization.batch_normalization.BatchNormalizationBase.compute_output_shape": [], "normalization.batch_normalization.BatchNormalizationBase.get_config": ["<builtin>.dict", "<builtin>.list", "<builtin>.super", "keras.initializers.serialize", "platform.tf_logging.warning", "keras.constraints.serialize", "keras.regularizers.serialize"], "keras.initializers.serialize": [], "keras.regularizers.serialize": [], "keras.constraints.serialize": [], "platform.tf_logging.warning": [], "<builtin>.dict": [], "normalization.batch_normalization.SyncBatchNormalization.__init__": ["<builtin>.ValueError", "<builtin>.super"], "normalization.batch_normalization.SyncBatchNormalization._calculate_mean_and_var": ["<builtin>.range", "ops.math_ops.cast", "<builtin>.len", "keras.backend.name_scope", "ops.math_ops.squared_difference", "distribute.distribution_strategy_context.get_replica_context", "ops.math_ops.reduce_prod", "ops.array_ops.squeeze", "ops.math_ops.reduce_mean", "ops.math_ops.reduce_sum", "ops.math_ops.square", "ops.array_ops.stop_gradient", "ops.array_ops.shape_v2"], "distribute.distribution_strategy_context.get_replica_context": [], "ops.math_ops.reduce_sum": [], "ops.math_ops.square": [], "ops.array_ops.shape_v2": [], "ops.math_ops.reduce_prod": [], "ops.math_ops.squared_difference": [], "ops.array_ops.squeeze": [], "normalization.batch_normalization.BatchNormalization.__init__": ["<builtin>.super"]}