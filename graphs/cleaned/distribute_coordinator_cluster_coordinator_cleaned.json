{"coordinator.cluster_coordinator": [], "coordinator.cluster_coordinator.InputError.__init__": ["<builtin>.super", "<builtin>.str"], "<builtin>.str": [], "<builtin>.super": [], "coordinator.cluster_coordinator._maybe_rebuild_remote_values": ["util.nest.map_structure"], "coordinator.cluster_coordinator._maybe_rebuild_remote_values._get_error": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "util.nest.map_structure": [], "coordinator.cluster_coordinator._maybe_get_remote_value": ["<builtin>.AssertionError", "<builtin>.isinstance"], "<builtin>.AssertionError": [], "coordinator.cluster_coordinator._maybe_as_type_spec": ["<builtin>.ValueError", "<builtin>.isinstance"], "<builtin>.ValueError": [], "coordinator.cluster_coordinator._select_worker_slice": ["util.nest.map_structure"], "coordinator.cluster_coordinator._select_worker_slice._get": ["<builtin>.isinstance"], "coordinator.cluster_coordinator._disallow_remote_value_as_input": ["util.nest.map_structure"], "coordinator.cluster_coordinator._disallow_remote_value_as_input._raise_if_remote_value": ["<builtin>.ValueError", "<builtin>.isinstance"], "coordinator.cluster_coordinator.Closure.__init__": ["<builtin>.callable", "framework.func_graph.convert_structure_to_signature", "coordinator.cluster_coordinator._disallow_remote_value_as_input", "coordinator.metric_utils.monitored_timer", "<builtin>.ValueError", "util.nest.map_structure", "<builtin>.hasattr", "<builtin>.isinstance", "coordinator.cluster_coordinator._select_worker_slice"], "<builtin>.callable": [], "coordinator.metric_utils.monitored_timer": [], "<builtin>.hasattr": [], "framework.func_graph.convert_structure_to_signature": [], "coordinator.cluster_coordinator.Closure.build_output_remote_value": ["coordinator.values.RemoteValueImpl", "<builtin>.ValueError", "weakref.ref"], "coordinator.values.RemoteValueImpl": [], "weakref.ref": [], "coordinator.cluster_coordinator.Closure.maybe_call_with_output_remote_value": [], "coordinator.cluster_coordinator.Closure.mark_cancelled": ["framework.errors.CancelledError", "coordinator.cluster_coordinator.Closure.maybe_call_with_output_remote_value"], "framework.errors.CancelledError": [], "coordinator.cluster_coordinator.Closure.mark_cancelled.<lambda1>": [], "coordinator.cluster_coordinator.Closure.execute_on": ["coordinator.cluster_coordinator.Closure.maybe_call_with_output_remote_value", "coordinator.metric_utils.monitored_timer", "util.nest.map_structure", "coordinator.cluster_coordinator._maybe_rebuild_remote_values", "<builtin>.isinstance", "coordinator.cluster_coordinator.InputError.__init__", "coordinator.cluster_coordinator._select_worker_slice", "framework.ops.device", "eager.context.executor_scope"], "framework.ops.device": [], "eager.context.executor_scope": [], "coordinator.cluster_coordinator.Closure.execute_on.<lambda1>": [], "coordinator.cluster_coordinator.ResourceClosure.build_output_remote_value": ["coordinator.values.RemoteValueImpl", "weakref.ref"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.__init__": ["moves.queue.Queue", "threading.Lock", "platform.tf_logging.warning", "eager.cancellation.CancellationManager", "threading.Condition"], "threading.Lock": [], "threading.Condition": [], "eager.cancellation.CancellationManager": [], "platform.tf_logging.warning": [], "moves.queue.Queue": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue.stop": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue._cancel_all_closures": ["eager.cancellation.CancellationManager"], "coordinator.cluster_coordinator._CoordinatedClosureQueue._raise_if_error": ["platform.tf_logging.error", "coordinator.cluster_coordinator._CoordinatedClosureQueue._cancel_all_closures"], "platform.tf_logging.error": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue.put": ["coordinator.cluster_coordinator._CoordinatedClosureQueue._raise_if_error"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.put.<lambda1>": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue.get": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue.mark_finished": ["<builtin>.AssertionError"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.put_back": ["<builtin>.AssertionError"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.put_back.<lambda1>": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue.wait": ["coordinator.cluster_coordinator._CoordinatedClosureQueue._raise_if_error"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.mark_failed": ["<builtin>.AssertionError"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.done": ["coordinator.cluster_coordinator._CoordinatedClosureQueue._raise_if_error"], "coordinator.cluster_coordinator.WorkerPreemptionHandler.__init__": ["threading.Lock", "threading.Condition", "threading.Thread", "threading.Event"], "threading.Event": [], "threading.Thread": [], "coordinator.cluster_coordinator.WorkerPreemptionHandler.stop": [], "coordinator.cluster_coordinator.WorkerPreemptionHandler._validate_preemption_failure": ["coordinator.cluster_coordinator._is_worker_failure"], "coordinator.cluster_coordinator._is_worker_failure": ["<builtin>.str", "<builtin>.isinstance"], "coordinator.cluster_coordinator.WorkerPreemptionHandler": ["contextlib.contextmanager"], "contextlib.contextmanager": [], "coordinator.cluster_coordinator.WorkerPreemptionHandler.wait_on_failure": ["coordinator.cluster_coordinator.WorkerPreemptionHandler._validate_preemption_failure", "<builtin>.isinstance", "coordinator.cluster_coordinator.Worker._set_resources_aborted", "platform.tf_logging.info", "platform.tf_logging.error", "<builtin>.str", "coordinator.cluster_coordinator.WorkerPreemptionHandler.wait_on_failure", "coordinator.cluster_coordinator.Cluster._record_and_ignore_transient_ps_failure"], "coordinator.cluster_coordinator.Cluster._record_and_ignore_transient_ps_failure": ["coordinator.cluster_coordinator._is_ps_failure", "<builtin>.str", "coordinator.cluster_coordinator._extract_failed_ps_instances"], "platform.tf_logging.info": [], "coordinator.cluster_coordinator.Worker._set_resources_aborted": [], "coordinator.cluster_coordinator.WorkerPreemptionHandler._preemption_handler": ["platform.tf_logging.info", "platform.tf_logging.error", "eager.context.context", "coordinator.cluster_coordinator.WorkerPreemptionHandler._validate_preemption_failure"], "eager.context.context": [], "coordinator.cluster_coordinator.Worker.__init__": ["threading.Thread"], "coordinator.cluster_coordinator.Worker.stop": [], "coordinator.cluster_coordinator.Worker._set_dead": ["<builtin>.NotImplementedError"], "<builtin>.NotImplementedError": [], "coordinator.cluster_coordinator.Worker._process_closure": ["coordinator.metric_utils.monitored_timer", "<builtin>.isinstance", "platform.tf_logging.error", "coordinator.cluster_coordinator._CoordinatedClosureQueue.mark_finished", "coordinator.cluster_coordinator._CoordinatedClosureQueue.mark_failed", "coordinator.cluster_coordinator.WorkerPreemptionHandler.wait_on_failure"], "coordinator.cluster_coordinator.Worker._process_closure.<lambda1>": ["coordinator.cluster_coordinator._CoordinatedClosureQueue.put_back"], "coordinator.cluster_coordinator.Worker._process_closure.<lambda2>": ["coordinator.cluster_coordinator._CoordinatedClosureQueue.put_back"], "coordinator.cluster_coordinator.Worker._process_closure.<lambda3>": [], "coordinator.cluster_coordinator.Worker._process_closure.<lambda4>": [], "coordinator.cluster_coordinator.Worker._maybe_delay": ["time.sleep", "<builtin>.min", "os.environ.get", "platform.tf_logging.info", "<builtin>.int"], "os.environ.get": [], "<builtin>.int": [], "<builtin>.min": [], "time.sleep": [], "coordinator.cluster_coordinator.Worker._process_queue": ["coordinator.cluster_coordinator._CoordinatedClosureQueue.get", "coordinator.cluster_coordinator.Worker._maybe_delay", "coordinator.cluster_coordinator.Worker._process_closure"], "coordinator.cluster_coordinator.Worker.create_resource": ["coordinator.cluster_coordinator.Closure.__init__", "coordinator.cluster_coordinator.Worker._register_resource", "coordinator.cluster_coordinator.ResourceClosure.build_output_remote_value"], "coordinator.cluster_coordinator.Worker._register_resource": ["<builtin>.ValueError", "weakref.ref", "<builtin>.isinstance"], "coordinator.cluster_coordinator.Cluster.__init__": ["<builtin>.enumerate", "eager.context.get_server_def", "os.environ.get", "threading.Lock", "coordinator.cluster_coordinator._CoordinatedClosureQueue.__init__", "<builtin>.int", "coordinator.cluster_coordinator.WorkerPreemptionHandler.__init__", "<builtin>.range", "coordinator.cluster_coordinator.Worker.__init__"], "eager.context.get_server_def": [], "<builtin>.range": [], "<builtin>.enumerate": [], "coordinator.cluster_coordinator.Cluster.stop": ["coordinator.cluster_coordinator.WorkerPreemptionHandler.stop", "coordinator.cluster_coordinator._CoordinatedClosureQueue.stop"], "coordinator.cluster_coordinator._is_ps_failure": ["<builtin>.str", "<builtin>.isinstance"], "coordinator.cluster_coordinator._extract_failed_ps_instances": ["<builtin>.int", "re.findall", "<builtin>.set"], "coordinator.cluster_coordinator.Cluster.schedule": ["coordinator.cluster_coordinator.Closure.__init__", "coordinator.cluster_coordinator.Closure.build_output_remote_value", "coordinator.cluster_coordinator.ResourceClosure.build_output_remote_value", "coordinator.cluster_coordinator._CoordinatedClosureQueue.put"], "coordinator.cluster_coordinator.Cluster.join": ["coordinator.cluster_coordinator._CoordinatedClosureQueue.wait"], "coordinator.cluster_coordinator.Cluster.done": ["coordinator.cluster_coordinator._CoordinatedClosureQueue.done"], "coordinator.cluster_coordinator.ClusterCoordinator.__new__": ["<builtin>.super"], "coordinator.cluster_coordinator.ClusterCoordinator.__init__": ["<builtin>.ValueError", "coordinator.cluster_coordinator.Cluster.__init__", "<builtin>.getattr", "<builtin>.isinstance"], "<builtin>.getattr": [], "coordinator.cluster_coordinator.ClusterCoordinator.__del__": ["coordinator.cluster_coordinator.Cluster.stop"], "coordinator.cluster_coordinator.ClusterCoordinator.strategy": [], "coordinator.cluster_coordinator.ClusterCoordinator.schedule": ["<builtin>.TypeError", "<builtin>.isinstance", "coordinator.cluster_coordinator.Cluster.schedule"], "<builtin>.TypeError": [], "coordinator.cluster_coordinator.ClusterCoordinator.join": ["coordinator.cluster_coordinator.Cluster.join"], "coordinator.cluster_coordinator.ClusterCoordinator.done": ["coordinator.cluster_coordinator.Cluster.done"], "coordinator.cluster_coordinator.ClusterCoordinator.create_per_worker_dataset": ["coordinator.values.get_per_worker_dataset"], "coordinator.values.get_per_worker_dataset": [], "coordinator.cluster_coordinator.ClusterCoordinator._create_per_worker_resources": ["<builtin>.tuple", "coordinator.values.PerWorkerValues"], "<builtin>.tuple": [], "coordinator.values.PerWorkerValues": [], "coordinator.cluster_coordinator.ClusterCoordinator.fetch": ["util.nest.map_structure"], "coordinator.cluster_coordinator.ClusterCoordinator.fetch._maybe_fetch": ["<builtin>.isinstance"], "re.findall": [], "<builtin>.set": []}