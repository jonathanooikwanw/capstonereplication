{"operators.control_flow": [], "operators.control_flow._is_none_or_undef": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "operators.control_flow._verify_tf_condition": ["ops.array_ops.reshape", "framework.ops.convert_to_tensor_v2", "<builtin>.ValueError", "numpy.prod"], "framework.ops.convert_to_tensor_v2": [], "<builtin>.ValueError": [], "ops.array_ops.reshape": [], "numpy.prod": [], "operators.control_flow._verify_loop_init_vars": ["<builtin>.NotImplementedError", "<builtin>.len", "<builtin>.zip", "<builtin>.type", "<builtin>.isinstance", "<builtin>.ValueError"], "<builtin>.len": [], "<builtin>.zip": [], "<builtin>.type": [], "<builtin>.NotImplementedError": [], "operators.control_flow._is_subshape": ["<builtin>.zip"], "operators.control_flow._verify_single_loop_var": ["operators.control_flow._is_subshape", "<builtin>.hasattr", "framework.tensor_util.is_tf_type", "<builtin>.TypeError", "<builtin>.isinstance", "framework.ops.convert_to_tensor_v2", "<builtin>.ValueError"], "framework.tensor_util.is_tf_type": [], "<builtin>.hasattr": [], "<builtin>.TypeError": [], "operators.control_flow._verify_tf_loop_vars": ["<builtin>.len", "util.nest.assert_same_structure", "functools.partial", "<builtin>.TypeError", "util.nest.map_structure", "<builtin>.range"], "operators.control_flow._verify_tf_loop_vars.<lambda1>": [], "util.nest.map_structure": [], "<builtin>.range": [], "util.nest.assert_same_structure": [], "functools.partial": [], "operators.control_flow.verify_single_cond_var": ["<builtin>.hasattr", "framework.tensor_util.is_tf_type", "<builtin>.TypeError", "<builtin>.isinstance", "framework.ops.convert_to_tensor_v2", "<builtin>.ValueError"], "operators.control_flow._verify_tf_cond_branch_vars": ["<builtin>.zip", "<builtin>.isinstance", "<builtin>.ValueError"], "operators.control_flow._verify_tf_cond_vars": ["<builtin>.str", "<builtin>.zip", "util.nest.assert_same_structure", "functools.partial", "<builtin>.TypeError", "util.nest.map_structure"], "<builtin>.str": [], "operators.control_flow.for_stmt": ["operators.control_flow._tf_distributed_iterable_for_stmt", "operators.control_flow._tf_iterator_for_stmt", "operators.control_flow._tf_dataset_for_stmt", "utils.tensors.is_range_tensor", "operators.control_flow._py_for_stmt", "framework.tensor_util.is_tf_type", "operators.control_flow._known_len_tf_for_stmt", "operators.control_flow._tf_range_for_stmt", "operators.control_flow._tf_ragged_for_stmt", "<builtin>.isinstance"], "utils.tensors.is_range_tensor": [], "operators.control_flow._tf_range_for_stmt": ["operators.control_flow._add_max_iterations_hint", "operators.control_flow._tf_while_stmt", "ops.math_ops.cast", "utils.misc.get_range_len"], "operators.control_flow._tf_ragged_for_stmt": ["operators.control_flow._add_max_iterations_hint", "operators.control_flow._tf_while_stmt", "operators.control_flow._verify_loop_init_vars"], "operators.control_flow._known_len_tf_for_stmt": ["operators.control_flow._add_max_iterations_hint", "operators.py_builtins.len_", "operators.control_flow._tf_while_stmt", "ops.tensor_array_ops.TensorArray"], "operators.control_flow._tf_dataset_for_stmt": ["operators.control_flow._tf_dataset_for_stmt.dummy_get_state", "operators.control_flow._tf_dataset_for_stmt.dummy_set_state", "operators.control_flow._general_purpose_scan", "framework.constant_op.constant", "ops.take_while_ops.take_while", "operators.control_flow._verify_loop_init_vars"], "operators.control_flow._tf_iterator_for_stmt": ["operators.control_flow._tf_while_stmt", "operators.control_flow._tf_iterator_for_stmt.aug_get_state", "operators.control_flow._verify_loop_init_vars"], "operators.control_flow._tf_distributed_iterable_for_stmt": ["<builtin>.NotImplementedError", "operators.control_flow._shape_invariants_mapping_to_positional_list", "operators.control_flow._verify_loop_init_vars"], "operators.control_flow._py_for_stmt": ["operators.control_flow._PythonLoopChecker.before_iteration", "operators.control_flow._py_for_stmt.protected_body", "operators.control_flow._PythonLoopChecker.__init__"], "operators.control_flow._PythonLoopChecker.__init__": [], "operators.control_flow._PythonLoopChecker.before_iteration": ["operators.control_flow._PythonLoopChecker._get_ops"], "operators.control_flow._py_for_stmt.protected_body": ["operators.control_flow._PythonLoopChecker.before_iteration", "operators.control_flow._py_for_stmt.protected_body", "operators.control_flow._PythonLoopChecker.after_iteration"], "operators.control_flow._PythonLoopChecker.after_iteration": ["operators.control_flow._PythonLoopChecker._verify_inefficient_unroll", "operators.control_flow._PythonLoopChecker._check_unroll_limits", "operators.control_flow._PythonLoopChecker._stop_checking_inefficient_unroll"], "operators.control_flow._add_max_iterations_hint": ["framework.ops.get_default_graph", "ops.control_flow_util.GraphOrParentsInXlaContext"], "framework.ops.get_default_graph": [], "ops.control_flow_util.GraphOrParentsInXlaContext": [], "operators.py_builtins.len_": [], "ops.tensor_array_ops.TensorArray": [], "operators.control_flow._known_len_tf_for_stmt.aug_get_state": [], "operators.control_flow._known_len_tf_for_stmt.aug_set_state": [], "operators.control_flow._known_len_tf_for_stmt.aug_body": [], "operators.control_flow._known_len_tf_for_stmt.aug_test": ["ops.control_flow_ops.cond"], "operators.control_flow._known_len_tf_for_stmt.aug_test.<lambda1>": [], "ops.control_flow_ops.cond": [], "operators.control_flow._tf_while_stmt": ["ops.control_flow_ops.Assert", "operators.control_flow._tf_ragged_for_stmt.aug_set_state", "operators.control_flow._runtime_zero_iterations_errmsg", "operators.control_flow._tf_iterator_for_stmt.aug_set_state", "operators.control_flow._tf_iterator_for_stmt.aug_get_state", "<builtin>.tuple", "<builtin>.any", "operators.control_flow._shape_invariants_mapping_to_positional_list", "ops.control_flow_ops.while_loop", "operators.control_flow._known_len_tf_for_stmt.aug_set_state", "<builtin>.dict", "operators.control_flow._try_handling_undefineds", "operators.control_flow._tf_range_for_stmt.aug_set_state", "operators.control_flow._is_none_or_undef", "operators.control_flow._tf_range_for_stmt.aug_get_state", "framework.ops.control_dependencies", "operators.control_flow._tf_ragged_for_stmt.aug_get_state", "util.nest.map_structure", "operators.control_flow._known_len_tf_for_stmt.aug_get_state"], "operators.control_flow._tf_ragged_for_stmt.aug_get_state": [], "operators.control_flow._tf_ragged_for_stmt.aug_set_state": [], "operators.control_flow._tf_ragged_for_stmt.aug_body": [], "operators.control_flow._tf_ragged_for_stmt.aug_test": ["ops.control_flow_ops.cond"], "operators.control_flow._tf_ragged_for_stmt.aug_test.<lambda1>": [], "operators.control_flow._tf_range_for_stmt._value_or": ["<builtin>.isinstance"], "operators.control_flow._tf_range_for_stmt.aug_get_state": ["<builtin>.tuple", "<builtin>.zip", "operators.control_flow._tf_range_for_stmt._value_or"], "<builtin>.tuple": [], "operators.control_flow._tf_range_for_stmt.aug_set_state": [], "operators.control_flow._tf_range_for_stmt.aug_body": [], "operators.control_flow._tf_range_for_stmt.aug_test": ["framework.tensor_util.constant_value", "ops.control_flow_ops.cond", "ops.math_ops.logical_and", "ops.math_ops.logical_or"], "framework.tensor_util.constant_value": [], "ops.math_ops.logical_and": [], "ops.math_ops.logical_or": [], "operators.control_flow._tf_range_for_stmt.aug_test.<lambda1>": [], "utils.misc.get_range_len": [], "ops.math_ops.cast": [], "operators.control_flow._tf_iterator_for_stmt.aug_get_state": [], "operators.control_flow._tf_iterator_for_stmt.aug_set_state": [], "operators.control_flow._tf_iterator_for_stmt.aug_body": ["operators.control_flow._tf_iterator_for_stmt.aug_set_state", "operators.control_flow._tf_iterator_for_stmt.aug_get_state", "ops.control_flow_ops.cond"], "operators.control_flow._tf_iterator_for_stmt.aug_body.main_path": ["operators.control_flow._verify_tf_loop_vars", "operators.control_flow._tf_iterator_for_stmt.aug_get_state"], "operators.control_flow._tf_iterator_for_stmt.aug_body.noop_path": [], "operators.control_flow._tf_iterator_for_stmt.aug_test": ["ops.control_flow_ops.cond"], "operators.control_flow._tf_iterator_for_stmt.aug_test.<lambda1>": [], "operators.control_flow._general_purpose_scan": ["ops.dataset_ops._ScanDataset"], "ops.dataset_ops._ScanDataset": [], "operators.control_flow._tf_dataset_for_stmt.dummy_get_state": ["framework.constant_op.constant"], "framework.constant_op.constant": [], "operators.control_flow._tf_dataset_for_stmt.dummy_set_state": [], "operators.control_flow._tf_dataset_for_stmt.scan_body": ["framework.constant_op.constant", "operators.control_flow._tf_dataset_for_stmt.dummy_set_state", "operators.control_flow._tf_dataset_for_stmt.scan_body.main_path", "ops.control_flow_ops.cond"], "operators.control_flow._tf_dataset_for_stmt.scan_body.main_path": ["operators.control_flow._verify_tf_loop_vars", "operators.control_flow._tf_dataset_for_stmt.dummy_get_state"], "operators.control_flow._tf_dataset_for_stmt.scan_body.<lambda1>": [], "operators.control_flow._tf_dataset_for_stmt.take_while_predicate": [], "operators.control_flow._tf_dataset_for_stmt.reduce_body": [], "ops.take_while_ops.take_while": [], "operators.control_flow._shape_invariants_mapping_to_positional_list": ["<builtin>.tuple", "<builtin>.id"], "operators.control_flow._tf_distributed_iterable_for_stmt.reduce_body": ["operators.control_flow._verify_tf_loop_vars"], "operators.control_flow.while_stmt": ["framework.func_graph.FuncGraph", "operators.control_flow._py_while_stmt", "operators.control_flow._tf_while_stmt", "utils.tensors.is_dense_tensor"], "framework.func_graph.FuncGraph": [], "utils.tensors.is_dense_tensor": [], "operators.control_flow._py_while_stmt": ["operators.control_flow._PythonLoopChecker.before_iteration", "operators.control_flow._py_while_stmt.protected_body", "operators.control_flow._PythonLoopChecker.__init__"], "operators.control_flow._PythonLoopChecker._get_ops": ["framework.ops.get_default_graph"], "operators.control_flow._PythonLoopChecker._check_unroll_limits": ["<builtin>.ValueError"], "operators.control_flow._PythonLoopChecker._stop_checking_inefficient_unroll": [], "operators.control_flow._PythonLoopChecker._verify_inefficient_unroll": ["utils.ag_logging.warn", "traceback.format_stack", "<builtin>.len", "<builtin>.tuple", "operators.control_flow._PythonLoopChecker._get_ops"], "traceback.format_stack": [], "utils.ag_logging.warn": [], "operators.control_flow._py_while_stmt.protected_body": ["operators.control_flow._PythonLoopChecker.before_iteration", "operators.control_flow._py_while_stmt.protected_body", "operators.control_flow._PythonLoopChecker.after_iteration"], "<builtin>.id": [], "operators.control_flow._placeholder_value": ["framework.tensor_util.is_tf_type", "<builtin>.type", "ops.array_ops.zeros", "util.nest.map_structure", "<builtin>.isinstance"], "ops.array_ops.zeros": [], "operators.control_flow._try_handling_undefineds": ["operators.control_flow._tf_iterator_for_stmt.aug_set_state", "operators.control_flow._tf_iterator_for_stmt.aug_get_state", "operators.control_flow._placeholder_value", "framework.func_graph.FuncGraph", "operators.control_flow._tf_range_for_stmt.aug_set_state", "operators.control_flow._tf_ragged_for_stmt.aug_body", "operators.control_flow._known_len_tf_for_stmt.aug_body", "operators.control_flow._tf_ragged_for_stmt.aug_get_state", "utils.ag_logging.log", "operators.control_flow._tf_ragged_for_stmt.aug_set_state", "<builtin>.zip", "<builtin>.tuple", "operators.control_flow._tf_iterator_for_stmt.aug_body", "operators.control_flow._tf_range_for_stmt.aug_get_state", "operators.control_flow._tf_range_for_stmt.aug_body", "operators.control_flow._known_len_tf_for_stmt.aug_get_state", "operators.control_flow._verify_loop_init_vars", "operators.control_flow._known_len_tf_for_stmt.aug_set_state"], "utils.ag_logging.log": [], "operators.control_flow._runtime_zero_iterations_errmsg": ["<builtin>.zip", "<builtin>.isinstance"], "<builtin>.any": [], "operators.control_flow._tf_while_stmt.aug_test": ["operators.control_flow._tf_iterator_for_stmt.aug_set_state", "operators.control_flow._verify_tf_condition", "operators.control_flow._tf_range_for_stmt.aug_set_state", "operators.control_flow._tf_ragged_for_stmt.aug_set_state", "operators.control_flow._tf_iterator_for_stmt.aug_test", "operators.control_flow._tf_ragged_for_stmt.aug_test", "operators.control_flow._known_len_tf_for_stmt.aug_test", "operators.control_flow._known_len_tf_for_stmt.aug_set_state", "operators.control_flow._tf_range_for_stmt.aug_test"], "operators.control_flow._tf_while_stmt.aug_body": ["operators.control_flow._tf_iterator_for_stmt.aug_set_state", "operators.control_flow._tf_iterator_for_stmt.aug_get_state", "operators.control_flow._tf_range_for_stmt.aug_set_state", "operators.control_flow._tf_ragged_for_stmt.aug_body", "operators.control_flow._tf_ragged_for_stmt.aug_get_state", "operators.control_flow._known_len_tf_for_stmt.aug_body", "operators.control_flow._tf_ragged_for_stmt.aug_set_state", "operators.control_flow._verify_tf_loop_vars", "operators.control_flow._tf_iterator_for_stmt.aug_body", "operators.control_flow._tf_range_for_stmt.aug_get_state", "operators.control_flow._tf_range_for_stmt.aug_body", "operators.control_flow._known_len_tf_for_stmt.aug_get_state", "operators.control_flow._known_len_tf_for_stmt.aug_set_state"], "<builtin>.dict": [], "ops.control_flow_ops.while_loop": [], "ops.control_flow_ops.Assert": [], "framework.ops.control_dependencies": [], "operators.control_flow._tf_while_stmt.<lambda1>": ["framework.tensor_util.is_tf_type", "ops.array_ops.identity"], "ops.array_ops.identity": [], "operators.control_flow.if_stmt": ["operators.control_flow._py_if_stmt", "utils.tensors.is_dense_tensor", "operators.control_flow._tf_if_stmt"], "operators.control_flow._tf_if_stmt": ["operators.control_flow._tf_if_stmt.<lambda1>", "ops.control_flow_ops.cond", "operators.control_flow._tf_if_stmt.<lambda2>", "operators.control_flow._verify_tf_condition"], "operators.control_flow._py_if_stmt": [], "operators.control_flow._tf_if_stmt.<lambda1>": ["operators.control_flow._tf_if_stmt.<lambda1>"], "operators.control_flow._tf_if_stmt.<lambda2>": ["operators.control_flow._tf_if_stmt.<lambda2>"], "operators.control_flow._tf_if_stmt.aug_body": ["operators.control_flow._tf_if_stmt.<lambda1>", "operators.control_flow._tf_if_stmt.<lambda2>", "operators.control_flow._verify_tf_cond_vars", "operators.control_flow._verify_tf_cond_branch_vars"], "operators.control_flow._tf_if_stmt.aug_orelse": ["operators.control_flow._tf_if_stmt.<lambda1>", "operators.control_flow._tf_if_stmt.<lambda2>", "operators.control_flow._verify_tf_cond_vars", "operators.control_flow._verify_tf_cond_branch_vars"]}