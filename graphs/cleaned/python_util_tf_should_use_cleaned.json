{"util.tf_should_use": [], "util.tf_should_use._TFShouldUseHelper.__init__": ["framework.ops.add_exit_callback_to_default_func_graph", "framework.ops.inside_function", "eager.context.executing_eagerly"], "eager.context.executing_eagerly": [], "framework.ops.inside_function": [], "util.tf_should_use._TFShouldUseHelper.__init__.<lambda1>": ["util.tf_should_use._TFShouldUseHelper._check_sated"], "util.tf_should_use._TFShouldUseHelper._check_sated": ["platform.tf_logging.error", "traceback.format_stack", "util.tf_should_use._TFShouldUseHelper.sate", "<builtin>.RuntimeError"], "framework.ops.add_exit_callback_to_default_func_graph": [], "util.tf_should_use._TFShouldUseHelper.sate": [], "traceback.format_stack": [], "<builtin>.RuntimeError": [], "platform.tf_logging.error": [], "util.tf_should_use._TFShouldUseHelper.__del__": ["util.tf_should_use._TFShouldUseHelper._check_sated"], "util.tf_should_use._new__init__": [], "util.tf_should_use._new__setattr__": ["<builtin>.setattr"], "<builtin>.setattr": [], "util.tf_should_use._new__getattribute__": ["<builtin>.getattr"], "<builtin>.getattr": [], "util.tf_should_use._new_mark_used": [], "util.tf_should_use._get_wrapper": ["<builtin>.type", "<builtin>.dict", "copy.deepcopy", "<builtin>.getattr", "types.new_class"], "<builtin>.type": [], "copy.deepcopy": [], "util.tf_should_use._get_wrapper.set_body": [], "types.new_class": [], "<builtin>.dict": [], "util.tf_should_use._add_should_use_warning": ["framework.ops.inside_function", "<builtin>.type", "<builtin>.isinstance", "util.tf_should_use._get_wrapper", "util.tf_should_use._TFShouldUseHelper.__init__", "<builtin>.repr", "sys.exc_info", "<builtin>.ValueError", "eager.context.executing_eagerly"], "<builtin>.isinstance": [], "<builtin>.ValueError": [], "sys.exc_info": [], "<builtin>.repr": [], "util.tf_should_use.should_use_result": ["util.tf_should_use.should_use_result.decorated"], "util.tf_should_use.should_use_result.decorated": ["<builtin>.len", "util.tf_decorator.make_decorator"], "util.tf_should_use.should_use_result.decorated.wrapped": ["util.tf_should_use._add_should_use_warning"], "<builtin>.len": [], "util.tf_decorator.make_decorator": []}