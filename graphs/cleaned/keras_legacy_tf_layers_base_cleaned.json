{"legacy_tf_layers.base": ["util.tf_export.tf_export", "util.tf_export.keras_export", "utils.tf_contextlib.contextmanager"], "util.tf_export.keras_export": [], "util.tf_export.tf_export": [], "utils.tf_contextlib.contextmanager": [], "legacy_tf_layers.base.keras_style_scope": [], "legacy_tf_layers.base.set_keras_style": [], "legacy_tf_layers.base._is_in_keras_style_scope": [], "legacy_tf_layers.base.Layer.__init__": ["legacy_tf_layers.base._is_in_keras_style_scope", "<builtin>.super", "mixed_precision.policy.Policy", "ops.variable_scope.variable_scope", "<builtin>.ValueError"], "mixed_precision.policy.Policy": [], "<builtin>.super": [], "<builtin>.ValueError": [], "ops.variable_scope.variable_scope": [], "legacy_tf_layers.base.Layer.graph": ["warnings.warn", "eager.context.executing_eagerly", "<builtin>.RuntimeError"], "warnings.warn": [], "eager.context.executing_eagerly": [], "<builtin>.RuntimeError": [], "legacy_tf_layers.base.Layer._init_set_name": ["legacy_tf_layers.base.Layer._make_unique_name", "<builtin>.isinstance"], "<builtin>.isinstance": [], "legacy_tf_layers.base.Layer._make_unique_name": ["keras.backend.unique_object_name", "engine.base_layer.to_snake_case"], "engine.base_layer.to_snake_case": [], "keras.backend.unique_object_name": [], "legacy_tf_layers.base.Layer.scope_name": ["<builtin>.ValueError"], "legacy_tf_layers.base.Layer.add_loss": ["<builtin>.len", "eager.context.executing_eagerly", "legacy_tf_layers.base._add_elements_to_collection", "<builtin>.super"], "<builtin>.len": [], "legacy_tf_layers.base._add_elements_to_collection": ["eager.context.executing_eagerly", "framework.ops.get_collection_ref", "<builtin>.id", "<builtin>.RuntimeError", "util.nest.flatten"], "legacy_tf_layers.base.Layer._name_scope": ["<builtin>.super"], "legacy_tf_layers.base.Layer._set_scope": ["ops.variable_scope.variable_scope"], "legacy_tf_layers.base.Layer.add_weight": ["ops.variables.global_variables", "ops.variables.trainable_variables", "framework.dtypes.as_dtype", "<builtin>.len", "framework.ops.init_scope", "legacy_tf_layers.base.Layer._set_scope", "ops.variable_scope.variable_scope", "ops.variable_scope._get_default_variable_store", "base_layer.Layer._handle_weight_regularization", "<builtin>.hasattr", "framework.ops.get_default_graph", "framework.ops.executing_eagerly_outside_functions", "<builtin>.super", "keras.backend.name_scope", "legacy_tf_layers.base.Layer.add_weight._should_add_regularizer", "<builtin>.TypeError", "<builtin>.set", "eager.context.executing_eagerly", "<builtin>.ValueError", "legacy_tf_layers.base.Layer._name_scope"], "<builtin>.TypeError": [], "legacy_tf_layers.base.Layer.add_weight._should_add_regularizer": ["engine.base_layer_utils.is_split_variable"], "engine.base_layer_utils.is_split_variable": [], "framework.ops.get_default_graph": [], "framework.ops.init_scope": [], "ops.variables.global_variables": [], "<builtin>.set": [], "keras.backend.name_scope": [], "framework.dtypes.as_dtype": [], "framework.ops.executing_eagerly_outside_functions": [], "base_layer.Layer._handle_weight_regularization": [], "ops.variable_scope._get_default_variable_store": [], "<builtin>.hasattr": [], "ops.variables.trainable_variables": [], "legacy_tf_layers.base.Layer.__call__": ["eager.context.executing_eagerly", "framework.ops.executing_eagerly_outside_functions", "<builtin>.super", "legacy_tf_layers.variable_scope_shim.fn_args", "legacy_tf_layers.base.Layer._set_scope", "<builtin>.ValueError", "ops.variable_scope.variable_scope", "legacy_tf_layers.base._add_elements_to_collection"], "legacy_tf_layers.variable_scope_shim.fn_args": [], "legacy_tf_layers.base.Layer.__deepcopy__": ["<builtin>.setattr", "<builtin>.set", "<builtin>.id", "engine.base_layer.is_tensor_or_tensor_list", "copy.deepcopy", "copy.copy", "Layer.__class__.__new__"], "Layer.__class__.__new__": [], "<builtin>.id": [], "<builtin>.setattr": [], "copy.copy": [], "engine.base_layer.is_tensor_or_tensor_list": [], "copy.deepcopy": [], "legacy_tf_layers.base.Layer.__setattr__": ["<builtin>.super"], "legacy_tf_layers.base.Layer._is_legacy_layer": [], "util.nest.flatten": [], "framework.ops.get_collection_ref": []}