{"operators.logical": [], "operators.logical.not_": ["framework.tensor_util.is_tf_type", "operators.logical._py_not", "operators.logical._tf_not"], "framework.tensor_util.is_tf_type": [], "operators.logical._tf_not": ["ops.gen_math_ops.logical_not"], "operators.logical._py_not": [], "ops.gen_math_ops.logical_not": [], "operators.logical.and_": ["operators.logical._py_lazy_and", "framework.tensor_util.is_tf_type", "operators.logical._tf_lazy_and"], "operators.logical._tf_lazy_and": ["ops.control_flow_ops.cond"], "operators.logical._py_lazy_and": [], "operators.logical._tf_lazy_and.<lambda1>": [], "ops.control_flow_ops.cond": [], "operators.logical.or_": ["framework.tensor_util.is_tf_type", "operators.logical._tf_lazy_or", "operators.logical._py_lazy_or"], "operators.logical._tf_lazy_or": ["ops.control_flow_ops.cond"], "operators.logical._py_lazy_or": [], "operators.logical._tf_lazy_or.<lambda1>": [], "operators.logical.eq": ["framework.tensor_util.is_tf_type", "operators.logical._tf_equal", "operators.logical._py_equal"], "operators.logical._tf_equal": ["ops.gen_math_ops.equal"], "operators.logical._py_equal": [], "ops.gen_math_ops.equal": [], "operators.logical.not_eq": ["operators.logical.not_", "operators.logical.eq"]}