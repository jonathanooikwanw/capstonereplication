{"saved_model.builder_impl": [], "saved_model.builder_impl._SavedModelBuilder.__init__": ["protobuf.saved_model_pb2.SavedModel", "io.file_io.file_exists", "io.file_io.recursive_create_dir", "io.file_io.list_directory", "<builtin>.AssertionError"], "protobuf.saved_model_pb2.SavedModel": [], "io.file_io.file_exists": [], "io.file_io.list_directory": [], "<builtin>.AssertionError": [], "io.file_io.recursive_create_dir": [], "saved_model.builder_impl._SavedModelBuilder._save_and_write_assets": ["saved_model.builder_impl.copy_assets_to_destination_dir", "saved_model.builder_impl._maybe_save_assets", "functools.partial", "platform.tf_logging.info"], "functools.partial": [], "saved_model.builder_impl._maybe_save_assets": ["saved_model.builder_impl.get_asset_filename_to_add", "<builtin>.ValueError", "saved_model.builder_impl._asset_path_from_tensor", "platform.tf_logging.info", "saved_model.builder_impl._add_asset_to_collection"], "platform.tf_logging.info": [], "saved_model.builder_impl.copy_assets_to_destination_dir": ["util.compat.as_bytes", "io.file_io.copy", "io.file_io.file_exists", "os.path.join", "platform.tf_logging.info", "saved_model.utils_impl.get_or_create_assets_dir", "util.compat.as_text"], "saved_model.builder_impl._SavedModelBuilder._tag_and_add_meta_graph": [], "saved_model.builder_impl._SavedModelBuilder._validate_tensor_info": ["<builtin>.AssertionError", "saved_model.builder_impl._SavedModelBuilder._validate_tensor_info"], "saved_model.builder_impl._SavedModelBuilder._validate_signature_def_map": ["<builtin>.KeyError", "saved_model.builder_impl._SavedModelBuilder._validate_tensor_info"], "<builtin>.KeyError": [], "saved_model.builder_impl._SavedModelBuilder._maybe_create_saver": ["ops.variables._all_saveable_objects", "training.saver.Saver"], "ops.variables._all_saveable_objects": [], "training.saver.Saver": [], "saved_model.builder_impl._SavedModelBuilder.add_meta_graph": ["saved_model.builder_impl._SavedModelBuilder._validate_signature_def_map", "saved_model.builder_impl._SavedModelBuilder._save_and_write_assets", "<builtin>.AssertionError", "saved_model.builder_impl._add_op_to_signature_def_map", "saved_model.builder_impl._SavedModelBuilder._maybe_create_saver", "saved_model.builder_impl._SavedModelBuilder._tag_and_add_meta_graph"], "saved_model.builder_impl._add_op_to_signature_def_map": ["saved_model.signature_def_utils.op_signature_def"], "saved_model.builder_impl._SavedModelBuilder.add_meta_graph_and_variables": ["saved_model.utils_impl.get_or_create_variables_dir", "saved_model.utils_impl.get_variables_path", "saved_model.builder_impl._SavedModelBuilder._validate_signature_def_map", "saved_model.builder_impl._SavedModelBuilder._save_and_write_assets", "<builtin>.AssertionError", "saved_model.builder_impl._add_op_to_signature_def_map", "saved_model.builder_impl._SavedModelBuilder._maybe_create_saver", "saved_model.builder_impl._SavedModelBuilder._tag_and_add_meta_graph"], "saved_model.utils_impl.get_or_create_variables_dir": [], "saved_model.utils_impl.get_variables_path": [], "saved_model.builder_impl._SavedModelBuilder.save": ["pywrap_saved_model.metrics.IncrementWrite", "pywrap_saved_model.metrics.IncrementWriteApi", "util.compat.as_bytes", "io.file_io.file_exists", "io.file_io.recursive_create_dir", "os.path.join", "<builtin>.str", "io.file_io.write_string_to_file", "platform.tf_logging.info", "util.compat.as_text"], "pywrap_saved_model.metrics.IncrementWriteApi": [], "util.compat.as_bytes": [], "os.path.join": [], "<builtin>.str": [], "io.file_io.write_string_to_file": [], "util.compat.as_text": [], "pywrap_saved_model.metrics.IncrementWrite": [], "saved_model.builder_impl.SavedModelBuilder.__init__": ["<builtin>.super"], "<builtin>.super": [], "saved_model.builder_impl.SavedModelBuilder._add_collections": ["saved_model.builder_impl.SavedModelBuilder._maybe_add_main_op", "saved_model.builder_impl.SavedModelBuilder._save_and_write_assets", "saved_model.builder_impl.SavedModelBuilder._add_train_op"], "saved_model.builder_impl.SavedModelBuilder._save_and_write_assets": ["saved_model.builder_impl.copy_assets_to_destination_dir", "saved_model.builder_impl._maybe_save_assets", "platform.tf_logging.info"], "saved_model.builder_impl.SavedModelBuilder._maybe_add_main_op": ["<builtin>.TypeError", "<builtin>.isinstance", "framework.ops.add_to_collection", "framework.ops.get_collection", "<builtin>.ValueError"], "saved_model.builder_impl.SavedModelBuilder._add_train_op": ["<builtin>.TypeError", "<builtin>.isinstance", "framework.ops.add_to_collection"], "<builtin>.isinstance": [], "<builtin>.TypeError": [], "framework.ops.get_collection": [], "<builtin>.ValueError": [], "framework.ops.add_to_collection": [], "util.deprecation.deprecated_args": [], "saved_model.builder_impl.SavedModelBuilder": ["util.deprecation.deprecated_args"], "saved_model.builder_impl.SavedModelBuilder.add_meta_graph": ["saved_model.builder_impl.SavedModelBuilder._add_collections", "saved_model.builder_impl._SavedModelBuilder._validate_signature_def_map", "<builtin>.AssertionError", "saved_model.builder_impl._SavedModelBuilder._maybe_create_saver", "saved_model.builder_impl._SavedModelBuilder._tag_and_add_meta_graph"], "saved_model.builder_impl.SavedModelBuilder.add_meta_graph_and_variables": ["saved_model.utils_impl.get_or_create_variables_dir", "saved_model.utils_impl.get_variables_path", "saved_model.builder_impl.SavedModelBuilder._add_collections", "saved_model.builder_impl._SavedModelBuilder._validate_signature_def_map", "<builtin>.AssertionError", "saved_model.builder_impl._SavedModelBuilder._maybe_create_saver", "saved_model.builder_impl._SavedModelBuilder._tag_and_add_meta_graph"], "saved_model.builder_impl._asset_path_from_tensor": ["<builtin>.TypeError", "<builtin>.len", "<builtin>.isinstance"], "saved_model.builder_impl.get_asset_filename_to_add": ["io.file_io.filecmp", "saved_model.builder_impl._get_unique_asset_filename", "os.path.basename"], "saved_model.builder_impl._add_asset_to_collection": ["protobuf.any_pb2.Any", "protobuf.meta_graph_pb2.AssetFileDef", "framework.ops.add_to_collection"], "os.path.basename": [], "io.file_io.filecmp": [], "saved_model.builder_impl._get_unique_asset_filename": ["util.compat.as_bytes"], "<builtin>.len": [], "saved_model.builder_impl._add_asset_to_metagraph": [], "saved_model.utils_impl.get_or_create_assets_dir": [], "io.file_io.copy": [], "protobuf.meta_graph_pb2.AssetFileDef": [], "protobuf.any_pb2.Any": [], "saved_model.signature_def_utils.op_signature_def": []}