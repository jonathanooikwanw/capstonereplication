{"engine.data_adapter": ["util.tf_export.keras_export"], "engine.data_adapter.DataAdapter.can_handle": [], "engine.data_adapter.DataAdapter": ["abc.abstractmethod"], "abc.abstractmethod": [], "engine.data_adapter.DataAdapter.__init__": ["engine.data_adapter.DataAdapter.can_handle", "engine.data_adapter.TensorLikeDataAdapter.can_handle", "<builtin>.ValueError"], "engine.data_adapter.TensorLikeDataAdapter.can_handle": ["engine.data_adapter.TensorLikeDataAdapter.can_handle._is_tensor", "util.nest.flatten", "engine.data_adapter._get_tensor_types", "<builtin>.all"], "<builtin>.ValueError": [], "engine.data_adapter.DataAdapter.get_dataset": [], "engine.data_adapter.DataAdapter.get_size": [], "engine.data_adapter.DataAdapter.batch_size": [], "engine.data_adapter.DataAdapter.representative_batch_size": ["engine.data_adapter.TensorLikeDataAdapter.batch_size", "engine.data_adapter.DataAdapter.batch_size"], "engine.data_adapter.TensorLikeDataAdapter.batch_size": [], "engine.data_adapter.DataAdapter.has_partial_batch": [], "engine.data_adapter.DataAdapter.partial_batch_size": [], "engine.data_adapter.DataAdapter.should_recreate_iterator": [], "engine.data_adapter.DataAdapter.get_samples": ["engine.data_adapter.TensorLikeDataAdapter.partial_batch_size", "engine.data_adapter.TensorLikeDataAdapter.get_size", "engine.data_adapter.DataAdapter.batch_size", "engine.data_adapter.DataAdapter.partial_batch_size", "engine.data_adapter.TensorLikeDataAdapter.batch_size", "engine.data_adapter.DataAdapter.has_partial_batch", "engine.data_adapter.TensorLikeDataAdapter.has_partial_batch", "engine.data_adapter.DataAdapter.get_size"], "engine.data_adapter.TensorLikeDataAdapter.get_size": [], "engine.data_adapter.TensorLikeDataAdapter.has_partial_batch": [], "engine.data_adapter.TensorLikeDataAdapter.partial_batch_size": [], "engine.data_adapter.DataAdapter.on_epoch_end": [], "util.nest.flatten": [], "engine.data_adapter._get_tensor_types": [], "engine.data_adapter.TensorLikeDataAdapter.can_handle._is_tensor": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "<builtin>.all": [], "engine.data_adapter.TensorLikeDataAdapter.__init__": ["dataset_ops.DatasetV2.range", "engine.training_utils.handle_partial_sample_weights", "<builtin>.set", "<builtin>.isinstance", "engine.data_adapter.broadcast_sample_weight_modes", "engine.data_adapter.TensorLikeDataAdapter.slice_inputs", "engine.data_adapter.pack_x_y_sample_weight", "<builtin>.int", "util.nest.flatten", "math.ceil", "engine.data_adapter._process_tensorlike", "<builtin>.super", "engine.data_adapter._check_data_cardinality"], "<builtin>.super": [], "engine.data_adapter._process_tensorlike": ["util.nest.list_to_tuple", "util.nest.map_structure"], "engine.data_adapter.broadcast_sample_weight_modes": ["util.nest.map_structure", "<builtin>.isinstance", "util.nest.assert_same_structure", "util.nest.pack_sequence_as", "platform.tf_logging.warning", "engine.training_utils.list_to_tuple", "util.nest.flatten", "<builtin>.ValueError", "<builtin>.str"], "engine.training_utils.handle_partial_sample_weights": [], "engine.data_adapter.pack_x_y_sample_weight": ["util.nest.is_nested"], "<builtin>.int": [], "<builtin>.set": [], "engine.data_adapter._check_data_cardinality": ["<builtin>.set", "<builtin>.len", "<builtin>.int", "util.nest.flatten", "<builtin>.zip", "<builtin>.ValueError", "<builtin>.str"], "math.ceil": [], "dataset_ops.DatasetV2.range": [], "engine.data_adapter.TensorLikeDataAdapter.__init__.permutation": ["ops.math_ops.range", "ops.random_ops.random_shuffle"], "ops.math_ops.range": [], "ops.random_ops.random_shuffle": [], "engine.data_adapter.TensorLikeDataAdapter.__init__.slice_batch_indices": ["dataset_ops.DatasetV2.from_tensors", "ops.array_ops.slice", "ops.array_ops.reshape", "dataset_ops.DatasetV2.from_tensor_slices"], "ops.array_ops.slice": [], "ops.array_ops.reshape": [], "dataset_ops.DatasetV2.from_tensor_slices": [], "dataset_ops.DatasetV2.from_tensors": [], "engine.data_adapter.TensorLikeDataAdapter.slice_inputs": ["dataset_ops.DatasetV2.from_tensors", "ops.options.Options", "dataset_ops.DatasetV2.zip"], "engine.data_adapter.TensorLikeDataAdapter.__init__.shuffle_batch": ["util.nest.map_structure"], "util.nest.map_structure": [], "dataset_ops.DatasetV2.zip": [], "engine.data_adapter.TensorLikeDataAdapter.slice_inputs.grab_batch": ["util.nest.map_structure"], "engine.data_adapter.TensorLikeDataAdapter.slice_inputs.grab_batch.<lambda1>": ["ops.array_ops.gather"], "ops.array_ops.gather": [], "ops.options.Options": [], "engine.data_adapter.TensorLikeDataAdapter.get_dataset": [], "engine.data_adapter.TensorLikeDataAdapter.should_recreate_iterator": [], "engine.data_adapter.GenericArrayLikeDataAdapter.can_handle": ["engine.data_adapter.GenericArrayLikeDataAdapter.can_handle._is_array_like", "<builtin>.all", "util.nest.flatten", "engine.data_adapter.CompositeTensorDataAdapter.can_handle", "engine.data_adapter.TensorLikeDataAdapter.can_handle"], "engine.data_adapter.GenericArrayLikeDataAdapter.can_handle._is_array_like": ["<builtin>.hasattr"], "<builtin>.hasattr": [], "engine.data_adapter.CompositeTensorDataAdapter.can_handle": ["<builtin>.all", "engine.data_adapter.CompositeTensorDataAdapter.can_handle._is_composite", "engine.data_adapter.CompositeTensorDataAdapter.can_handle._is_tensor_or_composite", "util.nest.flatten", "<builtin>.any"], "engine.data_adapter.GenericArrayLikeDataAdapter.__init__": ["platform.tf_logging.warning", "<builtin>.super"], "platform.tf_logging.warning": [], "engine.data_adapter.GenericArrayLikeDataAdapter.slice_inputs": ["util.nest.flatten"], "engine.data_adapter.GenericArrayLikeDataAdapter.slice_inputs.dynamic_shape_like": ["<builtin>.tuple", "<builtin>.list"], "<builtin>.list": [], "<builtin>.tuple": [], "engine.data_adapter.GenericArrayLikeDataAdapter.slice_inputs.grab_batch": ["util.nest.pack_sequence_as", "<builtin>.zip", "ops.script_ops.eager_py_func", "engine.data_adapter.GenericArrayLikeDataAdapter.slice_inputs.dynamic_shape_like"], "engine.data_adapter.GenericArrayLikeDataAdapter.slice_inputs.grab_batch.py_method": ["engine.data_adapter.GenericArrayLikeDataAdapter.slice_inputs.grab_batch.py_method.slice_array"], "engine.data_adapter.GenericArrayLikeDataAdapter.slice_inputs.grab_batch.py_method.slice_array": ["engine.training_utils.slice_arrays"], "engine.training_utils.slice_arrays": [], "ops.script_ops.eager_py_func": [], "<builtin>.zip": [], "util.nest.pack_sequence_as": [], "engine.data_adapter.DatasetCreatorAdapter.__init__": ["<builtin>.isinstance", "<builtin>.super", "<builtin>.TypeError", "<builtin>.type", "<builtin>.ValueError"], "<builtin>.type": [], "<builtin>.TypeError": [], "engine.data_adapter.DatasetCreatorAdapter.can_handle": ["<builtin>.isinstance"], "engine.data_adapter.DatasetCreatorAdapter.should_recreate_iterator": [], "engine.data_adapter.DatasetCreatorAdapter.get_size": [], "engine.data_adapter.DatasetCreatorAdapter.get_dataset": [], "engine.data_adapter.DatasetCreatorAdapter.batch_size": ["<builtin>.NotImplementedError"], "<builtin>.NotImplementedError": [], "engine.data_adapter.DatasetCreatorAdapter.has_partial_batch": ["<builtin>.NotImplementedError"], "engine.data_adapter.DatasetCreatorAdapter.partial_batch_size": ["<builtin>.NotImplementedError"], "engine.data_adapter.CompositeTensorDataAdapter.can_handle._is_composite": ["engine.data_adapter._is_scipy_sparse", "<builtin>.isinstance", "engine.data_adapter._is_distributed_dataset", "utils.tf_utils.is_extension_type"], "utils.tf_utils.is_extension_type": [], "engine.data_adapter._is_distributed_dataset": ["<builtin>.isinstance"], "engine.data_adapter._is_scipy_sparse": ["scipy.sparse.issparse"], "engine.data_adapter.CompositeTensorDataAdapter.can_handle._is_tensor_or_composite": ["<builtin>.isinstance", "engine.data_adapter.CompositeTensorDataAdapter.can_handle._is_composite"], "<builtin>.any": [], "engine.data_adapter.CompositeTensorDataAdapter.__init__": ["engine.training_utils.handle_partial_sample_weights", "dataset_ops.DatasetV2.from_tensor_slices", "engine.data_adapter.broadcast_sample_weight_modes", "engine.data_adapter.pack_x_y_sample_weight", "<builtin>.int", "util.nest.flatten", "math.ceil", "engine.data_adapter._process_tensorlike", "<builtin>.super"], "engine.data_adapter.CompositeTensorDataAdapter.get_dataset": [], "engine.data_adapter.CompositeTensorDataAdapter.get_size": [], "engine.data_adapter.CompositeTensorDataAdapter.batch_size": [], "engine.data_adapter.CompositeTensorDataAdapter.has_partial_batch": [], "engine.data_adapter.CompositeTensorDataAdapter.partial_batch_size": [], "engine.data_adapter.CompositeTensorDataAdapter.should_recreate_iterator": [], "engine.data_adapter.ListsOfScalarsDataAdapter.can_handle": ["engine.data_adapter.ListsOfScalarsDataAdapter._is_list_of_scalars"], "engine.data_adapter.ListsOfScalarsDataAdapter._is_list_of_scalars": ["engine.data_adapter.ListsOfScalarsDataAdapter._is_list_of_scalars", "<builtin>.isinstance"], "engine.data_adapter.ListsOfScalarsDataAdapter.__init__": ["engine.data_adapter.broadcast_sample_weight_modes", "engine.data_adapter.TensorLikeDataAdapter.__init__", "numpy.asarray", "<builtin>.super"], "numpy.asarray": [], "engine.data_adapter.ListsOfScalarsDataAdapter.get_dataset": ["engine.data_adapter.TensorLikeDataAdapter.get_dataset"], "engine.data_adapter.ListsOfScalarsDataAdapter.get_size": ["engine.data_adapter.TensorLikeDataAdapter.get_size"], "engine.data_adapter.ListsOfScalarsDataAdapter.batch_size": ["engine.data_adapter.TensorLikeDataAdapter.batch_size"], "engine.data_adapter.ListsOfScalarsDataAdapter.has_partial_batch": ["engine.data_adapter.TensorLikeDataAdapter.has_partial_batch"], "engine.data_adapter.ListsOfScalarsDataAdapter.partial_batch_size": ["engine.data_adapter.TensorLikeDataAdapter.partial_batch_size"], "engine.data_adapter.ListsOfScalarsDataAdapter.should_recreate_iterator": [], "engine.data_adapter.DatasetAdapter.can_handle": ["<builtin>.isinstance", "engine.data_adapter._is_distributed_dataset"], "engine.data_adapter.DatasetAdapter.__init__": ["engine.data_adapter.DatasetAdapter._validate_args", "<builtin>.super"], "engine.data_adapter.DatasetAdapter._validate_args": ["ops.cardinality.cardinality", "<builtin>.ValueError", "engine.data_adapter._is_distributed_dataset", "engine.data_adapter.is_none_or_empty"], "engine.data_adapter.DatasetAdapter.get_dataset": [], "engine.data_adapter.DatasetAdapter.get_size": [], "engine.data_adapter.DatasetAdapter.batch_size": [], "engine.data_adapter.DatasetAdapter.has_partial_batch": [], "engine.data_adapter.DatasetAdapter.partial_batch_size": [], "engine.data_adapter.DatasetAdapter.should_recreate_iterator": ["engine.data_adapter._is_distributed_dataset", "ops.cardinality.cardinality"], "ops.cardinality.cardinality": [], "engine.data_adapter.is_none_or_empty": ["util.nest.flatten"], "engine.data_adapter.GeneratorDataAdapter.can_handle": ["<builtin>.hasattr", "<builtin>.isinstance"], "engine.data_adapter.GeneratorDataAdapter.__init__": ["dataset_ops.DatasetV2.from_generator", "util.nest.map_structure", "engine.data_adapter.GeneratorDataAdapter._standardize_batch", "engine.data_adapter.GeneratorDataAdapter._peek_and_restore", "engine.data_adapter.unpack_x_y_sample_weight", "<builtin>.int", "engine.data_adapter.is_none_or_empty", "util.nest.flatten", "<builtin>.super", "engine.data_adapter._process_tensorlike", "<builtin>.ValueError", "engine.data_adapter.GeneratorDataAdapter._handle_multiprocessing"], "engine.data_adapter.GeneratorDataAdapter._peek_and_restore": ["<builtin>.next", "itertools.chain"], "engine.data_adapter.GeneratorDataAdapter._standardize_batch": ["util.nest.list_to_tuple", "util.nest.map_structure", "engine.data_adapter.pack_x_y_sample_weight", "engine.data_adapter.unpack_x_y_sample_weight"], "engine.data_adapter.unpack_x_y_sample_weight": ["<builtin>.isinstance", "<builtin>.len", "<builtin>.ValueError"], "engine.data_adapter.GeneratorDataAdapter.__init__.<lambda1>": [], "engine.data_adapter.GeneratorDataAdapter.__init__._get_dynamic_shape": ["framework.tensor_shape.TensorShape"], "framework.tensor_shape.TensorShape": [], "engine.data_adapter.GeneratorDataAdapter.__init__.<lambda2>": [], "engine.data_adapter.GeneratorDataAdapter._handle_multiprocessing": [], "engine.data_adapter.GeneratorDataAdapter.__init__.wrapped_generator": ["engine.data_adapter.GeneratorDataAdapter._standardize_batch", "engine.data_adapter.GeneratorDataAdapter._handle_multiprocessing.<lambda1>"], "engine.data_adapter.GeneratorDataAdapter._handle_multiprocessing.<lambda1>": [], "dataset_ops.DatasetV2.from_generator": [], "util.nest.list_to_tuple": [], "engine.data_adapter.GeneratorDataAdapter._standardize_batch._convert_dtype": ["<builtin>.issubclass", "<builtin>.isinstance", "numpy.array", "keras.backend.floatx"], "<builtin>.issubclass": [], "keras.backend.floatx": [], "numpy.array": [], "<builtin>.next": [], "itertools.chain": [], "engine.data_adapter.GeneratorDataAdapter._handle_multiprocessing.generator_fn": ["utils.data_utils.GeneratorEnqueuer"], "utils.data_utils.GeneratorEnqueuer": [], "engine.data_adapter.GeneratorDataAdapter.get_dataset": [], "engine.data_adapter.GeneratorDataAdapter.get_size": [], "engine.data_adapter.GeneratorDataAdapter.batch_size": [], "engine.data_adapter.GeneratorDataAdapter.representative_batch_size": [], "engine.data_adapter.GeneratorDataAdapter.has_partial_batch": [], "engine.data_adapter.GeneratorDataAdapter.partial_batch_size": [], "engine.data_adapter.GeneratorDataAdapter.should_recreate_iterator": [], "engine.data_adapter.KerasSequenceAdapter.can_handle": ["<builtin>.isinstance"], "engine.data_adapter.KerasSequenceAdapter.__init__": ["<builtin>.super", "<builtin>.ValueError", "<builtin>.len", "engine.data_adapter.is_none_or_empty"], "<builtin>.len": [], "engine.data_adapter.KerasSequenceAdapter._peek_and_restore": [], "engine.data_adapter.KerasSequenceAdapter._handle_multiprocessing": [], "engine.data_adapter.KerasSequenceAdapter._handle_multiprocessing.generator_fn": ["<builtin>.len", "utils.data_utils.OrderedEnqueuer", "<builtin>.range", "<builtin>.list", "random.shuffle"], "utils.data_utils.OrderedEnqueuer": [], "<builtin>.range": [], "random.shuffle": [], "engine.data_adapter.KerasSequenceAdapter.get_size": [], "engine.data_adapter.KerasSequenceAdapter.should_recreate_iterator": [], "engine.data_adapter.KerasSequenceAdapter.on_epoch_end": [], "engine.data_adapter.select_data_adapter": ["<builtin>.RuntimeError", "engine.data_adapter._type_name", "<builtin>.ValueError", "<builtin>.len"], "engine.data_adapter._type_name": ["<builtin>.set", "<builtin>.isinstance", "engine.data_adapter._type_name", "<builtin>.str", "<builtin>.type"], "<builtin>.RuntimeError": [], "<builtin>.str": [], "engine.data_adapter._process_tensorlike._convert_numpy_and_scipy": ["<builtin>.issubclass", "<builtin>.isinstance", "engine.data_adapter._is_scipy_sparse", "engine.data_adapter._scipy_sparse_to_sparse_tensor", "framework.ops.convert_to_tensor_v2_with_dispatch", "keras.backend.floatx"], "framework.ops.convert_to_tensor_v2_with_dispatch": [], "engine.data_adapter._scipy_sparse_to_sparse_tensor": ["<builtin>.issubclass", "numpy.concatenate", "numpy.expand_dims", "framework.sparse_tensor.SparseTensor", "keras.backend.floatx"], "engine.training_utils.list_to_tuple": [], "util.nest.assert_same_structure": [], "engine.data_adapter.broadcast_sample_weight_modes.<lambda1>": [], "engine.data_adapter.broadcast_sample_weight_modes.<lambda2>": [], "engine.data_adapter.DataHandler.__init__": ["engine.data_adapter._ClusterCoordinatorDataHandler._configure_dataset_and_inferred_steps", "engine.data_adapter.DataHandler._configure_dataset_and_inferred_steps", "distribute.distribution_strategy_context.get_strategy", "engine.data_adapter.select_data_adapter"], "distribute.distribution_strategy_context.get_strategy": [], "engine.data_adapter._ClusterCoordinatorDataHandler._configure_dataset_and_inferred_steps": ["engine.data_adapter.DataHandler._log_indefinite_training_warning", "<builtin>.isinstance", "<builtin>.TypeError"], "engine.data_adapter.DataHandler._configure_dataset_and_inferred_steps": ["engine.data_adapter.DataHandler._infer_steps", "engine.data_adapter.DataHandler._validate_data_handler", "engine.data_adapter._make_class_weight_map_fn", "engine.data_adapter._is_distributed_dataset"], "engine.data_adapter._make_class_weight_map_fn": ["<builtin>.len", "<builtin>.range", "<builtin>.list", "<builtin>.int", "framework.ops.convert_to_tensor_v2_with_dispatch", "<builtin>.sorted", "<builtin>.ValueError"], "engine.data_adapter.DataHandler._infer_steps": ["engine.data_adapter.DataHandler._log_indefinite_training_warning", "<builtin>.ValueError", "ops.cardinality.cardinality"], "engine.data_adapter.DataHandler._validate_data_handler": ["<builtin>.ValueError"], "engine.data_adapter.DataHandler.enumerate_epochs": ["<builtin>.iter", "<builtin>.range", "engine.data_adapter.DataHandler._truncate_execution_to_epoch"], "engine.data_adapter.DataHandler._truncate_execution_to_epoch": [], "<builtin>.iter": [], "engine.data_adapter.DataHandler": ["contextlib.contextmanager"], "contextlib.contextmanager": [], "engine.data_adapter.DataHandler.sync": ["eager.context.async_wait"], "eager.context.async_wait": [], "engine.data_adapter.DataHandler.catch_stop_iteration": ["platform.tf_logging.warning", "engine.data_adapter.DataHandler.sync", "engine.data_adapter._ClusterCoordinatorDataHandler.sync"], "engine.data_adapter._ClusterCoordinatorDataHandler.sync": [], "engine.data_adapter.DataHandler.steps": [], "engine.data_adapter.DataHandler.step_increment": [], "engine.data_adapter.DataHandler.inferred_steps": [], "engine.data_adapter.DataHandler.should_sync": [], "engine.data_adapter.DataHandler._log_indefinite_training_warning": ["platform.tf_logging.warning"], "engine.data_adapter.DataHandler._samples": [], "engine.data_adapter._ClusterCoordinatorDataHandler.__init__": ["engine.data_adapter._ClusterCoordinatorDataHandler._convert_to_dataset_creator", "<builtin>.isinstance", "<builtin>.super"], "engine.data_adapter._ClusterCoordinatorDataHandler._convert_to_dataset_creator": ["utils.dataset_creator.DatasetCreator", "<builtin>.NotImplementedError", "<builtin>.isinstance", "engine.data_adapter._get_tensor_types"], "engine.data_adapter._ClusterCoordinatorDataHandler._convert_to_dataset_creator._dataset_fn": ["engine.data_adapter.select_data_adapter"], "utils.dataset_creator.DatasetCreator": [], "engine.data_adapter._ClusterCoordinatorDataHandler._configure_dataset_and_inferred_steps.per_worker_dataset_fn": [], "engine.data_adapter.get_data_handler": ["engine.data_adapter.DataHandler.__init__", "engine.data_adapter._ClusterCoordinatorDataHandler.__init__", "<builtin>.getattr"], "<builtin>.getattr": [], "<builtin>.sorted": [], "engine.data_adapter._make_class_weight_map_fn._class_weights_map_fn": ["engine.data_adapter.expand_1d", "util.nest.is_nested", "keras.backend.shape", "engine.data_adapter.unpack_x_y_sample_weight", "ops.math_ops.cast", "<builtin>.ValueError", "ops.array_ops.gather_v2", "framework.smart_cond.smart_cond"], "util.nest.is_nested": [], "keras.backend.shape": [], "engine.data_adapter._make_class_weight_map_fn._class_weights_map_fn.<lambda1>": ["keras.backend.argmax"], "keras.backend.argmax": [], "engine.data_adapter._make_class_weight_map_fn._class_weights_map_fn.<lambda2>": ["keras.backend.reshape", "ops.math_ops.cast"], "keras.backend.reshape": [], "ops.math_ops.cast": [], "framework.smart_cond.smart_cond": [], "ops.array_ops.gather_v2": [], "engine.data_adapter.expand_1d": ["util.nest.map_structure"], "engine.data_adapter.expand_1d._expand_single_1d_tensor": ["ops.array_ops.expand_dims_v2", "<builtin>.isinstance"], "ops.array_ops.expand_dims_v2": [], "engine.data_adapter.train_validation_split": ["util.nest.map_structure", "math.floor", "<builtin>.all", "<builtin>.int", "util.nest.flatten", "functools.partial", "engine.data_adapter.train_validation_split._can_split", "<builtin>.type", "<builtin>.ValueError"], "engine.data_adapter.train_validation_split._can_split": ["<builtin>.isinstance", "engine.data_adapter._get_tensor_types"], "math.floor": [], "engine.data_adapter.train_validation_split._split": [], "functools.partial": [], "util.tf_export.keras_export": [], "engine.data_adapter.single_batch_iterator": ["dataset_ops.DatasetV2.from_tensors", "<builtin>.iter", "engine.data_adapter._make_class_weight_map_fn", "engine.data_adapter._process_tensorlike", "engine.data_adapter._check_data_cardinality"], "scipy.sparse.issparse": [], "numpy.expand_dims": [], "numpy.concatenate": [], "framework.sparse_tensor.SparseTensor": []}