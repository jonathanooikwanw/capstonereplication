{"numpy_ops.np_math_ops": ["<builtin>.setattr", "numpy_ops.np_utils.AliasOf", "numpy_ops.np_math_ops._make_nan_reduction", "numpy_ops.np_utils.np_doc", "numpy_ops.np_export.np_export_constant", "numpy_ops.np_utils.np_doc_only"], "numpy_ops.np_export.np_export_constant": [], "numpy_ops.np_utils.np_doc_only": [], "numpy_ops.np_math_ops.dot": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops.dot.f": ["ops.array_ops.rank", "numpy_ops.np_utils.cond", "ops.math_ops.equal", "numpy_ops.np_utils.logical_or"], "ops.array_ops.rank": [], "ops.math_ops.equal": [], "numpy_ops.np_utils.logical_or": [], "numpy_ops.np_math_ops.dot.f.<lambda1>": [], "numpy_ops.np_math_ops.dot.f.<lambda2>": ["ops.array_ops.rank", "ops.math_ops.equal", "numpy_ops.np_utils.cond"], "numpy_ops.np_math_ops.dot.f.<lambda2>.<lambda1>": ["ops.math_ops.tensordot"], "ops.math_ops.tensordot": [], "numpy_ops.np_math_ops.dot.f.<lambda2>.<lambda2>": ["ops.math_ops.tensordot"], "numpy_ops.np_utils.cond": [], "numpy_ops.np_math_ops._bin_op": ["numpy_ops.np_math_ops.true_divide.f", "numpy_ops.np_math_ops.dot.f", "numpy_ops.np_math_ops.lcm.f", "numpy_ops.np_math_ops.inner.f", "numpy_ops.np_array_ops._promote_dtype_binary", "ops.math_ops.atan2", "numpy_ops.np_math_ops.minimum.min_or_and", "numpy_ops.np_math_ops.tensordot.<lambda1>", "numpy_ops.np_math_ops.mod.f", "numpy_ops.np_math_ops.isclose.f", "ops.math_ops.nextafter", "numpy_ops.np_math_ops.outer.f", "ops.math_ops.subtract", "numpy_ops.np_math_ops._bitwise_binary_op.f", "numpy_ops.np_math_ops.multiply.mul_or_and", "numpy_ops.np_math_ops.floor_divide.f", "numpy_ops.np_math_ops.polyval.f", "numpy_ops.np_math_ops.cross.f", "numpy_ops.np_math_ops._tf_gcd", "numpy_ops.np_array_ops.array", "numpy_ops.np_math_ops.heaviside.f", "numpy_ops.np_math_ops.matmul.f", "numpy_ops.np_math_ops.maximum.max_or_or", "numpy_ops.np_math_ops.add.add_or_or", "ops.math_ops.pow"], "numpy_ops.np_array_ops._promote_dtype_binary": [], "numpy_ops.np_array_ops.array": [], "numpy_ops.np_math_ops.true_divide.f": ["numpy_ops.np_dtypes.is_allow_float64", "ops.math_ops.cast", "numpy_ops.np_dtypes.default_float_type", "ops.math_ops.truediv", "numpy_ops.np_math_ops.true_divide._avoid_float64"], "numpy_ops.np_math_ops.multiply.mul_or_and": ["ops.math_ops.logical_and", "ops.math_ops.multiply"], "numpy_ops.np_math_ops.floor_divide.f": ["ops.math_ops.floordiv", "ops.math_ops.cast"], "numpy_ops.np_math_ops.lcm.f": ["ops.math_ops.equal", "ops.math_ops.abs", "framework.constant_op.constant", "numpy_ops.np_math_ops._tf_gcd", "ops.array_ops.where_v2"], "numpy_ops.np_math_ops.inner.f": ["ops.array_ops.rank", "numpy_ops.np_utils.cond", "ops.math_ops.equal", "numpy_ops.np_utils.logical_or"], "numpy_ops.np_math_ops.polyval.f": ["ops.array_ops.unstack", "ops.array_ops.broadcast_to", "<builtin>.len", "ops.array_ops.reshape", "ops.math_ops.polyval"], "numpy_ops.np_math_ops.cross.f": ["ops.array_ops.shape", "numpy_ops.np_utils.cond", "numpy_ops.np_utils.add", "numpy_ops.np_math_ops.cross.f.maybe_pad_0", "numpy_ops.np_math_ops.cross.f.maybe_move_axis_to_last", "numpy_ops.np_utils.tf_broadcast", "ops.math_ops.cross", "numpy_ops.np_utils.getitem", "ops.array_ops.rank"], "numpy_ops.np_math_ops._tf_gcd": ["ops.array_ops.broadcast_to", "numpy.issubdtype", "ops.array_ops.shape", "ops.math_ops.abs", "ops.array_ops.broadcast_dynamic_shape", "ops.control_flow_ops.while_loop", "<builtin>.ValueError"], "numpy_ops.np_math_ops.heaviside.f": ["framework.constant_op.constant", "ops.array_ops.where_v2"], "ops.math_ops.atan2": [], "numpy_ops.np_math_ops.minimum.min_or_and": ["ops.math_ops.minimum", "ops.math_ops.logical_and"], "numpy_ops.np_math_ops.tensordot.<lambda1>": ["ops.math_ops.tensordot"], "numpy_ops.np_math_ops.matmul.f": ["ops.math_ops.equal", "ops.gen_math_ops.mat_mul", "numpy_ops.np_utils.cond", "numpy_ops.np_utils.tf_rank", "<builtin>.str", "sys.exc_info", "<builtin>.ValueError", "six.reraise"], "numpy_ops.np_math_ops.mod.f": ["ops.math_ops.cast", "ops.math_ops.mod"], "numpy_ops.np_math_ops.isclose.f": ["ops.math_ops.abs", "ops.math_ops.is_nan", "framework.ops.convert_to_tensor", "numpy.issubdtype"], "numpy_ops.np_math_ops.maximum.max_or_or": ["ops.math_ops.maximum", "ops.math_ops.logical_or"], "numpy_ops.np_math_ops.add.add_or_or": ["ops.math_ops.add", "ops.math_ops.logical_or"], "ops.math_ops.nextafter": [], "ops.math_ops.pow": [], "numpy_ops.np_math_ops.outer.f": ["ops.array_ops.reshape"], "ops.math_ops.subtract": [], "numpy_ops.np_math_ops._bitwise_binary_op.f": ["ops.bitwise_ops.bitwise_and", "ops.bitwise_ops.bitwise_xor", "ops.math_ops.cast", "ops.bitwise_ops.bitwise_or"], "numpy_ops.np_utils.np_doc": [], "numpy_ops.np_math_ops.add": ["numpy_ops.np_math_ops._bin_op"], "ops.math_ops.logical_or": [], "ops.math_ops.add": [], "numpy_ops.np_math_ops.subtract": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops.multiply": ["numpy_ops.np_math_ops._bin_op"], "ops.math_ops.logical_and": [], "ops.math_ops.multiply": [], "numpy_ops.np_math_ops.true_divide": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops.true_divide._avoid_float64": ["ops.math_ops.cast"], "ops.math_ops.cast": [], "numpy_ops.np_dtypes.default_float_type": [], "numpy_ops.np_dtypes.is_allow_float64": [], "ops.math_ops.truediv": [], "numpy_ops.np_math_ops.divide": ["numpy_ops.np_math_ops.true_divide"], "numpy_ops.np_math_ops.floor_divide": ["numpy_ops.np_math_ops._bin_op"], "ops.math_ops.floordiv": [], "numpy_ops.np_math_ops.mod": ["numpy_ops.np_math_ops._bin_op"], "ops.math_ops.mod": [], "numpy_ops.np_math_ops.remainder": ["numpy_ops.np_math_ops.mod"], "numpy_ops.np_math_ops.divmod": ["numpy_ops.np_math_ops.floor_divide", "numpy_ops.np_math_ops.mod"], "numpy_ops.np_math_ops.maximum": ["ops.nn_ops.relu", "<builtin>.isinstance", "numpy_ops.np_array_ops.asarray", "numpy_ops.np_math_ops._bin_op"], "<builtin>.isinstance": [], "numpy_ops.np_array_ops.asarray": [], "ops.nn_ops.relu": [], "ops.math_ops.maximum": [], "numpy_ops.np_math_ops.minimum": ["numpy_ops.np_math_ops._bin_op"], "ops.math_ops.minimum": [], "numpy_ops.np_math_ops.clip": ["numpy_ops.np_array_ops._promote_dtype", "numpy_ops.np_math_ops.minimum", "numpy_ops.np_utils.tf_broadcast", "numpy_ops.np_math_ops.maximum", "<builtin>.ValueError", "ops.clip_ops.clip_by_value"], "<builtin>.ValueError": [], "numpy_ops.np_array_ops._promote_dtype": [], "numpy_ops.np_utils.tf_broadcast": [], "ops.clip_ops.clip_by_value": [], "numpy_ops.np_math_ops.matmul": ["numpy_ops.np_math_ops._bin_op"], "ops.gen_math_ops.mat_mul": [], "numpy_ops.np_utils.tf_rank": [], "numpy_ops.np_math_ops.matmul.f.<lambda1>": ["ops.math_ops.tensordot"], "numpy_ops.np_math_ops.matmul.f.<lambda2>": ["numpy_ops.np_utils.cond", "ops.math_ops.equal", "numpy_ops.np_utils.tf_rank"], "numpy_ops.np_math_ops.matmul.f.<lambda2>.<lambda1>": ["ops.math_ops.tensordot"], "numpy_ops.np_math_ops.matmul.f.<lambda2>.<lambda2>": ["ops.math_ops.matmul"], "ops.math_ops.matmul": [], "<builtin>.str": [], "sys.exc_info": [], "six.reraise": [], "<builtin>.setattr": [], "numpy_ops.np_math_ops.tensordot": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops.inner": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops.inner.f.<lambda1>": [], "numpy_ops.np_math_ops.inner.f.<lambda2>": ["ops.math_ops.tensordot"], "numpy_ops.np_math_ops.cross": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_utils.add": [], "numpy_ops.np_math_ops.cross.f.maybe_move_axis_to_last": ["ops.array_ops.rank", "numpy_ops.np_utils.cond", "numpy_ops.np_utils.subtract"], "numpy_ops.np_math_ops.cross.f.maybe_move_axis_to_last.move_axis_to_last": ["ops.array_ops.transpose", "ops.array_ops.rank", "ops.array_ops.concat", "ops.math_ops.range"], "ops.math_ops.range": [], "ops.array_ops.concat": [], "ops.array_ops.transpose": [], "numpy_ops.np_utils.subtract": [], "numpy_ops.np_math_ops.cross.f.maybe_move_axis_to_last.<lambda1>": [], "numpy_ops.np_math_ops.cross.f.maybe_move_axis_to_last.<lambda2>": ["numpy_ops.np_math_ops.cross.f.maybe_move_axis_to_last.move_axis_to_last"], "ops.array_ops.shape": [], "numpy_ops.np_utils.getitem": [], "numpy_ops.np_math_ops.cross.f.maybe_pad_0": ["ops.math_ops.equal", "numpy_ops.np_utils.cond"], "numpy_ops.np_math_ops.cross.f.maybe_pad_0.pad_0": ["ops.array_ops.zeros", "ops.array_ops.pad", "ops.array_ops.concat", "framework.constant_op.constant", "ops.array_ops.rank"], "ops.array_ops.zeros": [], "framework.constant_op.constant": [], "ops.array_ops.pad": [], "numpy_ops.np_math_ops.cross.f.maybe_pad_0.<lambda1>": ["numpy_ops.np_math_ops.cross.f.maybe_pad_0.pad_0"], "numpy_ops.np_math_ops.cross.f.maybe_pad_0.<lambda2>": [], "ops.math_ops.cross": [], "numpy_ops.np_math_ops.cross.f.move_last_to_axis": ["ops.array_ops.transpose", "ops.array_ops.rank", "ops.array_ops.concat", "ops.math_ops.range"], "numpy_ops.np_math_ops.cross.f.<lambda1>": [], "numpy_ops.np_math_ops.cross.f.<lambda2>": ["ops.array_ops.rank", "numpy_ops.np_utils.cond", "numpy_ops.np_utils.subtract"], "numpy_ops.np_math_ops.cross.f.<lambda2>.<lambda1>": [], "numpy_ops.np_math_ops.cross.f.<lambda2>.<lambda2>": ["numpy_ops.np_math_ops.cross.f.move_last_to_axis"], "numpy_ops.np_math_ops.vdot": ["numpy_ops.np_array_ops._promote_dtype", "numpy_ops.np_array_ops.reshape", "numpy_ops.np_math_ops.conj", "numpy_ops.np_math_ops.dot"], "numpy_ops.np_array_ops.reshape": [], "numpy_ops.np_math_ops.conj": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.power": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops.float_power": ["numpy_ops.np_math_ops.power"], "numpy_ops.np_math_ops.arctan2": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops.nextafter": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops.heaviside": ["numpy_ops.np_dtypes.default_float_type", "numpy.issubdtype", "numpy_ops.np_math_ops._bin_op"], "ops.array_ops.where_v2": [], "numpy.issubdtype": [], "numpy_ops.np_math_ops.hypot": ["numpy_ops.np_math_ops.sqrt", "numpy_ops.np_math_ops.square"], "numpy_ops.np_math_ops.square": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.sqrt": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.kron": ["ops.array_ops.shape", "numpy_ops.np_array_ops.reshape", "numpy_ops.np_utils.cond", "numpy_ops.np_array_ops._promote_dtype", "numpy_ops.np_math_ops.kron._make_shape"], "numpy_ops.np_math_ops.kron.<lambda1>": ["numpy_ops.np_array_ops.reshape", "numpy_ops.np_array_ops._pad_left_to"], "numpy_ops.np_array_ops._pad_left_to": [], "numpy_ops.np_math_ops.kron.<lambda2>": [], "numpy_ops.np_math_ops.kron.<lambda3>": ["numpy_ops.np_array_ops.reshape", "numpy_ops.np_array_ops._pad_left_to"], "numpy_ops.np_math_ops.kron.<lambda4>": [], "numpy_ops.np_math_ops.kron._make_shape": ["ops.array_ops.ones_like", "ops.array_ops.reshape", "ops.array_ops.stack"], "ops.array_ops.ones_like": [], "ops.array_ops.stack": [], "ops.array_ops.reshape": [], "numpy_ops.np_math_ops.outer": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops.logaddexp": ["numpy_ops.np_math_ops.log1p", "numpy_ops.np_math_ops.abs", "numpy_ops.np_math_ops.exp", "numpy_ops.np_array_ops.where", "numpy_ops.np_math_ops.maximum", "numpy_ops.np_math_ops.isnan"], "numpy_ops.np_math_ops.isnan": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.abs": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.exp": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.log1p": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_array_ops.where": [], "numpy_ops.np_math_ops.logaddexp2": ["numpy.log", "numpy_ops.np_math_ops.log1p", "numpy_ops.np_math_ops.abs", "numpy_ops.np_math_ops.exp2", "numpy_ops.np_array_ops.where", "numpy_ops.np_math_ops.maximum", "numpy_ops.np_math_ops.isnan"], "numpy_ops.np_math_ops.exp2": ["numpy_ops.np_math_ops._scalar"], "numpy.log": [], "numpy_ops.np_math_ops.polyval": ["numpy_ops.np_math_ops._bin_op"], "ops.array_ops.unstack": [], "ops.math_ops.polyval": [], "<builtin>.len": [], "ops.array_ops.broadcast_to": [], "numpy_ops.np_math_ops.isclose": ["numpy_ops.np_math_ops._bin_op"], "framework.ops.convert_to_tensor": [], "ops.math_ops.abs": [], "ops.math_ops.is_nan": [], "numpy_ops.np_math_ops.allclose": ["numpy_ops.np_array_ops.all", "numpy_ops.np_math_ops.isclose"], "numpy_ops.np_array_ops.all": [], "numpy_ops.np_math_ops._tf_gcd._gcd_cond_fn": ["ops.math_ops.reduce_any"], "ops.math_ops.reduce_any": [], "numpy_ops.np_math_ops._tf_gcd._gcd_body_fn": ["framework.constant_op.constant", "ops.math_ops.mod", "ops.array_ops.where_v2"], "ops.array_ops.broadcast_dynamic_shape": [], "ops.control_flow_ops.while_loop": [], "numpy_ops.np_math_ops.gcd": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops.lcm": ["numpy_ops.np_math_ops._bin_op"], "numpy_ops.np_math_ops._bitwise_binary_op": ["numpy_ops.np_math_ops._bin_op"], "ops.bitwise_ops.bitwise_and": [], "ops.bitwise_ops.bitwise_or": [], "ops.bitwise_ops.bitwise_xor": [], "numpy_ops.np_math_ops.bitwise_and": ["numpy_ops.np_math_ops._bitwise_binary_op"], "numpy_ops.np_math_ops.bitwise_or": ["numpy_ops.np_math_ops._bitwise_binary_op"], "numpy_ops.np_math_ops.bitwise_xor": ["numpy_ops.np_math_ops._bitwise_binary_op"], "numpy_ops.np_utils.AliasOf": [], "numpy_ops.np_math_ops.bitwise_not": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.bitwise_not.f": ["ops.math_ops.logical_not", "ops.bitwise_ops.invert"], "ops.math_ops.logical_not": [], "ops.bitwise_ops.invert": [], "numpy_ops.np_math_ops._scalar": ["ops.math_ops.reciprocal", "ops.math_ops.log1p", "numpy_ops.np_math_ops.bitwise_not.f", "ops.math_ops.atan", "ops.math_ops.sin", "ops.math_ops.tan", "numpy_ops.np_math_ops.signbit.f", "numpy_ops.np_math_ops.fix.f", "ops.math_ops.sqrt", "ops.math_ops.floor", "ops.math_ops.cosh", "numpy_ops.np_dtypes.default_float_type", "ops.math_ops.exp", "numpy_ops.np_math_ops.deg2rad.f", "ops.math_ops.atanh", "numpy_ops.np_array_ops.asarray", "ops.math_ops.asin", "ops.math_ops.square", "ops.math_ops.is_finite", "ops.math_ops.log", "ops.math_ops.conj", "ops.math_ops.acosh", "numpy.issubdtype", "ops.math_ops.abs", "ops.math_ops.expm1", "ops.math_ops.acos", "numpy_ops.np_math_ops.sinc.f", "ops.math_ops.cos", "ops.math_ops.is_inf", "numpy_ops.np_math_ops.angle.f", "numpy_ops.np_math_ops.cbrt.f", "ops.math_ops.tanh", "numpy_ops.np_math_ops.exp2.f", "numpy_ops.np_math_ops.positive.<lambda1>", "numpy_ops.np_math_ops.diff.f", "ops.math_ops.ceil", "ops.math_ops.is_nan", "ops.math_ops.sinh", "ops.math_ops.negative", "ops.math_ops.asinh"], "ops.math_ops.reciprocal": [], "ops.math_ops.log1p": [], "ops.math_ops.atan": [], "ops.math_ops.sin": [], "ops.math_ops.tan": [], "numpy_ops.np_math_ops.signbit.f": ["ops.array_ops.shape", "ops.array_ops.fill"], "numpy_ops.np_math_ops.fix.f": ["ops.math_ops.floor", "ops.math_ops.ceil", "ops.array_ops.where_v2"], "ops.math_ops.sqrt": [], "ops.math_ops.floor": [], "ops.math_ops.cosh": [], "ops.math_ops.exp": [], "numpy_ops.np_math_ops.deg2rad.f": [], "ops.math_ops.atanh": [], "ops.math_ops.asin": [], "ops.math_ops.square": [], "ops.math_ops.is_finite": [], "ops.math_ops.log": [], "ops.math_ops.conj": [], "ops.math_ops.acosh": [], "ops.math_ops.expm1": [], "ops.math_ops.acos": [], "numpy_ops.np_math_ops.sinc.f": ["ops.array_ops.ones_like", "ops.math_ops.sin", "ops.array_ops.where_v2"], "ops.math_ops.cos": [], "ops.math_ops.is_inf": [], "numpy_ops.np_math_ops.angle.f": ["ops.math_ops.angle", "ops.array_ops.where_v2"], "numpy_ops.np_math_ops.cbrt.f": ["ops.math_ops.abs", "ops.array_ops.where_v2"], "ops.math_ops.tanh": [], "numpy_ops.np_math_ops.exp2.f": [], "numpy_ops.np_math_ops.positive.<lambda1>": [], "numpy_ops.np_math_ops.diff.f": ["<builtin>.tuple", "<builtin>.slice", "<builtin>.ValueError", "<builtin>.range"], "ops.math_ops.ceil": [], "ops.math_ops.sinh": [], "ops.math_ops.negative": [], "ops.math_ops.asinh": [], "numpy_ops.np_math_ops.log": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.absolute": ["numpy_ops.np_math_ops.abs"], "numpy_ops.np_math_ops.fabs": ["numpy_ops.np_math_ops.abs"], "numpy_ops.np_math_ops.ceil": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.floor": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.negative": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.reciprocal": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.signbit": ["numpy_ops.np_math_ops._scalar"], "ops.array_ops.fill": [], "numpy_ops.np_math_ops.sin": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.cos": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.tan": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.sinh": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.cosh": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.tanh": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.arcsin": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.arccos": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.arctan": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.arcsinh": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.arccosh": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.arctanh": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.deg2rad": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.rad2deg": [], "numpy_ops.np_math_ops.angle": ["numpy_ops.np_math_ops._scalar", "numpy_ops.np_math_ops.rad2deg"], "ops.math_ops.angle": [], "numpy_ops.np_math_ops.cbrt": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.conjugate": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.expm1": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.fix": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.iscomplex": ["numpy_ops.np_array_ops.imag"], "numpy_ops.np_array_ops.imag": [], "numpy_ops.np_math_ops.isreal": ["numpy_ops.np_array_ops.imag"], "numpy_ops.np_math_ops.iscomplexobj": ["numpy.issubdtype", "numpy_ops.np_array_ops.array"], "numpy_ops.np_math_ops.isrealobj": ["numpy_ops.np_math_ops.iscomplexobj"], "numpy_ops.np_math_ops._make_nan_reduction": ["numpy_ops.np_utils.np_doc"], "numpy_ops.np_math_ops._make_nan_reduction.nan_reduction": ["numpy_ops.np_array_ops.where", "numpy_ops.np_array_ops.sum", "numpy_ops.np_array_ops.prod", "numpy_ops.np_array_ops.array", "numpy_ops.np_math_ops.isnan"], "numpy_ops.np_array_ops.sum": [], "numpy_ops.np_array_ops.prod": [], "numpy_ops.np_math_ops.nanmean": ["numpy.issubdtype", "numpy_ops.np_math_ops._make_nan_reduction.nan_reduction", "numpy_ops.np_array_ops.mean", "numpy_ops.np_math_ops.logical_not", "numpy_ops.np_array_ops.sum", "numpy_ops.np_array_ops.array", "numpy_ops.np_math_ops.isnan"], "numpy_ops.np_array_ops.mean": [], "numpy_ops.np_math_ops.logical_not": ["ops.math_ops.logical_not", "numpy_ops.np_array_ops.array"], "numpy_ops.np_math_ops.isfinite": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.isinf": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.isneginf": ["numpy_ops.np_array_ops.full_like"], "numpy_ops.np_array_ops.full_like": [], "numpy_ops.np_math_ops.isposinf": ["numpy_ops.np_array_ops.full_like"], "numpy_ops.np_math_ops.log2": ["numpy.log", "numpy_ops.np_math_ops.log"], "numpy_ops.np_math_ops.log10": ["numpy.log", "numpy_ops.np_math_ops.log"], "numpy_ops.np_math_ops.positive": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.sinc": ["numpy_ops.np_math_ops._scalar"], "numpy_ops.np_math_ops.diff": ["numpy_ops.np_math_ops._scalar"], "<builtin>.slice": [], "<builtin>.tuple": [], "<builtin>.range": [], "numpy_ops.np_math_ops._wrap": [], "numpy_ops.np_math_ops._wrap._f": ["<builtin>.getattr"], "<builtin>.getattr": [], "numpy_ops.np_math_ops._comparison": ["ops.math_ops.equal", "numpy_ops.np_math_ops.array_equal.f", "ops.math_ops.cast", "ops.math_ops.greater_equal", "ops.math_ops.greater", "numpy_ops.np_utils.result_type", "ops.math_ops.less_equal", "ops.math_ops.less", "numpy_ops.np_array_ops.array", "ops.math_ops.not_equal"], "numpy_ops.np_utils.result_type": [], "numpy_ops.np_math_ops.array_equal.f": ["ops.array_ops.rank", "ops.math_ops.equal", "numpy_ops.np_utils.cond"], "ops.math_ops.less_equal": [], "ops.math_ops.less": [], "ops.math_ops.not_equal": [], "ops.math_ops.greater_equal": [], "ops.math_ops.greater": [], "numpy_ops.np_math_ops.equal": ["numpy_ops.np_math_ops._comparison"], "numpy_ops.np_math_ops.not_equal": ["numpy_ops.np_math_ops._comparison"], "numpy_ops.np_math_ops.greater": ["numpy_ops.np_math_ops._comparison"], "numpy_ops.np_math_ops.greater_equal": ["numpy_ops.np_math_ops._comparison"], "numpy_ops.np_math_ops.less": ["numpy_ops.np_math_ops._comparison"], "numpy_ops.np_math_ops.less_equal": ["numpy_ops.np_math_ops._comparison"], "numpy_ops.np_math_ops.array_equal": ["numpy_ops.np_math_ops._comparison"], "numpy_ops.np_math_ops.array_equal.f.<lambda1>": ["ops.array_ops.shape", "numpy_ops.np_utils.reduce_all", "ops.math_ops.equal", "numpy_ops.np_utils.cond"], "numpy_ops.np_utils.reduce_all": [], "numpy_ops.np_math_ops.array_equal.f.<lambda1>.<lambda1>": ["ops.math_ops.equal", "ops.math_ops.reduce_all"], "ops.math_ops.reduce_all": [], "numpy_ops.np_math_ops.array_equal.f.<lambda1>.<lambda2>": ["framework.constant_op.constant"], "numpy_ops.np_math_ops.array_equal.f.<lambda2>": ["framework.constant_op.constant"], "numpy_ops.np_math_ops._logical_binary_op": ["ops.math_ops.logical_and", "ops.math_ops.logical_xor", "numpy_ops.np_array_ops.array", "ops.math_ops.logical_or"], "ops.math_ops.logical_xor": [], "numpy_ops.np_math_ops.logical_and": ["numpy_ops.np_math_ops._logical_binary_op"], "numpy_ops.np_math_ops.logical_or": ["numpy_ops.np_math_ops._logical_binary_op"], "numpy_ops.np_math_ops.logical_xor": ["numpy_ops.np_math_ops._logical_binary_op"], "numpy_ops.np_math_ops.linspace": ["ops.math_ops.cast", "numpy_ops.np_utils.result_type", "<builtin>.ValueError", "numpy_ops.np_array_ops.array", "framework.ops.convert_to_tensor", "ops.math_ops.linspace"], "ops.math_ops.linspace": [], "numpy_ops.np_math_ops.logspace": ["ops.math_ops.pow", "numpy_ops.np_utils.result_type", "numpy_ops.np_math_ops.linspace", "ops.math_ops.cast"], "numpy_ops.np_math_ops.geomspace": ["framework.dtypes.as_dtype", "numpy_ops.np_array_ops.moveaxis", "ops.math_ops.cast", "numpy_ops.np_array_ops.sign", "numpy_ops.np_math_ops.logspace", "numpy_ops.np_utils.result_type", "<builtin>.float", "numpy_ops.np_array_ops.asarray", "numpy_ops.np_math_ops.log10", "numpy.promote_types", "numpy_ops.np_array_ops.zeros", "numpy_ops.np_array_ops.real"], "framework.dtypes.as_dtype": [], "<builtin>.float": [], "numpy_ops.np_array_ops.zeros": [], "numpy.promote_types": [], "numpy_ops.np_array_ops.real": [], "numpy_ops.np_array_ops.sign": [], "numpy_ops.np_array_ops.moveaxis": [], "numpy_ops.np_math_ops.ptp": ["numpy_ops.np_array_ops.amax", "numpy_ops.np_array_ops.amin"], "numpy_ops.np_array_ops.amax": [], "numpy_ops.np_array_ops.amin": [], "numpy_ops.np_math_ops.concatenate": ["ops.array_ops.concat", "numpy_ops.np_utils.result_type", "<builtin>.isinstance", "<builtin>.ValueError", "numpy_ops.np_array_ops.array"], "numpy_ops.np_math_ops.tile": ["ops.array_ops.tile", "ops.array_ops.shape", "ops.array_ops.size", "ops.array_ops.pad", "numpy_ops.np_array_ops.array", "ops.array_ops.rank", "ops.array_ops.reshape", "ops.math_ops.maximum"], "ops.array_ops.size": [], "ops.array_ops.tile": [], "numpy_ops.np_math_ops.count_nonzero": ["ops.math_ops.count_nonzero", "numpy_ops.np_array_ops.array"], "ops.math_ops.count_nonzero": [], "numpy_ops.np_math_ops.argsort": ["ops.math_ops.equal", "numpy_ops.np_utils.cond", "<builtin>.ValueError", "numpy_ops.np_array_ops.array", "ops.array_ops.rank"], "numpy_ops.np_math_ops.argsort._argsort": ["ops.sort_ops.argsort", "ops.array_ops.reshape"], "ops.sort_ops.argsort": [], "numpy_ops.np_math_ops.argsort.<lambda1>": ["framework.constant_op.constant"], "numpy_ops.np_math_ops.argsort.<lambda2>": ["numpy_ops.np_math_ops.argsort._argsort"], "numpy_ops.np_math_ops.sort": ["ops.sort_ops.sort", "ops.array_ops.reshape", "<builtin>.ValueError", "numpy_ops.np_array_ops.array"], "ops.sort_ops.sort": [], "numpy_ops.np_math_ops._argminmax": ["numpy_ops.np_array_ops.atleast_1d", "ops.math_ops.argmin", "numpy_ops.np_array_ops.array", "ops.array_ops.reshape", "ops.math_ops.argmax"], "numpy_ops.np_array_ops.atleast_1d": [], "ops.math_ops.argmin": [], "ops.math_ops.argmax": [], "numpy_ops.np_math_ops.argmax": ["numpy_ops.np_math_ops._argminmax"], "numpy_ops.np_math_ops.argmin": ["numpy_ops.np_math_ops._argminmax"], "numpy_ops.np_math_ops.append": ["numpy_ops.np_array_ops.ravel", "numpy_ops.np_math_ops.concatenate"], "numpy_ops.np_array_ops.ravel": [], "numpy_ops.np_math_ops.average": ["numpy_ops.np_array_ops.broadcast_to", "ops.math_ops.cast", "ops.math_ops.equal", "numpy.issubdtype", "ops.array_ops.shape", "numpy_ops.np_math_ops.average.rank_equal_case", "numpy_ops.np_utils.cond", "numpy_ops.np_dtypes.default_float_type", "ops.array_ops.size", "numpy_ops.np_utils.result_type", "<builtin>.isinstance", "<builtin>.ValueError", "numpy_ops.np_array_ops.array", "<builtin>.type", "ops.math_ops.reduce_mean", "ops.array_ops.rank"], "<builtin>.type": [], "ops.math_ops.reduce_mean": [], "numpy_ops.np_math_ops.average.rank_equal_case": ["ops.array_ops.shape", "ops.control_flow_ops.Assert", "ops.math_ops.reduce_all", "ops.math_ops.reduce_sum"], "ops.control_flow_ops.Assert": [], "ops.math_ops.reduce_sum": [], "numpy_ops.np_math_ops.average.rank_not_equal_case": ["ops.control_flow_ops.Assert", "ops.math_ops.reduce_sum", "ops.array_ops.rank", "ops.math_ops.tensordot", "framework.ops.convert_to_tensor"], "numpy_ops.np_array_ops.broadcast_to": [], "numpy_ops.np_math_ops.trace": ["ops.math_ops.trace", "numpy_ops.np_array_ops.diagonal", "numpy_ops.np_array_ops.sum", "numpy_ops.np_utils.result_type", "<builtin>.len", "numpy_ops.np_array_ops.asarray"], "ops.math_ops.trace": [], "numpy_ops.np_array_ops.diagonal": [], "numpy_ops.np_math_ops.meshgrid": ["ops.array_ops.meshgrid", "<builtin>.ValueError", "numpy_ops.np_array_ops.asarray"], "ops.array_ops.meshgrid": [], "numpy_ops.np_math_ops.einsum": ["numpy_ops.np_array_ops._promote_dtype", "<builtin>.ValueError", "numpy_ops.np_array_ops.asarray", "ops.special_math_ops.einsum"], "ops.special_math_ops.einsum": [], "numpy_ops.np_math_ops._tensor_t": [], "numpy_ops.np_math_ops._tensor_ndim": [], "numpy_ops.np_math_ops._tensor_pos": [], "numpy_ops.np_math_ops._tensor_size": ["numpy.prod"], "numpy.prod": [], "numpy_ops.np_math_ops._tensor_tolist": ["<builtin>.isinstance", "<builtin>.ValueError"], "numpy_ops.np_math_ops.enable_numpy_methods_on_tensor": ["<builtin>.setattr", "<builtin>.property"], "<builtin>.property": [], "numpy_ops.np_math_ops.enable_numpy_methods_on_tensor.<lambda1>": []}