{"kernel_tests.map_test": ["platform.test.main"], "kernel_tests.map_test._test_combinations_with_mode_v1": ["framework.combinations.NamedObject", "framework.combinations.combine"], "kernel_tests.map_test._test_combinations_with_mode_v1.new_map_fn": [], "kernel_tests.map_test._test_combinations_with_mode_v1.legacy_map_fn": [], "framework.combinations.NamedObject": [], "framework.combinations.combine": [], "kernel_tests.map_test._test_combinations_with_mode_v2": ["framework.combinations.NamedObject", "framework.combinations.combine"], "kernel_tests.map_test._test_combinations_with_mode_v2.new_map_fn": [], "kernel_tests.map_test._test_combinations_with_mode": ["kernel_tests.map_test._test_combinations_with_mode_v2", "kernel_tests.map_test._test_combinations_with_mode_v1"], "kernel_tests.map_test._test_combinations": ["kernel_tests.map_test._test_combinations_with_mode"], "kernel_tests.map_test._short_circuit_test_cases": ["functools.reduce"], "kernel_tests.map_test._short_circuit_test_cases.<list1>.<lambda1>": [], "kernel_tests.map_test._short_circuit_test_cases.<list1>.<lambda2>": [], "kernel_tests.map_test._short_circuit_test_cases.<list1>.<lambda3>": [], "kernel_tests.map_test._short_circuit_test_cases.<list1>.<lambda4>": [], "kernel_tests.map_test._short_circuit_test_cases.reduce_fn": ["framework.combinations.NamedObject", "framework.combinations.combine"], "functools.reduce": [], "kernel_tests.map_test.Foo.__init__": [], "kernel_tests.map_test.MapTest._map_dataset_factory": ["test_base.DatasetTestBase.assertEqual", "ops.dataset_ops.get_legacy_output_shapes", "dataset_ops.Dataset.from_tensor_slices"], "kernel_tests.map_test.MapTest._map_dataset_factory._map_fn": ["ops.math_ops.square"], "ops.math_ops.square": [], "dataset_ops.Dataset.from_tensor_slices": [], "ops.dataset_ops.get_legacy_output_shapes": [], "test_base.DatasetTestBase.assertEqual": [], "kernel_tests.map_test.MapTest": ["framework.combinations.generate", "kernel_tests.map_test._test_combinations_with_mode", "kernel_tests.test_base.graph_only_combinations", "framework.combinations.combine", "kernel_tests.test_base.default_test_combinations", "kernel_tests.map_test._test_combinations", "kernel_tests.test_base.eager_only_combinations", "framework.combinations.times", "kernel_tests.map_test._short_circuit_test_cases", "kernel_tests.map_test._test_combinations_with_mode_v1"], "framework.combinations.generate": [], "kernel_tests.map_test.MapTest.testMapDataset": ["numpy.arange", "test_base.DatasetTestBase.evaluate", "<builtin>.zip", "test_base.DatasetTestBase.getNext", "<builtin>.range", "test_base.DatasetTestBase.assertAllEqual", "kernel_tests.map_test.MapTest._map_dataset_factory", "numpy.array", "test_base.DatasetTestBase.assertRaises"], "numpy.arange": [], "numpy.array": [], "test_base.DatasetTestBase.getNext": [], "<builtin>.range": [], "test_base.DatasetTestBase.evaluate": [], "<builtin>.zip": [], "test_base.DatasetTestBase.assertAllEqual": [], "test_base.DatasetTestBase.assertRaises": [], "kernel_tests.map_test.MapTest.testMapDatasetMultiThreaded": ["numpy.arange", "<builtin>.zip", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.checkedThread", "<builtin>.range", "test_base.DatasetTestBase.cached_session", "test_base.DatasetTestBase.assertAllEqual", "kernel_tests.map_test.MapTest._map_dataset_factory", "numpy.array"], "test_base.DatasetTestBase.cached_session": [], "kernel_tests.map_test.MapTest.testMapDatasetMultiThreaded.iterator_thread": [], "test_base.DatasetTestBase.checkedThread": [], "kernel_tests.map_test.MapTest.testMapDatasetMultiThreaded.<lambda1>": [], "kernel_tests.map_test.MapTest._parallel_map_dataset_factory": ["test_base.DatasetTestBase.assertEqual", "ops.dataset_ops.get_legacy_output_shapes", "dataset_ops.Dataset.from_tensor_slices"], "kernel_tests.map_test.MapTest._parallel_map_dataset_factory._map_fn": ["ops.math_ops.square"], "framework.combinations.times": [], "kernel_tests.map_test.MapTest.testParallelMapDataset": ["numpy.arange", "test_base.DatasetTestBase.evaluate", "<builtin>.zip", "test_base.DatasetTestBase.getNext", "<builtin>.range", "kernel_tests.map_test.MapTest._parallel_map_dataset_factory", "test_base.DatasetTestBase.assertAllEqual", "numpy.array", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testParallelMapDatasetMultiThreaded": ["numpy.arange", "<builtin>.zip", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.checkedThread", "<builtin>.range", "kernel_tests.map_test.MapTest._parallel_map_dataset_factory", "test_base.DatasetTestBase.cached_session", "test_base.DatasetTestBase.assertAllEqual", "numpy.array"], "kernel_tests.map_test.MapTest.testParallelMapDatasetMultiThreaded.iterator_thread": [], "kernel_tests.map_test.MapTest.testParallelMapDatasetMultiThreaded.<lambda1>": [], "kernel_tests.map_test.MapTest.testImplicitDisposeParallelMapDataset": ["numpy.arange", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "<builtin>.range", "kernel_tests.map_test.MapTest._parallel_map_dataset_factory", "numpy.array"], "kernel_tests.map_test.MapTest.testParallelMapUnspecifiedOutputSize": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "<builtin>.range", "dataset_ops.Dataset.from_tensor_slices", "numpy.array"], "kernel_tests.map_test.MapTest.testParallelMapUnspecifiedOutputSize.<lambda1>": ["ops.array_ops.check_numerics"], "ops.array_ops.check_numerics": [], "kernel_tests.map_test.MapTest.testParallelMapError": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "<builtin>.range", "dataset_ops.Dataset.from_tensor_slices", "numpy.array", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testParallelMapError.<lambda1>": ["ops.array_ops.check_numerics"], "kernel_tests.map_test.MapTest.testPrefetchError": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "<builtin>.range", "dataset_ops.Dataset.from_tensor_slices", "numpy.array", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testPrefetchError.<lambda1>": ["ops.array_ops.check_numerics"], "kernel_tests.map_test.MapTest.testCaptureIterator": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "<builtin>.range", "eager.context.executing_eagerly", "test_base.DatasetTestBase.assertEqual", "kernel_tests.map_test.MapTest.testCaptureIterator._build_graph", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testCaptureIterator._build_ds": ["dataset_ops.Dataset.range"], "kernel_tests.map_test.MapTest.testCaptureIterator._build_ds._map_fn": [], "dataset_ops.Dataset.range": [], "kernel_tests.map_test.MapTest.testCaptureIterator._build_graph": ["kernel_tests.map_test.MapTest.testCaptureIterator._build_ds", "dataset_ops.Dataset.range", "<builtin>.iter", "eager.context.executing_eagerly", "ops.dataset_ops.make_initializable_iterator"], "eager.context.executing_eagerly": [], "<builtin>.iter": [], "ops.dataset_ops.make_initializable_iterator": [], "kernel_tests.map_test.MapTest.testCaptureHashTable": ["framework.constant_op.constant", "test_base.DatasetTestBase.evaluate", "ops.lookup_ops.KeyValueTensorInitializer", "ops.lookup_ops.HashTable", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertRaises"], "framework.constant_op.constant": [], "ops.lookup_ops.KeyValueTensorInitializer": [], "ops.lookup_ops.HashTable": [], "kernel_tests.map_test.MapTest.testCaptureHashTable.<lambda1>": ["ops.string_ops.string_split"], "ops.string_ops.string_split": [], "kernel_tests.map_test.MapTest.testCaptureQueue": ["ops.data_flow_ops.FIFOQueue", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertRaises", "numpy.random.randint"], "numpy.random.randint": [], "ops.data_flow_ops.FIFOQueue": [], "dataset_ops.Dataset.from_tensors": [], "kernel_tests.map_test.MapTest.testCaptureQueue.<lambda1>": [], "kernel_tests.map_test.MapTest.testCaptureSameResourceMultipleTimes": ["ops.data_flow_ops.FIFOQueue", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "<builtin>.range", "test_base.DatasetTestBase.assertCountEqual", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertRaises", "numpy.random.randint"], "kernel_tests.map_test.MapTest.testCaptureSameResourceMultipleTimes.<lambda1>": [], "test_base.DatasetTestBase.assertCountEqual": [], "kernel_tests.map_test.MapTest.testSeededStatefulOperatorIsProperlyStateful": ["test_base.DatasetTestBase.assertGreater", "test_base.DatasetTestBase.assertAllClose", "test_base.DatasetTestBase.evaluate", "numpy.abs", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertLen", "test_base.DatasetTestBase.assertRaises", "numpy.diff"], "kernel_tests.map_test.MapTest.testSeededStatefulOperatorIsProperlyStateful.<lambda1>": ["ops.random_ops.random_uniform"], "ops.random_ops.random_uniform": [], "test_base.DatasetTestBase.assertLen": [], "numpy.diff": [], "numpy.abs": [], "test_base.DatasetTestBase.assertGreater": [], "test_base.DatasetTestBase.assertAllClose": [], "kernel_tests.map_test.MapTest.testStatefulMapKeepsStateAcrossIterators": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "numpy.any", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertLess"], "kernel_tests.map_test.MapTest.testStatefulMapKeepsStateAcrossIterators.<lambda1>": ["ops.random_ops.random_uniform"], "numpy.any": [], "test_base.DatasetTestBase.assertLess": [], "kernel_tests.map_test.MapTest.testStatefulOperationInShortCircuit": ["ops.variable_scope.get_variable", "test_base.DatasetTestBase.evaluate", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.getNext", "<builtin>.range", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertRaises"], "ops.variable_scope.get_variable": [], "kernel_tests.map_test.MapTest.testStatefulOperationInShortCircuit.increment_fn": [], "kernel_tests.map_test.MapTest.testMapDict": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "<builtin>.range"], "kernel_tests.map_test.MapTest.testMapDict.<lambda1>": [], "kernel_tests.map_test.MapTest.testMapDict.<lambda2>": [], "test_base.DatasetTestBase.assertDatasetProduces": [], "kernel_tests.map_test.MapTest.testMapNamedtuple": ["test_base.DatasetTestBase.evaluate", "collections.namedtuple", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.getNext", "<builtin>.range", "test_base.DatasetTestBase.assertEqual", "dataset_ops.Dataset.zip", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testMapNamedtuple.<lambda1>": [], "dataset_ops.Dataset.zip": [], "collections.namedtuple": [], "kernel_tests.map_test.MapTest.testMapNamedtuple.preprocess_tuple": [], "kernel_tests.map_test.MapTest.testMapNamedtuple.preprocess_namedtuple": [], "kernel_tests.map_test.MapTest.testMapAttrs": ["test_base.DatasetTestBase.evaluate", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.getNext", "<builtin>.range", "test_base.DatasetTestBase.skipTest", "test_base.DatasetTestBase.assertEqual", "dataset_ops.Dataset.zip", "test_base.DatasetTestBase.assertRaises"], "test_base.DatasetTestBase.skipTest": [], "kernel_tests.map_test.MapTest.testMapAttrs.<lambda1>": [], "attr.ib": [], "kernel_tests.map_test.MapTest.testMapAttrs.Example": ["attr.ib"], "kernel_tests.map_test.MapTest.testMapAttrs.preprocess": [], "kernel_tests.map_test.MapTest.testUseStepContainerInMap": ["numpy.arange", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.map_test.MapTest.testUseStepContainerInMap.<lambda1>": ["ops.map_fn.map_fn"], "kernel_tests.map_test.MapTest.testUseStepContainerInMap.<lambda1>.<lambda1>": [], "ops.map_fn.map_fn": [], "kernel_tests.map_test.MapTest.testCaseAndCondInMap": ["numpy.arange", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "<builtin>.range", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertRaises", "kernel_tests.map_test.MapTest.testCaseAndCondInMap.build_dataset"], "kernel_tests.map_test.MapTest.testCaseAndCondInMap.control_map_fn": ["ops.control_flow_ops.case", "ops.math_ops.logical_or", "ops.math_ops.equal"], "kernel_tests.map_test.MapTest.testCaseAndCondInMap.control_map_fn.multiply": [], "kernel_tests.map_test.MapTest.testCaseAndCondInMap.control_map_fn.divide": [], "kernel_tests.map_test.MapTest.testCaseAndCondInMap.control_map_fn.defaults_two": ["ops.math_ops.mod", "ops.math_ops.equal", "ops.control_flow_ops.cond"], "ops.math_ops.mod": [], "ops.math_ops.equal": [], "ops.control_flow_ops.cond": [], "ops.math_ops.logical_or": [], "ops.control_flow_ops.case": [], "kernel_tests.map_test.MapTest.testCaseAndCondInMap.build_dataset": ["dataset_ops.Dataset.from_tensor_slices"], "kernel_tests.map_test.MapTest.testCaseAndCondInMap.build_dataset.<lambda1>": ["kernel_tests.map_test.MapTest.testCaseAndCondInMap.control_map_fn"], "kernel_tests.map_test.MapTest.testCaseInWhileInMap": ["numpy.arange", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "kernel_tests.map_test.MapTest.testCaseInWhileInMap.build_dataset", "test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testCaseInWhileInMap.control_map_fn": ["ops.control_flow_ops.case", "ops.math_ops.logical_or", "ops.math_ops.equal"], "kernel_tests.map_test.MapTest.testCaseInWhileInMap.control_map_fn.multiply": [], "kernel_tests.map_test.MapTest.testCaseInWhileInMap.control_map_fn.divide": [], "kernel_tests.map_test.MapTest.testCaseInWhileInMap.build_dataset": ["dataset_ops.Dataset.from_tensors"], "kernel_tests.map_test.MapTest.testCaseInWhileInMap.build_dataset.<lambda1>": ["ops.map_fn.map_fn"], "kernel_tests.map_test.MapTest.testCaseInWhileInMap.build_dataset.<lambda1>.<lambda1>": ["kernel_tests.map_test.MapTest.testCaseInWhileInMap.control_map_fn"], "kernel_tests.map_test.MapTest.testCaseAndCondInWhileInMap": ["numpy.arange", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testCaseAndCondInWhileInMap.control_map_fn": ["ops.control_flow_ops.case", "ops.math_ops.logical_or", "ops.math_ops.equal"], "kernel_tests.map_test.MapTest.testCaseAndCondInWhileInMap.control_map_fn.multiply": [], "kernel_tests.map_test.MapTest.testCaseAndCondInWhileInMap.control_map_fn.divide": [], "kernel_tests.map_test.MapTest.testCaseAndCondInWhileInMap.control_map_fn.defaults_two": ["ops.math_ops.mod", "ops.math_ops.equal", "ops.control_flow_ops.cond"], "kernel_tests.map_test.MapTest.testCaseAndCondInWhileInMap.<lambda1>": ["ops.map_fn.map_fn"], "kernel_tests.map_test.MapTest.testCaseAndCondInWhileInMap.<lambda1>.<lambda1>": ["kernel_tests.map_test.MapTest.testCaseAndCondInWhileInMap.control_map_fn"], "kernel_tests.map_test.MapTest.testNestedListMapDataset": ["numpy.array", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.map_test.MapTest.testNestedListMapDataset.<lambda1>": [], "kernel_tests.map_test.MapTest.testPrefetch": ["test_base.DatasetTestBase.evaluate", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.getNext", "<builtin>.range", "threading.Event", "test_base.DatasetTestBase.assertFalse", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertRaises"], "threading.Event": [], "kernel_tests.map_test.MapTest.testPrefetch._map_py_func": [], "kernel_tests.map_test.MapTest.testPrefetch._map_fn": ["ops.script_ops.py_func"], "ops.script_ops.py_func": [], "test_base.DatasetTestBase.assertFalse": [], "kernel_tests.map_test.MapTest.testReturnList": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "<builtin>.range"], "kernel_tests.map_test.MapTest.testReturnList.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.map_test.MapTest.testMultiOutputPyFunc": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "<builtin>.range"], "kernel_tests.map_test.MapTest.testMultiOutputPyFunc._map_fn": ["ops.script_ops.py_func"], "kernel_tests.map_test.MapTest.testMultiOutputPyFunc._map_fn._map_py_func": ["numpy.array"], "kernel_tests.map_test.MapTest.testSparse": ["dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.map_test.MapTest.testSparse._sparse", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.map_test.MapTest.testSparse._sparse": ["numpy.array", "framework.sparse_tensor.SparseTensorValue"], "framework.sparse_tensor.SparseTensorValue": [], "kernel_tests.map_test.MapTest.testSparseChain": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.map_test.MapTest.testSparseChain._check", "kernel_tests.map_test.MapTest.testSparseChain._sparse"], "kernel_tests.map_test.MapTest.testSparseChain._sparse": ["numpy.array", "framework.sparse_tensor.SparseTensorValue"], "kernel_tests.map_test.MapTest.testSparseChain._check": ["test_base.DatasetTestBase.assertTrue", "ops.sparse_ops.sparse_concat", "framework.sparse_tensor.is_sparse"], "framework.sparse_tensor.is_sparse": [], "test_base.DatasetTestBase.assertTrue": [], "ops.sparse_ops.sparse_concat": [], "kernel_tests.map_test.MapTest.testSparseMapShapeInference": ["numpy.ones", "test_base.DatasetTestBase.assertEqual", "numpy.sum", "dataset_ops.Dataset.from_tensor_slices", "ragged_tensor.RaggedTensor.from_row_lengths", "numpy.random.randint"], "numpy.sum": [], "numpy.ones": [], "ragged_tensor.RaggedTensor.from_row_lengths": [], "kernel_tests.map_test.MapTest.testSparseMapShapeInference.<lambda1>": [], "kernel_tests.map_test.MapTest.testSparseMapShapeInferencePartial": ["numpy.ones", "test_base.DatasetTestBase.assertEqual", "numpy.sum", "dataset_ops.Dataset.from_tensor_slices", "ragged_tensor.RaggedTensor.from_row_lengths", "numpy.random.randint"], "kernel_tests.map_test.MapTest.testSparseMapShapeInferencePartial.<lambda1>": [], "kernel_tests.map_test.MapTest.testTensorArray": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "<builtin>.range", "<builtin>.list"], "kernel_tests.map_test.MapTest.testTensorArray._tensor_array": ["ops.math_ops.range", "ops.tensor_array_ops.TensorArray", "ops.math_ops.cast"], "ops.math_ops.cast": [], "ops.math_ops.range": [], "ops.tensor_array_ops.TensorArray": [], "<builtin>.list": [], "kernel_tests.map_test.MapTest.testTensorArrayChain": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "<builtin>.range", "<builtin>.list"], "kernel_tests.map_test.MapTest.testTensorArrayChain._tensor_array": ["ops.math_ops.range", "ops.tensor_array_ops.TensorArray", "ops.math_ops.cast"], "kernel_tests.map_test.MapTest.testTensorArrayChain._check": ["test_base.DatasetTestBase.assertIsInstance"], "test_base.DatasetTestBase.assertIsInstance": [], "kernel_tests.map_test.MapTest.testRagged": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "<builtin>.range", "ragged.ragged_factory_ops.constant"], "kernel_tests.map_test.MapTest.testRagged._ragged": ["ragged_tensor.RaggedTensor.from_tensor"], "ragged_tensor.RaggedTensor.from_tensor": [], "ragged.ragged_factory_ops.constant": [], "kernel_tests.map_test.MapTest.testRaggedChain": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.map_test.MapTest.testRaggedChain._concat", "ragged.ragged_factory_ops.constant"], "kernel_tests.map_test.MapTest.testRaggedChain._ragged": ["ragged_tensor.RaggedTensor.from_tensor"], "kernel_tests.map_test.MapTest.testRaggedChain._concat": ["test_base.DatasetTestBase.assertTrue", "ragged.ragged_tensor.is_ragged", "ragged.ragged_concat_ops.concat"], "ragged.ragged_tensor.is_ragged": [], "ragged.ragged_concat_ops.concat": [], "kernel_tests.map_test.MapTest.testParallelMapOutOfRangeError": ["test_base.DatasetTestBase.evaluate", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.getNext", "<builtin>.range", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testParallelMapOutOfRangeError.raising_py_func": ["<builtin>.StopIteration"], "<builtin>.StopIteration": [], "kernel_tests.map_test.MapTest.testParallelMapOutOfRangeError.<lambda1>": ["ops.script_ops.py_func"], "kernel_tests.map_test.MapTest.testConstantOutput": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "<builtin>.range"], "kernel_tests.map_test.MapTest.testConstantOutput.<lambda1>": [], "kernel_tests.test_base.graph_only_combinations": [], "kernel_tests.map_test.MapTest.testWarnOnSeedFromOuterGraph": ["kernel_tests.map_test.MapTest.testWarnOnSeedFromOuterGraph._check_warning", "warnings.catch_warnings", "framework.ops.Graph", "dataset_ops.Dataset.range", "warnings.simplefilter"], "framework.ops.Graph": [], "warnings.simplefilter": [], "kernel_tests.map_test.MapTest.testWarnOnSeedFromOuterGraph._check_warning": ["<builtin>.str", "test_base.DatasetTestBase.assertEqual"], "<builtin>.str": [], "warnings.catch_warnings": [], "kernel_tests.map_test.MapTest.testWarnOnSeedFromOuterGraph.random_func": ["ops.math_ops.add", "ops.random_ops.random_shuffle", "ops.math_ops.square"], "ops.math_ops.add": [], "ops.random_ops.random_shuffle": [], "kernel_tests.map_test.MapTest.testWarnOnSeedFromOuterGraph.random_func_seeded": ["ops.random_ops.random_shuffle", "framework.ops.get_default_graph"], "framework.ops.get_default_graph": [], "kernel_tests.map_test.MapTest.testWarnOnSeedFromOuterGraph.<lambda1>": ["ops.random_ops.random_shuffle"], "kernel_tests.map_test.MapTest.testNestedDatasetMap": ["dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.map_test.MapTest.testNestedDatasetMap.<lambda1>": [], "kernel_tests.map_test.MapTest.testNestedDatasetMap.<lambda2>": [], "kernel_tests.map_test.MapTest.testReturnValueError": ["dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertRaisesRegex"], "test_base.DatasetTestBase.assertRaisesRegex": [], "kernel_tests.map_test.MapTest.testReturnValueError.<lambda1>": [], "kernel_tests.test_base.default_test_combinations": [], "kernel_tests.map_test.MapTest.testBrokenFunctionErrorOnInitialization": ["test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.from_tensor_slices"], "kernel_tests.map_test.MapTest.testBrokenFunctionErrorOnInitialization.broken_function": ["framework.attr_value_pb2.AttrValue", "framework.tensor_util.make_tensor_proto", "framework.ops.get_default_graph"], "framework.attr_value_pb2.AttrValue": [], "framework.tensor_util.make_tensor_proto": [], "kernel_tests.map_test.MapTest.testNoInterOpParallelism": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.assertTrue", "dataset_ops.Dataset.from_tensors", "framework.attr_value_pb2.AttrValue", "<builtin>.all"], "kernel_tests.map_test.MapTest.testNoInterOpParallelism._get_tid": ["threading.current_thread", "numpy.int64"], "threading.current_thread": [], "numpy.int64": [], "kernel_tests.map_test.MapTest.testNoInterOpParallelism._map_fn": ["<builtin>.range", "ops.script_ops.py_func"], "<builtin>.all": [], "kernel_tests.map_test.MapTest.testShortCircuit": ["test_base.DatasetTestBase.evaluate", "<builtin>.isinstance", "test_base.DatasetTestBase.structuredDataset", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.structuredElement", "test_base.DatasetTestBase.assertEqual"], "test_base.DatasetTestBase.structuredDataset": [], "<builtin>.isinstance": [], "test_base.DatasetTestBase.structuredElement": [], "kernel_tests.map_test.MapTest.testShortCircuitCapturedInput": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.structuredDataset", "test_base.DatasetTestBase.getNext", "ops.variables.Variable", "test_base.DatasetTestBase.assertEqual", "ops.variables.global_variables_initializer"], "ops.variables.Variable": [], "kernel_tests.map_test.MapTest.testShortCircuitCapturedInput.<lambda1>": [], "ops.variables.global_variables_initializer": [], "kernel_tests.map_test.MapTest.testPreserveCardinality": ["dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testPreserveCardinality.py_fn": ["<builtin>.StopIteration"], "kernel_tests.map_test.MapTest.testPreserveCardinality.<lambda1>": ["ops.script_ops.py_func"], "kernel_tests.map_test.MapTest.testCollectionCopy": ["framework.constant_op.constant", "ops.variable_scope.get_variable", "framework.ops.get_collection", "test_base.DatasetTestBase.assertIn", "dataset_ops.Dataset.from_tensors"], "framework.ops.get_collection": [], "test_base.DatasetTestBase.assertIn": [], "kernel_tests.map_test.MapTest.testCollectionCopy.func": ["framework.ops.get_collection", "test_base.DatasetTestBase.assertIn"], "kernel_tests.map_test.MapTest.testMapCancellation": ["time.sleep", "ops.data_flow_ops.FIFOQueue", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.checkedThread", "test_base.DatasetTestBase.cached_session"], "kernel_tests.map_test.MapTest.testMapCancellation.fn": [], "time.sleep": [], "kernel_tests.map_test.MapTest.testCreateVariableInsideFunctionWithGetter": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "<builtin>.range", "test_base.DatasetTestBase.assertRaisesWithPredicateMatch", "<builtin>.hasattr", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertEqual", "ops.variables.global_variables_initializer", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testCreateVariableInsideFunctionWithGetter.func": ["ops.variable_scope.get_variable", "ops.variable_scope.variable_scope"], "ops.variable_scope.variable_scope": [], "<builtin>.hasattr": [], "test_base.DatasetTestBase.assertRaisesWithPredicateMatch": [], "kernel_tests.map_test.MapTest.testCaptureVariable": ["ops.variable_scope.get_variable", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "<builtin>.range", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testCaptureVariable.<lambda1>": [], "kernel_tests.map_test.MapTest.testCaptureUninitializedVariableError": ["ops.variable_scope.get_variable", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertRaises"], "kernel_tests.map_test.MapTest.testCaptureUninitializedVariableError.<lambda1>": [], "kernel_tests.map_test.MapTest.testCaptureConstantsWithConflictingDevices": ["framework.constant_op.constant", "test_base.DatasetTestBase.assertDatasetProduces", "framework.ops.device", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.cached_session", "protobuf.config_pb2.ConfigProto"], "protobuf.config_pb2.ConfigProto": [], "framework.ops.device": [], "kernel_tests.map_test.MapTest.testCaptureConstantsWithConflictingDevices.func": ["ops.math_ops.add"], "kernel_tests.map_test.MapTest.testReferenceVariablesWithMultipleDevices": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.cached_session", "ops.variables.global_variables_initializer", "protobuf.config_pb2.ConfigProto"], "kernel_tests.map_test.MapTest.testReferenceVariablesWithMultipleDevices.func": ["ops.variables.VariableV1", "ops.math_ops.add", "framework.ops.device"], "ops.variables.VariableV1": [], "kernel_tests.map_test.MapTest.testResourceVariablesWithMultipleDevices": ["test_base.DatasetTestBase.session", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertDatasetProduces", "framework.ops.Graph", "dataset_ops.Dataset.from_tensors", "ops.variables.global_variables_initializer", "protobuf.config_pb2.ConfigProto"], "kernel_tests.map_test.MapTest.testResourceVariablesWithMultipleDevices.func": ["ops.variable_scope.get_variable", "ops.math_ops.add", "ops.variable_scope.variable_scope", "framework.ops.device"], "test_base.DatasetTestBase.session": [], "kernel_tests.map_test.MapTest.testDeterminismConfiguration": ["<builtin>.range", "test_base.DatasetTestBase.checkDeterminism", "<builtin>.list"], "kernel_tests.map_test.MapTest.testDeterminismConfiguration.dataset_fn": ["ops.options.Options", "dataset_ops.Dataset.from_tensor_slices"], "kernel_tests.map_test.MapTest.testDeterminismConfiguration.dataset_fn.sleep": ["time.sleep"], "kernel_tests.map_test.MapTest.testDeterminismConfiguration.dataset_fn.map_function": ["ops.math_ops.equal", "ops.script_ops.py_func"], "ops.options.Options": [], "test_base.DatasetTestBase.checkDeterminism": [], "kernel_tests.map_test.MapTest.testNoneComponent": ["dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.map_test.MapTest.testNoneComponent.map_function": [], "kernel_tests.test_base.eager_only_combinations": [], "kernel_tests.map_test.MapTest.testCheckpointLargeBuffer": ["tracking.util.Checkpoint", "ops.array_ops.ones", "python.pywrap_sanitizers.is_tsan_enabled", "test_base.DatasetTestBase.get_temp_dir", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.skipTest", "<builtin>.iter", "<builtin>.next", "training.checkpoint_management.CheckpointManager"], "python.pywrap_sanitizers.is_tsan_enabled": [], "ops.array_ops.ones": [], "kernel_tests.map_test.MapTest.testCheckpointLargeBuffer.<lambda1>": [], "<builtin>.next": [], "tracking.util.Checkpoint": [], "test_base.DatasetTestBase.get_temp_dir": [], "training.checkpoint_management.CheckpointManager": [], "kernel_tests.map_test.MapCheckpointTest": ["framework.combinations.generate", "framework.combinations.combine", "kernel_tests.test_base.default_test_combinations", "kernel_tests.checkpoint_test_base.default_test_combinations", "framework.combinations.times"], "kernel_tests.checkpoint_test_base.default_test_combinations": [], "kernel_tests.map_test.MapCheckpointTest.testCore": [], "kernel_tests.map_test.MapCheckpointTest.testCore._build_ds": ["numpy.arange", "dataset_ops.Dataset.from_tensor_slices", "numpy.array"], "kernel_tests.map_test.MapCheckpointTest.testCore._build_ds._map_fn": ["ops.math_ops.square"], "kernel_tests.map_test.MapCheckpointTest.testSaveStatefulFunction": ["checkpoint_test_base.CheckpointTestBase.verify_error_on_save"], "kernel_tests.map_test.MapCheckpointTest.testSaveStatefulFunction._build_ds": ["dataset_ops.Dataset.range"], "kernel_tests.map_test.MapCheckpointTest.testSaveStatefulFunction._build_ds._map_fn": ["ops.math_ops.cast", "ops.random_ops.random_uniform"], "checkpoint_test_base.CheckpointTestBase.verify_error_on_save": [], "kernel_tests.map_test.MapCheckpointTest.testCaptureVariableInMapFn": ["checkpoint_test_base.CheckpointTestBase.verify_error_on_save"], "kernel_tests.map_test.MapCheckpointTest.testCaptureVariableInMapFn._build_ds": ["ops.variable_scope.get_variable", "dataset_ops.Dataset.from_tensors"], "kernel_tests.map_test.MapCheckpointTest.testCaptureVariableInMapFn._build_ds.<lambda1>": [], "kernel_tests.map_test.MapCheckpointTest.testCaptureConstantInMapFn": [], "kernel_tests.map_test.MapCheckpointTest.testCaptureConstantInMapFn._build_ds": ["framework.constant_op.constant", "dataset_ops.Dataset.from_tensors"], "kernel_tests.map_test.MapCheckpointTest.testCaptureConstantInMapFn._build_ds.<lambda1>": [], "kernel_tests.map_test.MapCheckpointTest.testCaptureDefunInMapFn": [], "kernel_tests.map_test.MapCheckpointTest.testCaptureDefunInMapFn._build_ds": ["dataset_ops.Dataset.range", "framework.function.Defun"], "framework.function.Defun": [], "kernel_tests.map_test.MapCheckpointTest.testCaptureDefunInMapFn._build_ds.defun_fn": ["framework.constant_op.constant", "ops.math_ops.cast"], "kernel_tests.map_test.MapCheckpointTest.testBuildDefunInMapFn": [], "kernel_tests.map_test.MapCheckpointTest.testBuildDefunInMapFn._build_ds": ["dataset_ops.Dataset.range", "framework.function.Defun"], "kernel_tests.map_test.MapCheckpointTest.testBuildDefunInMapFn._build_ds.defun_fn": ["framework.constant_op.constant", "framework.function.Defun", "ops.math_ops.cast", "kernel_tests.map_test.MapCheckpointTest.testBuildDefunInMapFn._build_ds.defun_fn.defun_fn_deep"], "kernel_tests.map_test.MapCheckpointTest.testBuildDefunInMapFn._build_ds.defun_fn.defun_fn_deep": ["framework.constant_op.constant", "ops.math_ops.cast"], "kernel_tests.map_test.MapCheckpointTest.testSparse": [], "kernel_tests.map_test.MapCheckpointTest.testSparse._sparse": ["numpy.array", "framework.sparse_tensor.SparseTensorValue"], "kernel_tests.map_test.MapCheckpointTest.testSparse._build_ds": ["dataset_ops.Dataset.range"], "kernel_tests.map_test.MapCheckpointTest.testSparse.<lambda1>": ["kernel_tests.map_test.MapCheckpointTest.testSparse._build_ds"], "platform.test.main": []}