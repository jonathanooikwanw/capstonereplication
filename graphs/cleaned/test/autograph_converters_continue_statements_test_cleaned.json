{"converters.continue_statements_test": ["platform.test.main"], "converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent": ["converters.continue_statements_test.ContinueCanonicalizationTest.test_for_loop.f", "converters.continue_statements_test.ContinueCanonicalizationTest.test_basic.f", "converter_testing.TestCase.assertEqual", "converter_testing.TestCase.transform", "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested.f", "converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues.f", "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_with.f", "converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues_in_nested_scope.f", "converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_guarded_continues_with_side_effects.f", "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_nested_withs.f", "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_statements.f", "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs.f"], "converter_testing.TestCase.transform": [], "converters.continue_statements_test.ContinueCanonicalizationTest.test_for_loop.f": [], "converters.continue_statements_test.ContinueCanonicalizationTest.test_basic.f": [], "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested.f": [], "converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues.f": [], "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_with.f": ["framework.ops.name_scope"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues_in_nested_scope.f": ["<builtin>.ValueError"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_guarded_continues_with_side_effects.f": ["converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_guarded_continues_with_side_effects.f.track"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_nested_withs.f": ["framework.ops.name_scope"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_statements.f": ["framework.ops.name_scope"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs.f": ["framework.ops.name_scope"], "converter_testing.TestCase.assertEqual": [], "converters.continue_statements_test.ContinueCanonicalizationTest.test_basic": ["converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues": ["converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues_in_nested_scope": ["converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "<builtin>.ValueError": [], "converters.continue_statements_test.ContinueCanonicalizationTest.test_for_loop": ["converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_with": ["converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "framework.ops.name_scope": [], "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs": ["converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_statements": ["converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_nested_withs": ["converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_nested": ["converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_guarded_continues_with_side_effects": ["converters.continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "converters.continue_statements_test.ContinueCanonicalizationTest.test_multiple_guarded_continues_with_side_effects.f.track": [], "platform.test.main": []}