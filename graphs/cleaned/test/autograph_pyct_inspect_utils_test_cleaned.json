{"pyct.inspect_utils_test": ["platform.test.main"], "pyct.inspect_utils_test.decorator": [], "pyct.inspect_utils_test.function_decorator": [], "pyct.inspect_utils_test.function_decorator.dec": [], "pyct.inspect_utils_test.wrapping_decorator": [], "pyct.inspect_utils_test.wrapping_decorator.dec": ["functools.wraps"], "pyct.inspect_utils_test.wrapping_decorator.dec.replacement": [], "functools.wraps": [], "pyct.inspect_utils_test.wrapping_decorator.dec.wrapper": ["pyct.inspect_utils_test.wrapping_decorator.dec.replacement"], "pyct.inspect_utils_test.TestClass.member_function": [], "pyct.inspect_utils_test.TestClass": ["pyct.inspect_utils_test.function_decorator.dec", "pyct.inspect_utils_test.wrapping_decorator", "pyct.inspect_utils_test.wrapping_decorator.dec", "pyct.inspect_utils_test.function_decorator", "pyct.inspect_utils_test.decorator"], "pyct.inspect_utils_test.TestClass.decorated_member": [], "pyct.inspect_utils_test.TestClass.fn_decorated_member": [], "pyct.inspect_utils_test.TestClass.wrap_decorated_member": [], "pyct.inspect_utils_test.TestClass.static_method": [], "pyct.inspect_utils_test.TestClass.class_method": [], "pyct.inspect_utils_test.free_function": [], "pyct.inspect_utils_test.factory": [], "pyct.inspect_utils_test.free_factory": [], "pyct.inspect_utils_test.free_factory.local_function": [], "pyct.inspect_utils_test.InspectUtilsTest.test_islambda": ["pyct.inspect_utils.islambda", "test.TestCase.assertTrue", "test.TestCase.assertFalse"], "pyct.inspect_utils_test.InspectUtilsTest.test_islambda.test_fn": [], "pyct.inspect_utils_test.InspectUtilsTest.test_islambda.<lambda1>": [], "pyct.inspect_utils.islambda": [], "test.TestCase.assertTrue": [], "test.TestCase.assertFalse": [], "pyct.inspect_utils_test.InspectUtilsTest.test_islambda_renamed_lambda": ["pyct.inspect_utils.islambda", "test.TestCase.assertTrue"], "pyct.inspect_utils_test.InspectUtilsTest.test_islambda_renamed_lambda.<lambda1>": [], "pyct.inspect_utils_test.InspectUtilsTest.test_isnamedtuple": ["collections.namedtuple", "test.TestCase.assertFalse", "test.TestCase.assertTrue", "pyct.inspect_utils.isnamedtuple"], "collections.namedtuple": [], "pyct.inspect_utils.isnamedtuple": [], "pyct.inspect_utils_test.InspectUtilsTest.test_isnamedtuple_confounder": ["test.TestCase.assertTrue", "pyct.inspect_utils.isnamedtuple"], "pyct.inspect_utils_test.InspectUtilsTest.test_isnamedtuple_subclass": ["test.TestCase.assertTrue", "pyct.inspect_utils.isnamedtuple"], "pyct.inspect_utils_test.InspectUtilsTest.assertSourceIdentical": ["textwrap.dedent", "test.TestCase.assertEqual"], "textwrap.dedent": [], "test.TestCase.assertEqual": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_basic": ["pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_basic.test_decorator", "pyct.inspect_utils.getimmediatesource", "pyct.inspect_utils_test.InspectUtilsTest.assertSourceIdentical"], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_basic.test_decorator": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_basic.test_decorator.f_wrapper": ["pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_basic.test_fn"], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_basic.test_fn": [], "pyct.inspect_utils.getimmediatesource": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_noop_decorator": ["pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_noop_decorator.test_decorator", "pyct.inspect_utils.getimmediatesource", "pyct.inspect_utils_test.InspectUtilsTest.assertSourceIdentical"], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_noop_decorator.test_decorator": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_noop_decorator.test_fn": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_functools_wrapper": ["textwrap.dedent", "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_functools_wrapper.wrapper_decorator", "pyct.inspect_utils.getimmediatesource", "pyct.inspect_utils_test.InspectUtilsTest.assertSourceIdentical"], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_functools_wrapper.wrapper_decorator": ["functools.wraps"], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_functools_wrapper.wrapper_decorator.wrapper": ["pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_functools_wrapper.test_fn"], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_functools_wrapper.test_fn": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_functools_wrapper_different_module": ["testing.decorators.wrapping_decorator", "textwrap.dedent", "pyct.inspect_utils.getimmediatesource", "pyct.inspect_utils_test.InspectUtilsTest.assertSourceIdentical"], "testing.decorators.wrapping_decorator": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_functools_wrapper_different_module.test_fn": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_normal_decorator_different_module": ["textwrap.dedent", "pyct.inspect_utils.getimmediatesource", "pyct.inspect_utils_test.InspectUtilsTest.assertSourceIdentical", "testing.decorators.standalone_decorator"], "testing.decorators.standalone_decorator": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_normal_decorator_different_module.test_fn": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_normal_functional_decorator_different_module": ["textwrap.dedent", "pyct.inspect_utils_test.InspectUtilsTest.assertSourceIdentical", "pyct.inspect_utils.getimmediatesource", "testing.decorators.functional_decorator"], "testing.decorators.functional_decorator": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getimmediatesource_normal_functional_decorator_different_module.test_fn": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getnamespace_globals": ["pyct.inspect_utils.getnamespace", "test.TestCase.assertEqual"], "pyct.inspect_utils.getnamespace": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getnamespace_closure_with_undefined_var": ["pyct.inspect_utils.getnamespace", "test.TestCase.assertEqual", "test.TestCase.assertNotIn"], "pyct.inspect_utils_test.InspectUtilsTest.test_getnamespace_closure_with_undefined_var.test_fn": [], "test.TestCase.assertNotIn": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getnamespace_hermetic": ["<builtin>.object", "test.TestCase.assertFalse", "six.get_function_globals", "test.TestCase.assertTrue", "pyct.inspect_utils.getnamespace"], "<builtin>.object": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getnamespace_hermetic.test_fn": [], "six.get_function_globals": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getnamespace_locals": ["test.TestCase.assertTrue", "pyct.inspect_utils.getnamespace", "test.TestCase.assertEqual"], "pyct.inspect_utils_test.InspectUtilsTest.test_getnamespace_locals.called_fn": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getnamespace_locals.local_fn": ["pyct.inspect_utils_test.InspectUtilsTest.test_getnamespace_locals.called_fn"], "pyct.inspect_utils_test.InspectUtilsTest.test_getqualifiedname": ["<builtin>.object", "imp.new_module", "pyct.inspect_utils.getqualifiedname", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "imp.new_module": [], "pyct.inspect_utils.getqualifiedname": [], "test.TestCase.assertIsNone": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getqualifiedname_efficiency": ["<builtin>.object", "imp.new_module", "test.TestCase.assertIsNotNone", "pyct.inspect_utils.getqualifiedname", "<builtin>.range", "test.TestCase.assertIsNone"], "<builtin>.range": [], "test.TestCase.assertIsNotNone": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getqualifiedname_cycles": ["<builtin>.object", "imp.new_module", "test.TestCase.assertIsNotNone", "pyct.inspect_utils.getqualifiedname", "<builtin>.range", "test.TestCase.assertIsNone"], "pyct.inspect_utils_test.InspectUtilsTest.test_getqualifiedname_finds_via_parent_module": ["pyct.inspect_utils.getqualifiedname", "test.TestCase.assertEqual"], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass": ["test.TestCase.assertEqual", "pyct.inspect_utils.getmethodclass", "pyct.inspect_utils_test.free_factory"], "pyct.inspect_utils.getmethodclass": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass_locals": ["test.TestCase.assertEqual", "pyct.inspect_utils.getmethodclass"], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass_locals.local_function": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass_locals.LocalClass.member_function": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass_locals.LocalClass": ["pyct.inspect_utils_test.function_decorator.dec", "pyct.inspect_utils_test.wrapping_decorator", "pyct.inspect_utils_test.wrapping_decorator.dec", "pyct.inspect_utils_test.function_decorator", "pyct.inspect_utils_test.decorator"], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass_locals.LocalClass.decorated_member": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass_locals.LocalClass.fn_decorated_member": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass_locals.LocalClass.wrap_decorated_member": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass_callables": ["test.TestCase.assertEqual", "pyct.inspect_utils.getmethodclass"], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass_callables.TestCallable.__call__": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getmethodclass_no_bool_conversion": ["pyct.inspect_utils.getmethodclass", "test.TestCase.assertEqual", "framework.constant_op.constant", "<builtin>.type"], "framework.constant_op.constant": [], "<builtin>.type": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getdefiningclass": ["pyct.inspect_utils.getdefiningclass", "test.TestCase.assertIs"], "pyct.inspect_utils_test.InspectUtilsTest.test_getdefiningclass.Superclass.foo": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getdefiningclass.Superclass.bar": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getdefiningclass.Superclass.class_method": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getdefiningclass.Subclass.foo": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getdefiningclass.Subclass.baz": [], "pyct.inspect_utils.getdefiningclass": [], "test.TestCase.assertIs": [], "pyct.inspect_utils_test.InspectUtilsTest.test_isbuiltin": ["test.TestCase.assertTrue", "pyct.inspect_utils.isbuiltin", "test.TestCase.assertFalse"], "pyct.inspect_utils.isbuiltin": [], "pyct.inspect_utils_test.InspectUtilsTest.test_isconstructor": ["test.TestCase.assertTrue", "pyct.inspect_utils.isconstructor", "test.TestCase.assertFalse"], "pyct.inspect_utils_test.InspectUtilsTest.test_isconstructor.OrdinaryCallableClass.__call__": [], "pyct.inspect_utils_test.InspectUtilsTest.test_isconstructor.CallableMetaclass.__call__": [], "pyct.inspect_utils.isconstructor": [], "pyct.inspect_utils_test.InspectUtilsTest.test_isconstructor_abc_callable": ["test.TestCase.assertTrue", "pyct.inspect_utils.isconstructor"], "pyct.inspect_utils_test.InspectUtilsTest.test_isconstructor_abc_callable.AbcBase": ["abc.abstractmethod"], "abc.abstractmethod": [], "pyct.inspect_utils_test.InspectUtilsTest.test_isconstructor_abc_callable.AbcBase.__call__": [], "pyct.inspect_utils_test.InspectUtilsTest.test_isconstructor_abc_callable.AbcSubclass.__init__": [], "pyct.inspect_utils_test.InspectUtilsTest.test_isconstructor_abc_callable.AbcSubclass.__call__": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getfutureimports_functions": ["pyct.inspect_utils.getfutureimports", "test.TestCase.assertIn", "test.TestCase.assertNotIn"], "pyct.inspect_utils.getfutureimports": [], "test.TestCase.assertIn": [], "pyct.inspect_utils_test.InspectUtilsTest.test_getfutureimports_lambdas": ["pyct.inspect_utils.getfutureimports", "test.TestCase.assertIn", "test.TestCase.assertNotIn"], "pyct.inspect_utils_test.InspectUtilsTest.test_getfutureimports_methods": ["pyct.inspect_utils.getfutureimports", "test.TestCase.assertIn", "test.TestCase.assertNotIn"], "platform.test.main": []}