{"keras.losses_test": ["platform.test.main"], "keras.losses_test.KerasLossesTest.test_objective_shapes_3d": ["test.TestCase.assertListEqual", "keras.backend.variable", "numpy.random.random", "test.TestCase.cached_session"], "test.TestCase.cached_session": [], "numpy.random.random": [], "keras.backend.variable": [], "test.TestCase.assertListEqual": [], "keras.losses_test.KerasLossesTest.test_objective_shapes_2d": ["test.TestCase.assertListEqual", "keras.backend.variable", "numpy.random.random", "test.TestCase.cached_session"], "keras.losses_test.KerasLossesTest.test_cce_one_hot": ["numpy.random.randint", "test.TestCase.cached_session", "keras.backend.variable", "numpy.random.random", "keras.losses.sparse_categorical_crossentropy", "keras.backend.eval"], "numpy.random.randint": [], "keras.losses.sparse_categorical_crossentropy": [], "keras.backend.eval": [], "keras.combinations.combine": [], "keras.losses_test.KerasLossesTest": ["keras.combinations.combine", "keras.combinations.generate"], "keras.combinations.generate": [], "keras.losses_test.KerasLossesTest.test_categorical_crossentropy_loss": ["numpy.random.randint", "keras.backend.softmax", "keras.losses.categorical_crossentropy", "keras.backend.variable", "numpy.random.random", "numpy.testing.assert_allclose", "keras.backend.eval"], "keras.backend.softmax": [], "keras.losses.categorical_crossentropy": [], "numpy.testing.assert_allclose": [], "keras.losses_test.KerasLossesTest.test_categorical_crossentropy_loss_with_unknown_rank_tensor": ["framework.ops.convert_to_tensor_v2_with_dispatch", "keras.losses.categorical_crossentropy", "keras.backend.function", "keras.backend.placeholder", "test.TestCase.assertArrayNear"], "keras.backend.placeholder": [], "framework.ops.convert_to_tensor_v2_with_dispatch": [], "keras.backend.function": [], "test.TestCase.assertArrayNear": [], "keras.losses_test.KerasLossesTest.test_sparse_categorical_crossentropy_loss": ["numpy.random.randint", "keras.backend.softmax", "keras.backend.variable", "numpy.random.random", "keras.losses.sparse_categorical_crossentropy", "numpy.testing.assert_allclose", "keras.backend.eval"], "keras.losses_test.KerasLossesTest.test_sparse_categorical_crossentropy_loss_with_unknown_rank_tensor": ["test.TestCase.assertArrayNear", "framework.ops.convert_to_tensor_v2_with_dispatch", "keras.backend.function", "keras.backend.placeholder", "keras.losses.sparse_categorical_crossentropy"], "keras.losses_test.KerasLossesTest.test_binary_crossentropy_loss": ["numpy.random.randint", "numpy.testing.assert_allclose", "keras.losses.binary_crossentropy", "keras.backend.variable", "numpy.random.random", "keras.backend.eval", "keras.backend.sigmoid"], "keras.backend.sigmoid": [], "keras.losses.binary_crossentropy": [], "keras.losses_test.KerasLossesTest.test_get_bce": ["keras.losses.get", "test.TestCase.assertEqual"], "keras.losses.get": [], "test.TestCase.assertEqual": [], "keras.losses_test.KerasLossesTest.test_serialization": ["keras.losses.serialize", "keras.losses.get", "test.TestCase.assertEqual", "keras.losses.deserialize"], "keras.losses.serialize": [], "keras.losses.deserialize": [], "keras.losses_test.KerasLossesTest.test_categorical_hinge": ["keras.losses.categorical_hinge", "numpy.mean", "test.TestCase.assertAllClose", "keras.backend.variable", "numpy.array", "keras.backend.eval"], "numpy.array": [], "keras.losses.categorical_hinge": [], "numpy.mean": [], "test.TestCase.assertAllClose": [], "keras.losses_test.KerasLossesTest.test_loss_wrapper": ["keras.losses.get", "framework.constant_op.constant", "test.TestCase.assertAllClose", "keras.losses.LossFunctionWrapper", "test.TestCase.evaluate", "test.TestCase.assertEqual"], "keras.losses.LossFunctionWrapper": [], "framework.constant_op.constant": [], "test.TestCase.evaluate": [], "keras.losses_test.KerasLossesTest.test_loss_wrapper_autograph": ["framework.constant_op.constant", "test.TestCase.assertAllClose", "keras.losses.LossFunctionWrapper", "keras.losses_test.KerasLossesTest.test_loss_wrapper_autograph.tf_functioned_loss_fn", "test.TestCase.evaluate"], "keras.losses_test.KerasLossesTest.test_loss_wrapper_autograph.loss_fn": ["keras.losses.get", "ops.math_ops.reduce_mean"], "ops.math_ops.reduce_mean": [], "keras.losses_test.KerasLossesTest.test_loss_wrapper_autograph.tf_functioned_loss_fn": [], "keras.losses_test.KerasLossesTest.test_invalid_reduction": ["test.TestCase.assertRaisesRegex", "framework.constant_op.constant", "keras.losses.MeanSquaredError"], "test.TestCase.assertRaisesRegex": [], "keras.losses.MeanSquaredError": [], "keras.losses_test.KerasLossesTest.test_deserialization_error": ["test.TestCase.assertRaisesRegex", "keras.losses.get"], "keras.losses_test.KerasLossesTest.test_binary_crossentropy_uses_cached_logits": ["test.TestCase.assertTrue", "<builtin>.hasattr", "framework.constant_op.constant", "test.TestCase.assertNotEqual", "keras.losses.binary_crossentropy", "test.TestCase.evaluate", "keras.activations.sigmoid"], "keras.activations.sigmoid": [], "<builtin>.hasattr": [], "test.TestCase.assertTrue": [], "test.TestCase.assertNotEqual": [], "keras.losses_test.KerasLossesTest.test_categorical_crossentropy_uses_cached_logits": ["test.TestCase.assertTrue", "<builtin>.hasattr", "framework.constant_op.constant", "keras.losses.categorical_crossentropy", "test.TestCase.assertNotEqual", "keras.activations.softmax", "test.TestCase.evaluate"], "keras.activations.softmax": [], "keras.losses_test.KerasLossesTest.test_sparse_categorical_crossentropy_uses_cached_logits": ["test.TestCase.assertTrue", "<builtin>.hasattr", "framework.constant_op.constant", "test.TestCase.assertNotEqual", "keras.activations.softmax", "test.TestCase.evaluate", "keras.losses.sparse_categorical_crossentropy"], "keras.losses_test.KerasLossesTest.test_loss_not_autographed_in_eager": ["losses.Loss.__init__", "mock.patch.object", "framework.constant_op.constant"], "keras.losses_test.KerasLossesTest.test_loss_not_autographed_in_eager.MyLoss.call": [], "losses.Loss.__init__": [], "keras.losses_test.KerasLossesTest.test_loss_not_autographed_in_eager.tf_convert": [], "mock.patch.object": [], "keras.losses_test.MeanSquaredErrorTest.test_config": ["test.TestCase.assertEqual", "keras.losses.MeanSquaredError"], "keras.losses_test.MeanSquaredErrorTest.test_all_correct_unweighted": ["test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanSquaredError", "test.TestCase.assertAlmostEqual"], "test.TestCase.assertAlmostEqual": [], "keras.losses_test.MeanSquaredErrorTest.test_unweighted": ["test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanSquaredError", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanSquaredErrorTest.test_scalar_weighted": ["test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanSquaredError", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanSquaredErrorTest.test_sample_weighted": ["test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanSquaredError", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanSquaredErrorTest.test_ragged_tensors": ["framework.constant_op.constant", "keras.losses.MeanSquaredError", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "ragged.ragged_factory_ops.constant"], "ragged.ragged_factory_ops.constant": [], "keras.losses_test.MeanSquaredErrorTest.test_timestep_weighted": ["test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanSquaredError", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanSquaredErrorTest.test_zero_weighted": ["test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanSquaredError", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanSquaredErrorTest.test_invalid_sample_weight": ["test.TestCase.assertRaisesRegex", "framework.constant_op.constant", "keras.losses.MeanSquaredError"], "keras.losses_test.MeanSquaredErrorTest.test_no_reduction": ["test.TestCase.evaluate", "test.TestCase.assertArrayNear", "framework.constant_op.constant", "keras.losses.MeanSquaredError"], "keras.losses_test.MeanSquaredErrorTest.test_sum_reduction": ["test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanSquaredError", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanAbsoluteErrorTest.test_config": ["test.TestCase.assertEqual", "keras.losses.MeanAbsoluteError"], "keras.losses.MeanAbsoluteError": [], "keras.losses_test.MeanAbsoluteErrorTest.test_all_correct_unweighted": ["test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanAbsoluteError"], "keras.losses_test.MeanAbsoluteErrorTest.test_unweighted": ["test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanAbsoluteError"], "keras.losses_test.MeanAbsoluteErrorTest.test_scalar_weighted": ["test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanAbsoluteError"], "keras.losses_test.MeanAbsoluteErrorTest.test_sample_weighted": ["test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanAbsoluteError"], "keras.losses_test.MeanAbsoluteErrorTest.test_timestep_weighted": ["test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanAbsoluteError"], "keras.losses_test.MeanAbsoluteErrorTest.test_zero_weighted": ["test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanAbsoluteError"], "keras.losses_test.MeanAbsoluteErrorTest.test_invalid_sample_weight": ["test.TestCase.assertRaisesRegex", "framework.constant_op.constant", "keras.losses.MeanAbsoluteError"], "keras.losses_test.MeanAbsoluteErrorTest.test_no_reduction": ["test.TestCase.evaluate", "test.TestCase.assertArrayNear", "framework.constant_op.constant", "keras.losses.MeanAbsoluteError"], "keras.losses_test.MeanAbsoluteErrorTest.test_sum_reduction": ["test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.MeanAbsoluteError"], "keras.losses_test.MeanAbsoluteErrorTest.test_ragged_tensor": ["framework.constant_op.constant", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.losses.MeanAbsoluteError", "ragged.ragged_factory_ops.constant"], "keras.losses_test.MeanAbsolutePercentageErrorTest.test_config": ["test.TestCase.assertEqual", "keras.losses.MeanAbsolutePercentageError"], "keras.losses.MeanAbsolutePercentageError": [], "keras.losses_test.MeanAbsolutePercentageErrorTest.test_all_correct_unweighted": ["test.TestCase.evaluate", "keras.losses.MeanAbsolutePercentageError", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanAbsolutePercentageErrorTest.test_unweighted": ["test.TestCase.evaluate", "keras.losses.MeanAbsolutePercentageError", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanAbsolutePercentageErrorTest.test_scalar_weighted": ["test.TestCase.evaluate", "keras.losses.MeanAbsolutePercentageError", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanAbsolutePercentageErrorTest.test_sample_weighted": ["test.TestCase.evaluate", "keras.losses.MeanAbsolutePercentageError", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanAbsolutePercentageErrorTest.test_ragged_tensors": ["keras.losses.MeanAbsolutePercentageError", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "ragged.ragged_factory_ops.constant"], "keras.losses_test.MeanAbsolutePercentageErrorTest.test_timestep_weighted": ["test.TestCase.evaluate", "keras.losses.MeanAbsolutePercentageError", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanAbsolutePercentageErrorTest.test_zero_weighted": ["test.TestCase.evaluate", "keras.losses.MeanAbsolutePercentageError", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanAbsolutePercentageErrorTest.test_no_reduction": ["test.TestCase.evaluate", "keras.losses.MeanAbsolutePercentageError", "framework.constant_op.constant", "test.TestCase.assertArrayNear"], "keras.losses_test.MeanSquaredLogarithmicErrorTest.test_config": ["keras.losses.MeanSquaredLogarithmicError", "test.TestCase.assertEqual"], "keras.losses.MeanSquaredLogarithmicError": [], "keras.losses_test.MeanSquaredLogarithmicErrorTest.test_unweighted": ["keras.losses.MeanSquaredLogarithmicError", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanSquaredLogarithmicErrorTest.test_scalar_weighted": ["keras.losses.MeanSquaredLogarithmicError", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanSquaredLogarithmicErrorTest.test_sample_weighted": ["keras.losses.MeanSquaredLogarithmicError", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanSquaredLogarithmicErrorTest.test_timestep_weighted": ["keras.losses.MeanSquaredLogarithmicError", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanSquaredLogarithmicErrorTest.test_zero_weighted": ["keras.losses.MeanSquaredLogarithmicError", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.MeanSquaredLogarithmicErrorTest.test_ragged_tensors": ["keras.losses.MeanSquaredLogarithmicError", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "ragged.ragged_factory_ops.constant"], "keras.losses_test.CosineSimilarityTest.l2_norm": ["numpy.maximum", "numpy.sqrt", "numpy.multiply", "numpy.sum", "numpy.square"], "numpy.square": [], "numpy.sum": [], "numpy.maximum": [], "numpy.sqrt": [], "numpy.multiply": [], "keras.losses_test.CosineSimilarityTest.setup": ["keras.losses_test.CosineSimilarityTest.l2_norm", "numpy.multiply", "numpy.sum", "framework.constant_op.constant", "numpy.asarray"], "numpy.asarray": [], "keras.losses_test.CosineSimilarityTest.test_config": ["test.TestCase.assertEqual", "keras.losses.CosineSimilarity"], "keras.losses.CosineSimilarity": [], "keras.losses_test.CosineSimilarityTest.test_unweighted": ["numpy.mean", "keras.losses.CosineSimilarity", "test.TestCase.assertAlmostEqual", "keras.losses_test.CosineSimilarityTest.setup", "test.TestCase.evaluate"], "keras.losses_test.CosineSimilarityTest.test_scalar_weighted": ["numpy.mean", "keras.losses.CosineSimilarity", "test.TestCase.assertAlmostEqual", "keras.losses_test.CosineSimilarityTest.setup", "test.TestCase.evaluate"], "keras.losses_test.CosineSimilarityTest.test_sample_weighted": ["numpy.mean", "keras.losses.CosineSimilarity", "framework.constant_op.constant", "numpy.asarray", "test.TestCase.assertAlmostEqual", "keras.losses_test.CosineSimilarityTest.setup", "test.TestCase.evaluate"], "keras.losses_test.CosineSimilarityTest.test_timestep_weighted": ["keras.losses_test.CosineSimilarityTest.l2_norm", "numpy.mean", "numpy.multiply", "keras.losses.CosineSimilarity", "numpy.sum", "framework.constant_op.constant", "numpy.asarray", "test.TestCase.assertAlmostEqual", "keras.losses_test.CosineSimilarityTest.setup", "test.TestCase.evaluate"], "keras.losses_test.CosineSimilarityTest.test_zero_weighted": ["keras.losses_test.CosineSimilarityTest.setup", "test.TestCase.evaluate", "keras.losses.CosineSimilarity", "test.TestCase.assertAlmostEqual"], "keras.losses_test.CosineSimilarityTest.test_axis": ["numpy.mean", "keras.losses.CosineSimilarity", "test.TestCase.assertAlmostEqual", "keras.losses_test.CosineSimilarityTest.setup", "test.TestCase.evaluate"], "keras.losses_test.BinaryCrossentropyTest.test_config": ["test.TestCase.assertEqual", "keras.losses.BinaryCrossentropy"], "keras.losses.BinaryCrossentropy": [], "keras.losses_test.BinaryCrossentropyTest.test_all_correct_unweighted": ["test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.BinaryCrossentropy", "test.TestCase.assertAlmostEqual"], "keras.losses_test.BinaryCrossentropyTest.test_unweighted": ["framework.constant_op.constant", "keras.losses.BinaryCrossentropy", "numpy.asarray", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.BinaryCrossentropyTest.test_scalar_weighted": ["framework.constant_op.constant", "keras.losses.BinaryCrossentropy", "numpy.asarray", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.BinaryCrossentropyTest.test_sample_weighted": ["framework.constant_op.constant", "keras.losses.BinaryCrossentropy", "numpy.asarray", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.BinaryCrossentropyTest.test_no_reduction": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.losses.BinaryCrossentropy"], "keras.losses_test.BinaryCrossentropyTest.test_label_smoothing": ["test.TestCase.evaluate", "framework.constant_op.constant", "keras.losses.BinaryCrossentropy", "test.TestCase.assertAlmostEqual"], "keras.losses_test.BinaryCrossentropyTest.test_ragged_tensors": ["framework.constant_op.constant", "keras.losses.BinaryCrossentropy", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "ragged.ragged_factory_ops.constant"], "keras.losses_test.CategoricalCrossentropyTest.test_config": ["keras.losses.CategoricalCrossentropy", "test.TestCase.assertEqual"], "keras.losses.CategoricalCrossentropy": [], "keras.losses_test.CategoricalCrossentropyTest.test_all_correct_unweighted": ["keras.losses.CategoricalCrossentropy", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.CategoricalCrossentropyTest.test_unweighted": ["keras.losses.CategoricalCrossentropy", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.CategoricalCrossentropyTest.test_scalar_weighted": ["keras.losses.CategoricalCrossentropy", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.CategoricalCrossentropyTest.test_sample_weighted": ["keras.losses.CategoricalCrossentropy", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.CategoricalCrossentropyTest.test_no_reduction": ["keras.losses.CategoricalCrossentropy", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.constant_op.constant"], "keras.losses_test.CategoricalCrossentropyTest.test_label_smoothing": ["keras.losses.CategoricalCrossentropy", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.CategoricalCrossentropyTest.test_shape_mismatch": ["keras.losses.CategoricalCrossentropy", "test.TestCase.assertRaisesRegex", "framework.constant_op.constant"], "keras.losses_test.CategoricalCrossentropyTest.test_ragged_tensors": ["framework.constant_op.constant", "keras.losses.CategoricalCrossentropy", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "ragged.ragged_factory_ops.constant"], "keras.losses_test.SparseCategoricalCrossentropyTest.test_config": ["test.TestCase.assertEqual", "keras.losses.SparseCategoricalCrossentropy"], "keras.losses.SparseCategoricalCrossentropy": [], "keras.losses_test.SparseCategoricalCrossentropyTest.test_all_correct_unweighted": ["test.TestCase.evaluate", "keras.losses.SparseCategoricalCrossentropy", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.SparseCategoricalCrossentropyTest.test_unweighted": ["test.TestCase.evaluate", "keras.losses.SparseCategoricalCrossentropy", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.SparseCategoricalCrossentropyTest.test_scalar_weighted": ["test.TestCase.evaluate", "keras.losses.SparseCategoricalCrossentropy", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.SparseCategoricalCrossentropyTest.test_sample_weighted": ["test.TestCase.evaluate", "keras.losses.SparseCategoricalCrossentropy", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.SparseCategoricalCrossentropyTest.test_no_reduction": ["test.TestCase.evaluate", "keras.losses.SparseCategoricalCrossentropy", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "keras.losses_test.SparseCategoricalCrossentropyTest.test_non_tensor": ["test.TestCase.evaluate", "keras.losses.SparseCategoricalCrossentropy", "test.TestCase.assertAlmostEqual"], "keras.losses_test.SparseCategoricalCrossentropyTest.test_ragged_tensors": ["keras.losses.SparseCategoricalCrossentropy", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "ragged.ragged_factory_ops.constant"], "keras.losses_test.SparseCategoricalCrossentropyTest.test_ragged_tensors_rank_1": ["keras.losses.SparseCategoricalCrossentropy", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "ragged.ragged_factory_ops.constant"], "keras.losses_test.SparseCategoricalCrossentropyTest.test_ragged_tensors_3d": ["test.TestCase.evaluate", "keras.losses.SparseCategoricalCrossentropy", "ragged.ragged_factory_ops.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.HingeTest.test_config": ["test.TestCase.assertEqual", "keras.losses.Hinge"], "keras.losses.Hinge": [], "keras.losses_test.HingeTest.test_unweighted": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.losses.Hinge"], "keras.losses_test.HingeTest.test_scalar_weighted": ["keras.losses.Hinge", "framework.constant_op.constant", "test.TestCase.assertAllClose", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.HingeTest.test_sample_weighted": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.losses.Hinge"], "keras.losses_test.HingeTest.test_timestep_weighted": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.losses.Hinge"], "keras.losses_test.HingeTest.test_zero_weighted": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.losses.Hinge"], "keras.losses_test.SquaredHingeTest.test_config": ["test.TestCase.assertEqual", "keras.losses.SquaredHinge"], "keras.losses.SquaredHinge": [], "keras.losses_test.SquaredHingeTest.test_unweighted": ["test.TestCase.evaluate", "keras.losses.SquaredHinge", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "keras.losses_test.SquaredHingeTest.test_scalar_weighted": ["framework.constant_op.constant", "test.TestCase.assertAllClose", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.losses.SquaredHinge"], "keras.losses_test.SquaredHingeTest.test_sample_weighted": ["test.TestCase.evaluate", "keras.losses.SquaredHinge", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "keras.losses_test.SquaredHingeTest.test_timestep_weighted": ["test.TestCase.evaluate", "keras.losses.SquaredHinge", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "keras.losses_test.SquaredHingeTest.test_zero_weighted": ["test.TestCase.evaluate", "keras.losses.SquaredHinge", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "keras.losses_test.CategoricalHingeTest.test_config": ["test.TestCase.assertEqual", "keras.losses.CategoricalHinge"], "keras.losses.CategoricalHinge": [], "keras.losses_test.CategoricalHingeTest.test_unweighted": ["test.TestCase.evaluate", "keras.losses.CategoricalHinge", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.CategoricalHingeTest.test_scalar_weighted": ["test.TestCase.evaluate", "keras.losses.CategoricalHinge", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.CategoricalHingeTest.test_sample_weighted": ["test.TestCase.evaluate", "keras.losses.CategoricalHinge", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.CategoricalHingeTest.test_timestep_weighted": ["test.TestCase.evaluate", "keras.losses.CategoricalHinge", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.CategoricalHingeTest.test_zero_weighted": ["test.TestCase.evaluate", "keras.losses.CategoricalHinge", "framework.constant_op.constant", "test.TestCase.assertAlmostEqual"], "keras.losses_test.LogCoshTest.setup": ["numpy.asarray", "numpy.exp", "framework.constant_op.constant", "numpy.log"], "numpy.exp": [], "numpy.log": [], "keras.losses_test.LogCoshTest.test_config": ["test.TestCase.assertEqual", "keras.losses.LogCosh"], "keras.losses.LogCosh": [], "keras.losses_test.LogCoshTest.test_unweighted": ["keras.losses_test.LogCoshTest.setup", "keras.losses.LogCosh", "numpy.sum", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.LogCoshTest.test_scalar_weighted": ["keras.losses_test.LogCoshTest.setup", "keras.losses.LogCosh", "numpy.sum", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.LogCoshTest.test_sample_weighted": ["keras.losses_test.LogCoshTest.setup", "numpy.multiply", "keras.losses.LogCosh", "framework.constant_op.constant", "numpy.sum", "numpy.asarray", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.LogCoshTest.test_timestep_weighted": ["keras.losses_test.LogCoshTest.setup", "numpy.exp", "keras.losses.LogCosh", "framework.constant_op.constant", "numpy.sum", "numpy.asarray", "numpy.log", "numpy.array", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.LogCoshTest.test_zero_weighted": ["keras.losses_test.LogCoshTest.setup", "test.TestCase.evaluate", "keras.losses.LogCosh", "test.TestCase.assertAlmostEqual"], "keras.losses_test.PoissonTest.setup": ["numpy.asarray", "framework.constant_op.constant", "numpy.log", "numpy.multiply"], "keras.losses_test.PoissonTest.test_config": ["test.TestCase.assertEqual", "keras.losses.Poisson"], "keras.losses.Poisson": [], "keras.losses_test.PoissonTest.test_unweighted": ["numpy.sum", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.losses.Poisson", "keras.losses_test.PoissonTest.setup"], "keras.losses_test.PoissonTest.test_scalar_weighted": ["numpy.sum", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.losses.Poisson", "keras.losses_test.PoissonTest.setup"], "keras.losses_test.PoissonTest.test_sample_weighted": ["numpy.multiply", "numpy.sum", "framework.constant_op.constant", "numpy.asarray", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.losses.Poisson", "keras.losses_test.PoissonTest.setup"], "keras.losses_test.PoissonTest.test_timestep_weighted": ["numpy.multiply", "numpy.sum", "framework.constant_op.constant", "numpy.asarray", "numpy.log", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.losses.Poisson", "keras.losses_test.PoissonTest.setup"], "keras.losses_test.PoissonTest.test_zero_weighted": ["test.TestCase.evaluate", "keras.losses.Poisson", "keras.losses_test.PoissonTest.setup", "test.TestCase.assertAlmostEqual"], "keras.losses_test.KLDivergenceTest.setup": ["numpy.asarray", "framework.constant_op.constant", "numpy.log", "numpy.multiply"], "keras.losses_test.KLDivergenceTest.test_config": ["test.TestCase.assertEqual", "keras.losses.KLDivergence"], "keras.losses.KLDivergence": [], "keras.losses_test.KLDivergenceTest.test_unweighted": ["numpy.sum", "keras.losses.KLDivergence", "keras.losses_test.KLDivergenceTest.setup", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.KLDivergenceTest.test_scalar_weighted": ["numpy.sum", "keras.losses.KLDivergence", "keras.losses_test.KLDivergenceTest.setup", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.KLDivergenceTest.test_sample_weighted": ["numpy.multiply", "numpy.sum", "framework.constant_op.constant", "keras.losses.KLDivergence", "numpy.asarray", "keras.losses_test.KLDivergenceTest.setup", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.KLDivergenceTest.test_timestep_weighted": ["numpy.multiply", "numpy.sum", "framework.constant_op.constant", "keras.losses.KLDivergence", "numpy.asarray", "keras.losses_test.KLDivergenceTest.setup", "numpy.log", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.KLDivergenceTest.test_zero_weighted": ["test.TestCase.evaluate", "keras.losses_test.KLDivergenceTest.setup", "keras.losses.KLDivergence", "test.TestCase.assertAlmostEqual"], "keras.losses_test.HuberLossTest.huber_loss": ["numpy.subtract", "numpy.multiply", "numpy.add", "numpy.abs", "numpy.minimum"], "numpy.abs": [], "numpy.minimum": [], "numpy.subtract": [], "numpy.add": [], "keras.losses_test.HuberLossTest.setup": ["numpy.asarray", "framework.constant_op.constant", "keras.losses_test.HuberLossTest.huber_loss"], "keras.losses_test.HuberLossTest.test_config": ["test.TestCase.assertEqual", "keras.losses.Huber"], "keras.losses.Huber": [], "keras.losses_test.HuberLossTest.test_all_correct": ["test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.losses_test.HuberLossTest.setup", "keras.losses.Huber"], "keras.losses_test.HuberLossTest.test_unweighted": ["numpy.sum", "keras.losses.Huber", "keras.losses_test.HuberLossTest.setup", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.HuberLossTest.test_scalar_weighted": ["numpy.sum", "keras.losses.Huber", "keras.losses_test.HuberLossTest.setup", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.HuberLossTest.test_sample_weighted": ["numpy.multiply", "numpy.sum", "framework.constant_op.constant", "keras.losses.Huber", "numpy.asarray", "keras.losses_test.HuberLossTest.setup", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.HuberLossTest.test_timestep_weighted": ["numpy.multiply", "numpy.sum", "framework.constant_op.constant", "keras.losses.Huber", "keras.losses_test.HuberLossTest.setup", "numpy.array", "keras.losses_test.HuberLossTest.huber_loss", "test.TestCase.evaluate", "test.TestCase.assertAlmostEqual"], "keras.losses_test.HuberLossTest.test_zero_weighted": ["test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.losses_test.HuberLossTest.setup", "keras.losses.Huber"], "keras.losses_test.HuberLossTest.test_non_default_delta": ["numpy.sum", "keras.losses.Huber", "keras.losses_test.HuberLossTest.setup", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.losses_test.HuberLossTest.test_loss_with_non_default_dtype": ["keras.losses.Huber", "keras.losses_test.HuberLossTest.setup", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.backend.set_floatx"], "keras.backend.set_floatx": [], "keras.losses_test.BinaryTruePositivesViaControlFlow.__init__": ["<builtin>.super"], "<builtin>.super": [], "keras.losses_test.BinaryTruePositivesViaControlFlow.call": ["<builtin>.len", "framework.constant_op.constant", "ops.math_ops.cast", "<builtin>.range"], "ops.math_ops.cast": [], "<builtin>.len": [], "<builtin>.range": [], "keras.losses_test.CustomLossTest.test_autograph": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "framework.constant_op.constant", "keras.losses_test.CustomLossTest.test_autograph.loss_fn"], "keras.losses_test.CustomLossTest.test_autograph.loss_fn": ["keras.losses_test.BinaryTruePositivesViaControlFlow.__init__"], "test.TestCase.assertAllEqual": [], "platform.test.main": []}