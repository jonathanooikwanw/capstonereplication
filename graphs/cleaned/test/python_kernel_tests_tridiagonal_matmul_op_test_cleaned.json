{"kernel_tests.tridiagonal_matmul_op_test": ["platform.test.main"], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._testAllFormats": ["numpy.pad", "numpy.array", "numpy.stack", "framework.constant_op.constant", "test.TestCase.assertAllClose", "linalg.linalg_impl.tridiagonal_matmul", "test.TestCase.evaluate", "test.TestCase.cached_session", "ops.array_ops.stack", "numpy.diag"], "numpy.pad": [], "numpy.stack": [], "numpy.diag": [], "framework.constant_op.constant": [], "ops.array_ops.stack": [], "linalg.linalg_impl.tridiagonal_matmul": [], "test.TestCase.cached_session": [], "test.TestCase.evaluate": [], "numpy.array": [], "test.TestCase.assertAllClose": [], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._makeTridiagonalMatrix": ["ops.array_ops.matrix_diag", "ops.array_ops.pad"], "ops.array_ops.matrix_diag": [], "ops.array_ops.pad": [], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._randomComplexArray": ["numpy.random.uniform", "numpy.random.seed"], "numpy.random.seed": [], "numpy.random.uniform": [], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._gradientTest": ["test.TestCase.assertAllClose", "ops.gradient_checker_v2.compute_gradient", "framework.constant_op.constant", "test.TestCase.cached_session"], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._gradientTest.reference_matmul": ["ops.math_ops.matmul", "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._makeTridiagonalMatrix"], "ops.math_ops.matmul": [], "ops.gradient_checker_v2.compute_gradient": [], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.test2x2": ["kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._testAllFormats"], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.test3x3": ["kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._testAllFormats"], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.testComplex": ["numpy.array", "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._testAllFormats"], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.testBatch": ["<builtin>.range", "numpy.stack", "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._randomComplexArray", "framework.constant_op.constant", "test.TestCase.assertAllClose", "linalg.linalg_impl.tridiagonal_matmul", "numpy.matmul", "test.TestCase.evaluate", "test.TestCase.cached_session", "numpy.diag"], "<builtin>.range": [], "numpy.matmul": [], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.testGradientSmall": ["kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._gradientTest"], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.testGradientComplexSmall": ["kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._gradientTest", "numpy.array"], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.testGradientComplexWithBatches": ["kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._randomComplexArray", "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest._gradientTest"], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.TridiagonalMatMulBenchmark.baseline": ["ops.array_ops.pad", "ops.array_ops.expand_dims"], "ops.array_ops.expand_dims": [], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.TridiagonalMatMulBenchmark._generateData": ["numpy.random.normal", "ops.variables.Variable", "numpy.random.seed"], "numpy.random.normal": [], "ops.variables.Variable": [], "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.TridiagonalMatMulBenchmark.benchmarkTridiagonalMulOp": ["ops.variables.global_variables_initializer", "client.session.Session", "test.Benchmark.run_op_benchmark", "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.TridiagonalMatMulBenchmark._generateData", "itertools.product", "test.Benchmark.evaluate", "framework.ops.Graph", "linalg.linalg_impl.tridiagonal_matmul", "platform.test.is_gpu_available", "ops.control_flow_ops.group", "kernel_tests.tridiagonal_matmul_op_test.TridiagonalMulOpTest.TridiagonalMatMulBenchmark.baseline", "framework.ops.device", "platform.benchmark.benchmark_config"], "platform.test.is_gpu_available": [], "itertools.product": [], "framework.ops.Graph": [], "platform.benchmark.benchmark_config": [], "client.session.Session": [], "framework.ops.device": [], "ops.variables.global_variables_initializer": [], "test.Benchmark.evaluate": [], "ops.control_flow_ops.group": [], "test.Benchmark.run_op_benchmark": [], "platform.test.main": []}