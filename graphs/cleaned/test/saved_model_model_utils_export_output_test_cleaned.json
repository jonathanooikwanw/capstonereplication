{"model_utils.export_output_test": ["platform.test.main"], "model_utils.export_output_test.ExportOutputTest.test_regress_value_must_be_float": ["test.TestCase.assertRaisesRegex", "model_utils.export_output.RegressionOutput", "eager.context.graph_mode", "ops.array_ops.placeholder"], "eager.context.graph_mode": [], "ops.array_ops.placeholder": [], "test.TestCase.assertRaisesRegex": [], "model_utils.export_output.RegressionOutput": [], "model_utils.export_output_test.ExportOutputTest.test_classify_classes_must_be_strings": ["test.TestCase.assertRaisesRegex", "eager.context.graph_mode", "model_utils.export_output.ClassificationOutput", "ops.array_ops.placeholder"], "model_utils.export_output.ClassificationOutput": [], "model_utils.export_output_test.ExportOutputTest.test_classify_scores_must_be_float": ["test.TestCase.assertRaisesRegex", "eager.context.graph_mode", "model_utils.export_output.ClassificationOutput", "ops.array_ops.placeholder"], "model_utils.export_output_test.ExportOutputTest.test_classify_requires_classes_or_scores": ["test.TestCase.assertRaisesRegex", "model_utils.export_output.ClassificationOutput"], "model_utils.export_output_test.ExportOutputTest.test_build_standardized_signature_def_regression": ["tensor_shape_pb2.TensorShapeProto.Dim", "protobuf.meta_graph_pb2.SignatureDef", "test.TestCase.assertEqual", "model_utils.export_output.RegressionOutput", "ops.array_ops.placeholder", "framework.tensor_shape_pb2.TensorShapeProto", "protobuf.meta_graph_pb2.TensorInfo", "eager.context.graph_mode", "types_pb2.DataType.Value"], "protobuf.meta_graph_pb2.SignatureDef": [], "tensor_shape_pb2.TensorShapeProto.Dim": [], "framework.tensor_shape_pb2.TensorShapeProto": [], "types_pb2.DataType.Value": [], "protobuf.meta_graph_pb2.TensorInfo": [], "test.TestCase.assertEqual": [], "model_utils.export_output_test.ExportOutputTest.test_build_standardized_signature_def_classify_classes_only": ["tensor_shape_pb2.TensorShapeProto.Dim", "protobuf.meta_graph_pb2.SignatureDef", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "framework.tensor_shape_pb2.TensorShapeProto", "protobuf.meta_graph_pb2.TensorInfo", "eager.context.graph_mode", "types_pb2.DataType.Value", "model_utils.export_output.ClassificationOutput"], "model_utils.export_output_test.ExportOutputTest.test_build_standardized_signature_def_classify_both": ["tensor_shape_pb2.TensorShapeProto.Dim", "protobuf.meta_graph_pb2.SignatureDef", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "framework.tensor_shape_pb2.TensorShapeProto", "protobuf.meta_graph_pb2.TensorInfo", "eager.context.graph_mode", "types_pb2.DataType.Value", "model_utils.export_output.ClassificationOutput"], "model_utils.export_output_test.ExportOutputTest.test_build_standardized_signature_def_classify_scores_only": ["tensor_shape_pb2.TensorShapeProto.Dim", "protobuf.meta_graph_pb2.SignatureDef", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "framework.tensor_shape_pb2.TensorShapeProto", "protobuf.meta_graph_pb2.TensorInfo", "eager.context.graph_mode", "types_pb2.DataType.Value", "model_utils.export_output.ClassificationOutput"], "model_utils.export_output_test.ExportOutputTest.test_predict_outputs_valid": ["framework.constant_op.constant", "model_utils.export_output.PredictOutput"], "framework.constant_op.constant": [], "model_utils.export_output.PredictOutput": [], "model_utils.export_output_test.ExportOutputTest.test_predict_outputs_invalid": ["test.TestCase.assertRaisesRegex", "framework.constant_op.constant", "framework.sparse_tensor.SparseTensor", "model_utils.export_output.PredictOutput"], "framework.sparse_tensor.SparseTensor": [], "model_utils.export_output_test.MockSupervisedOutput._get_signature_def_fn": [], "model_utils.export_output_test.SupervisedOutputTest.test_supervised_outputs_valid": ["test.TestCase.assertEqual", "framework.constant_op.constant", "ops.metrics.mean_tensor", "eager.context.graph_mode", "export_output._SupervisedOutput.__init__"], "ops.metrics.mean_tensor": [], "export_output._SupervisedOutput.__init__": [], "model_utils.export_output_test.SupervisedOutputTest.test_supervised_outputs_none": ["test.TestCase.assertLen", "export_output._SupervisedOutput.__init__", "framework.constant_op.constant", "test.TestCase.assertIsNone"], "test.TestCase.assertLen": [], "test.TestCase.assertIsNone": [], "model_utils.export_output_test.SupervisedOutputTest.test_supervised_outputs_invalid": ["test.TestCase.assertRaisesRegex", "export_output._SupervisedOutput.__init__", "framework.constant_op.constant"], "model_utils.export_output_test.SupervisedOutputTest.test_supervised_outputs_tuples": ["test.TestCase.assertEqual", "<builtin>.set", "_SupervisedOutput.predictions.keys", "framework.constant_op.constant", "ops.metrics.mean_tensor", "_SupervisedOutput.metrics.keys", "_SupervisedOutput.loss.keys", "eager.context.graph_mode", "export_output._SupervisedOutput.__init__"], "_SupervisedOutput.loss.keys": [], "<builtin>.set": [], "_SupervisedOutput.predictions.keys": [], "_SupervisedOutput.metrics.keys": [], "model_utils.export_output_test.SupervisedOutputTest.test_supervised_outputs_no_prepend": ["test.TestCase.assertEqual", "<builtin>.set", "_SupervisedOutput.predictions.keys", "framework.constant_op.constant", "ops.metrics.mean_tensor", "_SupervisedOutput.metrics.keys", "_SupervisedOutput.loss.keys", "eager.context.graph_mode", "export_output._SupervisedOutput.__init__"], "model_utils.export_output_test.SupervisedOutputTest.test_train_signature_def": ["test.TestCase.assertIn", "framework.constant_op.constant", "ops.metrics.mean_tensor", "eager.context.graph_mode", "model_utils.export_output.TrainOutput"], "model_utils.export_output.TrainOutput": [], "test.TestCase.assertIn": [], "model_utils.export_output_test.SupervisedOutputTest.test_eval_signature_def": ["test.TestCase.assertIn", "model_utils.export_output.EvalOutput", "framework.constant_op.constant", "eager.context.graph_mode", "test.TestCase.assertNotIn"], "model_utils.export_output.EvalOutput": [], "test.TestCase.assertNotIn": [], "model_utils.export_output_test.SupervisedOutputTest.test_metric_op_is_tensor": ["test.TestCase.assertEqual", "framework.constant_op.constant", "ops.metrics.mean_tensor", "ops.control_flow_ops.no_op", "test.TestCase.assertTrue", "test.TestCase.assertIsInstance", "eager.context.graph_mode", "export_output._SupervisedOutput.__init__", "ops.variables.Variable"], "ops.control_flow_ops.no_op": [], "ops.variables.Variable": [], "test.TestCase.assertTrue": [], "test.TestCase.assertIsInstance": [], "platform.test.main": []}