{"keras.activations_test": ["platform.test.main"], "keras.activations_test._ref_softmax": ["numpy.sum", "numpy.max", "numpy.exp"], "numpy.max": [], "numpy.exp": [], "numpy.sum": [], "keras.activations_test.KerasActivationsTest.test_serialization": ["keras.activations.deserialize", "keras.activations.get", "<builtin>.getattr", "keras.activations.serialize"], "keras.activations.get": [], "<builtin>.getattr": [], "keras.activations.serialize": [], "keras.activations.deserialize": [], "keras.activations_test.KerasActivationsTest.test_serialization_v2": ["keras.activations.deserialize", "keras.activations.get", "keras.activations.serialize"], "keras.activations_test.KerasActivationsTest.test_serialization_with_layers": ["layers.core.Dense", "test.TestCase.assertEqual", "layers.serialization.deserialize", "layers.serialization.serialize", "layers.advanced_activations.LeakyReLU"], "layers.advanced_activations.LeakyReLU": [], "layers.core.Dense": [], "layers.serialization.serialize": [], "layers.serialization.deserialize": [], "test.TestCase.assertEqual": [], "keras.activations_test.KerasActivationsTest.test_softmax": ["keras.backend.placeholder", "numpy.random.random", "test.TestCase.assertRaises", "keras.activations.softmax", "keras.backend.function", "test.TestCase.assertAllClose", "keras.activations_test._ref_softmax"], "keras.backend.placeholder": [], "keras.activations.softmax": [], "keras.backend.function": [], "numpy.random.random": [], "test.TestCase.assertAllClose": [], "test.TestCase.assertRaises": [], "keras.activations_test.KerasActivationsTest.test_softmax_2d_axis_0": ["keras.backend.placeholder", "numpy.zeros", "numpy.random.random", "keras.activations.softmax", "keras.backend.function", "test.TestCase.assertAllClose", "<builtin>.range", "keras.activations_test._ref_softmax"], "numpy.zeros": [], "<builtin>.range": [], "keras.activations_test.KerasActivationsTest.test_softmax_3d_axis_tuple": ["keras.backend.placeholder", "numpy.zeros", "numpy.random.random", "keras.activations.softmax", "keras.backend.function", "test.TestCase.assertAllClose", "<builtin>.range", "keras.activations_test._ref_softmax"], "keras.activations_test.KerasActivationsTest.test_temporal_softmax": ["keras.backend.placeholder", "numpy.random.random", "keras.activations.softmax", "keras.backend.function", "test.TestCase.assertAllClose", "keras.activations_test._ref_softmax"], "keras.activations_test.KerasActivationsTest.test_selu": ["keras.activations.selu", "keras.backend.placeholder", "keras.backend.floatx", "keras.backend.function", "test.TestCase.assertAllClose", "numpy.exp", "numpy.array"], "keras.activations.selu": [], "keras.backend.floatx": [], "numpy.array": [], "keras.activations_test.KerasActivationsTest.test_softplus": ["keras.backend.placeholder", "keras.activations.softplus", "numpy.random.random", "keras.backend.function", "test.TestCase.assertAllClose", "keras.activations_test.KerasActivationsTest.test_softplus.softplus"], "keras.activations_test.KerasActivationsTest.test_softplus.softplus": ["numpy.ones_like", "numpy.log", "numpy.exp"], "numpy.ones_like": [], "numpy.log": [], "keras.activations.softplus": [], "keras.activations_test.KerasActivationsTest.test_softsign": ["keras.activations_test.KerasActivationsTest.test_softsign.softsign", "keras.backend.placeholder", "numpy.random.random", "keras.activations.softsign", "keras.backend.function", "test.TestCase.assertAllClose"], "keras.activations_test.KerasActivationsTest.test_softsign.softsign": ["numpy.ones_like", "numpy.divide", "numpy.absolute"], "numpy.absolute": [], "numpy.divide": [], "keras.activations.softsign": [], "keras.activations_test.KerasActivationsTest.test_sigmoid": ["keras.backend.placeholder", "keras.activations.sigmoid", "numpy.random.random", "keras.backend.function", "test.TestCase.assertAllClose", "numpy.vectorize"], "keras.activations_test.KerasActivationsTest.test_sigmoid.ref_sigmoid": ["numpy.exp"], "numpy.vectorize": [], "keras.activations.sigmoid": [], "keras.activations_test.KerasActivationsTest.test_hard_sigmoid": ["keras.backend.placeholder", "keras.activations.hard_sigmoid", "numpy.random.random", "keras.backend.function", "test.TestCase.assertAllClose", "numpy.vectorize"], "keras.activations_test.KerasActivationsTest.test_hard_sigmoid.ref_hard_sigmoid": [], "keras.activations.hard_sigmoid": [], "keras.activations_test.KerasActivationsTest.test_relu": ["keras.backend.placeholder", "numpy.random.uniform", "numpy.zeros", "numpy.random.random", "keras.activations.relu", "keras.backend.function", "test.TestCase.assertAllClose"], "keras.activations.relu": [], "numpy.random.uniform": [], "keras.activations_test.KerasActivationsTest.test_gelu": ["keras.backend.placeholder", "keras.activations.gelu", "numpy.random.random", "keras.activations_test.KerasActivationsTest.test_gelu.gelu", "keras.backend.function", "test.TestCase.assertAllClose"], "keras.activations_test.KerasActivationsTest.test_gelu.gelu": ["numpy.power", "numpy.tanh", "numpy.sqrt", "stats.norm.cdf"], "numpy.sqrt": [], "numpy.power": [], "numpy.tanh": [], "stats.norm.cdf": [], "keras.activations.gelu": [], "keras.activations_test.KerasActivationsTest.test_elu": ["keras.backend.placeholder", "numpy.random.random", "keras.backend.floatx", "keras.activations.elu", "keras.backend.function", "test.TestCase.assertAllClose", "numpy.exp", "numpy.array"], "keras.activations.elu": [], "keras.activations_test.KerasActivationsTest.test_tanh": ["keras.backend.placeholder", "numpy.random.random", "numpy.tanh", "keras.activations.tanh", "keras.backend.function", "test.TestCase.assertAllClose"], "keras.activations.tanh": [], "keras.activations_test.KerasActivationsTest.test_exponential": ["keras.activations.exponential", "keras.backend.placeholder", "numpy.random.random", "keras.backend.function", "test.TestCase.assertAllClose", "numpy.exp"], "keras.activations.exponential": [], "keras.activations_test.KerasActivationsTest.test_linear": ["numpy.random.random", "keras.activations.linear", "test.TestCase.assertAllClose"], "keras.activations.linear": [], "keras.activations_test.KerasActivationsTest.test_invalid_usage": ["keras.activations.get", "test.TestCase.assertRaises", "layers.advanced_activations.LeakyReLU"], "platform.test.main": []}