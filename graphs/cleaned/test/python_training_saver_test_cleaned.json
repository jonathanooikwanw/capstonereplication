{"training.saver_test": ["platform.test.main"], "training.saver_test.SaverTest.basicSaveRestore": ["eager.context.executing_eagerly", "ops.variables.global_variables_initializer", "training.saver_test_utils.CheckpointedOp", "test.TestCase.assertTrue", "ops.variables.Variable", "ops.variables.report_uninitialized_variables", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "training.saver.Saver", "test.TestCase.session", "framework.ops.Graph", "test.TestCase.assertEqual", "<builtin>.len", "<builtin>.isinstance", "os.path.join"], "test.TestCase.get_temp_dir": [], "os.path.join": [], "framework.ops.Graph": [], "test.TestCase.session": [], "ops.resource_variable_ops.ResourceVariable": [], "ops.variables.Variable": [], "training.saver_test_utils.CheckpointedOp": [], "eager.context.executing_eagerly": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertEqual": [], "training.saver.Saver": [], "<builtin>.isinstance": [], "test.TestCase.assertTrue": [], "ops.variables.report_uninitialized_variables": [], "<builtin>.len": [], "training.saver_test.SaverTest.testBasic": ["training.saver_test.SaverTest.basicSaveRestore"], "training.saver_test.SaverTest": ["framework.test_util.run_in_graph_and_eager_modes", "framework.test_util.run_v1_only"], "framework.test_util.run_in_graph_and_eager_modes": [], "training.saver_test.SaverTest.testResourceBasic": ["training.saver_test.SaverTest.basicSaveRestore"], "training.saver_test.SaverTest.testResourceColocation": ["ops.partitioned_variables.fixed_size_partitioner", "ops.variable_scope.get_variable", "training.saver.Saver", "framework.ops.device", "framework.ops.Graph", "test.TestCase.assertEqual", "framework.ops.get_default_graph"], "ops.partitioned_variables.fixed_size_partitioner": [], "framework.ops.device": [], "ops.variable_scope.get_variable": [], "framework.ops.get_default_graph": [], "training.saver_test.SaverTest.testResourceVariableReadOpsAddedDeterministically": ["<builtin>.range", "ops.resource_variable_ops.ResourceVariable", "training.saver.Saver", "framework.ops.Graph", "test.TestCase.assertEqual"], "<builtin>.range": [], "training.saver_test.SaverTest.testEagerBasic": ["test.TestCase.get_temp_dir", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "training.saver.Saver", "test.TestCase.assertAllEqual", "eager.context.eager_mode", "test.TestCase.assertNear", "os.path.join"], "eager.context.eager_mode": [], "test.TestCase.assertNear": [], "test.TestCase.assertAllEqual": [], "training.saver_test.SaverTest.testEagerGraphCompatibility": ["ops.variables.global_variables_initializer", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "eager.context.graph_mode", "test.TestCase.session", "training.saver.Saver", "ops._default_graph_stack.reset", "eager.context.eager_mode", "test.TestCase.assertAllEqual", "framework.ops.Graph", "framework.ops.reset_default_graph", "os.path.join"], "eager.context.graph_mode": [], "ops._default_graph_stack.reset": [], "framework.ops.reset_default_graph": [], "training.saver_test.SaverTest.testResourceSaveRestoreCachingDevice": ["eager.context.executing_eagerly", "ops.variables.global_variables_initializer", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "training.saver.Saver", "test.TestCase.session", "framework.ops.Graph", "test.TestCase.assertEqual", "os.path.join"], "training.saver_test.SaverTest.testNoAdditionalOpsAddedBySaverForResourceVariablesOutsideSaveScope": ["framework.ops.name_scope", "ops.resource_variable_ops.ResourceVariable", "training.saver.Saver", "framework.ops.Graph", "test.TestCase.assertEqual"], "framework.ops.name_scope": [], "training.saver_test.SaverTest.testSaveCopyRestoreWithSaveRelativePaths": ["ops.variables.global_variables_initializer", "training.saver_test_utils.CheckpointedOp", "test.TestCase.cached_session", "<builtin>.isinstance", "test.TestCase.assertTrue", "os.mkdir", "ops.variables.report_uninitialized_variables", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "training.checkpoint_management.latest_checkpoint", "os.renames", "framework.ops.Graph", "test.TestCase.assertEqual", "<builtin>.len", "ops.variables.VariableV1", "os.path.join"], "os.mkdir": [], "ops.variables.VariableV1": [], "test.TestCase.cached_session": [], "training.checkpoint_management.latest_checkpoint": [], "os.renames": [], "training.saver_test.SaverTest.testFilenameTensor": ["test.TestCase.cached_session", "test.TestCase.evaluate", "training.saver.Saver", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.variables.VariableV1"], "training.saver_test.SaverTest.testInvalidPath": ["training.saver.Saver", "test.TestCase.assertRaisesRegex", "test.TestCase.cached_session", "ops.variables.VariableV1"], "test.TestCase.assertRaisesRegex": [], "framework.test_util.run_v1_only": [], "training.saver_test.SaverTest.testInt64": ["test.TestCase.cached_session", "test.TestCase.assertTrue", "test.TestCase.assertRaisesWithPredicateMatch", "<builtin>.isinstance", "numpy.int64", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "ops.variables.VariableV1", "os.path.join"], "numpy.int64": [], "training.saver_test.SaverTest.testInt64.<lambda1>": [], "test.TestCase.assertRaisesWithPredicateMatch": [], "training.saver_test.SaverTest.testSomeErrors": ["ops.partitioned_variables.fixed_size_partitioner", "ops.variable_scope.get_variable", "training.saver.Saver", "test.TestCase.assertRaisesRegex", "variables.Variable.SaveSliceInfo", "framework.ops.Graph", "ops.variables.VariableV1"], "variables.Variable.SaveSliceInfo": [], "training.saver_test.SaverTest.testSameName": ["training.saver_test_utils.CheckpointedOp", "training.saver.Saver", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "ops.variables.VariableV1"], "training.saver_test.SaverTest.testBasicsWithListOfVariables": ["ops.variables.global_variables_initializer", "training.saver_test_utils.CheckpointedOp", "test.TestCase.assertTrue", "<builtin>.isinstance", "test.TestCase.assertRaisesWithPredicateMatch", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.session", "framework.ops.Graph", "test.TestCase.assertEqual", "<builtin>.len", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.SaverTest.testBasicsWithListOfVariables.<lambda1>": [], "training.saver_test.SaverTest.testBasicsWithListOfVariables.<lambda2>": [], "training.saver_test.SaverTest._SaveAndLoad": ["eager.context.executing_eagerly", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "training.saver.Saver", "test.TestCase.session", "framework.ops.Graph", "test.TestCase.assertAllClose", "test.TestCase.assertEqual"], "test.TestCase.assertAllClose": [], "training.saver_test.SaverTest.testCacheRereadsFile": ["training.saver_test.SaverTest._SaveAndLoad", "test.TestCase.get_temp_dir", "os.path.join"], "training.saver_test.SaverTest.testAllowEmpty": ["test.TestCase.cached_session", "framework.constant_op.constant", "test.TestCase.get_temp_dir", "training.saver.Saver", "framework.ops.Graph", "test.TestCase.assertIsNone", "os.path.join"], "framework.constant_op.constant": [], "test.TestCase.assertIsNone": [], "training.saver_test.SaverTest.testGPU": ["ops.variables.global_variables_initializer", "platform.test.gpu_device_name", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "client.session.Session", "platform.test.is_gpu_available", "framework.ops.Graph", "ops.variables.VariableV1", "os.path.join"], "platform.test.is_gpu_available": [], "client.session.Session": [], "platform.test.gpu_device_name": [], "training.saver_test.SaverTest.testSharedServerOnGPU": ["ops.variables.global_variables_initializer", "platform.test.gpu_device_name", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "client.session.Session", "platform.test.is_gpu_available", "framework.ops.Graph", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.SaverTest.testVariables": ["ops.variables.global_variables_initializer", "training.saver_test_utils.CheckpointedOp", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "client.session.Session", "framework.ops.Graph", "test.TestCase.assertAllClose", "test.TestCase.assertEqual", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.SaverTest.testVarListShouldBeEmptyInDeferredBuild": ["framework.ops.Graph", "training.saver.Saver", "test.TestCase.assertRaisesRegex", "ops.variables.VariableV1"], "training.saver_test.SaverTest.testBuildShouldBeCalledBeforeSaveInCaseOfDeferBuild": ["test.TestCase.get_temp_dir", "training.saver.Saver", "client.session.Session", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.SaverTest.testDeferredBuild": ["ops.variables.global_variables_initializer", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "client.session.Session", "framework.ops.Graph", "test.TestCase.assertAllClose", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.SaverTest.testReshape": ["ops.variables.global_variables_initializer", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "client.session.Session", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "test.TestCase.assertAllClose", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.SaverTest.testSaveWithGlobalStep": ["eager.context.executing_eagerly", "test.TestCase.assertEqual", "training.saver_test.SaverTest._SaveAndLoad", "framework.constant_op.constant", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "training.saver.Saver", "test.TestCase.session", "framework.ops.Graph", "framework.ops.get_default_session", "os.path.join"], "framework.ops.get_default_session": [], "training.saver_test.SaverTest.testSaveWithGlobalStepWithPadding": ["training.saver_test.SaverTest.testSaveWithGlobalStep"], "training.saver_test.SaverTest.testSaveToNonexistingPath": ["test.TestCase.cached_session", "io.file_io.write_string_to_file", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "<builtin>.str", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "ops.variables.VariableV1", "os.path.join"], "io.file_io.write_string_to_file": [], "<builtin>.str": [], "training.saver_test.SaverTest.testSaveToURI": ["test.TestCase.assertEqual", "test.TestCase.cached_session", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "ops.variables.global_variables_initializer", "test.TestCase.skipTest", "ops.variables.VariableV1", "os.path.join"], "test.TestCase.skipTest": [], "training.saver_test.SaverTest.testSaveRestoreAndValidateVariableDtype": ["eager.context.executing_eagerly", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.session", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "os.path.join"], "training.saver_test.SaverTest.testRestoreLargeTensors": ["ops.variables.global_variables_initializer", "training.saver_test.SaverTest.testRestoreLargeTensors._model", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.session", "framework.ops.Graph", "<builtin>.zip", "test.TestCase.assertAllEqual"], "training.saver_test.SaverTest.testRestoreLargeTensors._model": ["<builtin>.range", "ops.variable_scope.get_variable"], "<builtin>.zip": [], "training.saver_test.SaverTest.test_metrics_save_restore": ["pywrap_saved_model.metrics.GetTrainingTimeSaved", "eager.context.executing_eagerly", "ops.variables.global_variables_initializer", "training.saver_test_utils.CheckpointedOp", "training.saver_test.SaverTest.test_metrics_save_restore._get_write_histogram_proto", "test.TestCase.get_temp_dir", "ops.resource_variable_ops.ResourceVariable", "test.TestCase.evaluate", "training.saver_test.SaverTest.test_metrics_save_restore._get_read_histogram_proto", "test.TestCase.session", "training.saver.Saver", "test.TestCase.assertGreater", "framework.ops.Graph", "test.TestCase.assertEqual", "os.path.join"], "training.saver_test.SaverTest.test_metrics_save_restore._get_write_histogram_proto": ["framework.summary_pb2.HistogramProto", "pywrap_saved_model.metrics.GetCheckpointWriteDurations"], "pywrap_saved_model.metrics.GetCheckpointWriteDurations": [], "framework.summary_pb2.HistogramProto": [], "training.saver_test.SaverTest.test_metrics_save_restore._get_read_histogram_proto": ["framework.summary_pb2.HistogramProto", "pywrap_saved_model.metrics.GetCheckpointReadDurations"], "pywrap_saved_model.metrics.GetCheckpointReadDurations": [], "pywrap_saved_model.metrics.GetTrainingTimeSaved": [], "test.TestCase.assertGreater": [], "training.saver_test.SaveRestoreShardedTest._get_test_dir": ["platform.gfile.MakeDirs", "test.TestCase.get_temp_dir", "os.path.join"], "platform.gfile.MakeDirs": [], "training.saver_test.SaveRestoreShardedTest.testBasics": ["training.saver_test_utils.CheckpointedOp", "training.checkpoint_management.meta_graph_filename", "test.TestCase.get_temp_dir", "protobuf.config_pb2.ConfigProto", "test.TestCase.evaluate", "training.saver.Saver", "training.checkpoint_management.latest_checkpoint", "client.session.Session", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "ops.variables.VariableV1", "os.path.join"], "protobuf.config_pb2.ConfigProto": [], "training.checkpoint_management.meta_graph_filename": [], "training.saver_test.SaveRestoreShardedTest.testSaverDef": ["test.TestCase.assertTrue", "test.TestCase.cached_session", "training.saver.Saver", "framework.ops.Graph", "ops.variables.VariableV1"], "training.saver_test.SaveRestoreShardedTest._testPartitionedVariables": ["ops.partitioned_variables.fixed_size_partitioner", "training.saver_test.SaveRestoreShardedTest._testPartitionedVariables._save", "training.saver_test.SaveRestoreShardedTest._get_test_dir", "training.saver_test.SaveRestoreShardedTest._testPartitionedVariables._restore", "test.TestCase.assertAllEqual", "os.path.join"], "training.saver_test.SaveRestoreShardedTest._testPartitionedVariables._save": ["ops.variables.global_variables_initializer", "ops.variable_scope.get_variable", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "training.saver.Saver", "test.TestCase.session", "ops.random_ops.random_uniform", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.variables.VariableV1"], "ops.random_ops.random_uniform": [], "training.saver_test.SaveRestoreShardedTest._testPartitionedVariables._restore": ["ops.variables.global_variables_initializer", "ops.array_ops.zeros", "ops.variable_scope.get_variable", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.session", "framework.ops.Graph", "ops.variables.VariableV1"], "ops.array_ops.zeros": [], "training.saver_test.SaveRestoreShardedTest.testPartitionedVariable": ["training.saver_test.SaveRestoreShardedTest._testPartitionedVariables"], "training.saver_test.SaveRestoreShardedTest.testPartitionedResourceVariable": ["training.saver_test.SaveRestoreShardedTest._testPartitionedVariables"], "training.saver_test.SaveRestoreShardedTestV2.testIterators": ["ops.iterator_ops._IteratorSaveable", "dataset_ops.Dataset.range", "glob.glob", "test.TestCase.get_temp_dir", "protobuf.config_pb2.ConfigProto", "test.TestCase.evaluate", "training.saver.Saver", "client.session.Session", "test.TestCase.assertEqual", "ops.dataset_ops.make_initializable_iterator", "<builtin>.len", "os.path.join"], "dataset_ops.Dataset.range": [], "ops.dataset_ops.make_initializable_iterator": [], "ops.iterator_ops._IteratorSaveable": [], "glob.glob": [], "training.saver_test.SaveRestoreShardedTestV2.testIteratorsUnshardedRestore": ["ops.iterator_ops._IteratorSaveable", "dataset_ops.Dataset.range", "glob.glob", "test.TestCase.get_temp_dir", "protobuf.config_pb2.ConfigProto", "test.TestCase.evaluate", "training.saver.Saver", "client.session.Session", "test.TestCase.assertEqual", "ops.dataset_ops.make_initializable_iterator", "<builtin>.len", "os.path.join"], "training.saver_test.MaxToKeepTest._get_test_dir": ["platform.gfile.MakeDirs", "test.TestCase.get_temp_dir", "os.path.join"], "training.saver_test.MaxToKeepTest.assertCheckpointState": ["test.TestCase.assertEqual", "training.checkpoint_management.get_checkpoint_state"], "training.checkpoint_management.get_checkpoint_state": [], "training.saver_test.MaxToKeepTest.testMaxToKeepEager": ["eager.context.executing_eagerly", "test.TestCase.assertTrue", "test.TestCase.assertFalse", "test.TestCase.evaluate", "training.saver.Saver", "ops.variable_scope.variable", "eager.context.eager_mode", "training.checkpoint_management.checkpoint_exists", "ops.variables.global_variables_initializer", "training.saver_test.MaxToKeepTest.assertCheckpointState", "test.TestCase.assertEqual", "training.saver_test.MaxToKeepTest._get_test_dir", "os.path.join"], "ops.variable_scope.variable": [], "training.checkpoint_management.checkpoint_exists": [], "test.TestCase.assertFalse": [], "training.saver_test.MaxToKeepTest.testNonSharded": ["test.TestCase.cached_session", "ops.variables.global_variables_initializer", "test.TestCase.assertTrue", "test.TestCase.assertFalse", "training.checkpoint_management.meta_graph_filename", "test.TestCase.evaluate", "training.saver.Saver", "training.checkpoint_management.checkpoint_exists", "framework.ops.Graph", "training.saver_test.MaxToKeepTest.assertCheckpointState", "test.TestCase.assertEqual", "training.saver_test.MaxToKeepTest._get_test_dir", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.MaxToKeepTest.testSharded": ["platform.gfile.Exists", "test.TestCase.assertTrue", "test.TestCase.assertFalse", "platform.gfile.Glob", "training.checkpoint_management.meta_graph_filename", "protobuf.config_pb2.ConfigProto", "test.TestCase.evaluate", "training.saver.Saver", "client.session.Session", "<builtin>.len", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "training.saver_test.MaxToKeepTest._get_test_dir", "ops.variables.VariableV1", "os.path.join"], "platform.gfile.Glob": [], "platform.gfile.Exists": [], "training.saver_test.MaxToKeepTest.testNoMaxToKeep": ["test.TestCase.cached_session", "test.TestCase.assertTrue", "test.TestCase.evaluate", "training.saver.Saver", "training.checkpoint_management.checkpoint_exists", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "training.saver_test.MaxToKeepTest._get_test_dir", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.MaxToKeepTest.testNoMetaGraph": ["test.TestCase.cached_session", "test.TestCase.assertTrue", "platform.gfile.Exists", "test.TestCase.assertFalse", "training.checkpoint_management.meta_graph_filename", "test.TestCase.evaluate", "training.saver.Saver", "training.checkpoint_management.checkpoint_exists", "ops.variables.global_variables_initializer", "training.saver_test.MaxToKeepTest._get_test_dir", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.RecoverLastCheckpointsTest._get_test_dir": ["platform.gfile.MakeDirs", "test.TestCase.get_temp_dir", "os.path.join"], "training.saver_test.RecoverLastCheckpointsTest.assertCheckpointState": ["test.TestCase.assertEqual", "training.checkpoint_management.get_checkpoint_state"], "training.saver_test.RecoverLastCheckpointsTest.test_recover_last_checkpoints": ["test.TestCase.assertTrue", "test.TestCase.assertFalse", "training.saver_test.RecoverLastCheckpointsTest.assertCheckpointState", "platform.gfile.Remove", "platform.gfile.Glob", "test.TestCase.evaluate", "training.saver_test.RecoverLastCheckpointsTest._get_test_dir", "training.saver.Saver", "ops.variable_scope.variable", "eager.context.eager_mode", "training.checkpoint_management.checkpoint_exists", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "os.path.join"], "platform.gfile.Remove": [], "training.saver_test.KeepCheckpointEveryNHoursTest._get_test_dir": ["platform.gfile.MakeDirs", "test.TestCase.get_temp_dir", "os.path.join"], "training.saver_test.KeepCheckpointEveryNHoursTest": ["framework.test_util.run_in_graph_and_eager_modes", "mock.patch.object"], "mock.patch.object": [], "training.saver_test.KeepCheckpointEveryNHoursTest.testNonSharded": ["test.TestCase.cached_session", "test.TestCase.assertTrue", "test.TestCase.assertFalse", "test.TestCase.evaluate", "time.time", "training.saver.Saver", "ops.variable_scope.variable", "training.saver_test.KeepCheckpointEveryNHoursTest._get_test_dir", "training.checkpoint_management.checkpoint_exists", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "os.path.join"], "time.time": [], "training.saver_test.SaveRestoreWithVariableNameMap._testNonReshape": ["test.TestCase.assertRaisesOpError", "eager.context.executing_eagerly", "ops.variables.global_variables_initializer", "test.TestCase.assertTrue", "ops.variables.Variable", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "training.saver.Saver", "test.TestCase.session", "framework.ops.Graph", "test.TestCase.assertEqual", "<builtin>.isinstance", "os.path.join"], "test.TestCase.assertRaisesOpError": [], "training.saver_test.SaveRestoreWithVariableNameMap": ["framework.test_util.run_in_graph_and_eager_modes"], "training.saver_test.SaveRestoreWithVariableNameMap.testNonReshapeResourceVariable": ["training.saver_test.SaveRestoreWithVariableNameMap._testNonReshape"], "training.saver_test.SaveRestoreWithVariableNameMap.testNonReshapeVariable": ["training.saver_test.SaveRestoreWithVariableNameMap._testNonReshape"], "training.saver_test.MetaGraphTest._get_test_dir": ["platform.gfile.MakeDirs", "test.TestCase.get_temp_dir", "os.path.join"], "training.saver_test.MetaGraphTest": ["framework.test_util.run_v1_only"], "training.saver_test.MetaGraphTest.testAddCollectionDef": ["training.saver_test.MetaGraphTest._get_test_dir", "protobuf.queue_runner_pb2.QueueRunnerDef", "training.saver.Saver", "ops.data_flow_ops.FIFOQueue", "ops.variables.VariableV1", "test.TestCase.assertNotEqual", "framework.test_util.assert_meta_graph_protos_equal", "ops.control_flow_ops.while_loop", "training.saver.import_meta_graph", "<builtin>.len", "protobuf.any_pb2.Any", "training.queue_runner_impl.QueueRunner", "framework.ops.add_to_collection", "framework.ops.Graph", "<builtin>.str", "test.TestCase.cached_session", "test.TestCase.assertTrue", "ops.control_flow_ops.cond", "framework.constant_op.constant", "ops.math_ops.less", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "training.queue_runner_impl.add_queue_runner", "os.path.join"], "ops.math_ops.less": [], "training.saver_test.MetaGraphTest.testAddCollectionDef.<lambda1>": ["ops.math_ops.add"], "ops.math_ops.add": [], "training.saver_test.MetaGraphTest.testAddCollectionDef.<lambda2>": ["ops.math_ops.subtract"], "ops.math_ops.subtract": [], "ops.control_flow_ops.cond": [], "training.saver_test.MetaGraphTest.testAddCollectionDef.<lambda3>": ["ops.math_ops.less"], "training.saver_test.MetaGraphTest.testAddCollectionDef.<lambda4>": ["ops.math_ops.add"], "ops.control_flow_ops.while_loop": [], "ops.data_flow_ops.FIFOQueue": [], "training.queue_runner_impl.QueueRunner": [], "framework.ops.add_to_collection": [], "training.queue_runner_impl.add_queue_runner": [], "protobuf.queue_runner_pb2.QueueRunnerDef": [], "protobuf.any_pb2.Any": [], "test.TestCase.assertNotEqual": [], "training.saver.import_meta_graph": [], "framework.test_util.assert_meta_graph_protos_equal": [], "training.saver_test.MetaGraphTest.testAddCollectionDefFails": ["test.TestCase.cached_session", "protobuf.meta_graph_pb2.MetaGraphDef", "training.saver.Saver", "framework.ops.add_to_collection", "test.TestCase.assertEqual", "<builtin>.len", "ops.variables.VariableV1"], "protobuf.meta_graph_pb2.MetaGraphDef": [], "training.saver_test.MetaGraphTest._testMultiSaverCollectionSave": ["ops.variables.global_variables_initializer", "test.TestCase.assertTrue", "test.TestCase.assertFalse", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.session", "training.saver.export_meta_graph", "<builtin>.getattr", "framework.ops.add_to_collection", "framework.ops.Graph", "test.TestCase.assertEqual", "<builtin>.len", "ops.variables.VariableV1", "os.path.join"], "training.saver.export_meta_graph": [], "<builtin>.getattr": [], "training.saver_test.MetaGraphTest._testMultiSaverCollectionRestore": ["test.TestCase.assertRaisesWithPredicateMatch", "test.TestCase.evaluate", "test.TestCase.assertAllEqual", "test.TestCase.session", "framework.ops.Graph", "training.saver.import_meta_graph", "test.TestCase.assertEqual", "framework.ops.get_collection", "<builtin>.len", "os.path.join"], "framework.ops.get_collection": [], "training.saver_test.MetaGraphTest._testMultiSaverCollectionRestore.<lambda1>": [], "training.saver_test.MetaGraphTest.testMultiSaverCollection": ["training.saver_test.MetaGraphTest._get_test_dir", "training.saver_test.MetaGraphTest._testMultiSaverCollectionSave", "training.saver_test.MetaGraphTest._testMultiSaverCollectionRestore"], "training.saver_test.MetaGraphTest.testClearExtraneousSavers": ["training.saver_test.MetaGraphTest._get_test_dir", "ops.variables.global_variables_initializer", "test.TestCase.assertTrue", "test.TestCase.assertFalse", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.session", "training.saver.export_meta_graph", "<builtin>.getattr", "framework.ops.add_to_collection", "framework.ops.Graph", "test.TestCase.assertEqual", "<builtin>.len", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.MetaGraphTest.testBinaryAndTextFormat": ["training.saver_test.MetaGraphTest._get_test_dir", "test.TestCase.assertRaisesWithPredicateMatch", "platform.gfile.Remove", "test.TestCase.session", "training.saver.export_meta_graph", "os.path.dirname", "os.path.basename", "framework.graph_io.write_graph", "framework.ops.Graph", "training.saver.import_meta_graph", "test.TestCase.assertIsNotNone", "ops.variables.VariableV1", "os.path.join"], "test.TestCase.assertIsNotNone": [], "os.path.dirname": [], "os.path.basename": [], "framework.graph_io.write_graph": [], "training.saver_test.MetaGraphTest.testBinaryAndTextFormat.<lambda1>": [], "training.saver_test.MetaGraphTest.testBinaryAndTextFormat.<lambda2>": [], "training.saver_test.MetaGraphTest.testSliceVariable": ["training.saver_test.MetaGraphTest._get_test_dir", "test.TestCase.cached_session", "test.TestCase.evaluate", "training.saver.Saver", "framework.ops.Graph", "variables.Variable.SaveSliceInfo", "framework.test_util.assert_meta_graph_protos_equal", "ops.variables.global_variables_initializer", "training.saver.import_meta_graph", "test.TestCase.assertIsNotNone", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.MetaGraphTest._testGraphExtensionSave": ["ops.math_ops.matmul", "training.saver.Saver", "ops.variables.VariableV1", "math.sqrt", "ops.control_flow_ops.while_loop", "ops.array_ops.zeros", "framework.ops.name_scope", "framework.ops.add_to_collection", "ops.random_ops.truncated_normal", "random.random", "test.TestCase.cached_session", "ops.control_flow_ops.cond", "framework.constant_op.constant", "test.TestCase.evaluate", "<builtin>.float", "ops.math_ops.less", "ops.nn_ops.relu", "ops.variables.global_variables_initializer", "os.path.join"], "<builtin>.float": [], "math.sqrt": [], "ops.random_ops.truncated_normal": [], "random.random": [], "training.saver_test.MetaGraphTest._testGraphExtensionSave.<lambda1>": ["ops.array_ops.ones"], "ops.array_ops.ones": [], "training.saver_test.MetaGraphTest._testGraphExtensionSave.<lambda2>": ["ops.array_ops.zeros"], "ops.math_ops.matmul": [], "ops.nn_ops.relu": [], "training.saver_test.MetaGraphTest._testGraphExtensionSave.loop_cond": [], "training.saver_test.MetaGraphTest._testGraphExtensionSave.loop_body": ["framework.constant_op.constant"], "training.saver_test.MetaGraphTest._testGraphExtensionRestore": ["ops.array_ops.stack", "ops.array_ops.expand_dims", "ops.sparse_ops.sparse_to_dense", "test.TestCase.session", "training.saver.export_meta_graph", "training.gradient_descent.GradientDescentOptimizer", "ops.nn_ops.softmax_cross_entropy_with_logits", "framework.ops.get_collection", "ops.math_ops.range", "ops.math_ops.reduce_mean", "training.saver.import_meta_graph", "summary.summary.scalar", "ops.array_ops.size", "framework.ops.add_to_collection", "framework.ops.Graph", "framework.constant_op.constant", "ops.array_ops.concat", "test.TestCase.evaluate", "os.path.join"], "ops.array_ops.size": [], "ops.array_ops.expand_dims": [], "ops.math_ops.range": [], "ops.array_ops.concat": [], "ops.array_ops.stack": [], "ops.sparse_ops.sparse_to_dense": [], "ops.nn_ops.softmax_cross_entropy_with_logits": [], "ops.math_ops.reduce_mean": [], "summary.summary.scalar": [], "training.gradient_descent.GradientDescentOptimizer": [], "training.saver_test.MetaGraphTest._testRestoreFromTrainGraphWithControlContext": ["test.TestCase.evaluate", "test.TestCase.session", "framework.ops.Graph", "training.saver.import_meta_graph", "framework.ops.get_collection", "os.path.join"], "training.saver_test.MetaGraphTest.testGraphExtension": ["training.saver_test.MetaGraphTest._get_test_dir", "training.saver_test.MetaGraphTest._testGraphExtensionRestore", "training.saver_test.MetaGraphTest._testRestoreFromTrainGraphWithControlContext", "training.saver_test.MetaGraphTest._testGraphExtensionSave", "framework.ops.Graph"], "training.saver_test.MetaGraphTest._testGradientSerDes": ["training.saver_test.MetaGraphTest._get_test_dir", "ops.variables.global_variables_initializer", "ops.gradients_impl.gradients", "test.TestCase.evaluate", "protobuf.config_pb2.ConfigProto", "training.saver.Saver", "client.session.Session", "framework.ops.Graph", "training.saver.import_meta_graph", "test.TestCase.assertEqual", "framework.ops.get_default_graph", "ops.variables.VariableV1", "os.path.join"], "ops.gradients_impl.gradients": [], "training.saver_test.MetaGraphTest._testWhileLoopAndGradientSerDes": ["training.saver_test.MetaGraphTest._testGradientSerDes"], "training.saver_test.MetaGraphTest._testWhileLoopAndGradientSerDes.<lambda1>": ["ops.control_flow_ops.while_loop"], "training.saver_test.MetaGraphTest._testWhileLoopAndGradientSerDes.<lambda1>.<lambda1>": [], "training.saver_test.MetaGraphTest.testNestedWhileLoopsSerDes": ["training.saver_test.MetaGraphTest._testWhileLoopAndGradientSerDes"], "training.saver_test.MetaGraphTest.testNestedWhileLoopsSerDes.body": ["ops.control_flow_ops.while_loop"], "training.saver_test.MetaGraphTest.testNestedWhileLoopsSerDes.body.<lambda1>": [], "training.saver_test.MetaGraphTest.testNestedWhileLoopsSerDes.body.<lambda2>": [], "training.saver_test.MetaGraphTest.testNestedControlFlowSerDes": ["training.saver_test.MetaGraphTest._testWhileLoopAndGradientSerDes"], "training.saver_test.MetaGraphTest.testNestedControlFlowSerDes.body": ["ops.control_flow_ops.cond"], "training.saver_test.MetaGraphTest.testNestedControlFlowSerDes.body.<lambda1>": ["ops.control_flow_ops.while_loop"], "training.saver_test.MetaGraphTest.testNestedControlFlowSerDes.body.<lambda1>.<lambda1>": [], "training.saver_test.MetaGraphTest.testNestedControlFlowSerDes.body.<lambda1>.<lambda2>": [], "training.saver_test.MetaGraphTest.testNestedControlFlowSerDes.body.<lambda2>": [], "training.saver_test.MetaGraphTest.testNestedCondsSerDes": ["training.saver_test.MetaGraphTest._testGradientSerDes"], "training.saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>": ["ops.control_flow_ops.cond"], "training.saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda1>": ["ops.control_flow_ops.cond"], "training.saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda1>.<lambda1>": ["ops.array_ops.identity"], "ops.array_ops.identity": [], "training.saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda1>.<lambda2>": ["ops.math_ops.multiply"], "ops.math_ops.multiply": [], "training.saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda2>": ["ops.control_flow_ops.cond"], "training.saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda2>.<lambda1>": ["framework.constant_op.constant"], "training.saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda2>.<lambda2>": ["ops.math_ops.multiply"], "training.saver_test.MetaGraphTest.testStrippedOpListDef": ["test.TestCase.assertEqual", "test.TestCase.cached_session", "ops.array_ops.identity", "framework.meta_graph.stripped_op_list_for_graph", "training.saver.Saver", "framework.function.Defun", "ops.variables.global_variables_initializer", "ops.math_ops.add", "ops.variables.VariableV1", "training.saver_test.MetaGraphTest.testStrippedOpListDef.minus_one"], "framework.function.Defun": [], "training.saver_test.MetaGraphTest.testStrippedOpListDef.minus_one": [], "framework.meta_graph.stripped_op_list_for_graph": [], "training.saver_test.MetaGraphTest.testStripDefaultValuedAttrs": ["test.TestCase.cached_session", "ops.variables.global_variables_initializer", "test.TestCase.assertIn", "test.TestCase.assertNotIn", "ops.math_ops.complex", "training.saver.Saver", "test.TestCase.session", "framework.test_util.get_node_def_from_graph", "framework.ops.Graph", "ops.variables.VariableV1"], "ops.math_ops.complex": [], "framework.test_util.get_node_def_from_graph": [], "test.TestCase.assertNotIn": [], "test.TestCase.assertIn": [], "training.saver_test.MetaGraphTest.testImportIntoNamescope": ["training.saver_test.MetaGraphTest._get_test_dir", "ops.array_ops.placeholder", "ops.math_ops.matmul", "ops.variables.global_variables_initializer", "ops.array_ops.zeros", "ops.nn_ops.softmax_cross_entropy_with_logits", "ops.nn_ops.softmax", "test.TestCase.evaluate", "training.saver.Saver", "ops.random_ops.random_uniform", "client.session.Session", "training.adam.AdamOptimizer", "ops.nn_ops.relu", "framework.ops.Graph", "training.saver.import_meta_graph", "ops.variables.VariableV1", "os.path.join"], "ops.array_ops.placeholder": [], "ops.nn_ops.softmax": [], "training.adam.AdamOptimizer": [], "training.saver_test.MetaGraphTest.testImportIntoNamescopeWithoutVariables": ["training.saver_test.MetaGraphTest._get_test_dir", "ops.variables.global_variables_initializer", "ops.array_ops.zeros", "test.TestCase.assertIsInstance", "framework.constant_op.constant", "test.TestCase.evaluate", "training.saver.Saver", "client.session.Session", "framework.ops.Graph", "training.saver.import_meta_graph", "test.TestCase.assertIsNone", "ops.variables.VariableV1", "os.path.join"], "test.TestCase.assertIsInstance": [], "training.saver_test.MetaGraphTest.testImportIntoImplicitNamescope": ["training.saver_test.MetaGraphTest._get_test_dir", "ops.array_ops.placeholder", "ops.math_ops.matmul", "ops.variables.global_variables_initializer", "ops.array_ops.zeros", "ops.nn_ops.softmax_cross_entropy_with_logits", "framework.ops.name_scope", "ops.nn_ops.softmax", "test.TestCase.evaluate", "training.saver.Saver", "ops.random_ops.random_uniform", "client.session.Session", "training.adam.AdamOptimizer", "ops.nn_ops.relu", "framework.ops.Graph", "training.saver.import_meta_graph", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.MetaGraphTest.testClearDevicesOnImport": ["ops.array_ops.placeholder", "ops.math_ops.matmul", "ops.variables.global_variables_initializer", "ops.array_ops.zeros", "test.TestCase.assertRaises", "ops.nn_ops.softmax_cross_entropy_with_logits", "test.TestCase.evaluate", "ops.random_ops.random_uniform", "training.saver.export_meta_graph", "client.session.Session", "training.adam.AdamOptimizer", "ops.nn_ops.relu", "framework.ops.device", "framework.ops.Graph", "training.saver.import_meta_graph", "ops.variables.VariableV1", "ops.nn_ops.softmax"], "test.TestCase.assertRaises": [], "training.saver_test.MetaGraphTest.testClearDevicesOnExport": ["ops.array_ops.placeholder", "ops.math_ops.matmul", "ops.variables.global_variables_initializer", "ops.array_ops.zeros", "ops.nn_ops.softmax_cross_entropy_with_logits", "training.saver.import_meta_graph", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "ops.random_ops.random_uniform", "training.saver.export_meta_graph", "client.session.Session", "training.adam.AdamOptimizer", "ops.nn_ops.relu", "framework.ops.device", "framework.ops.Graph", "framework.graph_io.write_graph", "ops.variables.VariableV1", "ops.nn_ops.softmax"], "training.saver_test.MetaGraphTest.testPreserveDatasetAndFunctions": ["<builtin>.range", "dataset_ops.Dataset.range", "ops.variables.global_variables_initializer", "ops.array_ops.identity", "test.TestCase.evaluate", "training.saver.export_meta_graph", "client.session.Session", "test.TestCase.assertRaises", "framework.ops.Graph", "training.saver.import_meta_graph", "ops.dataset_ops.make_one_shot_iterator", "test.TestCase.assertEqual"], "training.saver_test.MetaGraphTest.testPreserveDatasetAndFunctions.<lambda1>": [], "ops.dataset_ops.make_one_shot_iterator": [], "training.saver_test.CheckpointReaderTest.testDebugString": ["os.path.join", "test.TestCase.cached_session", "test.TestCase.assertTrue", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.assertRaisesRegex", "ops.variables.global_variables_initializer", "util.compat.as_bytes", "test.TestCase.assertEqual", "training.py_checkpoint_reader.NewCheckpointReader", "test.TestCase.assertAllEqual", "<builtin>.str", "ops.variables.VariableV1"], "training.py_checkpoint_reader.NewCheckpointReader": [], "util.compat.as_bytes": [], "training.saver_test.CheckpointReaderTest.testNonexistentPath": ["training.py_checkpoint_reader.NewCheckpointReader", "test.TestCase.assertRaisesRegex"], "training.saver_test.WriteGraphTest._get_test_dir": ["platform.gfile.MakeDirs", "test.TestCase.get_temp_dir", "os.path.join"], "training.saver_test.WriteGraphTest.testWriteGraph": ["test.TestCase.assertTrue", "os.path.exists", "training.saver_test.WriteGraphTest._get_test_dir", "framework.graph_io.write_graph", "test.TestCase.assertEqual", "framework.ops.get_default_graph", "ops.variables.VariableV1", "os.path.join"], "os.path.exists": [], "training.saver_test.WriteGraphTest.testRecursiveCreate": ["test.TestCase.assertTrue", "os.path.exists", "training.saver_test.WriteGraphTest._get_test_dir", "framework.graph_io.write_graph", "test.TestCase.assertEqual", "framework.ops.get_default_graph", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.ScopedGraphTest._get_test_dir": ["platform.gfile.MakeDirs", "test.TestCase.get_temp_dir", "os.path.join"], "training.saver_test.ScopedGraphTest._testScopedSave": ["ops.variables.global_variables_initializer", "protobuf.queue_runner_pb2.QueueRunnerDef", "training.saver.Saver", "test.TestCase.session", "ops.variables.VariableV1", "math.sqrt", "ops.control_flow_ops.while_loop", "protobuf.any_pb2.Any", "ops.array_ops.zeros", "framework.ops.name_scope", "framework.meta_graph.export_scoped_meta_graph", "framework.ops.add_to_collection", "framework.ops.Graph", "ops.random_ops.truncated_normal", "random.random", "<builtin>.str", "<builtin>.sorted", "ops.control_flow_ops.cond", "framework.constant_op.constant", "test.TestCase.evaluate", "<builtin>.float", "ops.math_ops.less", "ops.nn_ops.relu", "ops.math_ops.matmul", "test.TestCase.assertEqual", "framework.ops.get_default_graph", "os.path.join"], "training.saver_test.ScopedGraphTest._testScopedSave.<lambda1>": ["ops.array_ops.ones"], "training.saver_test.ScopedGraphTest._testScopedSave.<lambda2>": ["ops.array_ops.zeros"], "training.saver_test.ScopedGraphTest._testScopedSave.loop_cond": [], "training.saver_test.ScopedGraphTest._testScopedSave.loop_body": ["framework.constant_op.constant"], "framework.meta_graph.export_scoped_meta_graph": [], "<builtin>.sorted": [], "training.saver_test.ScopedGraphTest._testScopedRestore": ["ops.variables.variables_initializer", "training.saver.Saver", "test.TestCase.session", "ops.variables.VariableV1", "math.sqrt", "framework.meta_graph.import_scoped_meta_graph", "ops.control_flow_ops.while_loop", "ops.array_ops.zeros", "framework.ops.name_scope", "framework.ops.add_to_collection", "<builtin>.set", "framework.ops.Graph", "ops.random_ops.truncated_normal", "ops.variables.global_variables", "<builtin>.sorted", "framework.constant_op.constant", "test.TestCase.evaluate", "<builtin>.float", "ops.nn_ops.relu", "ops.math_ops.matmul", "test.TestCase.assertEqual", "<builtin>.list", "os.path.join"], "framework.meta_graph.import_scoped_meta_graph": [], "training.saver_test.ScopedGraphTest._testScopedRestore.loop_cond": [], "training.saver_test.ScopedGraphTest._testScopedRestore.loop_body": ["framework.constant_op.constant"], "ops.variables.global_variables": [], "<builtin>.set": [], "<builtin>.list": [], "ops.variables.variables_initializer": [], "training.saver_test.ScopedGraphTest.testScopedSaveAndRestore": ["training.saver_test.ScopedGraphTest._testScopedSave", "training.saver_test.ScopedGraphTest._get_test_dir", "training.saver_test.ScopedGraphTest._testScopedRestore"], "training.saver_test.ScopedGraphTest.testCopyScopedGraph": ["numpy.reshape", "ops.math_ops.matmul", "ops.variables.global_variables_initializer", "test.TestCase.assertRaisesWithPredicateMatch", "framework.ops.name_scope", "framework.constant_op.constant", "framework.meta_graph.copy_scoped_meta_graph", "framework.meta_graph.export_scoped_meta_graph", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.session", "training.saver_test.ScopedGraphTest._get_test_dir", "ops.nn_ops.relu", "framework.ops.Graph", "test.TestCase.assertAllClose", "ops.variables.VariableV1", "os.path.join"], "numpy.reshape": [], "training.saver_test.ScopedGraphTest.testCopyScopedGraph.<lambda1>": ["<builtin>.str"], "framework.meta_graph.copy_scoped_meta_graph": [], "training.saver_test.ScopedGraphTest.testExportGraphDefWithScope": ["numpy.reshape", "ops.math_ops.matmul", "ops.variables.global_variables_initializer", "framework.ops.name_scope", "framework.constant_op.constant", "framework.meta_graph.copy_scoped_meta_graph", "framework.meta_graph.export_scoped_meta_graph", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.session", "training.saver_test.ScopedGraphTest._get_test_dir", "ops.nn_ops.relu", "framework.ops.Graph", "test.TestCase.assertAllClose", "ops.variables.VariableV1", "os.path.join"], "training.saver_test.ScopedGraphTest.testSerializeSaverWithScope": ["ops.variables.global_variables_initializer", "framework.ops.name_scope", "framework.meta_graph.copy_scoped_meta_graph", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.session", "training.saver_test.ScopedGraphTest._get_test_dir", "framework.ops.Graph", "test.TestCase.assertEqual", "<builtin>.len", "ops.variables.VariableV1", "os.path.join"], "training.saver_test._OwnsAVariableSimple.__init__": ["ops.variable_scope.get_variable"], "training.saver_test._OwnsAVariableSimple._gather_saveables_for_checkpoint": [], "training.saver_test._OwnsAVariableSimple.name": [], "training.saver_test._MirroringSaveable.__init__": ["<builtin>.super"], "<builtin>.super": [], "training.saver_test._MirroringSaveable.restore": ["ops.control_flow_ops.group"], "ops.control_flow_ops.group": [], "training.saver_test._OwnsMirroredVariables.__init__": ["ops.variable_scope.get_variable"], "training.saver_test._OwnsMirroredVariables._gather_saveables_for_checkpoint": [], "training.saver_test._OwnsMirroredVariables._gather_saveables_for_checkpoint._saveable_factory": ["training.saver_test._MirroringSaveable.__init__"], "training.saver_test._OwnsMirroredVariables.name": [], "training.saver_test.TrackableCompatibilityTests": ["framework.test_util.run_in_graph_and_eager_modes", "framework.test_util.run_v1_only"], "training.saver_test.TrackableCompatibilityTests.testNotSaveableButIsTrackable": ["training.saver_test._OwnsAVariableSimple.__init__", "test.TestCase.cached_session", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.assertEqual", "os.path.join"], "training.saver_test.TrackableCompatibilityTests.testMoreComplexSaveableReturned": ["test.TestCase.cached_session", "training.saver_test._OwnsMirroredVariables.__init__", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.assertEqual", "os.path.join"], "training.saver_test.TrackableCompatibilityTests.testSingleTensorEvaluation": ["test.TestCase.cached_session", "test.TestCase.get_temp_dir", "training.saver.Saver", "eager.context.eager_mode", "training.saver_test.TrackableCompatibilityTests.testSingleTensorEvaluation._CountingSaveable.__init__", "test.TestCase.assertEqual", "os.path.join"], "training.saver_test.TrackableCompatibilityTests.testSingleTensorEvaluation._CountingSaveable.__init__": ["framework.constant_op.constant", "<builtin>.super"], "training.saver_test.TrackableCompatibilityTests.testSingleTensorEvaluation._CountingSaveable.__init__._tensor": ["framework.constant_op.constant"], "training.saver_test.TrackableCompatibilityTests.testSingleTensorEvaluation._CountingSaveable.restore": [], "training.saver_test.TrackableCompatibilityTests.testVariableNotFoundErrorRaised": ["test.TestCase.cached_session", "test.TestCase.assertNotIn", "test.TestCase.get_temp_dir", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "training.saver.Saver", "test.TestCase.assertRaisesRegex", "test.TestCase.assertRaises", "os.path.join"], "training.saver_test.TrackableCompatibilityTests.testGraphChangedForRestoreErrorRaised": ["test.TestCase.get_temp_dir", "test.TestCase.evaluate", "training.saver.Saver", "test.TestCase.session", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "ops.variables.VariableV1", "os.path.join"], "platform.test.main": []}