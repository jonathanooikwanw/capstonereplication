{"framework.importer_test": ["platform.test.main"], "framework.importer_test.ImportGraphDefTest._MakeGraphDef": ["protobuf.text_format.Merge", "framework.graph_pb2.GraphDef"], "framework.graph_pb2.GraphDef": [], "protobuf.text_format.Merge": [], "framework.importer_test.ImportGraphDefTest.testBasic": ["test.TestCase.assertNotEqual", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "framework.ops.Graph"], "framework.ops.Graph": [], "framework.importer.import_graph_def": [], "test.TestCase.assertNotEqual": [], "test.TestCase.assertEqual": [], "framework.importer_test.ImportGraphDefTest.testMultipleImport": ["framework.constant_op.constant", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "<builtin>.list", "framework.ops.name_scope", "framework.ops.Graph"], "<builtin>.list": [], "framework.ops.name_scope": [], "framework.constant_op.constant": [], "framework.importer_test.ImportGraphDefTest.testEmptyNameScope": ["test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "framework.ops.name_scope", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInputMap": ["framework.constant_op.constant", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInputMapBytes": ["framework.constant_op.constant", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInputMapUnicode": ["framework.constant_op.constant", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testImplicitZerothOutput": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInputMapImplicitZerothOutput": ["framework.constant_op.constant", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testWithControlDependency": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testWithRefs": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testResources": ["ops.resource_variable_ops.ResourceVariable", "ops.variables.global_variables_initializer", "framework.importer.import_graph_def", "ops.resource_variable_ops.variable_shape", "framework.ops.Graph"], "ops.resource_variable_ops.ResourceVariable": [], "ops.resource_variable_ops.variable_shape": [], "ops.variables.global_variables_initializer": [], "framework.importer_test.ImportGraphDefTest.testWhileLoop": ["test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.control_flow_ops.while_loop", "framework.importer.import_graph_def", "test.TestCase.cached_session", "ops.math_ops.add", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testWhileLoop.<lambda1>": [], "framework.importer_test.ImportGraphDefTest.testWhileLoop.<lambda2>": [], "ops.control_flow_ops.while_loop": [], "ops.math_ops.add": [], "test.TestCase.cached_session": [], "test.TestCase.evaluate": [], "framework.importer_test.ImportGraphDefTest.testImportWhileLoopInCond": ["ops.array_ops.placeholder", "test.TestCase.assertEqual", "ops.control_flow_ops.while_loop", "test.TestCase.cached_session", "ops.control_flow_ops.cond", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testImportWhileLoopInCond.<lambda1>": [], "framework.importer_test.ImportGraphDefTest.testImportWhileLoopInCond.<lambda2>": [], "framework.importer_test.ImportGraphDefTest.testImportWhileLoopInCond.ImportFn": ["framework.importer.import_graph_def"], "ops.array_ops.placeholder": [], "framework.importer_test.ImportGraphDefTest.testImportWhileLoopInCond.<lambda3>": ["framework.constant_op.constant"], "ops.control_flow_ops.cond": [], "framework.importer_test.ImportGraphDefTest.testImportWhileLoopInWhileLoop": ["test.TestCase.evaluate", "test.TestCase.assertEqual", "test.TestCase.skipTest", "ops.control_flow_ops.while_loop", "framework.ops.Graph", "test.TestCase.cached_session", "framework.tensor_shape.TensorShape"], "test.TestCase.skipTest": [], "framework.importer_test.ImportGraphDefTest.testImportWhileLoopInWhileLoop.<lambda1>": [], "framework.importer_test.ImportGraphDefTest.testImportWhileLoopInWhileLoop.<lambda2>": [], "framework.importer_test.ImportGraphDefTest.testImportWhileLoopInWhileLoop.ImportFn": ["framework.importer.import_graph_def"], "framework.importer_test.ImportGraphDefTest.testImportWhileLoopInWhileLoop.<lambda3>": [], "framework.tensor_shape.TensorShape": [], "framework.importer_test.ImportGraphDefTest.testTypeMismatchInGraphDef": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "test.TestCase.assertRaisesRegex": [], "framework.importer_test.ImportGraphDefTest.testShapeAllowlistViolation": ["test.TestCase.assertTrue", "test.TestCase.assertRaises", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "<builtin>.str", "framework.ops.Graph"], "test.TestCase.assertRaises": [], "<builtin>.str": [], "test.TestCase.assertTrue": [], "framework.importer_test.ImportGraphDefTest.testInvalidSignatureTooManyInputsInGraphDef": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInvalidSignatureNotEnoughInputsInGraphDef": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testMissingInputOpInGraphDef": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testMissingInputOpInGraphDefButAppearsInInputMap": ["framework.constant_op.constant", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testMissingInputTensorInGraphDef": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testMissingControlInputInGraphDef": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInvalidTensorNameOutputIndexInGraphDef": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInvalidTensorNameInGraphDef": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testMissingReturnOperation": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testMissingReturnTensor": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testMissingInputMap": ["framework.constant_op.constant", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInputMapUnusedAsInput": ["framework.constant_op.constant", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInputMapTypeMismatch": ["framework.constant_op.constant", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testNoReturns": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testOverrideNamePrefix": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testDefaultNamePrefix": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testNamePrefixColocationAttrs": ["test.TestCase.assertTrue", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "test.TestCase.assertProtoEquals", "framework.ops.Graph"], "test.TestCase.assertProtoEquals": [], "framework.importer_test.ImportGraphDefTest.testColocationAndDevice": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testColocationWithDeviceFn": ["test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "framework.ops.device", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testColocationWithDeviceFn.CustomDeviceFn": [], "framework.ops.device": [], "framework.importer_test.ImportGraphDefTest.testColocationWithDeviceFn.BDeviceFn": [], "framework.importer_test.ImportGraphDefTest.testColocationWithDeviceFn.ADeviceFn": [], "framework.importer_test.ImportGraphDefTest.testMultipleColocationWithDeviceFn": ["test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "framework.ops.device", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testMultipleColocationWithDeviceFn.CustomDeviceFn": [], "framework.importer_test.ImportGraphDefTest.testNamePrefixColocationAttrsMultipleImport": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testNamePrefixColocationAttrsNotFound": ["framework.importer.import_graph_def", "test.TestCase.assertRaisesRegex", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testEmptyGraph": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInvalidInputForGraphDef": ["test.TestCase.assertRaises", "test.TestCase.assertEqual", "framework.importer.import_graph_def", "<builtin>.str", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testInvalidInputForInputMap": ["test.TestCase.assertRaises", "ops.variables.Variable", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "test.TestCase.assertStartsWith", "<builtin>.str", "test.TestCase.cached_session", "framework.ops.Graph"], "ops.variables.Variable": [], "test.TestCase.assertStartsWith": [], "framework.importer_test.ImportGraphDefTest.testInvalidInputForReturnOperations": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testDuplicateOperationNames": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex"], "framework.test_util.run_v1_only": [], "framework.importer_test.ImportGraphDefTest": ["framework.test_util.run_v1_only"], "framework.importer_test.ImportGraphDefTest.testWithExtensionAndAttr": ["ops.array_ops.stack", "test.TestCase.assertAllEqual", "framework.constant_op.constant", "framework.importer.import_graph_def", "test.TestCase.cached_session", "framework.ops.Graph"], "ops.array_ops.stack": [], "test.TestCase.assertAllEqual": [], "framework.importer_test.ImportGraphDefTest.testWithDevice": ["framework.constant_op.constant", "framework.device.merge_device", "test.TestCase.assertEqual", "framework.importer.import_graph_def", "framework.ops.device", "framework.ops.Graph"], "framework.device.merge_device": [], "framework.importer_test.ImportGraphDefTest.testWithDeviceFunctionDependingOnInputs": ["ops.array_ops.identity", "framework.constant_op.constant", "<builtin>.len", "test.TestCase.assertEqual", "framework.importer.import_graph_def", "framework.ops.device", "framework.ops.Graph"], "ops.array_ops.identity": [], "framework.importer_test.ImportGraphDefTest.testWithDeviceFunctionDependingOnInputs.InputCounter": ["<builtin>.len"], "<builtin>.len": [], "framework.importer_test.ImportGraphDefTest.testGradient": ["ops.nn_ops.relu", "ops.array_ops.placeholder", "ops.variables.Variable", "test.TestCase.assertEqual", "ops.math_ops.reduce_mean", "framework.importer.import_graph_def", "ops.math_ops.matmul", "ops.gradients_impl.gradients", "ops.array_ops.zeros", "ops.random_ops.truncated_normal", "framework.ops.Graph"], "ops.math_ops.matmul": [], "ops.nn_ops.relu": [], "ops.math_ops.reduce_mean": [], "ops.random_ops.truncated_normal": [], "ops.array_ops.zeros": [], "ops.gradients_impl.gradients": [], "framework.importer_test.ImportGraphDefTest.testLargeGraph": ["numpy.ones", "ops.array_ops.identity", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.cached_session"], "numpy.ones": [], "framework.importer_test.ImportGraphDefTest.testVersion": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testVersionLow": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testVersionHigh": ["framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testVersionAppliesToOpConstruction": ["framework.importer.import_graph_def", "test.TestCase.assertRaisesWithPredicateMatch", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "test.TestCase.assertRaisesWithPredicateMatch": [], "framework.importer_test.ImportGraphDefTest.testDefaultAttrsAdded": ["framework.importer.import_graph_def", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testDefaultAttrsRemoved": ["framework.op_def_pb2.OpList", "framework.importer_test.ImportGraphDefTest._MakeGraphDef", "framework.importer.import_graph_def", "test.TestCase.assertRaisesRegex", "protobuf.text_format.Merge", "framework.ops.Graph"], "framework.op_def_pb2.OpList": [], "framework.importer_test.ImportGraphDefTest.testFunctions": ["test.TestCase.session", "ops.array_ops.placeholder", "framework.importer_test.ImportGraphDefTest.testFunctions.ExternalTensorFunc", "framework.constant_op.constant", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest.testFunctions.OuterFunc", "framework.importer.import_graph_def", "framework.importer_test.ImportGraphDefTest.testFunctions.FuncWithGrad", "framework.function.Defun", "ops.gradients_impl.gradients", "framework.ops.Graph"], "framework.function.Defun": [], "framework.importer_test.ImportGraphDefTest.testFunctions.Grad": [], "framework.importer_test.ImportGraphDefTest.testFunctions.FuncWithGrad": [], "framework.importer_test.ImportGraphDefTest.testFunctions.ExternalTensorFunc": [], "framework.importer_test.ImportGraphDefTest.testFunctions.OuterFunc": ["framework.function.Defun", "framework.importer_test.ImportGraphDefTest.testFunctions.OuterFunc.InnerFunc"], "framework.importer_test.ImportGraphDefTest.testFunctions.OuterFunc.InnerFunc": [], "test.TestCase.session": [], "framework.importer_test.ImportGraphDefTest.testImportInsideDefun": ["framework.importer_test.ImportGraphDefTest.testImportInsideDefun.TestFunc", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertEqual", "framework.importer_test.ImportGraphDefTest.testImportInsideDefun.Add2", "test.TestCase.cached_session", "framework.function.Defun", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testImportInsideDefun.Add2": ["ops.math_ops.add"], "framework.importer_test.ImportGraphDefTest.testImportInsideDefun.TestFunc": ["framework.importer.import_graph_def"], "framework.importer_test.ImportGraphDefTest.testImportGraphWithFunctionTwice": ["ops.array_ops.placeholder", "test.TestCase.assertAllEqual", "framework.importer_test.ImportGraphDefTest.testImportGraphWithFunctionTwice.Add2", "framework.importer.import_graph_def", "ops.random_ops.random_uniform", "test.TestCase.cached_session", "framework.function.Defun", "framework.ops.name_scope", "framework.ops.Graph"], "framework.importer_test.ImportGraphDefTest.testImportGraphWithFunctionTwice.Add2": ["ops.math_ops.add"], "ops.random_ops.random_uniform": [], "platform.test.main": []}