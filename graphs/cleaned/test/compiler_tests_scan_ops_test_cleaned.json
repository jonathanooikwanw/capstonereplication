{"tests.scan_ops_test": ["platform.test.main"], "tests.scan_ops_test.numpy_reverse": ["<builtin>.slice", "<builtin>.len", "<builtin>.range"], "<builtin>.len": [], "<builtin>.slice": [], "<builtin>.range": [], "tests.scan_ops_test.handle_options": ["<builtin>.slice", "numpy.zeros_like", "<builtin>.ValueError", "numpy.concatenate", "<builtin>.len", "<builtin>.range", "numpy.cumsum", "numpy.ones_like", "tests.scan_ops_test.numpy_reverse", "numpy.cumprod"], "numpy.zeros_like": [], "numpy.ones_like": [], "<builtin>.ValueError": [], "numpy.cumprod": [], "numpy.cumsum": [], "numpy.concatenate": [], "tests.scan_ops_test.CumsumTest.axis_dtypes": ["<builtin>.set"], "<builtin>.set": [], "tests.scan_ops_test.CumsumTest._compare": ["xla_test.XLATestCase.assertAllClose", "ops.array_ops.placeholder", "ops.math_ops.cumsum", "tests.scan_ops_test.handle_options", "xla_test.XLATestCase.session", "xla_test.XLATestCase.test_scope"], "xla_test.XLATestCase.session": [], "xla_test.XLATestCase.test_scope": [], "ops.array_ops.placeholder": [], "ops.math_ops.cumsum": [], "xla_test.XLATestCase.assertAllClose": [], "tests.scan_ops_test.CumsumTest._compareAll": ["tests.scan_ops_test.CumsumTest._compare"], "tests.scan_ops_test.CumsumTest.testEmpty": ["tests.scan_ops_test.CumsumTest._compareAll", "numpy.zeros"], "numpy.zeros": [], "tests.scan_ops_test.CumsumTest.testAxisType": ["numpy.arange", "ops.array_ops.placeholder", "tests.scan_ops_test.CumsumTest.axis_dtypes", "framework.constant_op.constant", "ops.math_ops.cumsum", "xla_test.XLATestCase.session", "xla_test.XLATestCase.test_scope"], "numpy.arange": [], "framework.constant_op.constant": [], "tests.scan_ops_test.CumsumTest.test1D": ["numpy.arange", "tests.scan_ops_test.CumsumTest._compareAll"], "tests.scan_ops_test.CumsumTest.test2D": ["numpy.arange", "tests.scan_ops_test.CumsumTest._compareAll"], "tests.scan_ops_test.CumsumTest.test3D": ["numpy.arange", "tests.scan_ops_test.CumsumTest._compareAll"], "tests.scan_ops_test.CumsumTest.test6D": ["numpy.arange", "tests.scan_ops_test.CumsumTest._compareAll", "<builtin>.range"], "framework.test_util.disable_mlir_bridge": [], "tests.scan_ops_test.CumsumTest": ["framework.test_util.disable_mlir_bridge"], "tests.scan_ops_test.CumsumTest.testInvalidAxis": ["numpy.arange", "ops.math_ops.cumsum", "xla_test.XLATestCase.session", "xla_test.XLATestCase.assertRaisesWithPredicateMatch", "framework.ops.convert_to_tensor", "xla_test.XLATestCase.test_scope"], "framework.ops.convert_to_tensor": [], "tests.scan_ops_test.CumsumTest.testInvalidAxis.<lambda1>": ["<builtin>.str"], "<builtin>.str": [], "xla_test.XLATestCase.assertRaisesWithPredicateMatch": [], "tests.scan_ops_test.CumsumTest.testInvalidAxis.<lambda2>": ["<builtin>.str"], "tests.scan_ops_test.CumsumTest.testInvalidAxis.<lambda3>": ["<builtin>.str"], "tests.scan_ops_test.CumprodTest.axis_dtypes": ["<builtin>.set"], "tests.scan_ops_test.CumprodTest._compare": ["xla_test.XLATestCase.assertAllClose", "ops.array_ops.placeholder", "tests.scan_ops_test.handle_options", "ops.math_ops.cumprod", "xla_test.XLATestCase.session", "xla_test.XLATestCase.test_scope"], "ops.math_ops.cumprod": [], "tests.scan_ops_test.CumprodTest._compareAll": ["tests.scan_ops_test.CumprodTest._compare"], "tests.scan_ops_test.CumprodTest.testEmpty": ["tests.scan_ops_test.CumprodTest._compareAll", "numpy.zeros"], "tests.scan_ops_test.CumprodTest.testAxisType": ["numpy.arange", "ops.array_ops.placeholder", "framework.constant_op.constant", "tests.scan_ops_test.CumprodTest.axis_dtypes", "ops.math_ops.cumprod", "xla_test.XLATestCase.session", "xla_test.XLATestCase.test_scope"], "tests.scan_ops_test.CumprodTest.test1D": ["numpy.arange", "tests.scan_ops_test.CumprodTest._compareAll"], "tests.scan_ops_test.CumprodTest.test2D": ["numpy.arange", "tests.scan_ops_test.CumprodTest._compareAll"], "tests.scan_ops_test.CumprodTest.test3D": ["numpy.arange", "tests.scan_ops_test.CumprodTest._compareAll"], "tests.scan_ops_test.CumprodTest.test6D": ["numpy.arange", "tests.scan_ops_test.CumprodTest._compareAll", "<builtin>.range"], "tests.scan_ops_test.CumprodTest": ["framework.test_util.disable_mlir_bridge"], "tests.scan_ops_test.CumprodTest.testInvalidAxis": ["numpy.arange", "ops.math_ops.cumprod", "xla_test.XLATestCase.session", "xla_test.XLATestCase.assertRaisesWithPredicateMatch", "framework.ops.convert_to_tensor", "xla_test.XLATestCase.test_scope"], "tests.scan_ops_test.CumprodTest.testInvalidAxis.<lambda1>": ["<builtin>.str"], "tests.scan_ops_test.CumprodTest.testInvalidAxis.<lambda2>": ["<builtin>.str"], "tests.scan_ops_test.CumprodTest.testInvalidAxis.<lambda3>": ["<builtin>.str"], "platform.test.main": []}