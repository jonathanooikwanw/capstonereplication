{"converters.break_statements_test": ["platform.test.main"], "converters.break_statements_test.BreakCanonicalizationTest.assertTransformedEquivalent": ["converters.break_statements_test.BreakCanonicalizationTest.test_nested.f", "converter_testing.TestCase.assertEqual", "converter_testing.TestCase.transform", "converters.break_statements_test.BreakCanonicalizationTest.test_while_loop.f", "converters.break_statements_test.BreakCanonicalizationTest.test_multiple_correlated_breaks_with_side_effects.f", "converters.break_statements_test.BreakCanonicalizationTest.test_nested_loops.f", "converters.break_statements_test.BreakCanonicalizationTest.test_loop_orelse.f"], "converter_testing.TestCase.transform": [], "converters.break_statements_test.BreakCanonicalizationTest.test_while_loop.f": [], "converters.break_statements_test.BreakCanonicalizationTest.test_nested.f": [], "converters.break_statements_test.BreakCanonicalizationTest.test_multiple_correlated_breaks_with_side_effects.f": [], "converters.break_statements_test.BreakCanonicalizationTest.test_nested_loops.f": [], "converters.break_statements_test.BreakCanonicalizationTest.test_loop_orelse.f": [], "converter_testing.TestCase.assertEqual": [], "converters.break_statements_test.BreakCanonicalizationTest.test_while_loop": ["converters.break_statements_test.BreakCanonicalizationTest.assertTransformedEquivalent"], "converters.break_statements_test.BreakCanonicalizationTest.test_while_loop_preserves_directives": ["pyct.anno.setanno", "converters.break_statements.transform", "<builtin>.object", "converter_testing.TestCase.assertIs", "converter_testing.TestCase.transform", "pyct.anno.getanno"], "converters.break_statements_test.BreakCanonicalizationTest.test_while_loop_preserves_directives.f": [], "<builtin>.object": [], "pyct.anno.setanno": [], "converters.break_statements.transform": [], "pyct.anno.getanno": [], "converter_testing.TestCase.assertIs": [], "converters.break_statements_test.BreakCanonicalizationTest.test_for_loop": ["converter_testing.TestCase.transform", "converter_testing.TestCase.assertEqual"], "converters.break_statements_test.BreakCanonicalizationTest.test_for_loop.f": [], "converters.break_statements_test.BreakCanonicalizationTest.test_for_loop_preserves_directives": ["pyct.anno.setanno", "converters.break_statements.transform", "<builtin>.object", "converter_testing.TestCase.assertIs", "converter_testing.TestCase.transform", "pyct.anno.getanno"], "converters.break_statements_test.BreakCanonicalizationTest.test_for_loop_preserves_directives.f": [], "converters.break_statements_test.BreakCanonicalizationTest.test_nested": ["converters.break_statements_test.BreakCanonicalizationTest.assertTransformedEquivalent"], "converters.break_statements_test.BreakCanonicalizationTest.test_nested_loops": ["converters.break_statements_test.BreakCanonicalizationTest.assertTransformedEquivalent"], "converters.break_statements_test.BreakCanonicalizationTest.test_loop_orelse": ["converters.break_statements_test.BreakCanonicalizationTest.assertTransformedEquivalent"], "converters.break_statements_test.BreakCanonicalizationTest.test_multiple_correlated_breaks_with_side_effects": ["converters.break_statements_test.BreakCanonicalizationTest.assertTransformedEquivalent"], "platform.test.main": []}