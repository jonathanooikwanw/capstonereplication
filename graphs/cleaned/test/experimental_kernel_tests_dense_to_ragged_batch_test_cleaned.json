{"kernel_tests.dense_to_ragged_batch_test": ["platform.test.main"], "kernel_tests.dense_to_ragged_batch_test._make_scalar_ds": ["numpy.arange", "dataset_ops.Dataset.from_tensor_slices"], "numpy.arange": [], "dataset_ops.Dataset.from_tensor_slices": [], "kernel_tests.dense_to_ragged_batch_test._make_vector_ds": ["kernel_tests.dense_to_ragged_batch_test._make_scalar_ds"], "kernel_tests.dense_to_ragged_batch_test._make_vector_ds.<lambda1>": ["ops.array_ops.fill"], "ops.array_ops.fill": [], "kernel_tests.dense_to_ragged_batch_test._make_matrix_ds1": ["kernel_tests.dense_to_ragged_batch_test._make_scalar_ds"], "kernel_tests.dense_to_ragged_batch_test._make_matrix_ds1.<lambda1>": ["ops.array_ops.fill"], "kernel_tests.dense_to_ragged_batch_test._make_matrix_ds2": ["kernel_tests.dense_to_ragged_batch_test._make_scalar_ds"], "kernel_tests.dense_to_ragged_batch_test._make_matrix_ds2.<lambda1>": ["ops.array_ops.fill"], "kernel_tests.dense_to_ragged_batch_test._make_matrix_ds_fully_defined": ["kernel_tests.dense_to_ragged_batch_test._make_scalar_ds"], "kernel_tests.dense_to_ragged_batch_test._make_matrix_ds_fully_defined.<lambda1>": ["ops.array_ops.fill"], "kernel_tests.dense_to_ragged_batch_test._make_5dtensor_ds": ["kernel_tests.dense_to_ragged_batch_test._make_scalar_ds"], "kernel_tests.dense_to_ragged_batch_test._make_5dtensor_ds.<lambda1>": ["ops.array_ops.fill"], "kernel_tests.dense_to_ragged_batch_test._make_ragged_ds": ["dataset_ops.Dataset.from_tensor_slices", "ragged.ragged_factory_ops.constant", "<builtin>.range"], "<builtin>.range": [], "ragged.ragged_factory_ops.constant": [], "kernel_tests.dense_to_ragged_batch_test._make_dict_ds": ["kernel_tests.dense_to_ragged_batch_test._make_scalar_ds"], "kernel_tests.dense_to_ragged_batch_test._make_dict_ds.transform": ["framework.ops.convert_to_tensor", "ops.math_ops.range", "ops.array_ops.fill"], "framework.ops.convert_to_tensor": [], "ops.math_ops.range": [], "kernel_tests.dense_to_ragged_batch_test._make_tuple_ds": ["kernel_tests.dense_to_ragged_batch_test._make_scalar_ds"], "kernel_tests.dense_to_ragged_batch_test._make_tuple_ds.transform": ["framework.ops.convert_to_tensor", "ops.math_ops.range", "ops.array_ops.fill"], "kernel_tests.dense_to_ragged_batch_test._to_list": ["<builtin>.hasattr"], "<builtin>.hasattr": [], "kernel_tests.test_base.default_test_combinations": [], "kernel_tests.dense_to_ragged_batch_test.RaggedBatchTest": ["framework.combinations.times", "kernel_tests.test_base.default_test_combinations", "framework.combinations.generate", "framework.combinations.combine"], "framework.combinations.combine": [], "framework.combinations.times": [], "framework.combinations.generate": [], "kernel_tests.dense_to_ragged_batch_test.RaggedBatchTest.testBasic": ["util.nest.map_structure", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertRaises", "<builtin>.min", "<builtin>.range", "test_base.DatasetTestBase.getNext", "ops.batching.dense_to_ragged_batch", "util.nest.map_structure_up_to"], "test_base.DatasetTestBase.getNext": [], "test_base.DatasetTestBase.evaluate": [], "util.nest.map_structure": [], "ops.batching.dense_to_ragged_batch": [], "<builtin>.min": [], "kernel_tests.dense_to_ragged_batch_test.RaggedBatchTest.testBasic.<lambda1>": ["<builtin>.list", "test_base.DatasetTestBase.assertAllEqual"], "<builtin>.list": [], "test_base.DatasetTestBase.assertAllEqual": [], "util.nest.map_structure_up_to": [], "test_base.DatasetTestBase.assertRaises": [], "kernel_tests.dense_to_ragged_batch_test.RaggedBatchTest.testWithStructuredElements": ["test_base.DatasetTestBase.evaluate", "<builtin>.enumerate", "test_base.DatasetTestBase.assertAllEqual", "dataset_ops.Dataset.from_tensor_slices", "<builtin>.range", "test_base.DatasetTestBase.getNext", "ops.batching.dense_to_ragged_batch", "numpy.arange", "<builtin>.list"], "kernel_tests.dense_to_ragged_batch_test.RaggedBatchTest.testWithStructuredElements.make_structure": ["ops.array_ops.stack", "framework.sparse_tensor.SparseTensor", "ragged.ragged_concat_ops.stack", "ops.array_ops.fill"], "ops.array_ops.stack": [], "ragged.ragged_concat_ops.stack": [], "framework.sparse_tensor.SparseTensor": [], "<builtin>.enumerate": [], "platform.test.main": []}