{"service.fault_tolerance_test": ["platform.test.main"], "kernel_tests.test_base.eager_only_combinations": [], "service.fault_tolerance_test.FaultToleranceTest": ["framework.combinations.generate", "framework.combinations.times", "service.test_base.all_cluster_configurations", "framework.combinations.combine", "kernel_tests.test_base.eager_only_combinations"], "framework.combinations.generate": [], "service.fault_tolerance_test.FaultToleranceTest.testDispatcherStop": ["<builtin>.next", "<builtin>.range", "<builtin>.list", "test_base.TestBase.assertEqual", "service.test_base.TestCluster", "<builtin>.iter", "test_base.TestBase.make_distributed_range_dataset"], "service.test_base.TestCluster": [], "test_base.TestBase.make_distributed_range_dataset": [], "<builtin>.iter": [], "<builtin>.next": [], "<builtin>.range": [], "<builtin>.list": [], "test_base.TestBase.assertEqual": [], "service.fault_tolerance_test.FaultToleranceTest.testDispatcherRestartBeforeReading": ["<builtin>.range", "<builtin>.list", "test_base.TestBase.assertDatasetProduces", "service.test_base.TestCluster", "test_base.TestBase.make_distributed_range_dataset"], "test_base.TestBase.assertDatasetProduces": [], "service.fault_tolerance_test.FaultToleranceTest.testDispatcherRestartDuringReading": ["<builtin>.next", "<builtin>.range", "<builtin>.list", "test_base.TestBase.assertEqual", "service.test_base.TestCluster", "<builtin>.iter", "test_base.TestBase.make_distributed_range_dataset"], "service.fault_tolerance_test.FaultToleranceTest.testDispatcherRestartDuringDistributedEpoch": ["<builtin>.next", "<builtin>.range", "<builtin>.list", "test_base.TestBase.assertEqual", "service.test_base.TestCluster", "<builtin>.iter", "test_base.TestBase.make_distributed_range_dataset"], "service.fault_tolerance_test.FaultToleranceTest.testDispatcherRestartDuringDistributedEpochRepeat": ["<builtin>.next", "test_base.TestBase.make_distributed_dataset", "test_base.TestBase.assertCountEqual", "<builtin>.range", "<builtin>.list", "dataset_ops.Dataset.range", "<builtin>.len", "service.test_base.TestCluster", "<builtin>.iter"], "dataset_ops.Dataset.range": [], "test_base.TestBase.make_distributed_dataset": [], "<builtin>.len": [], "test_base.TestBase.assertCountEqual": [], "service.fault_tolerance_test.FaultToleranceTest.testDispatcherRestartBetweenIterations": ["<builtin>.range", "<builtin>.list", "test_base.TestBase.assertDatasetProduces", "service.test_base.TestCluster", "test_base.TestBase.make_distributed_range_dataset"], "service.fault_tolerance_test.FaultToleranceTest.testDispatcherManyRestarts": ["<builtin>.range", "<builtin>.list", "test_base.TestBase.assertDatasetProduces", "service.test_base.TestCluster", "<builtin>.zip", "test_base.TestBase.make_distributed_range_dataset"], "<builtin>.zip": [], "service.fault_tolerance_test.FaultToleranceTest.testDispatcherAndWorkerRestart": ["<builtin>.range", "<builtin>.list", "test_base.TestBase.assertDatasetProduces", "service.test_base.TestCluster", "test_base.TestBase.make_distributed_range_dataset"], "service.fault_tolerance_test.FaultToleranceTest.testDispatcherAndMultiWorkerRestart": ["test_base.TestBase.assertCountEqual", "<builtin>.range", "<builtin>.list", "service.test_base.TestCluster", "<builtin>.iter", "test_base.TestBase.make_distributed_range_dataset"], "service.fault_tolerance_test.FaultToleranceTest.testStartServersLate": ["portpicker.pick_unused_port", "test_base.TestBase.skipTest", "<builtin>.range", "<builtin>.list", "threading.Thread", "test_base.TestBase.assertEqual", "service.test_base.TestCluster", "test_base.TestBase.make_distributed_range_dataset"], "portpicker.pick_unused_port": [], "test_base.TestBase.skipTest": [], "service.fault_tolerance_test.FaultToleranceTest.testStartServersLate.start_servers": ["time.sleep"], "time.sleep": [], "threading.Thread": [], "service.fault_tolerance_test.FaultToleranceTest.testAddWorkerMidJob": ["<builtin>.next", "test_base.TestBase.assertCountEqual", "<builtin>.range", "<builtin>.list", "time.sleep", "service.test_base.TestCluster", "<builtin>.iter", "test_base.TestBase.make_distributed_range_dataset"], "framework.combinations.combine": [], "service.test_base.all_cluster_configurations": [], "framework.combinations.times": [], "service.fault_tolerance_test.FaultToleranceTest.testRestartWorker": ["<builtin>.next", "<builtin>.range", "test_base.TestBase.assertEqual", "service.test_base.TestCluster", "<builtin>.iter", "test_base.TestBase.make_distributed_range_dataset"], "service.fault_tolerance_test.FaultToleranceTest.testChangeProcessingModeAfterRestart": ["test_base.TestBase.skipTest", "<builtin>.next", "ops.data_service_ops.distribute", "<builtin>.range", "dataset_ops.Dataset.range", "test_base.TestBase.assertEqual", "test_base.TestBase.assertRaisesOpError", "service.test_base.TestCluster", "<builtin>.iter"], "ops.data_service_ops.distribute": [], "test_base.TestBase.assertRaisesOpError": [], "service.fault_tolerance_test.FaultToleranceTest.testDistributeLargeGraphThenRegisterWorker": ["dataset_ops.Dataset.from_tensors", "ops.array_ops.ones", "<builtin>.next", "test_base.TestBase.make_distributed_dataset", "test_base.TestBase.assertAllEqual", "service.test_base.TestCluster", "<builtin>.iter"], "ops.array_ops.ones": [], "dataset_ops.Dataset.from_tensors": [], "test_base.TestBase.assertAllEqual": [], "platform.test.main": []}