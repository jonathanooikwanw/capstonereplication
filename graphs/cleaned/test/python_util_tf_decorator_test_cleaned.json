{"util.tf_decorator_test": ["util.tf_decorator_test.test_decorator_increment_first_int_arg", "util.tf_decorator_test.test_tfdecorator", "util.tf_decorator_test.test_injectable_decorator_square", "util.tf_decorator_test.test_injectable_decorator_increment", "platform.test.main", "util.tf_decorator_test.test_tfdecorator.make_tf_decorator"], "util.tf_decorator_test.test_tfdecorator": [], "util.tf_decorator_test.test_tfdecorator.make_tf_decorator": ["util.tf_decorator.TFDecorator"], "util.tf_decorator.TFDecorator": [], "util.tf_decorator_test.test_decorator_increment_first_int_arg": ["util.tf_decorator.make_decorator"], "util.tf_decorator_test.test_decorator_increment_first_int_arg.wrapper": ["util.tf_decorator_test.TestDecoratedClass.return_params", "<builtin>.isinstance"], "<builtin>.isinstance": [], "util.tf_decorator_test.TestDecoratedClass.return_params": [], "util.tf_decorator.make_decorator": [], "util.tf_decorator_test.test_injectable_decorator_square": ["util.tf_decorator.make_decorator"], "util.tf_decorator_test.test_injectable_decorator_square.wrapper": [], "util.tf_decorator_test.test_injectable_decorator_increment": ["util.tf_decorator.make_decorator"], "util.tf_decorator_test.test_injectable_decorator_increment.wrapper": [], "util.tf_decorator_test.test_function": [], "util.tf_decorator_test.test_decorated_function": [], "util.tf_decorator_test.test_rewrappable_decorated": [], "util.tf_decorator_test.TestDecoratedClass.__init__": [], "util.tf_decorator_test.TestDecoratedClass.two_prop": [], "util.tf_decorator_test.TestDecoratedClass.two_func": [], "util.tf_decorator_test.TestDecoratedClass": ["util.tf_decorator_test.test_decorator_increment_first_int_arg"], "util.tf_decorator_test.TfDecoratorTest.testInitCapturesTarget": ["util.tf_decorator.TFDecorator", "test.TestCase.assertIs"], "test.TestCase.assertIs": [], "util.tf_decorator_test.TfDecoratorTest.testInitCapturesDecoratorName": ["test.TestCase.assertEqual", "util.tf_decorator.TFDecorator"], "test.TestCase.assertEqual": [], "util.tf_decorator_test.TfDecoratorTest.testInitCapturesDecoratorDoc": ["test.TestCase.assertEqual", "util.tf_decorator.TFDecorator"], "util.tf_decorator_test.TfDecoratorTest.testInitCapturesNonNoneArgspec": ["util.tf_inspect.ArgSpec", "util.tf_decorator.TFDecorator", "test.TestCase.assertIs"], "util.tf_inspect.ArgSpec": [], "util.tf_decorator_test.TfDecoratorTest.testInitSetsDecoratorNameToTargetName": ["test.TestCase.assertEqual", "util.tf_decorator.TFDecorator"], "util.tf_decorator_test.TfDecoratorTest.testInitSetsDecoratorQualNameToTargetQualName": ["<builtin>.hasattr", "test.TestCase.assertEqual", "util.tf_decorator.TFDecorator"], "<builtin>.hasattr": [], "util.tf_decorator_test.TfDecoratorTest.testInitSetsDecoratorDocToTargetDoc": ["test.TestCase.assertEqual", "util.tf_decorator.TFDecorator"], "util.tf_decorator_test.TfDecoratorTest.testCallingATFDecoratorCallsTheTarget": ["test.TestCase.assertEqual", "util.tf_decorator.TFDecorator"], "util.tf_decorator_test.TfDecoratorTest.testCallingADecoratedFunctionCallsTheTarget": ["util.tf_decorator_test.test_decorated_function", "test.TestCase.assertEqual"], "util.tf_decorator_test.TfDecoratorTest.testInitializingDecoratedClassWithInitParamsDoesntRaise": ["test.TestCase.assertFail", "util.tf_decorator_test.TestDecoratedClass.__init__"], "test.TestCase.assertFail": [], "util.tf_decorator_test.TfDecoratorTest.testReadingClassAttributeOnDecoratedClass": ["util.tf_decorator_test.TestDecoratedClass.__init__", "test.TestCase.assertEqual"], "util.tf_decorator_test.TfDecoratorTest.testCallingClassMethodOnDecoratedClass": ["test.TestCase.assertEqual", "util.tf_decorator_test.TestDecoratedClass.__init__", "util.tf_decorator_test.TestDecoratedClass.two_func"], "util.tf_decorator_test.TfDecoratorTest.testReadingClassPropertyOnDecoratedClass": ["util.tf_decorator_test.TestDecoratedClass.__init__", "test.TestCase.assertEqual"], "util.tf_decorator_test.TfDecoratorTest.testNameOnBoundProperty": ["util.tf_decorator_test.TestDecoratedClass.__init__", "test.TestCase.assertEqual"], "util.tf_decorator_test.TfDecoratorTest.testQualNameOnBoundProperty": ["<builtin>.hasattr", "util.tf_decorator_test.TestDecoratedClass.__init__", "test.TestCase.assertEqual"], "util.tf_decorator_test.TfDecoratorTest.testDocstringOnBoundProperty": ["util.tf_decorator_test.TestDecoratedClass.__init__", "test.TestCase.assertEqual"], "util.tf_decorator_test.TfDecoratorTest.testTarget__get__IsProxied": ["test.TestCase.assertIsInstance"], "util.tf_decorator_test.TfDecoratorTest.testTarget__get__IsProxied.Descr.__get__": [], "util.tf_decorator_test.TfDecoratorTest.testTarget__get__IsProxied.Foo": ["util.tf_decorator.TFDecorator"], "test.TestCase.assertIsInstance": [], "util.tf_decorator_test.test_wrapper": ["util.tf_decorator_test.test_function"], "util.tf_decorator_test.TfMakeDecoratorTest.testAttachesATFDecoratorAttr": ["<builtin>.getattr", "test.TestCase.assertIsInstance", "util.tf_decorator.make_decorator"], "<builtin>.getattr": [], "util.tf_decorator_test.TfMakeDecoratorTest.testAttachesWrappedAttr": ["<builtin>.getattr", "util.tf_decorator.make_decorator", "test.TestCase.assertIs"], "util.tf_decorator_test.TfMakeDecoratorTest.testSetsTFDecoratorNameToDecoratorNameArg": ["<builtin>.getattr", "test.TestCase.assertEqual", "util.tf_decorator.make_decorator"], "util.tf_decorator_test.TfMakeDecoratorTest.testSetsTFDecoratorDocToDecoratorDocArg": ["<builtin>.getattr", "test.TestCase.assertEqual", "util.tf_decorator.make_decorator"], "util.tf_decorator_test.TfMakeDecoratorTest.testUpdatesDictWithMissingEntries": ["util.tf_decorator.make_decorator", "test.TestCase.assertTrue"], "test.TestCase.assertTrue": [], "util.tf_decorator_test.TfMakeDecoratorTest.testUpdatesDict_doesNotOverridePresentEntries": ["util.tf_decorator.make_decorator", "test.TestCase.assertFalse"], "test.TestCase.assertFalse": [], "util.tf_decorator_test.TfMakeDecoratorTest.testSetsTFDecoratorArgSpec": ["<builtin>.getattr", "util.tf_inspect.ArgSpec", "test.TestCase.assertEqual", "util.tf_decorator.make_decorator"], "util.tf_decorator_test.TfMakeDecoratorTest.testSetsDecoratorNameToFunctionThatCallsMakeDecoratorIfAbsent": ["<builtin>.getattr", "test.TestCase.assertEqual", "util.tf_decorator_test.TfMakeDecoratorTest.testSetsDecoratorNameToFunctionThatCallsMakeDecoratorIfAbsent.test_decorator_name"], "util.tf_decorator_test.TfMakeDecoratorTest.testSetsDecoratorNameToFunctionThatCallsMakeDecoratorIfAbsent.test_decorator_name": ["util.tf_decorator.make_decorator"], "util.tf_decorator_test.TfMakeDecoratorTest.testCompatibleWithNamelessCallables": ["functools.partial", "util.tf_decorator.make_decorator"], "util.tf_decorator_test.TfMakeDecoratorTest.testCompatibleWithNamelessCallables.Callable.__call__": [], "functools.partial": [], "util.tf_decorator_test.TfDecoratorRewrapTest.testRewrapMutatesAffectedFunction": ["util.tf_decorator.rewrap", "util.tf_decorator.unwrap", "test.TestCase.assertEqual", "util.tf_decorator_test.test_rewrappable_decorated"], "util.tf_decorator_test.TfDecoratorRewrapTest.testRewrapMutatesAffectedFunction.new_target": [], "util.tf_decorator.unwrap": [], "util.tf_decorator.rewrap": [], "util.tf_decorator_test.TfDecoratorRewrapTest.testRewrapOfDecoratorFunction": ["test.TestCase.assertEqual", "util.tf_decorator_test.test_rewrappable_decorated", "util.tf_decorator.rewrap"], "util.tf_decorator_test.TfDecoratorRewrapTest.testRewrapOfDecoratorFunction.new_target": [], "util.tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapReturnsEmptyArrayForUndecoratedFunction": ["<builtin>.len", "test.TestCase.assertEqual", "util.tf_decorator.unwrap"], "<builtin>.len": [], "util.tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapReturnsUndecoratedFunctionAsTarget": ["test.TestCase.assertIs", "util.tf_decorator.unwrap"], "util.tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapReturnsFinalFunctionAsTarget": ["test.TestCase.assertTrue", "util.tf_decorator.unwrap", "util.tf_inspect.isfunction", "test.TestCase.assertEqual", "util.tf_decorator_test.test_decorated_function"], "util.tf_inspect.isfunction": [], "util.tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapReturnsListOfUniqueTFDecorators": ["test.TestCase.assertTrue", "util.tf_decorator.unwrap", "<builtin>.isinstance", "test.TestCase.assertEqual", "test.TestCase.assertIsNot", "<builtin>.len"], "test.TestCase.assertIsNot": [], "util.tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapReturnsDecoratorListFromOutermostToInnermost": ["test.TestCase.assertEqual", "util.tf_decorator.unwrap"], "util.tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapBoundMethods": ["util.tf_decorator_test.TestDecoratedClass.return_params", "util.tf_decorator.unwrap", "util.tf_decorator_test.TestDecoratedClass.__init__", "test.TestCase.assertEqual"], "platform.test.main": []}