{"linalg.linear_operator_test_util": [], "linalg.linear_operator_test_util.OperatorShapesInfo.__init__": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.assertAC": ["framework.dtypes.as_dtype", "test.TestCase.assertDTypeEqual", "test.TestCase.assertAllClose"], "framework.dtypes.as_dtype": [], "test.TestCase.assertAllClose": [], "test.TestCase.assertDTypeEqual": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.adjoint_options": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.adjoint_arg_options": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.dtypes_to_test": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.use_placeholder_options": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.use_blockwise_arg": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.operator_shapes_infos": ["<builtin>.NotImplementedError"], "<builtin>.NotImplementedError": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest": ["abc.abstractmethod"], "abc.abstractmethod": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.operator_and_matrix": ["<builtin>.NotImplementedError"], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.make_rhs": ["<builtin>.NotImplementedError"], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.make_x": ["<builtin>.NotImplementedError"], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.skip_these_tests": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.assertRaisesError": ["test.TestCase.assertRaisesRegexp", "eager.context.executing_eagerly", "test.TestCase.assertRaisesOpError"], "eager.context.executing_eagerly": [], "test.TestCase.assertRaisesRegexp": [], "test.TestCase.assertRaisesOpError": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.check_tape_safe": ["<builtin>.AssertionError", "eager.backprop.GradientTape", "ops.array_ops.ones", "<builtin>.getattr", "ops.math_ops.cast", "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.check_tape_safe._assert_not_none"], "<builtin>.AssertionError": [], "linalg.linear_operator_test_util.LinearOperatorDerivedClassTest.check_tape_safe._assert_not_none": ["test.TestCase.assertIsNotNone"], "test.TestCase.assertIsNotNone": [], "eager.backprop.GradientTape": [], "ops.array_ops.ones": [], "ops.math_ops.cast": [], "<builtin>.getattr": [], "linalg.linear_operator_test_util._test_to_dense": [], "linalg.linear_operator_test_util._test_to_dense.test_to_dense": ["framework.ops.Graph"], "framework.ops.Graph": [], "linalg.linear_operator_test_util._test_det": [], "linalg.linear_operator_test_util._test_det.test_det": ["framework.ops.Graph"], "linalg.linear_operator_test_util._test_log_abs_det": [], "linalg.linear_operator_test_util._test_log_abs_det.test_log_abs_det": ["linalg.linalg_impl.slogdet", "framework.ops.Graph"], "linalg.linalg_impl.slogdet": [], "linalg.linear_operator_test_util._test_matmul_base": ["ops.math_ops.matmul", "linalg.linear_operator_util.broadcast_matrix_batch_dims", "linalg.linear_operator_util.split_arg_into_blocks", "linalg.linalg_impl.adjoint", "framework.ops.Graph", "ops.array_ops.concat", "<builtin>.len"], "<builtin>.len": [], "linalg.linalg_impl.adjoint": [], "ops.math_ops.matmul": [], "linalg.linear_operator_util.split_arg_into_blocks": [], "linalg.linear_operator_util.broadcast_matrix_batch_dims": [], "ops.array_ops.concat": [], "linalg.linear_operator_test_util._test_matmul": [], "linalg.linear_operator_test_util._test_matmul.test_matmul": ["linalg.linear_operator_test_util._test_matmul_base"], "linalg.linear_operator_test_util._test_matmul_with_broadcast": [], "linalg.linear_operator_test_util._test_matmul_with_broadcast.test_matmul_with_broadcast": ["linalg.linear_operator_test_util._test_matmul_base"], "linalg.linear_operator_test_util._test_adjoint": [], "linalg.linear_operator_test_util._test_adjoint.test_adjoint": ["linalg.linalg_impl.adjoint", "framework.ops.Graph"], "linalg.linear_operator_test_util._test_cholesky": [], "linalg.linear_operator_test_util._test_cholesky.test_cholesky": ["ops.linalg_ops.cholesky", "framework.ops.Graph"], "ops.linalg_ops.cholesky": [], "linalg.linear_operator_test_util._test_eigvalsh": [], "linalg.linear_operator_test_util._test_eigvalsh.test_eigvalsh": ["ops.math_ops.cast", "ops.sort_ops.sort", "framework.ops.Graph", "ops.linalg_ops.self_adjoint_eigvals"], "ops.sort_ops.sort": [], "ops.linalg_ops.self_adjoint_eigvals": [], "linalg.linear_operator_test_util._test_cond": [], "linalg.linear_operator_test_util._test_cond.test_cond": ["ops.math_ops.reduce_min", "platform.test.is_built_with_rocm", "ops.math_ops.abs", "framework.ops.Graph", "ops.linalg_ops.svd", "ops.math_ops.reduce_max"], "platform.test.is_built_with_rocm": [], "ops.linalg_ops.svd": [], "ops.math_ops.abs": [], "ops.math_ops.reduce_max": [], "ops.math_ops.reduce_min": [], "linalg.linear_operator_test_util._test_solve_base": ["linalg.linear_operator_util.broadcast_matrix_batch_dims", "linalg.linear_operator_util.split_arg_into_blocks", "linalg.linalg_impl.adjoint", "framework.ops.Graph", "ops.array_ops.concat", "<builtin>.len", "linalg.linear_operator_util.matrix_solve_with_broadcast"], "linalg.linear_operator_util.matrix_solve_with_broadcast": [], "linalg.linear_operator_test_util._test_solve": [], "linalg.linear_operator_test_util._test_solve.test_solve": ["linalg.linear_operator_test_util._test_solve_base"], "linalg.linear_operator_test_util._test_solve_with_broadcast": [], "linalg.linear_operator_test_util._test_solve_with_broadcast.test_solve_with_broadcast": ["linalg.linear_operator_test_util._test_solve_base"], "linalg.linear_operator_test_util._test_inverse": [], "linalg.linear_operator_test_util._test_inverse.test_inverse": ["framework.ops.Graph"], "linalg.linear_operator_test_util._test_trace": [], "linalg.linear_operator_test_util._test_trace.test_trace": ["framework.ops.Graph", "ops.math_ops.trace"], "ops.math_ops.trace": [], "linalg.linear_operator_test_util._test_add_to_tensor": [], "linalg.linear_operator_test_util._test_add_to_tensor.test_add_to_tensor": ["framework.ops.Graph"], "linalg.linear_operator_test_util._test_diag_part": [], "linalg.linear_operator_test_util._test_diag_part.test_diag_part": ["ops.array_ops.matrix_diag_part", "framework.ops.Graph"], "ops.array_ops.matrix_diag_part": [], "linalg.linear_operator_test_util._test_composite_tensor": [], "linalg.linear_operator_test_util._test_composite_tensor.test_composite_tensor": ["ops.math_ops.matmul", "ops.while_v2.while_loop", "saved_model.nested_structure_coder.StructureCoder", "util.nest.flatten", "<builtin>.type", "framework.ops.Graph", "eager.def_function.function", "util.nest.pack_sequence_as"], "util.nest.flatten": [], "util.nest.pack_sequence_as": [], "<builtin>.type": [], "linalg.linear_operator_test_util._test_composite_tensor.test_composite_tensor.<lambda1>": [], "eager.def_function.function": [], "linalg.linear_operator_test_util._test_composite_tensor.test_composite_tensor.body": ["<builtin>.type"], "linalg.linear_operator_test_util._test_composite_tensor.test_composite_tensor.<lambda2>": [], "ops.while_v2.while_loop": [], "saved_model.nested_structure_coder.StructureCoder": [], "linalg.linear_operator_test_util._test_saved_model": [], "linalg.linear_operator_test_util._test_saved_model.test_saved_model": ["ops.math_ops.matmul", "saved_model.save.save", "framework.ops.Graph", "linalg.linear_operator_test_util._test_saved_model.test_saved_model.Model.__init__", "saved_model.load.load"], "linalg.linear_operator_test_util._test_saved_model.test_saved_model.Model.__init__": ["util.nest.map_structure"], "linalg.linear_operator_test_util._test_saved_model.test_saved_model.Model.__init__.<lambda1>": ["ops.variables.Variable"], "ops.variables.Variable": [], "util.nest.map_structure": [], "linalg.linear_operator_test_util._test_saved_model.test_saved_model.Model": ["eager.def_function.function"], "linalg.linear_operator_test_util._test_saved_model.test_saved_model.Model.do_matmul": [], "saved_model.save.save": [], "saved_model.load.load": [], "linalg.linear_operator_test_util.add_tests": ["<builtin>.RuntimeError", "itertools.product", "<builtin>.setattr", "<builtin>.hasattr", "framework.test_util.run_deprecated_v1"], "itertools.product": [], "<builtin>.hasattr": [], "<builtin>.RuntimeError": [], "framework.test_util.run_deprecated_v1": [], "<builtin>.setattr": [], "linalg.linear_operator_test_util.SquareLinearOperatorDerivedClassTest.operator_shapes_infos": ["linalg.linear_operator_test_util.OperatorShapesInfo.__init__"], "linalg.linear_operator_test_util.SquareLinearOperatorDerivedClassTest.make_rhs": ["linalg.linear_operator_test_util.SquareLinearOperatorDerivedClassTest.make_x"], "linalg.linear_operator_test_util.SquareLinearOperatorDerivedClassTest.make_x": ["linalg.linear_operator_test_util.random_normal", "linalg.linear_operator_test_util.SquareLinearOperatorDerivedClassTest._get_num_systems", "ops.array_ops.concat"], "linalg.linear_operator_test_util.SquareLinearOperatorDerivedClassTest._get_num_systems": [], "linalg.linear_operator_test_util.random_normal": ["framework.dtypes.as_dtype", "framework.ops.name_scope", "ops.math_ops.complex", "ops.random_ops.random_normal"], "linalg.linear_operator_test_util.NonSquareLinearOperatorDerivedClassTest.skip_these_tests": [], "linalg.linear_operator_test_util.NonSquareLinearOperatorDerivedClassTest.operator_shapes_infos": ["linalg.linear_operator_test_util.OperatorShapesInfo.__init__"], "linalg.linear_operator_test_util.NonSquareLinearOperatorDerivedClassTest.make_rhs": ["<builtin>.NotImplementedError"], "linalg.linear_operator_test_util.NonSquareLinearOperatorDerivedClassTest.make_x": ["linalg.linear_operator_test_util.random_normal", "ops.array_ops.concat", "linalg.linear_operator_test_util.NonSquareLinearOperatorDerivedClassTest._get_num_systems"], "linalg.linear_operator_test_util.NonSquareLinearOperatorDerivedClassTest._get_num_systems": [], "linalg.linear_operator_test_util.random_positive_definite_matrix": ["framework.dtypes.as_dtype", "linalg.linear_operator_test_util.random_normal", "ops.math_ops.matmul", "ops.linalg_ops.eye", "framework.tensor_util.is_tf_type", "framework.tensor_shape.TensorShape", "framework.ops.name_scope", "numpy.sqrt", "ops.math_ops.cast"], "framework.tensor_util.is_tf_type": [], "framework.tensor_shape.TensorShape": [], "framework.ops.name_scope": [], "numpy.sqrt": [], "ops.linalg_ops.eye": [], "linalg.linear_operator_test_util.random_tril_matrix": ["linalg.linear_operator_test_util.random_normal", "framework.ops.convert_to_tensor", "framework.ops.name_scope", "linalg.linear_operator_test_util.random_sign_uniform", "ops.array_ops.matrix_band_part", "numpy.sqrt", "ops.array_ops.matrix_set_diag"], "ops.array_ops.matrix_band_part": [], "framework.ops.convert_to_tensor": [], "linalg.linear_operator_test_util.random_sign_uniform": ["framework.dtypes.as_dtype", "ops.random_ops.random_uniform", "ops.math_ops.sign", "framework.ops.name_scope", "ops.math_ops.cast", "linalg.linear_operator_test_util.random_uniform"], "ops.array_ops.matrix_set_diag": [], "ops.random_ops.random_normal": [], "ops.math_ops.complex": [], "linalg.linear_operator_test_util.random_uniform": ["framework.dtypes.as_dtype", "ops.random_ops.random_uniform", "framework.ops.name_scope", "ops.math_ops.complex"], "ops.random_ops.random_uniform": [], "ops.math_ops.sign": [], "linalg.linear_operator_test_util.random_normal_correlated_columns": ["framework.dtypes.as_dtype", "linalg.linear_operator_test_util.random_normal", "ops.math_ops.matmul", "framework.ops.name_scope", "<builtin>.ValueError", "numpy.sqrt", "ops.array_ops.matrix_transpose", "<builtin>.len", "<builtin>.list", "ops.array_ops.ones_like"], "<builtin>.ValueError": [], "<builtin>.list": [], "ops.array_ops.matrix_transpose": [], "ops.array_ops.ones_like": []}