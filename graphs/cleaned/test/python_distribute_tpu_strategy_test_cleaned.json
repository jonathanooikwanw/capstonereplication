{"distribute.tpu_strategy_test": ["eager.test.main", "platform.flags.DEFINE_string"], "platform.flags.DEFINE_string": [], "distribute.tpu_strategy_test.get_tpu_cluster_resolver": ["cluster_resolver.tpu_cluster_resolver.TPUClusterResolver"], "cluster_resolver.tpu_cluster_resolver.TPUClusterResolver": [], "distribute.tpu_strategy_test.get_tpu_strategy": ["distribute.tpu_strategy_test.get_tpu_cluster_resolver", "distribute.tpu_strategy.TPUStrategyV2", "tpu.tpu_strategy_util.initialize_tpu_system", "eager.remote.connect_to_cluster"], "eager.remote.connect_to_cluster": [], "tpu.tpu_strategy_util.initialize_tpu_system": [], "distribute.tpu_strategy.TPUStrategyV2": [], "distribute.tpu_strategy_test.TPUTest.test_multiple_initialize_system": ["tpu.tpu_strategy_util.initialize_tpu_system", "eager.remote.connect_to_cluster", "mock.patch.object", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "test.TestCase.assertRegex", "<builtin>.str"], "mock.patch.object": [], "<builtin>.str": [], "test.TestCase.assertRegex": [], "distribute.tpu_strategy_test.TPUTest.test_tpu_tf_function_same_device": ["test.TestCase.assertAllEqual", "framework.ops.device", "distribute.tpu_strategy_test.TPUTest.test_tpu_tf_function_same_device.foo", "ops.variables.Variable", "eager.def_function.function", "eager.function.defun_with_attributes"], "framework.ops.device": [], "ops.variables.Variable": [], "eager.function.defun_with_attributes": [], "distribute.tpu_strategy_test.TPUTest.test_tpu_tf_function_same_device.get_a_plus_one": [], "eager.def_function.function": [], "distribute.tpu_strategy_test.TPUTest.test_tpu_tf_function_same_device.foo": ["distribute.tpu_strategy_test.TPUTest.test_tpu_tf_function_same_device.get_a_plus_one", "framework.ops.device"], "test.TestCase.assertAllEqual": [], "distribute.tpu_strategy_test.TPUTest.test_tpu_return_int32": ["test.TestCase.assertAllEqual", "framework.ops.device", "ops.variables.Variable", "distribute.tpu_strategy_test.TPUTest.test_tpu_return_int32.bar"], "distribute.tpu_strategy_test.TPUTest.test_tpu_return_int32.foo": [], "distribute.tpu_strategy_test.TPUTest.test_tpu_return_int32.bar": ["framework.ops.device", "distribute.tpu_strategy_test.TPUTest.test_tpu_return_int32.foo"], "distribute.tpu_strategy_test.TPUTest.test_tpu_output_device": ["eager.function.defun_with_attributes", "test.TestCase.assertAllEqual", "framework.ops.device"], "distribute.tpu_strategy_test.TPUTest.test_tpu_output_device.foo": [], "distribute.tpu_strategy_test.TPUTest.test_on_demand_op_with_dynamic_output": ["ops.array_ops.where", "test.TestCase.assertAllEqual", "framework.ops.device", "ops.array_ops.repeat", "ops.math_ops.range"], "ops.array_ops.where": [], "ops.math_ops.range": [], "ops.array_ops.repeat": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_handle_in_cross_replica_context": ["distribute.tpu_strategy_test.TPUStrategyTest.test_handle_in_cross_replica_context.func", "distribute.tpu_strategy_test.get_tpu_strategy", "test.TestCase.assertAllEqual", "ops.variables.Variable"], "distribute.tpu_strategy_test.TPUStrategyTest.test_handle_in_cross_replica_context.func": ["test.TestCase.assertEndsWith"], "test.TestCase.assertEndsWith": [], "distribute.tpu_strategy_test.TPUStrategyTest.testStaticHashTableDatasetFnHostTrainingLoop": ["<builtin>.range", "distribute.tpu_strategy_test.TPUStrategyTest.testStaticHashTableDatasetFnHostTrainingLoop.train_steps", "distribute.tpu_strategy_test.get_tpu_strategy", "<builtin>.list", "ops.lookup_ops.StaticHashTable", "<builtin>.iter", "test.TestCase.assertEqual", "<builtin>.len", "framework.constant_op.constant", "ops.lookup_ops.KeyValueTensorInitializer"], "<builtin>.len": [], "<builtin>.range": [], "<builtin>.list": [], "framework.constant_op.constant": [], "ops.lookup_ops.KeyValueTensorInitializer": [], "ops.lookup_ops.StaticHashTable": [], "distribute.tpu_strategy_test.TPUStrategyTest.testStaticHashTableDatasetFnHostTrainingLoop.dataset_fn": ["framework.constant_op.constant", "dataset_ops.Dataset.from_tensors"], "dataset_ops.Dataset.from_tensors": [], "<builtin>.iter": [], "distribute.tpu_strategy_test.TPUStrategyTest.testStaticHashTableDatasetFnHostTrainingLoop.step_fn": ["ops.math_ops.reduce_sum"], "ops.math_ops.reduce_sum": [], "distribute.tpu_strategy_test.TPUStrategyTest.testStaticHashTableDatasetFnHostTrainingLoop.train_steps": ["<builtin>.next", "ops.math_ops.range"], "<builtin>.next": [], "test.TestCase.assertEqual": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_function_compile_with_xla": ["test.TestCase.assertAllEqual", "framework.ops.device", "distribute.tpu_strategy_test.get_tpu_strategy", "test.TestCase.skipTest", "distribute.tpu_strategy_test.TPUStrategyTest.test_function_compile_with_xla.func", "ops.variables.Variable"], "test.TestCase.skipTest": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_function_compile_with_xla.func": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_sequential_runs": ["device_assignment.DeviceAssignment.build", "distribute.tpu_strategy_test.TPUStrategyTest.test_sequential_runs.train_step", "test.TestCase.assertAllEqual", "tpu.tpu_strategy_util.initialize_tpu_system", "eager.remote.connect_to_cluster", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "distribute.tpu_strategy.TPUStrategyV2"], "device_assignment.DeviceAssignment.build": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_sequential_runs.computation": ["ops.math_ops.square"], "ops.math_ops.square": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_sequential_runs.train_step": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case": ["distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference", "distribute.tpu_strategy_test.get_tpu_strategy", "test.TestCase.assertAllEqual", "ops.variables.Variable"], "distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.inference_fn": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference": ["ops.control_flow_ops.switch_case"], "distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.do_inference": ["distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.inference_fn", "framework.ops.device"], "distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.<dict1>.<lambda1>": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.<lambda1>": ["distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.do_inference"], "distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.<dict1>.<lambda2>": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.<lambda2>": ["distribute.tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.do_inference"], "ops.control_flow_ops.switch_case": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures": ["distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.compilation_failure_run", "test.TestCase.skipTest", "framework.config.set_soft_device_placement", "distribute.tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.good_run", "test.TestCase.assertRaises"], "framework.config.set_soft_device_placement": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.compilation_failure_run": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.compilation_failure_run.computation": ["ops.random_ops.random_gamma"], "ops.random_ops.random_gamma": [], "test.TestCase.assertRaises": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.good_run": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.good_run.computation": ["ops.random_ops.random_normal"], "ops.random_ops.random_normal": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_dynamic_shape_with_outside_compilation_failure": ["distribute.tpu_strategy_test.TPUStrategyTest.test_dynamic_shape_with_outside_compilation_failure.train_fn", "platform.tf_logging.info", "dataset_ops.Dataset.from_tensors", "distribute.tpu_strategy_test.get_tpu_strategy", "framework.config.set_soft_device_placement", "<builtin>.iter", "test.TestCase.assertRaises"], "distribute.tpu_strategy_test.TPUStrategyTest.test_dynamic_shape_with_outside_compilation_failure.train_fn": ["<builtin>.next"], "distribute.tpu_strategy_test.TPUStrategyTest.test_dynamic_shape_with_outside_compilation_failure.train_fn.step_fn": ["ops.array_ops.size", "ops.math_ops.reduce_sum"], "ops.array_ops.size": [], "platform.tf_logging.info": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_computation_on_subset_cores": ["device_assignment.DeviceAssignment.build", "test.TestCase.assertAllEqual", "tpu.tpu_strategy_util.initialize_tpu_system", "eager.remote.connect_to_cluster", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "distribute.tpu_strategy.TPUStrategyV2", "ops.variables.Variable", "tpu.device_assignment.DeviceAssignment", "distribute.tpu_strategy_test.TPUStrategyTest.test_computation_on_subset_cores.train_step"], "tpu.device_assignment.DeviceAssignment": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_computation_on_subset_cores.train_step": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_computation_on_subset_cores.train_step.step_fn": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_worker_devices_on_subset_cores": ["device_assignment.DeviceAssignment.build", "test.TestCase.assertEndsWith", "tpu.tpu_strategy_util.initialize_tpu_system", "eager.remote.connect_to_cluster", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "distribute.tpu_strategy.TPUStrategyV2", "tpu.device_assignment.DeviceAssignment", "test.TestCase.assertLen"], "test.TestCase.assertLen": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_control_output_in_while_body_fn": ["test.TestCase.assertEqual", "distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_control_output_in_while_body_fn.train_step", "ops.variables.Variable"], "distribute.tpu_strategy_test.TPUStrategyTest.test_control_output_in_while_body_fn.train_step": ["ops.math_ops.range"], "distribute.tpu_strategy_test.TPUStrategyTest.test_control_output_in_while_body_fn.train_step.step_fn": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape": ["distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape.train_step", "test.TestCase.assertAllEqual"], "distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape.train_step": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape.train_step.shape_list": ["<builtin>.enumerate", "ops.array_ops.shape"], "<builtin>.enumerate": [], "ops.array_ops.shape": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape.train_step.step_fn": ["distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape.train_step.shape_list", "ops.array_ops.where", "ops.array_ops.reshape", "ops.array_ops.shape"], "ops.array_ops.reshape": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_in_graph_and_while_body_fn": ["test.TestCase.assertEqual", "distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_in_graph_and_while_body_fn.train_step"], "distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_in_graph_and_while_body_fn.train_step": ["ops.math_ops.range"], "distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_in_graph_and_while_body_fn.train_step.step_fn": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_cluster_in_graph_and_while_body_fn.train_step.init_fn": ["ops.array_ops.zeros"], "ops.array_ops.zeros": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn": ["distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn.bar"], "distribute.tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn.foo": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn.foo.<lambda1>": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn.bar": ["distribute.tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn.foo"], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_variable_run_argument": ["distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_variable_run_argument.step", "ops.variables.Variable"], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_variable_run_argument.replica_step": ["test.TestCase.assertIsInstance"], "test.TestCase.assertIsInstance": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_variable_run_argument.step": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing": ["distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.step", "distribute.tpu_strategy_test.get_tpu_strategy", "test.TestCase.assertRaisesRegex", "ops.variables.Variable", "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.DummyClass.step"], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.only_star_args": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.pos_and_star_args": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.named_args": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.star_args_and_kw_only": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.step": [], "test.TestCase.assertRaisesRegex": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.DummyClass.method": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.DummyClass.step": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_using_external_variable_inside_tf_function": ["<builtin>.range", "test.TestCase.assertAllEqual", "distribute.tpu_strategy_test.get_tpu_strategy", "<builtin>.next", "dataset_ops.Dataset.range", "ops.variables.Variable", "<builtin>.iter", "distribute.tpu_strategy_test.TPUStrategyTest.test_using_external_variable_inside_tf_function.train_step"], "dataset_ops.Dataset.range": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_using_external_variable_inside_tf_function.train_step": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_using_external_variable_inside_tf_function.train_step.computation": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_all_reduce_on_sync_on_read_variable": ["<builtin>.range", "test.TestCase.assertAllEqual", "<builtin>.sum", "distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_all_reduce_on_sync_on_read_variable.run", "dataset_ops.Dataset.range", "ops.variables.Variable", "<builtin>.iter"], "distribute.tpu_strategy_test.TPUStrategyTest.test_all_reduce_on_sync_on_read_variable.run": ["<builtin>.next"], "distribute.tpu_strategy_test.TPUStrategyTest.test_all_reduce_on_sync_on_read_variable.run.computation": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_all_reduce_on_sync_on_read_variable.run.all_reduce": ["distribute.distribution_strategy_context.get_replica_context"], "distribute.distribution_strategy_context.get_replica_context": [], "<builtin>.sum": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_output_on_device": ["distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_run_output_on_device.train_step", "test.TestCase.assertAllEqual"], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_output_on_device.computation": ["ops.math_ops.square"], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_output_on_device.train_step": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_nones": ["distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_nones.train_step", "test.TestCase.assertIsNone", "test.TestCase.assertAllEqual"], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_nones.train_step": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_nones.train_step.computation": [], "test.TestCase.assertIsNone": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_list": ["test.TestCase.assertEqual", "distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_list.train_step"], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_list.train_step": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_list.train_step.computation": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_dict": ["test.TestCase.assertEqual", "distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_dict.train_step"], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_dict.train_step": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_dict.train_step.computation": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_output": ["<builtin>.range", "distribute.distribute_lib.InputOptions", "test.TestCase.assertAllEqual", "distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_output.sparse_lookup", "test.TestCase.skipTest", "ops.variables.Variable", "<builtin>.iter", "test.TestCase.assertIsInstance"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_output.sparse_lookup": ["util.nest.map_structure", "<builtin>.next"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_output.sparse_lookup.tpu_function": ["ops.math_ops.unsorted_segment_sum", "ops.array_ops.gather"], "ops.array_ops.gather": [], "ops.math_ops.unsorted_segment_sum": [], "util.nest.map_structure": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_output.dataset_fn": ["dataset_ops.Dataset.range"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_output.dataset_fn.make_sparse": ["ops.array_ops.constant", "framework.sparse_tensor.SparseTensor"], "ops.array_ops.constant": [], "framework.sparse_tensor.SparseTensor": [], "distribute.distribute_lib.InputOptions": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output": ["<builtin>.range", "distribute.distribute_lib.InputOptions", "test.TestCase.assertAllEqual", "distribute.tpu_strategy_test.get_tpu_strategy", "test.TestCase.skipTest", "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output.sparse_lookup", "ops.variables.Variable", "<builtin>.iter", "test.TestCase.assertIsInstance"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output.sparse_lookup": ["util.nest.map_structure", "<builtin>.next"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output.sparse_lookup.tpu_function": ["ops.math_ops.unsorted_segment_sum", "ops.array_ops.gather"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output.dataset_fn": ["dataset_ops.Dataset.range"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output.dataset_fn.make_sparse": ["ops.array_ops.constant", "framework.sparse_tensor.SparseTensor"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation": ["distribute.distribute_lib.InputOptions", "test.TestCase.assertAllEqual", "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation.sparse_lookup", "distribute.tpu_strategy_test.get_tpu_strategy", "test.TestCase.skipTest", "ops.variables.Variable", "<builtin>.iter"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation.sparse_lookup": ["<builtin>.next"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation.sparse_lookup.tpu_function": ["tpu.tpu.outside_compilation", "ops.math_ops.reduce_sum"], "tpu.tpu.outside_compilation": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation.dataset_fn": ["dataset_ops.Dataset.range"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation.dataset_fn.make_sparse": ["ops.array_ops.constant", "ops.array_ops.concat", "ops.array_ops.expand_dims", "framework.sparse_tensor.SparseTensor"], "ops.array_ops.expand_dims": [], "ops.array_ops.concat": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components": ["<builtin>.range", "test.TestCase.assertAllEqual", "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestComposite.__init__", "distribute.tpu_strategy_test.get_tpu_strategy", "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.test_fn", "ops.array_ops.constant", "test.TestCase.assertIsInstance"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec.__init__": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec.value_type": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec._to_components": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec._from_components": ["distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestComposite.__init__"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestComposite.__init__": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec._component_specs": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec._serialize": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestComposite._type_spec": ["distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec.__init__", "tensor_spec.TensorSpec.from_tensor"], "tensor_spec.TensorSpec.from_tensor": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestComposite._shape_invariant_to_type_spec": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.test_fn": ["util.nest.map_structure"], "distribute.tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.test_fn.tpu_function": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_per_device_tracing_of_mirrored_variables": ["distribute.tpu_strategy_test.get_tpu_strategy", "test.TestCase.assertLen", "ops.variables.Variable"], "distribute.tpu_strategy_test.TPUStrategyTest.test_per_device_tracing_of_mirrored_variables.add_one": ["framework.constant_op.constant", "ops.math_ops.add"], "ops.math_ops.add": [], "distribute.tpu_strategy_test.TPUStrategyTest.test_per_device_tracing_of_mirrored_variables.update_variable": ["distribute.tpu_strategy_test.TPUStrategyTest.test_per_device_tracing_of_mirrored_variables.add_one", "<builtin>.set", "framework.ops.device"], "<builtin>.set": [], "distribute.tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_default": ["distribute.tpu_strategy_test.get_tpu_strategy", "<builtin>.next", "device.DeviceSpec.from_string", "test.TestCase.assertEqual", "dataset_ops.Dataset.range", "<builtin>.iter"], "device.DeviceSpec.from_string": [], "distribute.tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_tpu": ["distribute.distribute_lib.InputOptions", "distribute.tpu_strategy_test.get_tpu_strategy", "<builtin>.next", "device.DeviceSpec.from_string", "test.TestCase.assertEqual", "dataset_ops.Dataset.range", "<builtin>.iter"], "distribute.tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_cpu": ["distribute.distribute_lib.InputOptions", "distribute.tpu_strategy_test.get_tpu_strategy", "<builtin>.next", "device.DeviceSpec.from_string", "test.TestCase.assertEqual", "dataset_ops.Dataset.range", "<builtin>.iter"], "distribute.tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_sparse_dataset": ["dataset_ops.Dataset.from_tensors", "distribute.tpu_strategy_test.get_tpu_strategy", "test.TestCase.assertRaisesRegex", "<builtin>.iter", "framework.sparse_tensor.SparseTensor"], "distribute.tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_ragged_dataset": ["dataset_ops.Dataset.from_tensors", "ragged_tensor.RaggedTensor.from_row_splits", "distribute.tpu_strategy_test.get_tpu_strategy", "test.TestCase.assertRaisesRegex", "<builtin>.iter"], "ragged_tensor.RaggedTensor.from_row_splits": [], "distribute.tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_sparse_dataset_fn": ["distribute.tpu_strategy_test.get_tpu_strategy", "<builtin>.iter", "test.TestCase.assertRaisesRegex"], "distribute.tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_sparse_dataset_fn.dataset_fn": ["dataset_ops.Dataset.from_tensors", "framework.sparse_tensor.SparseTensor"], "distribute.tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_ragged_dataset_fn": ["distribute.tpu_strategy_test.get_tpu_strategy", "<builtin>.iter", "test.TestCase.assertRaisesRegex"], "distribute.tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_ragged_dataset_fn.dataset_fn": ["ragged_tensor.RaggedTensor.from_row_splits", "dataset_ops.Dataset.from_tensors"], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_update_config_proto": ["protobuf.config_pb2.ConfigProto", "tpu.tpu_strategy_util.initialize_tpu_system", "strategy_test_lib.DistributionTestBase.assertTrue", "eager.remote.connect_to_cluster", "mock.patch.object", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "distribute.tpu_strategy.TPUStrategyV2", "strategy_test_lib.DistributionTestBase.assertProtoEquals", "training.server_lib.ClusterSpec"], "protobuf.config_pb2.ConfigProto": [], "training.server_lib.ClusterSpec": [], "strategy_test_lib.DistributionTestBase.assertProtoEquals": [], "strategy_test_lib.DistributionTestBase.assertTrue": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_make_input_fn_iterable": ["distribute.tpu_strategy_test.get_tpu_strategy", "<builtin>.range", "strategy_test_lib.DistributionTestBase._test_input_fn_iterable", "strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context"], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_make_input_fn_iterable.<lambda1>": ["dataset_ops.Dataset.range"], "strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context": [], "strategy_test_lib.DistributionTestBase._test_input_fn_iterable": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_make_input_fn_iterator": ["distribute.tpu_strategy_test.get_tpu_strategy", "<builtin>.range", "strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context", "strategy_test_lib.DistributionTestBase._test_input_fn_iterator"], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_make_input_fn_iterator.<lambda1>": ["dataset_ops.Dataset.range"], "strategy_test_lib.DistributionTestBase._test_input_fn_iterator": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_num_replicas_in_sync": ["distribute.tpu_strategy_test.get_tpu_strategy", "strategy_test_lib.DistributionTestBase.assertEqual"], "strategy_test_lib.DistributionTestBase.assertEqual": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_call_and_merge_exceptions": ["strategy_test_lib.DistributionTestBase._test_call_and_merge_exceptions", "distribute.tpu_strategy_test.get_tpu_strategy"], "strategy_test_lib.DistributionTestBase._test_call_and_merge_exceptions": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_numpy_dataset": ["strategy_test_lib.DistributionTestBase._test_numpy_dataset", "distribute.tpu_strategy_test.get_tpu_strategy"], "strategy_test_lib.DistributionTestBase._test_numpy_dataset": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_global_step_update": ["distribute.tpu_strategy_test.get_tpu_strategy", "strategy_test_lib.DistributionTestBase._test_global_step_update"], "strategy_test_lib.DistributionTestBase._test_global_step_update": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_run": ["distribute.tpu_strategy_test.get_tpu_strategy", "strategy_test_lib.DistributionTestBase._test_run"], "strategy_test_lib.DistributionTestBase._test_run": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_summary_for_replica_zero_only": ["distribute.tpu_strategy_test.get_tpu_strategy", "strategy_test_lib.DistributionTestBase._test_summary_for_replica_zero_only"], "strategy_test_lib.DistributionTestBase._test_summary_for_replica_zero_only": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_sum": ["distribute.tpu_strategy_test.get_tpu_strategy", "strategy_test_lib.DistributionTestBase._test_all_reduce_sum"], "strategy_test_lib.DistributionTestBase._test_all_reduce_sum": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_sum_gradients": ["distribute.tpu_strategy_test.get_tpu_strategy", "strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradients"], "strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradients": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_sum_gradient_tape": ["strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradient_tape", "distribute.tpu_strategy_test.get_tpu_strategy"], "strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradient_tape": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_mean": ["distribute.tpu_strategy_test.get_tpu_strategy", "strategy_test_lib.DistributionTestBase._test_all_reduce_mean"], "strategy_test_lib.DistributionTestBase._test_all_reduce_mean": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_mean_gradients": ["distribute.tpu_strategy_test.get_tpu_strategy", "strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradients"], "strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradients": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_mean_gradient_tape": ["distribute.tpu_strategy_test.get_tpu_strategy", "strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradient_tape"], "strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradient_tape": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_reduce": ["distribute.tpu_strategy_test.get_tpu_strategy", "eager.def_function.function", "strategy_test_lib.DistributionTestBase.evaluate", "<builtin>.next", "strategy_test_lib.DistributionTestBase.assertEqual"], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_reduce.<lambda1>": ["dataset_ops.Dataset.from_tensor_slices"], "dataset_ops.Dataset.from_tensor_slices": [], "strategy_test_lib.DistributionTestBase.evaluate": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_constraint": ["distribute.tpu_strategy_test.get_tpu_strategy", "ops.variables.Variable", "strategy_test_lib.DistributionTestBase.assertEqual", "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_constraint.update_variable"], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_constraint.<lambda1>": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_constraint.update_variable": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_trainable_variables": ["distribute.tpu_strategy_test.get_tpu_strategy", "strategy_test_lib.DistributionTestBase._test_trainable_variable"], "strategy_test_lib.DistributionTestBase._test_trainable_variable": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism": ["strategy_test_lib.DistributionTestBase.evaluate", "strategy_test_lib.DistributionTestBase.cached_session", "tpu.tpu_strategy_util.initialize_tpu_system", "strategy_test_lib.DistributionTestBase.assertLen", "eager.remote.connect_to_cluster", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "distribute.tpu_strategy.TPUStrategyV2", "ops.variables.Variable", "ops.variables.global_variables_initializer", "tpu.device_assignment.DeviceAssignment", "strategy_test_lib.DistributionTestBase.assertEqual"], "strategy_test_lib.DistributionTestBase.assertLen": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism.f": ["distribute.distribution_strategy_context.get_replica_context"], "strategy_test_lib.DistributionTestBase.cached_session": [], "ops.variables.global_variables_initializer": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing": ["strategy_test_lib.DistributionTestBase.evaluate", "training.checkpoint_management.latest_checkpoint", "strategy_test_lib.DistributionTestBase.cached_session", "tpu.tpu_strategy_util.initialize_tpu_system", "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing.PartitionedModel.change_weights_op", "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing.PartitionedModel.__init__", "eager.remote.connect_to_cluster", "os.path.join", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "distribute.tpu_strategy.TPUStrategyV2", "ops.variables.global_variables_initializer", "eager.def_function.function", "tpu.device_assignment.DeviceAssignment", "strategy_test_lib.DistributionTestBase.assertEqual", "strategy_test_lib.DistributionTestBase.get_temp_dir", "tracking.util.Checkpoint"], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing.PartitionedModel.__init__": ["<builtin>.super", "distribute.distribution_strategy_context.has_strategy", "ops.variables.Variable", "distribute.distribution_strategy_context.get_strategy"], "<builtin>.super": [], "distribute.distribution_strategy_context.has_strategy": [], "distribute.distribution_strategy_context.get_strategy": [], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing.PartitionedModel.__call__": ["distribute.distribution_strategy_context.get_replica_context"], "distribute.tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing.PartitionedModel.change_weights_op": ["ops.control_flow_ops.group"], "ops.control_flow_ops.group": [], "strategy_test_lib.DistributionTestBase.get_temp_dir": [], "os.path.join": [], "tracking.util.Checkpoint": [], "training.checkpoint_management.latest_checkpoint": [], "distribute.tpu_strategy_test.DeviceAssignmentTest.test_core_assignment": ["test.TestCase.assertAllEqual", "tpu.tpu_strategy_util.initialize_tpu_system", "eager.remote.connect_to_cluster", "test.TestCase.assertEqual", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "tpu.device_assignment.DeviceAssignment"], "distribute.tpu_strategy_test.DeviceAssignmentTest.test_device_assignment_strategy_properties": ["tpu.tpu_strategy_util.initialize_tpu_system", "eager.remote.connect_to_cluster", "test.TestCase.assertEqual", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "distribute.tpu_strategy.TPUStrategyV2", "tpu.device_assignment.DeviceAssignment"], "distribute.tpu_strategy_test.DeviceAssignmentTest.test_device_assignment_constants": ["test.TestCase.assertAllEqual", "tpu.tpu_strategy_util.initialize_tpu_system", "eager.remote.connect_to_cluster", "test.TestCase.assertEqual", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "tpu.device_assignment.DeviceAssignment"], "distribute.tpu_strategy_test.DeviceAssignmentTest.test_variables_mismatched_device_assignment": ["test.TestCase.assertAllEqual", "tpu.tpu_strategy_util.initialize_tpu_system", "test.TestCase.cached_session", "test.TestCase.evaluate", "eager.remote.connect_to_cluster", "test.TestCase.assertEqual", "distribute.tpu_strategy_test.get_tpu_cluster_resolver", "distribute.tpu_strategy.TPUStrategyV2", "ops.variables.Variable", "ops.variables.global_variables_initializer", "tpu.device_assignment.DeviceAssignment", "eager.def_function.function"], "test.TestCase.cached_session": [], "test.TestCase.evaluate": [], "eager.test.main": []}