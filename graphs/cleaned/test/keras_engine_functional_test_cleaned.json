{"engine.functional_test": ["platform.test.main"], "engine.functional_test.NetworkConstructionTest.test_default_model_name": ["engine.input_layer.Input", "keras.layers.Dense", "engine.training.Model", "keras_parameterized.TestCase.assertEqual"], "engine.input_layer.Input": [], "keras.layers.Dense": [], "engine.training.Model": [], "keras_parameterized.TestCase.assertEqual": [], "engine.functional_test.NetworkConstructionTest.test_get_updates": ["engine.functional.Functional", "<builtin>.len", "framework.ops.Graph", "engine.input_layer.Input", "ops.state_ops.assign_add", "layers.Layer.__init__", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.NetworkConstructionTest.test_get_updates.MyLayer.build": ["layers.Layer.add_variable", "ops.state_ops.assign_add", "layers.Layer.add_update"], "layers.Layer.add_variable": [], "ops.state_ops.assign_add": [], "layers.Layer.add_update": [], "engine.functional_test.NetworkConstructionTest.test_get_updates.MyLayer.call": ["ops.state_ops.assign_add", "layers.Layer.add_update"], "framework.ops.Graph": [], "layers.Layer.__init__": [], "<builtin>.len": [], "engine.functional.Functional": [], "keras.combinations.combine": [], "engine.functional_test.NetworkConstructionTest": ["keras.combinations.generate", "keras.combinations.times", "keras.combinations.keras_model_type_combinations", "keras.combinations.combine", "keras.combinations.keras_mode_combinations"], "keras.combinations.generate": [], "engine.functional_test.NetworkConstructionTest.test_get_updates_bn": ["keras.layers.BatchNormalization", "engine.input_layer.Input", "<builtin>.len", "keras_parameterized.TestCase.assertEqual"], "keras.layers.BatchNormalization": [], "engine.functional_test.NetworkConstructionTest.test_get_layer": ["keras.layers.Dense", "keras_parameterized.TestCase.assertRaisesRegex", "engine.functional.Functional", "<builtin>.len", "engine.input_layer.Input", "<builtin>.str", "keras_parameterized.TestCase.assertEqual"], "<builtin>.str": [], "keras_parameterized.TestCase.assertRaisesRegex": [], "engine.functional_test.NetworkConstructionTest.testTopologicalAttributes": ["keras_parameterized.TestCase.assertRaises", "keras.layers.Dense", "keras_parameterized.TestCase.assertIs", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual"], "keras_parameterized.TestCase.assertIs": [], "keras_parameterized.TestCase.assertRaises": [], "engine.functional_test.NetworkConstructionTest._assertAllIs": ["keras_parameterized.TestCase.assertTrue", "<builtin>.zip", "<builtin>.all"], "<builtin>.zip": [], "<builtin>.all": [], "keras_parameterized.TestCase.assertTrue": [], "engine.functional_test.NetworkConstructionTest.testTopologicalAttributesMultiOutputLayer": ["engine.functional_test.NetworkConstructionTest._assertAllIs", "keras_parameterized.TestCase.assertIs", "engine.input_layer.Input", "layers.Layer.__init__", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.NetworkConstructionTest.testTopologicalAttributesMultiOutputLayer.PowersLayer.call": [], "engine.functional_test.NetworkConstructionTest.testTopologicalAttributesMultiInputLayer": ["engine.functional_test.NetworkConstructionTest._assertAllIs", "keras_parameterized.TestCase.assertIs", "engine.input_layer.Input", "layers.Layer.__init__", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.NetworkConstructionTest.testTopologicalAttributesMultiInputLayer.AddLayer.call": ["<builtin>.len"], "engine.functional_test.NetworkConstructionTest.testBasicNetwork": ["keras.layers.Dense", "engine.functional.Functional", "<builtin>.len", "engine.functional_test.NetworkConstructionTest._assertAllIs", "framework.ops.Graph", "engine.input_layer.Input", "ops.array_ops.placeholder", "keras_parameterized.TestCase.assertEqual"], "ops.array_ops.placeholder": [], "engine.functional_test.NetworkConstructionTest.test_trainable_weights": ["engine.sequential.Sequential", "engine.training.Model", "keras.layers.Dense", "keras.layers.Input", "engine.functional_test.NetworkConstructionTest._assertAllIs", "keras_parameterized.TestCase.assertListEqual"], "keras.layers.Input": [], "keras_parameterized.TestCase.assertListEqual": [], "engine.sequential.Sequential": [], "engine.functional_test.NetworkConstructionTest.test_layer_call_arguments": ["engine.training.Model", "keras.layers.Dense", "keras.layers.Input", "keras_parameterized.TestCase.assertIn", "framework.ops.Graph", "keras.layers.Dropout", "training.Model.from_config"], "keras.layers.Dropout": [], "keras_parameterized.TestCase.assertIn": [], "training.Model.from_config": [], "engine.functional_test.NetworkConstructionTest.test_node_construction": ["keras_parameterized.TestCase.assertRaises", "keras.layers.Dense", "keras.layers.Input", "<builtin>.len", "keras_parameterized.TestCase.assertListEqual", "keras_parameterized.TestCase.assertIs", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.NetworkConstructionTest.test_multi_input_layer": ["engine.training.Model", "utils.layer_utils.get_source_inputs", "keras.backend.function", "keras.layers.Dense", "keras.layers.Input", "<builtin>.len", "engine.functional_test.NetworkConstructionTest._assertAllIs", "keras.layers.concatenate", "keras_parameterized.TestCase.cached_session", "keras_parameterized.TestCase.assertListEqual", "numpy.random.random", "keras.models.model_from_json", "keras_parameterized.TestCase.assertEqual"], "keras_parameterized.TestCase.cached_session": [], "keras.layers.concatenate": [], "keras.backend.function": [], "numpy.random.random": [], "utils.layer_utils.get_source_inputs": [], "keras.models.model_from_json": [], "engine.functional_test.NetworkConstructionTest.test_multi_output_layer_output_names": ["engine.training.Model", "keras.layers.Input", "keras_parameterized.TestCase.assertAllClose", "layers.Layer.__init__", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.NetworkConstructionTest.test_multi_output_layer_output_names._MultiOutput.call": [], "keras_parameterized.TestCase.assertAllClose": [], "engine.functional_test.NetworkConstructionTest.test_recursion": ["models.Model.from_config", "engine.training.Model", "keras.backend.function", "keras.layers.Dense", "keras.layers.Input", "<builtin>.len", "keras.layers.concatenate", "keras_parameterized.TestCase.cached_session", "framework.ops.Graph", "keras_parameterized.TestCase.assertListEqual", "numpy.random.random", "keras_parameterized.TestCase.assertEqual"], "models.Model.from_config": [], "engine.functional_test.NetworkConstructionTest.test_multi_input_multi_output_recursion": ["models.Model.from_config", "engine.training.Model", "keras.backend.function", "keras.layers.Dense", "keras.layers.Input", "keras.layers.concatenate", "keras_parameterized.TestCase.cached_session", "keras_parameterized.TestCase.assertListEqual", "numpy.random.random", "keras.models.model_from_json"], "engine.functional_test.NetworkConstructionTest.test_invalid_graphs": ["keras_parameterized.TestCase.assertRaises", "engine.training.Model", "keras.layers.Dense", "keras.layers.Input", "keras.layers.concatenate"], "engine.functional_test.NetworkConstructionTest.test_raw_tf_compatibility": ["keras.layers.add", "engine.training.Model", "keras.layers.InputLayer", "keras.layers.Dense", "keras.layers.Input", "<builtin>.len", "keras.layers.concatenate", "framework.ops.Graph", "keras_parameterized.TestCase.assertListEqual", "ops.array_ops.placeholder", "keras_parameterized.TestCase.assertEqual"], "keras.layers.add": [], "keras.layers.InputLayer": [], "engine.functional_test.NetworkConstructionTest.test_basic_masking": ["keras_parameterized.TestCase.assertEqual", "engine.training.Model", "keras.layers.Masking", "keras.layers.Input"], "keras.layers.Masking": [], "engine.functional_test.NetworkConstructionTest.testMaskingSingleInput": ["keras_parameterized.TestCase.assertEqual", "engine.input_layer.Input", "eager.context.executing_eagerly", "engine.functional.Functional", "framework.constant_op.constant", "<builtin>.getattr", "ops.array_ops.ones_like", "keras_parameterized.TestCase.assertAllEqual", "keras_parameterized.TestCase.evaluate", "keras_parameterized.TestCase.assertTrue", "<builtin>.hasattr", "ops.array_ops.placeholder", "layers.Layer.__init__", "layers.Layer.apply"], "engine.functional_test.NetworkConstructionTest.testMaskingSingleInput.MaskedLayer.call": [], "engine.functional_test.NetworkConstructionTest.testMaskingSingleInput.MaskedLayer.compute_mask": ["ops.array_ops.ones_like"], "ops.array_ops.ones_like": [], "eager.context.executing_eagerly": [], "framework.constant_op.constant": [], "layers.Layer.apply": [], "<builtin>.hasattr": [], "keras_parameterized.TestCase.evaluate": [], "<builtin>.getattr": [], "keras_parameterized.TestCase.assertAllEqual": [], "engine.functional_test.NetworkConstructionTest.test_activity_regularization_with_model_composition": ["engine.training.Model", "keras.layers.Dense", "numpy.ones", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.NetworkConstructionTest.test_activity_regularization_with_model_composition.reg": ["ops.math_ops.reduce_sum"], "ops.math_ops.reduce_sum": [], "numpy.ones": [], "keras.combinations.keras_mode_combinations": [], "engine.functional_test.NetworkConstructionTest.test_layer_sharing_at_heterogenous_depth": ["models.Model.from_config", "engine.training.Model", "keras.layers.Dense", "keras_parameterized.TestCase.assertAllClose", "numpy.random.random", "engine.input_layer.Input", "keras.testing_utils.should_run_eagerly"], "keras.testing_utils.should_run_eagerly": [], "engine.functional_test.NetworkConstructionTest.test_layer_sharing_at_heterogenous_depth_with_concat": ["models.Model.from_config", "engine.training.Model", "keras.layers.Dense", "keras.layers.concatenate", "numpy.random.random", "keras_parameterized.TestCase.assertAllClose", "engine.input_layer.Input", "keras.testing_utils.should_run_eagerly"], "engine.functional_test.NetworkConstructionTest.test_explicit_training_argument": ["keras_parameterized.TestCase.assertEqual", "numpy.min", "engine.training.Model", "keras.layers.Input", "keras.layers.Dropout", "numpy.ones", "keras.testing_utils.should_run_eagerly"], "numpy.min": [], "engine.functional_test.NetworkConstructionTest.test_mask_derived_from_keras_layer": ["keras_parameterized.TestCase.assertEqual", "keras.layers.LSTMCell", "engine.training.Model", "keras.layers.RNN", "numpy.zeros", "engine.input_layer.Input", "training.Model.from_config", "keras_parameterized.TestCase.assertGreater", "keras.testing_utils.should_run_eagerly"], "keras.layers.LSTMCell": [], "keras.layers.RNN": [], "numpy.zeros": [], "keras_parameterized.TestCase.assertGreater": [], "engine.functional_test.NetworkConstructionTest.test_call_arg_derived_from_keras_layer": ["keras_parameterized.TestCase.assertEqual", "engine.training.Model", "numpy.ones", "engine.input_layer.Input", "training.Model.from_config", "layers.Layer.__init__", "keras.testing_utils.should_run_eagerly"], "engine.functional_test.NetworkConstructionTest.test_call_arg_derived_from_keras_layer.MyAdd.call": [], "engine.functional_test.NetworkConstructionTest.test_only_some_in_first_arg_derived_from_keras_layer_keras_tensors": ["keras_parameterized.TestCase.assertEqual", "engine.training.Model", "keras_parameterized.TestCase.assertIn", "numpy.ones", "engine.input_layer.Input", "training.Model.from_config", "layers.Layer.__init__", "keras.testing_utils.should_run_eagerly"], "engine.functional_test.NetworkConstructionTest.test_only_some_in_first_arg_derived_from_keras_layer_keras_tensors.MyAddAll.call": [], "keras.combinations.times": [], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_derived_from_keras_layer": ["keras_parameterized.TestCase.assertEqual", "engine.training.Model", "numpy.ones", "engine.input_layer.Input", "training.Model.from_config", "layers.Layer.__init__", "keras.testing_utils.should_run_eagerly"], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_derived_from_keras_layer.MaybeAdd.call": [], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_derived_from_keras_layer.IdentityLayer.call": [], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_dtype_serialization": ["keras_parameterized.TestCase.assertEqual", "ops.array_ops.ones", "engine.training.Model", "numpy.ones", "engine.input_layer.Input", "training.Model.from_config", "layers.Layer.__init__", "keras.testing_utils.should_run_eagerly"], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_dtype_serialization.Double.call": ["ops.math_ops.cast"], "ops.math_ops.cast": [], "ops.array_ops.ones": [], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_nonserializable": ["keras_parameterized.TestCase.assertEqual", "engine.training.Model", "keras_parameterized.TestCase.assertRaisesRegex", "numpy.ones", "engine.input_layer.Input", "engine.functional_test.NetworkConstructionTest.test_call_kwarg_nonserializable.NonSerializable.__init__", "layers.Layer.__init__", "keras.testing_utils.should_run_eagerly"], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_nonserializable.Double.call": [], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_nonserializable.NonSerializable.__init__": [], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_derived_from_keras_layer_and_first_arg_is_constant": ["keras_parameterized.TestCase.assertEqual", "engine.training.Model", "numpy.ones", "engine.input_layer.Input", "training.Model.from_config", "layers.Layer.__init__", "keras.testing_utils.should_run_eagerly"], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_derived_from_keras_layer_and_first_arg_is_constant.IdentityLayer.call": [], "engine.functional_test.NetworkConstructionTest.test_call_kwarg_derived_from_keras_layer_and_first_arg_is_constant.MaybeAdd.call": [], "engine.functional_test.NetworkConstructionTest.test_composite_call_kwarg_derived_from_keras_layer": ["keras_parameterized.TestCase.assertEqual", "engine.training.Model", "numpy.array", "ragged.ragged_factory_ops.constant", "engine.input_layer.Input", "training.Model.from_config", "layers.Layer.__init__", "keras.testing_utils.should_run_eagerly"], "engine.functional_test.NetworkConstructionTest.test_composite_call_kwarg_derived_from_keras_layer.MaybeAdd.call": [], "ragged.ragged_factory_ops.constant": [], "numpy.array": [], "engine.functional_test.NetworkConstructionTest.test_call_some_not_all_nested_in_first_arg_derived_from_keras_layer": ["keras_parameterized.TestCase.assertEqual", "ops.array_ops.ones", "engine.training.Model", "keras_parameterized.TestCase.assertIn", "numpy.ones", "engine.input_layer.Input", "training.Model.from_config", "layers.Layer.__init__", "keras.testing_utils.should_run_eagerly"], "engine.functional_test.NetworkConstructionTest.test_call_some_not_all_nested_in_first_arg_derived_from_keras_layer.AddAll.call": [], "engine.functional_test.NetworkConstructionTest.test_call_nested_arg_derived_from_keras_layer": ["keras_parameterized.TestCase.assertEqual", "ops.array_ops.ones", "engine.training.Model", "numpy.ones", "engine.input_layer.Input", "training.Model.from_config", "layers.Layer.__init__", "keras.testing_utils.should_run_eagerly"], "engine.functional_test.NetworkConstructionTest.test_call_nested_arg_derived_from_keras_layer.AddAll.call": [], "engine.functional_test.NetworkConstructionTest.test_multi_output_model_with_none_masking": ["keras.layers.add", "engine.training.Model", "keras.layers.Lambda", "keras.layers.Input", "keras_parameterized.TestCase.assertAllClose", "numpy.random.random", "keras.backend.int_shape", "keras.testing_utils.should_run_eagerly", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.NetworkConstructionTest.test_multi_output_model_with_none_masking.func": [], "engine.functional_test.NetworkConstructionTest.test_multi_output_model_with_none_masking.output_shape": [], "keras.layers.Lambda": [], "keras.backend.int_shape": [], "engine.functional_test.NetworkConstructionTest.test_constant_initializer_with_numpy": ["keras.models.model_from_json", "engine.sequential.Sequential", "keras.layers.Dense", "keras.initializers.Constant", "numpy.ones", "keras.testing_utils.should_run_eagerly"], "keras.initializers.Constant": [], "engine.functional_test.NetworkConstructionTest.test_subclassed_error_if_init_not_called": ["engine.functional_test.NetworkConstructionTest.test_subclassed_error_if_init_not_called.MyNetwork.__init__", "keras_parameterized.TestCase.assertRaisesRegex"], "engine.functional_test.NetworkConstructionTest.test_subclassed_error_if_init_not_called.MyNetwork.__init__": ["keras.layers.Dense"], "engine.functional_test.NetworkConstructionTest.test_int_input_shape": ["engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.NetworkConstructionTest.test_model_initialization": ["training.Model.add_weight", "engine.training.Model", "training.Model.__init__", "keras.layers.Dense", "keras_parameterized.TestCase.assertRaisesRegex", "keras.initializers.Constant", "keras_parameterized.TestCase.assertFalse", "keras_parameterized.TestCase.assertTrue", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual"], "keras_parameterized.TestCase.assertFalse": [], "training.Model.__init__": [], "training.Model.add_weight": [], "engine.functional_test.NetworkConstructionTest.test_disconnected_inputs": ["keras_parameterized.TestCase.assertEqual", "keras.layers.Dense", "engine.functional.Functional", "engine.input_layer.Input", "functional.Functional.from_config", "keras_parameterized.TestCase.assertLen"], "functional.Functional.from_config": [], "keras_parameterized.TestCase.assertLen": [], "keras.combinations.keras_model_type_combinations": [], "engine.functional_test.NetworkConstructionTest.test_dependency_tracking": ["keras.testing_utils.get_small_mlp", "tracking.util.Checkpoint", "keras_parameterized.TestCase.assertIn", "keras_parameterized.TestCase.assertEqual"], "keras.testing_utils.get_small_mlp": [], "tracking.util.Checkpoint": [], "engine.functional_test.NetworkConstructionTest.test_model_construction_in_tf_function": ["engine.functional_test.NetworkConstructionTest.test_model_construction_in_tf_function.fn", "ops.array_ops.ones", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.NetworkConstructionTest.test_model_construction_in_tf_function.fn": ["engine.input_layer.Input", "keras.layers.Dense", "engine.functional.Functional"], "engine.functional_test.DeferredModeTest": ["keras.combinations.generate", "keras.combinations.combine"], "engine.functional_test.DeferredModeTest.testSimpleNetworkBuilding": ["eager.context.executing_eagerly", "keras.layers.Dense", "engine.functional.Functional", "framework.constant_op.constant", "numpy.random.random", "keras_parameterized.TestCase.assertIsInstance", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual"], "keras_parameterized.TestCase.assertIsInstance": [], "engine.functional_test.DeferredModeTest.testMultiIONetworkBuilding": ["eager.context.executing_eagerly", "keras.layers.Dense", "engine.functional.Functional", "framework.constant_op.constant", "<builtin>.len", "numpy.random.random", "engine.input_layer.Input", "layers.Layer.__init__", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.DeferredModeTest.testMultiIONetworkBuilding.AddLayer.call": [], "engine.functional_test.DefaultShapeInferenceBehaviorTest._testShapeInference": ["numpy.random.random", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.DefaultShapeInferenceBehaviorTest": ["keras.combinations.generate", "keras.combinations.combine", "keras.combinations.keras_mode_combinations"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testSingleInputCase": ["eager.context.executing_eagerly", "engine.training.Model", "engine.functional_test.DefaultShapeInferenceBehaviorTest._testShapeInference", "keras_parameterized.TestCase.assertTrue", "engine.input_layer.Input", "layers.Layer.compute_output_shape", "layers.Layer.__init__", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testSingleInputCase.LayerWithOneInput.build": ["ops.array_ops.ones"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testSingleInputCase.LayerWithOneInput.call": ["keras.backend.dot"], "keras.backend.dot": [], "layers.Layer.compute_output_shape": [], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testMultiInputOutputCase": ["engine.input_layer.Input", "engine.training.Model", "layers.Layer.__init__", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testMultiInputOutputCase.MultiInputOutputLayer.build": ["ops.array_ops.ones"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testMultiInputOutputCase.MultiInputOutputLayer.call": ["keras.backend.dot"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testTrainingArgument": ["engine.input_layer.Input", "engine.functional_test.DefaultShapeInferenceBehaviorTest._testShapeInference", "engine.training.Model", "layers.Layer.__init__"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testTrainingArgument.LayerWithTrainingArg.build": ["ops.array_ops.ones"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testTrainingArgument.LayerWithTrainingArg.call": ["keras.backend.dot"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShape": ["ops.array_ops.ones", "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShape.Model.__init__", "training.Model.build", "keras_parameterized.TestCase.assertTrue", "framework.tensor_shape.TensorShape", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShape.Model.__init__": ["<builtin>.super", "keras.layers.Conv2D", "keras.layers.GlobalAveragePooling2D", "keras.layers.Dense"], "<builtin>.super": [], "keras.layers.Conv2D": [], "keras.layers.GlobalAveragePooling2D": [], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShape.Model.call": [], "framework.tensor_shape.TensorShape": [], "training.Model.build": [], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithCompoundModel": ["ops.array_ops.ones", "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithCompoundModel.CompoundModel.__init__", "training.Model.build", "keras_parameterized.TestCase.assertTrue", "framework.tensor_shape.TensorShape", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithCompoundModel.BasicBlock.__init__": ["<builtin>.super", "keras.layers.Conv2D", "keras.layers.GlobalAveragePooling2D", "keras.layers.Dense"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithCompoundModel.BasicBlock.call": [], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithCompoundModel.CompoundModel.__init__": ["<builtin>.super", "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithCompoundModel.BasicBlock.__init__"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithCompoundModel.CompoundModel.call": ["engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithCompoundModel.BasicBlock.__init__"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithFunctionalAPI": ["ops.array_ops.ones", "engine.training.Model", "keras.layers.GlobalAveragePooling2D", "keras.layers.Dense", "keras.layers.Input", "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithFunctionalAPI.BasicBlock.__init__", "keras_parameterized.TestCase.assertTrue", "framework.tensor_shape.TensorShape", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithFunctionalAPI.BasicBlock.__init__": ["<builtin>.super", "keras.layers.Conv2D"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.testNoneInShapeWithFunctionalAPI.BasicBlock.call": [], "engine.functional_test.DefaultShapeInferenceBehaviorTest.test_sequential_as_downstream_of_masking_layer": ["<builtin>.range", "engine.sequential.Sequential", "eager.context.executing_eagerly", "engine.training.Model", "layers.wrappers.TimeDistributed", "numpy.random.randint", "keras.backend.function", "keras.layers.Dense", "keras.layers.Input", "keras_parameterized.TestCase.assertAllClose", "numpy.random.random", "keras.layers.Masking", "numpy.any", "keras.testing_utils.should_run_eagerly"], "layers.wrappers.TimeDistributed": [], "numpy.random.randint": [], "<builtin>.range": [], "numpy.any": [], "engine.functional_test.DefaultShapeInferenceBehaviorTest.test_external_keras_serialization_compat_input_layers": ["engine.input_layer.Input", "keras.layers.Dense", "engine.training.Model", "keras_parameterized.TestCase.assertLen"], "engine.functional_test.DefaultShapeInferenceBehaviorTest.test_external_keras_serialization_compat_inbound_nodes": ["engine.training.Model", "keras.layers.Add", "keras.layers.Dense", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual"], "keras.layers.Add": [], "engine.functional_test.DefaultShapeInferenceBehaviorTest.test_dict_inputs_tensors": ["ops.math_ops.cast", "engine.training.Model", "keras.layers.Lambda", "framework.constant_op.constant", "warnings.catch_warnings", "keras_parameterized.TestCase.assertIn", "engine.input_layer.Input", "warnings.simplefilter", "<builtin>.str", "keras.layers.Subtract", "keras_parameterized.TestCase.assertEqual"], "keras.layers.Subtract": [], "warnings.catch_warnings": [], "warnings.simplefilter": [], "engine.functional_test.GraphUtilsTest.testGetReachableFromInputs": ["test.TestCase.cached_session", "utils.tf_utils.get_reachable_from_inputs", "test.TestCase.assertEqual", "framework.ops.Graph", "ops.array_ops.placeholder"], "test.TestCase.cached_session": [], "utils.tf_utils.get_reachable_from_inputs": [], "test.TestCase.assertEqual": [], "engine.functional_test.NestedNetworkTest": ["keras.combinations.generate", "keras.combinations.combine"], "engine.functional_test.NestedNetworkTest.test_nested_inputs_network": ["ops.array_ops.ones", "keras.layers.Add", "engine.functional.Functional", "keras_parameterized.TestCase.assertListEqual", "keras_parameterized.TestCase.evaluate", "keras_parameterized.TestCase.assertAllEqual", "engine.input_layer.Input", "functional.Functional.from_config"], "engine.functional_test.NestedNetworkTest.test_nested_outputs_network": ["keras.layers.Multiply", "ops.array_ops.ones", "keras.layers.Add", "engine.functional.Functional", "keras_parameterized.TestCase.assertListEqual", "keras_parameterized.TestCase.evaluate", "keras_parameterized.TestCase.assertAllEqual", "engine.input_layer.Input", "functional.Functional.from_config"], "keras.layers.Multiply": [], "engine.functional_test.NestedNetworkTest.test_nested_network_inside_network": ["keras.layers.Multiply", "ops.array_ops.ones", "keras.layers.Add", "engine.functional.Functional", "keras_parameterized.TestCase.assertListEqual", "keras_parameterized.TestCase.evaluate", "keras_parameterized.TestCase.assertAllEqual", "engine.input_layer.Input", "functional.Functional.from_config"], "engine.functional_test.NestedNetworkTest.test_updates_with_direct_call": ["keras.backend.placeholder", "engine.training.Model", "keras.layers.BatchNormalization", "keras.layers.Dense", "engine.input_layer.Input", "keras_parameterized.TestCase.assertLen"], "keras.backend.placeholder": [], "engine.functional_test.NestedNetworkTest.test_dict_mapping_input": ["ops.array_ops.ones", "engine.training.Model", "keras_parameterized.TestCase.assertAllClose", "keras_parameterized.TestCase.evaluate", "engine.input_layer.Input", "ops.array_ops.zeros", "layers.Layer.__init__"], "engine.functional_test.NestedNetworkTest.test_dict_mapping_input.ReturnFirst.call": [], "ops.array_ops.zeros": [], "engine.functional_test.NestedNetworkTest.test_dict_mapping_single_input": ["engine.input_layer.Input", "ops.array_ops.ones", "engine.training.Model", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.NestedNetworkTest.test_nested_dict_mapping": ["ops.array_ops.ones", "engine.training.Model", "keras_parameterized.TestCase.assertFalse", "keras_parameterized.TestCase.evaluate", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.AddLossTest.test_add_loss_outside_call_only_loss": ["engine.training.Model", "keras.layers.Dense", "ops.math_ops.reduce_mean", "keras_parameterized.TestCase.assertAllClose", "numpy.ones", "engine.input_layer.Input", "keras.testing_utils.should_run_eagerly", "keras_parameterized.TestCase.assertLen"], "ops.math_ops.reduce_mean": [], "engine.functional_test.AddLossTest.test_add_loss_outside_call_multiple_losses": ["engine.training.Model", "ops.math_ops.reduce_sum", "keras.layers.Dense", "ops.math_ops.reduce_mean", "keras_parameterized.TestCase.assertAllClose", "numpy.ones", "engine.input_layer.Input", "keras.testing_utils.should_run_eagerly", "keras_parameterized.TestCase.assertLen"], "engine.functional_test.AddLossTest.test_add_loss_crossentropy_backtracking": ["keras.losses.binary_crossentropy", "numpy.random.randint", "keras.losses.sparse_categorical_crossentropy", "keras.layers.Dense", "engine.functional.Functional", "numpy.random.random", "engine.input_layer.Input", "keras.losses.categorical_crossentropy"], "keras.losses.binary_crossentropy": [], "keras.losses.categorical_crossentropy": [], "keras.losses.sparse_categorical_crossentropy": [], "engine.functional_test.WeightAccessTest.test_functional_model": ["engine.training.Model", "keras.layers.Dense", "<builtin>.len", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.WeightAccessTest.test_sequential_model_with_input_shape": ["<builtin>.len", "engine.sequential.Sequential", "keras.layers.Dense", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.WeightAccessTest.test_sequential_model_without_input_shape": ["engine.sequential.Sequential", "keras.layers.Dense", "keras_parameterized.TestCase.assertRaisesRegex"], "engine.functional_test.WeightAccessTest.test_subclass_model_with_build_method": ["keras_parameterized.TestCase.assertRaisesRegex", "<builtin>.len", "models.Model.__init__", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.WeightAccessTest.test_subclass_model_with_build_method.SubclassModel.build": ["models.Model.add_weight"], "models.Model.add_weight": [], "engine.functional_test.WeightAccessTest.test_subclass_model_with_build_method.SubclassModel.call": [], "models.Model.__init__": [], "engine.functional_test.WeightAccessTest.test_subclass_model_without_build_method": ["keras_parameterized.TestCase.assertEqual", "<builtin>.len", "engine.functional_test.WeightAccessTest.test_subclass_model_without_build_method.SubclassModel.__init__"], "engine.functional_test.WeightAccessTest.test_subclass_model_without_build_method.SubclassModel.__init__": ["<builtin>.super", "models.Model.add_weight"], "engine.functional_test.WeightAccessTest.test_subclass_model_without_build_method.SubclassModel.call": [], "engine.functional_test.DTypeTest": ["keras.testing_utils.enable_v2_dtype_behavior"], "keras.testing_utils.enable_v2_dtype_behavior": [], "engine.functional_test.DTypeTest.test_graph_network_dtype": ["keras_parameterized.TestCase.assertEqual", "engine.input_layer.Input", "keras.layers.Dense", "engine.functional.Functional"], "engine.functional_test.DTypeTest.test_subclassed_network_dtype": ["ops.array_ops.constant", "training.Model.__init__", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.DTypeTest.test_subclassed_network_dtype.IdentityNetwork.call": [], "ops.array_ops.constant": [], "engine.functional_test.AttrTrackingLayer.__init__": ["<builtin>.super"], "engine.functional_test.AttrTrackingLayer.stateful": ["<builtin>.super"], "engine.functional_test.AttrTrackingLayer.dynamic": ["<builtin>.super"], "engine.functional_test.CacheCorrectnessTest.layer_and_network_test": ["engine.functional.Functional", "<builtin>.range", "engine.functional_test.AttrTrackingLayer.__init__", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.CacheCorrectnessTest.test_compute_output_shape_cache": ["<builtin>.range", "keras.layers.Dense", "engine.functional.Functional", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.CacheCorrectnessTest.test_2d_inputs_squeezed_to_1d": ["numpy.ones", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual", "engine.functional.Functional"], "engine.functional_test.CacheCorrectnessTest.test_1d_inputs_expanded_to_2d": ["numpy.ones", "engine.input_layer.Input", "keras_parameterized.TestCase.assertEqual", "engine.functional.Functional"], "engine.functional_test.CacheCorrectnessTest.test_training_passed_during_construction": ["engine.functional_test.CacheCorrectnessTest.test_training_passed_during_construction._call", "eager.context.executing_eagerly", "engine.functional.Functional", "base_layer.Layer.__init__", "keras_parameterized.TestCase.assertAllEqual", "numpy.ones", "engine.input_layer.Input"], "engine.functional_test.CacheCorrectnessTest.test_training_passed_during_construction._call": [], "engine.functional_test.CacheCorrectnessTest.test_training_passed_during_construction.MyLayer.call": ["engine.functional_test.CacheCorrectnessTest.test_training_passed_during_construction._call"], "base_layer.Layer.__init__": [], "engine.functional_test.InputsOutputsErrorTest": ["keras.testing_utils.enable_v2_dtype_behavior"], "engine.functional_test.InputsOutputsErrorTest.test_input_error": ["keras.models.Model", "engine.input_layer.Input", "keras.layers.Dense", "keras_parameterized.TestCase.assertRaisesRegex"], "keras.models.Model": [], "engine.functional_test.InputsOutputsErrorTest.test_output_error": ["keras.models.Model", "engine.input_layer.Input", "keras.layers.Dense", "keras_parameterized.TestCase.assertRaisesRegex"], "engine.functional_test.InputsOutputsErrorTest.test_input_spec": ["eager.context.executing_eagerly", "keras.layers.Dense", "keras_parameterized.TestCase.assertRaisesRegex", "keras.models.Model", "engine.input_layer.Input", "numpy.zeros"], "engine.functional_test.InputsOutputsErrorTest.test_input_spec_list_of_inputs": ["eager.context.executing_eagerly", "keras.layers.Concatenate", "keras.layers.Dense", "keras_parameterized.TestCase.assertRaisesRegex", "keras.models.Model", "engine.input_layer.Input", "numpy.zeros"], "keras.layers.Concatenate": [], "engine.functional_test.InputsOutputsErrorTest.test_input_spec_dict": ["eager.context.executing_eagerly", "keras.layers.Concatenate", "keras.layers.Dense", "keras_parameterized.TestCase.assertRaisesRegex", "keras.models.Model", "engine.input_layer.Input", "numpy.zeros"], "engine.functional_test.FunctionalSubclassModel.__init__": ["<builtin>.super", "engine.input_layer.Input", "keras.layers.Dense"], "engine.functional_test.MixinClass.__init__": ["<builtin>.super"], "engine.functional_test.MixinClass.get_foo": [], "engine.functional_test.SubclassedModel.__init__": ["<builtin>.super"], "engine.functional_test.SubclassedModel.get_bar": [], "engine.functional_test.MultipleInheritanceModelTest.testFunctionalSubclass": ["keras_parameterized.TestCase.assertEqual", "engine.functional_test.FunctionalSubclassModel.__init__", "keras_parameterized.TestCase.assertLen"], "engine.functional_test.MultipleInheritanceModelTest.testFunctionalSubclassPreMixin": ["engine.functional_test.MixinClass.get_foo", "keras_parameterized.TestCase.assertLen", "engine.functional_test.MixinClass.__init__", "keras_parameterized.TestCase.assertTrue", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.MultipleInheritanceModelTest.testFunctionalSubclassPostMixin": ["engine.functional_test.MixinClass.get_foo", "engine.functional_test.FunctionalSubclassModel.__init__", "keras_parameterized.TestCase.assertLen", "keras_parameterized.TestCase.assertTrue", "keras_parameterized.TestCase.assertEqual"], "engine.functional_test.MultipleInheritanceModelTest.testSubclassModelPreMixin": ["engine.functional_test.MixinClass.get_foo", "engine.functional_test.SubclassedModel.get_bar", "engine.functional_test.MixinClass.__init__", "keras_parameterized.TestCase.assertFalse", "keras_parameterized.TestCase.assertEqual"], "platform.test.main": []}