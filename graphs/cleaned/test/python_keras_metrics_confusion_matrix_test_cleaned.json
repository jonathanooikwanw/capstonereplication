{"keras.metrics_confusion_matrix_test": ["platform.test.main"], "keras.metrics_confusion_matrix_test.FalsePositivesTest.test_config": ["keras.metrics.FalsePositives", "test.TestCase.assertEqual", "test.TestCase.assertLen", "metrics.FalsePositives.from_config"], "keras.metrics.FalsePositives": [], "test.TestCase.assertEqual": [], "test.TestCase.assertLen": [], "metrics.FalsePositives.from_config": [], "keras.metrics_confusion_matrix_test.FalsePositivesTest.test_unweighted": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.metrics.FalsePositives", "test.TestCase.assertAllClose"], "ops.variables.variables_initializer": [], "test.TestCase.evaluate": [], "framework.constant_op.constant": [], "test.TestCase.assertAllClose": [], "keras.metrics_confusion_matrix_test.FalsePositivesTest.test_weighted": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.metrics.FalsePositives", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.FalsePositivesTest.test_unweighted_with_thresholds": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.metrics.FalsePositives", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.FalsePositivesTest.test_weighted_with_thresholds": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.metrics.FalsePositives", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.FalsePositivesTest.test_threshold_limit": ["test.TestCase.assertRaisesRegex", "keras.metrics.FalsePositives"], "test.TestCase.assertRaisesRegex": [], "keras.metrics_confusion_matrix_test.FalseNegativesTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.FalseNegatives", "test.TestCase.assertLen", "metrics.FalseNegatives.from_config"], "keras.metrics.FalseNegatives": [], "metrics.FalseNegatives.from_config": [], "keras.metrics_confusion_matrix_test.FalseNegativesTest.test_unweighted": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.metrics.FalseNegatives", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.FalseNegativesTest.test_weighted": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.metrics.FalseNegatives", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.FalseNegativesTest.test_unweighted_with_thresholds": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.metrics.FalseNegatives", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.FalseNegativesTest.test_weighted_with_thresholds": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "keras.metrics.FalseNegatives", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.TrueNegativesTest.test_config": ["test.TestCase.assertEqual", "test.TestCase.assertLen", "metrics.TrueNegatives.from_config", "keras.metrics.TrueNegatives"], "keras.metrics.TrueNegatives": [], "metrics.TrueNegatives.from_config": [], "keras.metrics_confusion_matrix_test.TrueNegativesTest.test_unweighted": ["ops.variables.variables_initializer", "keras.metrics.TrueNegatives", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.TrueNegativesTest.test_weighted": ["ops.variables.variables_initializer", "keras.metrics.TrueNegatives", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.TrueNegativesTest.test_unweighted_with_thresholds": ["ops.variables.variables_initializer", "keras.metrics.TrueNegatives", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.TrueNegativesTest.test_weighted_with_thresholds": ["ops.variables.variables_initializer", "keras.metrics.TrueNegatives", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.TruePositivesTest.test_config": ["test.TestCase.assertEqual", "test.TestCase.assertLen", "metrics.TruePositives.from_config", "keras.metrics.TruePositives"], "keras.metrics.TruePositives": [], "metrics.TruePositives.from_config": [], "keras.metrics_confusion_matrix_test.TruePositivesTest.test_unweighted": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAllClose", "keras.metrics.TruePositives"], "keras.metrics_confusion_matrix_test.TruePositivesTest.test_weighted": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAllClose", "keras.metrics.TruePositives"], "keras.metrics_confusion_matrix_test.TruePositivesTest.test_unweighted_with_thresholds": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAllClose", "keras.metrics.TruePositives"], "keras.metrics_confusion_matrix_test.TruePositivesTest.test_weighted_with_thresholds": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAllClose", "keras.metrics.TruePositives"], "keras.metrics_confusion_matrix_test.PrecisionTest.test_config": ["test.TestCase.assertEqual", "test.TestCase.assertLen", "metrics.Precision.from_config", "keras.metrics.Precision"], "keras.metrics.Precision": [], "metrics.Precision.from_config": [], "keras.metrics_confusion_matrix_test.PrecisionTest.test_value_is_idempotent": ["<builtin>.range", "ops.random_ops.random_uniform", "keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertArrayNear"], "ops.random_ops.random_uniform": [], "<builtin>.range": [], "test.TestCase.assertArrayNear": [], "keras.metrics_confusion_matrix_test.PrecisionTest.test_unweighted": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "test.TestCase.assertAlmostEqual": [], "keras.metrics_confusion_matrix_test.PrecisionTest.test_unweighted_all_incorrect": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "numpy.random.randint", "framework.constant_op.constant"], "numpy.random.randint": [], "keras.metrics_confusion_matrix_test.PrecisionTest.test_weighted": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionTest.test_div_by_zero": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.assertEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionTest.test_unweighted_with_threshold": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertArrayNear", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionTest.test_weighted_with_threshold": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertArrayNear", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionTest.test_multiple_updates": ["<builtin>.range", "keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertArrayNear", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionTest.test_unweighted_top_k": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionTest.test_weighted_top_k": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionTest.test_unweighted_class_id": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionTest.test_unweighted_top_k_and_class_id": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionTest.test_unweighted_top_k_and_threshold": ["keras.metrics.Precision", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.Recall", "test.TestCase.assertLen", "metrics.Recall.from_config"], "keras.metrics.Recall": [], "metrics.Recall.from_config": [], "keras.metrics_confusion_matrix_test.RecallTest.test_value_is_idempotent": ["<builtin>.range", "ops.random_ops.random_uniform", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.Recall", "test.TestCase.assertArrayNear"], "keras.metrics_confusion_matrix_test.RecallTest.test_unweighted": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics.Recall", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_unweighted_all_incorrect": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics.Recall", "numpy.random.randint", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_weighted": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics.Recall", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_div_by_zero": ["ops.variables.variables_initializer", "test.TestCase.assertEqual", "keras.metrics.Recall", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_unweighted_with_threshold": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.Recall", "test.TestCase.assertArrayNear", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_weighted_with_threshold": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.Recall", "test.TestCase.assertArrayNear", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_multiple_updates": ["<builtin>.range", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.Recall", "test.TestCase.assertArrayNear", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_unweighted_top_k": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics.Recall", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_weighted_top_k": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics.Recall", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_unweighted_class_id": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics.Recall", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_unweighted_top_k_and_class_id": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics.Recall", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallTest.test_unweighted_top_k_and_threshold": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics.Recall", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.SensitivityAtSpecificityTest.test_config": ["metrics.SensitivityAtSpecificity.from_config", "test.TestCase.assertEqual", "keras.metrics.SensitivityAtSpecificity", "test.TestCase.assertLen"], "keras.metrics.SensitivityAtSpecificity": [], "metrics.SensitivityAtSpecificity.from_config": [], "keras.metrics_confusion_matrix_test.SensitivityAtSpecificityTest.test_value_is_idempotent": ["<builtin>.range", "ops.random_ops.random_uniform", "ops.variables.variables_initializer", "keras.metrics.SensitivityAtSpecificity", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.metrics_confusion_matrix_test.SensitivityAtSpecificityTest.test_unweighted_all_correct": ["ops.variables.variables_initializer", "test.TestCase.test_session", "keras.metrics.SensitivityAtSpecificity", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "numpy.random.randint", "framework.constant_op.constant"], "test.TestCase.test_session": [], "keras.metrics_confusion_matrix_test.SensitivityAtSpecificityTest.test_unweighted_high_specificity": ["ops.variables.variables_initializer", "keras.metrics.SensitivityAtSpecificity", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.SensitivityAtSpecificityTest.test_unweighted_low_specificity": ["ops.variables.variables_initializer", "keras.metrics.SensitivityAtSpecificity", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.SensitivityAtSpecificityTest.test_unweighted_class_id": ["ops.array_ops.one_hot", "ops.variables.variables_initializer", "ops.array_ops.transpose", "keras.metrics.SpecificityAtSensitivity", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.metrics.SpecificityAtSensitivity": [], "ops.array_ops.transpose": [], "ops.array_ops.one_hot": [], "testing.parameterized.parameters": [], "keras.metrics_confusion_matrix_test.SensitivityAtSpecificityTest": ["testing.parameterized.parameters"], "keras.metrics_confusion_matrix_test.SensitivityAtSpecificityTest.test_weighted": ["ops.variables.variables_initializer", "keras.metrics.SensitivityAtSpecificity", "ops.math_ops.cast", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.math_ops.cast": [], "keras.metrics_confusion_matrix_test.SensitivityAtSpecificityTest.test_invalid_specificity": ["test.TestCase.assertRaisesRegex", "keras.metrics.SensitivityAtSpecificity"], "keras.metrics_confusion_matrix_test.SensitivityAtSpecificityTest.test_invalid_num_thresholds": ["test.TestCase.assertRaisesRegex", "keras.metrics.SensitivityAtSpecificity"], "keras.metrics_confusion_matrix_test.SpecificityAtSensitivityTest.test_config": ["test.TestCase.assertEqual", "test.TestCase.assertLen", "metrics.SpecificityAtSensitivity.from_config", "keras.metrics.SpecificityAtSensitivity"], "metrics.SpecificityAtSensitivity.from_config": [], "keras.metrics_confusion_matrix_test.SpecificityAtSensitivityTest.test_value_is_idempotent": ["<builtin>.range", "ops.random_ops.random_uniform", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "keras.metrics.SpecificityAtSensitivity", "test.TestCase.evaluate"], "keras.metrics_confusion_matrix_test.SpecificityAtSensitivityTest.test_unweighted_all_correct": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "keras.metrics.SpecificityAtSensitivity", "test.TestCase.evaluate", "numpy.random.randint", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.SpecificityAtSensitivityTest.test_unweighted_high_sensitivity": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "keras.metrics.SpecificityAtSensitivity", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.SpecificityAtSensitivityTest.test_unweighted_low_sensitivity": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "keras.metrics.SpecificityAtSensitivity", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.SpecificityAtSensitivityTest.test_unweighted_class_id": ["ops.array_ops.one_hot", "ops.variables.variables_initializer", "ops.array_ops.transpose", "keras.metrics.SpecificityAtSensitivity", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.metrics_confusion_matrix_test.SpecificityAtSensitivityTest": ["testing.parameterized.parameters"], "keras.metrics_confusion_matrix_test.SpecificityAtSensitivityTest.test_weighted": ["ops.variables.variables_initializer", "ops.math_ops.cast", "keras.metrics.SpecificityAtSensitivity", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.SpecificityAtSensitivityTest.test_invalid_sensitivity": ["test.TestCase.assertRaisesRegex", "keras.metrics.SpecificityAtSensitivity"], "keras.metrics_confusion_matrix_test.SpecificityAtSensitivityTest.test_invalid_num_thresholds": ["test.TestCase.assertRaisesRegex", "keras.metrics.SpecificityAtSensitivity"], "keras.metrics_confusion_matrix_test.PrecisionAtRecallTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.PrecisionAtRecall", "test.TestCase.assertLen", "metrics.PrecisionAtRecall.from_config"], "keras.metrics.PrecisionAtRecall": [], "metrics.PrecisionAtRecall.from_config": [], "keras.metrics_confusion_matrix_test.PrecisionAtRecallTest.test_value_is_idempotent": ["<builtin>.range", "ops.random_ops.random_uniform", "keras.metrics.PrecisionAtRecall", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.metrics_confusion_matrix_test.PrecisionAtRecallTest.test_unweighted_all_correct": ["keras.metrics.PrecisionAtRecall", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "numpy.random.randint", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionAtRecallTest.test_unweighted_high_recall": ["keras.metrics.PrecisionAtRecall", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionAtRecallTest.test_unweighted_low_recall": ["keras.metrics.PrecisionAtRecall", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionAtRecallTest.test_unweighted_class_id": ["ops.array_ops.one_hot", "keras.metrics.PrecisionAtRecall", "ops.variables.variables_initializer", "ops.array_ops.transpose", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate"], "keras.metrics_confusion_matrix_test.PrecisionAtRecallTest": ["testing.parameterized.parameters"], "keras.metrics_confusion_matrix_test.PrecisionAtRecallTest.test_weighted": ["keras.metrics.PrecisionAtRecall", "ops.variables.variables_initializer", "ops.math_ops.cast", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.PrecisionAtRecallTest.test_invalid_sensitivity": ["test.TestCase.assertRaisesRegex", "keras.metrics.PrecisionAtRecall"], "keras.metrics_confusion_matrix_test.PrecisionAtRecallTest.test_invalid_num_thresholds": ["test.TestCase.assertRaisesRegex", "keras.metrics.PrecisionAtRecall"], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest.test_config": ["keras.metrics.RecallAtPrecision", "test.TestCase.assertEqual", "test.TestCase.assertLen", "metrics.RecallAtPrecision.from_config"], "keras.metrics.RecallAtPrecision": [], "metrics.RecallAtPrecision.from_config": [], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest.test_value_is_idempotent": ["<builtin>.range", "ops.random_ops.random_uniform", "ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "keras.metrics.RecallAtPrecision", "test.TestCase.evaluate"], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest.test_unweighted_all_correct": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "keras.metrics.RecallAtPrecision", "test.TestCase.evaluate", "numpy.random.randint", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest.test_unweighted_high_precision": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "keras.metrics.RecallAtPrecision", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest.test_unweighted_low_precision": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "keras.metrics.RecallAtPrecision", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest.test_unweighted_class_id": ["ops.array_ops.one_hot", "ops.variables.variables_initializer", "ops.array_ops.transpose", "test.TestCase.assertAlmostEqual", "keras.metrics.RecallAtPrecision", "test.TestCase.evaluate"], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest": ["testing.parameterized.parameters"], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest.test_weighted": ["ops.variables.variables_initializer", "ops.math_ops.cast", "test.TestCase.assertAlmostEqual", "keras.metrics.RecallAtPrecision", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest.test_unachievable_precision": ["ops.variables.variables_initializer", "test.TestCase.assertAlmostEqual", "keras.metrics.RecallAtPrecision", "test.TestCase.evaluate", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest.test_invalid_sensitivity": ["test.TestCase.assertRaisesRegex", "keras.metrics.RecallAtPrecision"], "keras.metrics_confusion_matrix_test.RecallAtPrecisionTest.test_invalid_num_thresholds": ["test.TestCase.assertRaisesRegex", "keras.metrics.RecallAtPrecision"], "keras.metrics_confusion_matrix_test.AUCTest.setup": ["ops.math_ops.log", "framework.constant_op.constant"], "ops.math_ops.log": [], "keras.metrics_confusion_matrix_test.AUCTest.test_config": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "json.dumps", "test.TestCase.assertEqual", "test.TestCase.assertLen", "test.TestCase.assertDictEqual", "json.loads", "keras.metrics.AUC", "metrics.AUC.from_config", "test.TestCase.assertAllClose"], "keras.metrics.AUC": [], "json.dumps": [], "json.loads": [], "test.TestCase.assertDictEqual": [], "metrics.AUC.from_config": [], "keras.metrics_confusion_matrix_test.AUCTest.test_config_manual_thresholds": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "json.dumps", "test.TestCase.assertEqual", "test.TestCase.assertLen", "test.TestCase.assertDictEqual", "json.loads", "keras.metrics.AUC", "metrics.AUC.from_config", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_value_is_idempotent": ["<builtin>.range", "keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_unweighted_all_correct": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.assertEqual", "test.TestCase.evaluate", "keras.metrics.AUC"], "keras.metrics_confusion_matrix_test.AUCTest.test_unweighted": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_unweighted_from_logits": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_manual_thresholds": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.assertEqual", "test.TestCase.evaluate", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_weighted_roc_interpolation": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_weighted_roc_majoring": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_weighted_roc_minoring": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_weighted_pr_majoring": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_weighted_pr_minoring": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_weighted_pr_interpolation": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.AUCTest.test_invalid_num_thresholds": ["test.TestCase.assertRaisesRegex", "keras.metrics.AUC"], "keras.metrics_confusion_matrix_test.AUCTest.test_invalid_curve": ["test.TestCase.assertRaisesRegex", "keras.metrics.AUC"], "keras.metrics_confusion_matrix_test.AUCTest.test_invalid_summation_method": ["test.TestCase.assertRaisesRegex", "keras.metrics.AUC"], "keras.metrics_confusion_matrix_test.AUCTest.test_extra_dims": ["keras.metrics_confusion_matrix_test.AUCTest.setup", "<builtin>.str", "ops.variables.variables_initializer", "numpy.array", "test.TestCase.evaluate", "scipy.special.expit", "test.TestCase.assertEqual", "keras.metrics.AUC", "platform.tf_logging.warning"], "numpy.array": [], "scipy.special.expit": [], "<builtin>.str": [], "platform.tf_logging.warning": [], "keras.metrics_confusion_matrix_test.MultiAUCTest.setup": ["numpy.array", "ops.math_ops.log", "framework.constant_op.constant"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_value_is_idempotent": ["<builtin>.range", "ops.variables.variables_initializer", "test.TestCase.test_session", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_unweighted_all_correct": ["ops.variables.variables_initializer", "test.TestCase.test_session", "test.TestCase.evaluate", "test.TestCase.assertEqual", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_unweighted_all_correct_flat": ["ops.variables.variables_initializer", "test.TestCase.assertEqual", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_unweighted": ["ops.variables.variables_initializer", "test.TestCase.test_session", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_unweighted_from_logits": ["ops.variables.variables_initializer", "test.TestCase.test_session", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_sample_weight_flat": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_full_sample_weight_flat": ["ops.variables.variables_initializer", "numpy.arange", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "numpy.arange": [], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_label_weights": ["ops.variables.variables_initializer", "test.TestCase.test_session", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_label_weights_flat": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_unweighted_flat": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_unweighted_flat_from_logits": ["ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_manual_thresholds": ["ops.variables.variables_initializer", "test.TestCase.test_session", "test.TestCase.assertEqual", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_weighted_roc_interpolation": ["ops.variables.variables_initializer", "test.TestCase.test_session", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_pr_interpolation_unweighted": ["ops.variables.variables_initializer", "test.TestCase.test_session", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose", "test.TestCase.subTest"], "test.TestCase.subTest": [], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_pr_interpolation": ["ops.variables.variables_initializer", "test.TestCase.test_session", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "test.TestCase.assertAllClose"], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_keras_model_compiles": ["keras.layers.Dense", "keras.models.Model", "keras.layers.Input"], "keras.layers.Input": [], "keras.layers.Dense": [], "keras.models.Model": [], "keras.metrics_confusion_matrix_test.MultiAUCTest.test_reset_state": ["test.TestCase.assertAllEqual", "ops.variables.variables_initializer", "test.TestCase.test_session", "test.TestCase.evaluate", "keras.metrics_confusion_matrix_test.MultiAUCTest.setup", "keras.metrics.AUC", "numpy.zeros"], "numpy.zeros": [], "test.TestCase.assertAllEqual": [], "keras.metrics_confusion_matrix_test.ThresholdsTest": ["testing.parameterized.parameters"], "keras.metrics_confusion_matrix_test.ThresholdsTest.test_with_default_thresholds": ["test.TestCase.assertEqual", "<builtin>.len"], "<builtin>.len": [], "keras.metrics_confusion_matrix_test.ThresholdsTest.test_with_manual_thresholds": ["test.TestCase.assertFalse", "test.TestCase.assertTrue"], "test.TestCase.assertTrue": [], "test.TestCase.assertFalse": [], "keras.metrics_confusion_matrix_test.ThresholdsTest.test_manual_thresholds_auc": ["test.TestCase.assertFalse", "metrics.AUC.from_config", "keras.metrics.AUC", "test.TestCase.assertTrue"], "keras.metrics_confusion_matrix_test.ThresholdsTest.test_even_thresholds_correctness": ["numpy.random.rand", "<builtin>.zip", "numpy.random.randint", "compat.compat.forward_compatibility_horizon", "test.TestCase.assertAllClose"], "compat.compat.forward_compatibility_horizon": [], "numpy.random.rand": [], "<builtin>.zip": [], "keras.metrics_confusion_matrix_test.ThresholdsTest.test_even_thresholds_correctness_2": ["numpy.random.rand", "<builtin>.zip", "numpy.random.randint", "compat.compat.forward_compatibility_horizon", "test.TestCase.assertAllClose"], "platform.test.main": []}