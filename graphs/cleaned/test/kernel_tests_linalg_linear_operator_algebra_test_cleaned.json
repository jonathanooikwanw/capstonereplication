{"linalg.linear_operator_algebra_test": ["platform.test.main"], "linalg.linear_operator_algebra_test.AdjointTest.testRegistration": ["test.TestCase.assertEqual", "linalg.linear_operator_algebra.RegisterAdjoint", "linear_operator.LinearOperator.__init__", "linear_operator.LinearOperator.adjoint"], "linalg.linear_operator_algebra_test.AdjointTest.testRegistration.CustomLinOp._matmul": [], "linalg.linear_operator_algebra_test.AdjointTest.testRegistration.CustomLinOp._shape": ["framework.tensor_shape.TensorShape"], "framework.tensor_shape.TensorShape": [], "linalg.linear_operator_algebra_test.AdjointTest.testRegistration.CustomLinOp._shape_tensor": [], "linalg.linear_operator_algebra.RegisterAdjoint": [], "linalg.linear_operator_algebra_test.AdjointTest.testRegistration._adjoint": [], "linear_operator.LinearOperator.__init__": [], "linear_operator.LinearOperator.adjoint": [], "test.TestCase.assertEqual": [], "linalg.linear_operator_algebra_test.AdjointTest.testRegistrationFailures": ["linalg.linear_operator_algebra.RegisterAdjoint", "test.TestCase.assertRaisesRegex"], "test.TestCase.assertRaisesRegex": [], "linalg.linear_operator_algebra_test.AdjointTest.testRegistrationFailures.<lambda1>": [], "linalg.linear_operator_algebra_test.AdjointTest.testRegistrationFailures.<lambda2>": [], "linalg.linear_operator_algebra_test.AdjointTest.testExactAdjointRegistrationsAllMatch": ["linalg.linear_operator_algebra._registered_adjoint", "test.TestCase.assertEqual", "linear_operator_algebra._ADJOINTS.items"], "linear_operator_algebra._ADJOINTS.items": [], "linalg.linear_operator_algebra._registered_adjoint": [], "linalg.linear_operator_algebra_test.CholeskyTest.testRegistration": ["linear_operator.LinearOperator.cholesky", "linalg.linear_operator_algebra.RegisterCholesky", "test.TestCase.assertEqual", "linear_operator.LinearOperator.__init__", "test.TestCase.assertRaisesRegex"], "linalg.linear_operator_algebra_test.CholeskyTest.testRegistration.CustomLinOp._matmul": [], "linalg.linear_operator_algebra_test.CholeskyTest.testRegistration.CustomLinOp._shape": ["framework.tensor_shape.TensorShape"], "linalg.linear_operator_algebra_test.CholeskyTest.testRegistration.CustomLinOp._shape_tensor": [], "linalg.linear_operator_algebra.RegisterCholesky": [], "linalg.linear_operator_algebra_test.CholeskyTest.testRegistration._cholesky": [], "linear_operator.LinearOperator.cholesky": [], "linalg.linear_operator_algebra_test.CholeskyTest.testRegistrationFailures": ["test.TestCase.assertRaisesRegex", "linalg.linear_operator_algebra.RegisterCholesky"], "linalg.linear_operator_algebra_test.CholeskyTest.testRegistrationFailures.<lambda1>": [], "linalg.linear_operator_algebra_test.CholeskyTest.testRegistrationFailures.<lambda2>": [], "linalg.linear_operator_algebra_test.CholeskyTest.testExactCholeskyRegistrationsAllMatch": ["test.TestCase.assertEqual", "linalg.linear_operator_algebra._registered_cholesky", "linear_operator_algebra._CHOLESKY_DECOMPS.items"], "linear_operator_algebra._CHOLESKY_DECOMPS.items": [], "linalg.linear_operator_algebra._registered_cholesky": [], "linalg.linear_operator_algebra_test.MatmulTest.testRegistration": ["test.TestCase.assertEqual", "linalg.linear_operator_algebra.RegisterMatmul", "linear_operator.LinearOperator.__init__", "linear_operator.LinearOperator.matmul"], "linalg.linear_operator_algebra_test.MatmulTest.testRegistration.CustomLinOp._matmul": [], "linalg.linear_operator_algebra_test.MatmulTest.testRegistration.CustomLinOp._shape": ["framework.tensor_shape.TensorShape"], "linalg.linear_operator_algebra_test.MatmulTest.testRegistration.CustomLinOp._shape_tensor": [], "linalg.linear_operator_algebra.RegisterMatmul": [], "linalg.linear_operator_algebra_test.MatmulTest.testRegistration._matmul": [], "linear_operator.LinearOperator.matmul": [], "linalg.linear_operator_algebra_test.MatmulTest.testRegistrationFailures": ["linalg.linear_operator_algebra.RegisterMatmul", "test.TestCase.assertRaisesRegex"], "linalg.linear_operator_algebra_test.MatmulTest.testRegistrationFailures.<lambda1>": [], "linalg.linear_operator_algebra_test.MatmulTest.testRegistrationFailures.<lambda2>": [], "linalg.linear_operator_algebra_test.MatmulTest.testExactMatmulRegistrationsAllMatch": ["test.TestCase.assertEqual", "linalg.linear_operator_algebra._registered_matmul", "linear_operator_algebra._MATMUL.items"], "linear_operator_algebra._MATMUL.items": [], "linalg.linear_operator_algebra._registered_matmul": [], "linalg.linear_operator_algebra_test.SolveTest.testRegistration": ["test.TestCase.assertEqual", "linear_operator.LinearOperator.solve", "linear_operator.LinearOperator.__init__", "linalg.linear_operator_algebra.RegisterSolve"], "linalg.linear_operator_algebra_test.SolveTest.testRegistration.CustomLinOp._matmul": [], "linalg.linear_operator_algebra_test.SolveTest.testRegistration.CustomLinOp._solve": [], "linalg.linear_operator_algebra_test.SolveTest.testRegistration.CustomLinOp._shape": ["framework.tensor_shape.TensorShape"], "linalg.linear_operator_algebra_test.SolveTest.testRegistration.CustomLinOp._shape_tensor": [], "linalg.linear_operator_algebra.RegisterSolve": [], "linalg.linear_operator_algebra_test.SolveTest.testRegistration._solve": [], "linear_operator.LinearOperator.solve": [], "linalg.linear_operator_algebra_test.SolveTest.testRegistrationFailures": ["test.TestCase.assertRaisesRegex", "linalg.linear_operator_algebra.RegisterSolve"], "linalg.linear_operator_algebra_test.SolveTest.testRegistrationFailures.<lambda1>": [], "linalg.linear_operator_algebra_test.SolveTest.testRegistrationFailures.<lambda2>": [], "linalg.linear_operator_algebra_test.SolveTest.testExactSolveRegistrationsAllMatch": ["linear_operator_algebra._SOLVE.items", "test.TestCase.assertEqual", "linalg.linear_operator_algebra._registered_solve"], "linear_operator_algebra._SOLVE.items": [], "linalg.linear_operator_algebra._registered_solve": [], "linalg.linear_operator_algebra_test.InverseTest.testRegistration": ["linalg.linear_operator_algebra.RegisterInverse", "linear_operator.LinearOperator.inverse", "test.TestCase.assertEqual", "linear_operator.LinearOperator.__init__", "test.TestCase.assertRaisesRegex"], "linalg.linear_operator_algebra_test.InverseTest.testRegistration.CustomLinOp._matmul": [], "linalg.linear_operator_algebra_test.InverseTest.testRegistration.CustomLinOp._shape": ["framework.tensor_shape.TensorShape"], "linalg.linear_operator_algebra_test.InverseTest.testRegistration.CustomLinOp._shape_tensor": [], "linalg.linear_operator_algebra.RegisterInverse": [], "linalg.linear_operator_algebra_test.InverseTest.testRegistration._inverse": [], "linear_operator.LinearOperator.inverse": [], "linalg.linear_operator_algebra_test.InverseTest.testRegistrationFailures": ["test.TestCase.assertRaisesRegex", "linalg.linear_operator_algebra.RegisterInverse"], "linalg.linear_operator_algebra_test.InverseTest.testRegistrationFailures.<lambda1>": [], "linalg.linear_operator_algebra_test.InverseTest.testRegistrationFailures.<lambda2>": [], "linalg.linear_operator_algebra_test.InverseTest.testExactRegistrationsAllMatch": ["test.TestCase.assertEqual", "linear_operator_algebra._INVERSES.items", "linalg.linear_operator_algebra._registered_inverse"], "linear_operator_algebra._INVERSES.items": [], "linalg.linear_operator_algebra._registered_inverse": [], "platform.test.main": []}