{"feature_column.sequence_feature_column_test": ["platform.test.main"], "feature_column.sequence_feature_column_test._initialized_session": ["client.session.Session", "ops.lookup_ops.tables_initializer", "ops.variables.global_variables_initializer"], "client.session.Session": [], "ops.variables.global_variables_initializer": [], "ops.lookup_ops.tables_initializer": [], "testing.parameterized.named_parameters": [], "feature_column.sequence_feature_column_test.SequenceFeaturesTest": ["testing.parameterized.named_parameters"], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_embedding_column": ["feature_column.sequence_feature_column.SequenceFeatures", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertAllEqual", "test.TestCase.assertCountEqual", "test.TestCase.evaluate", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "<builtin>.tuple", "ops.variables.global_variables_initializer", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_embedding_column._get_initializer"], "framework.sparse_tensor.SparseTensorValue": [], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_embedding_column._get_initializer": [], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_embedding_column._get_initializer._initializer": ["test.TestCase.assertEqual", "test.TestCase.assertAllEqual", "test.TestCase.assertIsNone"], "test.TestCase.assertAllEqual": [], "test.TestCase.assertEqual": [], "test.TestCase.assertIsNone": [], "feature_column.sequence_feature_column.sequence_categorical_column_with_identity": [], "feature_column.feature_column_v2.embedding_column": [], "feature_column.sequence_feature_column.SequenceFeatures": [], "test.TestCase.evaluate": [], "<builtin>.tuple": [], "test.TestCase.assertCountEqual": [], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_embedding_column_with_non_sequence_categorical": ["feature_column.sequence_feature_column.SequenceFeatures", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_identity", "framework.sparse_tensor.SparseTensorValue"], "feature_column.feature_column_v2.categorical_column_with_identity": [], "test.TestCase.assertRaisesRegex": [], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_shared_embedding_column": ["feature_column.sequence_feature_column.SequenceFeatures", "feature_column.feature_column_v2.shared_embedding_columns_v2", "framework.ops.get_collection", "test.TestCase.assertAllEqual", "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_shared_embedding_column._get_initializer", "test.TestCase.assertCountEqual", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "<builtin>.tuple", "feature_column.sequence_feature_column_test._initialized_session", "framework.ops.Graph", "framework.sparse_tensor.SparseTensorValue"], "framework.ops.Graph": [], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_shared_embedding_column._get_initializer": [], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_shared_embedding_column._get_initializer._initializer": ["test.TestCase.assertEqual", "test.TestCase.assertAllEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2.shared_embedding_columns_v2": [], "framework.ops.get_collection": [], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_shared_embedding_column_with_non_sequence_categorical": ["feature_column.sequence_feature_column.SequenceFeatures", "feature_column.feature_column_v2.shared_embedding_columns_v2", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "feature_column.feature_column_v2.categorical_column_with_identity", "framework.sparse_tensor.SparseTensorValue"], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_indicator_column": ["feature_column.sequence_feature_column.SequenceFeatures", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "feature_column.feature_column_v2.indicator_column", "framework.sparse_tensor.SparseTensorValue"], "feature_column.feature_column_v2.indicator_column": [], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_indicator_column_with_non_sequence_categorical": ["feature_column.sequence_feature_column.SequenceFeatures", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.indicator_column", "feature_column.feature_column_v2.categorical_column_with_identity", "framework.sparse_tensor.SparseTensorValue"], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_numeric_column": ["feature_column.sequence_feature_column.SequenceFeatures", "feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue"], "feature_column.sequence_feature_column.sequence_numeric_column": [], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_numeric_column_multi_dim": ["feature_column.sequence_feature_column.SequenceFeatures", "feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue"], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_sequence_length_not_equal": ["feature_column.sequence_feature_column.SequenceFeatures", "feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue"], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_static_shape_from_tensors_numeric": ["feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertEqual", "feature_column.sequence_feature_column.SequenceFeatures", "framework.sparse_tensor.SparseTensorValue"], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_static_shape_from_tensors_indicator": ["feature_column.sequence_feature_column.SequenceFeatures", "test.TestCase.assertEqual", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "feature_column.feature_column_v2.indicator_column", "framework.sparse_tensor.SparseTensorValue"], "feature_column.sequence_feature_column_test.SequenceFeaturesTest.test_compute_output_shape": ["feature_column.sequence_feature_column.SequenceFeatures", "feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertAllClose", "test.TestCase.assertEqual", "framework.sparse_tensor.SparseTensor", "test.TestCase.evaluate", "ops.lookup_ops.tables_initializer", "ops.variables.global_variables_initializer"], "framework.sparse_tensor.SparseTensor": [], "test.TestCase.assertAllClose": [], "feature_column.sequence_feature_column_test.SequenceFeaturesSerializationTest": ["testing.parameterized.named_parameters"], "feature_column.sequence_feature_column_test.SequenceFeaturesSerializationTest.test_get_config": ["feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertEqual", "feature_column.sequence_feature_column.SequenceFeatures", "test.TestCase.assertLen"], "test.TestCase.assertLen": [], "feature_column.sequence_feature_column_test.SequenceFeaturesSerializationTest.test_from_config": ["feature_column.sequence_feature_column.SequenceFeatures", "test.TestCase.assertLen", "feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertEqual", "sequence_feature_column.SequenceFeatures.from_config"], "sequence_feature_column.SequenceFeatures.from_config": [], "feature_column.sequence_feature_column_test.SequenceFeaturesSerializationTest.test_serialization_sequence_features": ["feature_column.sequence_feature_column.SequenceFeatures", "feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertIsInstance", "keras.layers.serialize", "keras.layers.deserialize"], "keras.layers.serialize": [], "keras.layers.deserialize": [], "test.TestCase.assertIsInstance": [], "keras.combinations.combine": [], "feature_column.sequence_feature_column_test.SequenceFeaturesSavingTest": ["keras.combinations.generate", "keras.combinations.combine"], "keras.combinations.generate": [], "feature_column.sequence_feature_column_test.SequenceFeaturesSavingTest.test_saving_with_sequence_features": ["feature_column.sequence_feature_column.SequenceFeatures", "keras.models.Model", "test.TestCase.assertLen", "feature_column.sequence_feature_column.sequence_numeric_column", "eager.context.executing_eagerly", "keras.layers.Dense", "keras.layers.GRU", "saving.model_config.model_from_json", "numpy.arange", "framework.sparse_tensor.SparseTensor", "ops.lookup_ops.tables_initializer", "test.TestCase.evaluate", "numpy.zeros", "test.TestCase.cached_session", "feature_column.feature_column_v2.indicator_column", "keras.layers.Input", "feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_list"], "feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_list": [], "keras.layers.Input": [], "keras.layers.GRU": [], "keras.layers.Dense": [], "keras.models.Model": [], "saving.model_config.model_from_json": [], "numpy.arange": [], "numpy.zeros": [], "test.TestCase.cached_session": [], "eager.context.executing_eagerly": [], "platform.test.main": []}