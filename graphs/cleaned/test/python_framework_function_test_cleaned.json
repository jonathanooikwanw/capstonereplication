{"framework.function_test": ["platform.test.main"], "framework.function_test._OptimizerOptions": ["protobuf.config_pb2.GraphOptions", "protobuf.config_pb2.OptimizerOptions", "protobuf.config_pb2.ConfigProto"], "protobuf.config_pb2.OptimizerOptions": [], "protobuf.config_pb2.GraphOptions": [], "protobuf.config_pb2.ConfigProto": [], "framework.function_test.FunctionTest.testIdentity": ["client.session.Session", "framework.function_test.FunctionTest.testIdentity.MyIdentityFunc", "framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "test.TestCase.evaluate", "test.TestCase.assertEqual"], "framework.function.Defun": [], "framework.function_test.FunctionTest.testIdentity.MyIdentityFunc": [], "framework.ops.Graph": [], "test.TestCase.assertEqual": [], "client.session.Session": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllEqual": [], "framework.test_util.run_v1_only": [], "framework.function_test.FunctionTest": ["framework.test_util.disable_xla", "framework.test_util.run_deprecated_v1", "framework.test_util.run_v1_only"], "framework.function_test.FunctionTest.testIdentityImplicitDeref": ["client.session.Session", "ops.variables.VariableV1", "framework.ops.Graph", "framework.function.Defun", "test.TestCase.assertAllEqual", "framework.function_test.FunctionTest.testIdentityImplicitDeref.MyIdentityFunc", "test.TestCase.evaluate", "framework.function_test._OptimizerOptions", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testIdentityImplicitDeref.MyIdentityFunc": [], "ops.variables.VariableV1": [], "framework.function_test.FunctionTest.testIdentityOutputName": ["client.session.Session", "framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "framework.function_test.FunctionTest.testIdentityOutputName.MyIdentityFunc", "test.TestCase.evaluate", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testIdentityOutputName.MyIdentityFunc": [], "framework.function_test.FunctionTest.testTooManyOutputNames": ["framework.function.Defun", "test.TestCase.assertRaisesRegex", "framework.function_test.FunctionTest.testTooManyOutputNames.MyIdentityFunc", "framework.ops.Graph"], "framework.function_test.FunctionTest.testTooManyOutputNames.MyIdentityFunc": [], "test.TestCase.assertRaisesRegex": [], "framework.function_test.FunctionTest.testDefineFunction2Args": ["client.session.Session", "framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "test.TestCase.evaluate", "framework.function_test.FunctionTest.testDefineFunction2Args.APlus2B", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testDefineFunction2Args.APlus2B": [], "framework.function_test.FunctionTest.testFunctionWithNoOutput": ["framework.function.Defun", "framework.function_test.FunctionTest.testFunctionWithNoOutput.APlus2B", "framework.ops.Graph"], "framework.function_test.FunctionTest.testFunctionWithNoOutput.APlus2B": ["<builtin>.print"], "<builtin>.print": [], "framework.function_test.FunctionTest.testDefineFunction2ArgsOutputName": ["client.session.Session", "framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "test.TestCase.evaluate", "framework.function_test.FunctionTest.testDefineFunction2ArgsOutputName.APlus2B", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testDefineFunction2ArgsOutputName.APlus2B": [], "framework.function_test.FunctionTest.testDefineFunctionDuplicateOutputs": ["test.TestCase.assertNotEqual", "framework.ops.Graph", "framework.function.Defun", "<builtin>.len", "framework.function_test.FunctionTest.testDefineFunctionDuplicateOutputs.Duplicate", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testDefineFunctionDuplicateOutputs.Duplicate": [], "<builtin>.len": [], "test.TestCase.assertNotEqual": [], "framework.function_test.FunctionTest.testGradientFunc": ["client.session.Session", "framework.ops.Graph", "framework.function.Defun", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "framework.function_test.FunctionTest.testGradientFunc.XSquarePlusOneGrad", "framework.function_test.FunctionTest.testGradientFunc.XSquarePlusOne"], "framework.function_test.FunctionTest.testGradientFunc.XSquarePlusOne": [], "framework.function_test.FunctionTest.testGradientFunc.XSquarePlusOneGrad": ["ops.functional_ops.symbolic_gradient"], "ops.functional_ops.symbolic_gradient": [], "test.TestCase.assertAllClose": [], "framework.function_test.FunctionTest.testTanhSymGrad": ["client.session.Session", "ops.gradients_impl.gradients", "numpy.square", "framework.ops.Graph", "protobuf.config_pb2.ConfigProto", "framework.function.Defun", "numpy.tanh", "test.TestCase.assertAllClose", "protobuf.config_pb2.GraphOptions", "protobuf.config_pb2.OptimizerOptions", "ops.array_ops.placeholder", "framework.function_test.FunctionTest.testTanhSymGrad.Forward", "numpy.array"], "framework.function_test.FunctionTest.testTanhSymGrad.Forward": ["ops.math_ops.tanh", "ops.math_ops.reduce_sum"], "ops.math_ops.tanh": [], "ops.math_ops.reduce_sum": [], "ops.array_ops.placeholder": [], "ops.gradients_impl.gradients": [], "numpy.array": [], "numpy.tanh": [], "numpy.square": [], "framework.function_test.FunctionTest.testCustomGradient": ["client.session.Session", "ops.gradients_impl.gradients", "framework.ops.Graph", "platform.tf_logging.info", "framework.function.Defun", "framework.function_test.FunctionTest.testCustomGradient.XentLoss", "test.TestCase.assertAllClose", "numpy.random.uniform", "numpy.exp", "numpy.sum", "framework.function_test._OptimizerOptions", "ops.array_ops.placeholder"], "framework.function_test.FunctionTest.testCustomGradient.XentLossGrad": ["ops.math_ops.exp", "ops.array_ops.zeros_like", "ops.array_ops.reshape", "ops.nn_ops.softmax"], "ops.array_ops.reshape": [], "ops.nn_ops.softmax": [], "ops.array_ops.zeros_like": [], "ops.math_ops.exp": [], "framework.function_test.FunctionTest.testCustomGradient.XentLoss": ["ops.math_ops.log", "ops.math_ops.reduce_sum", "ops.nn_ops.softmax"], "ops.math_ops.log": [], "numpy.random.uniform": [], "numpy.exp": [], "numpy.sum": [], "platform.tf_logging.info": [], "framework.test_util.disable_xla": [], "framework.function_test.FunctionTest.testCustomGradientError": ["client.session.Session", "ops.gradients_impl.gradients", "framework.ops.Graph", "framework.function.Defun", "framework.function_test.FunctionTest.testCustomGradientError.Forward", "numpy.random.uniform", "ops.array_ops.placeholder", "test.TestCase.assertRaisesRegex", "ops.math_ops.add_n"], "framework.function_test.FunctionTest.testCustomGradientError.Grad": [], "framework.function_test.FunctionTest.testCustomGradientError.Forward": [], "ops.math_ops.add_n": [], "framework.function_test.FunctionTest.testSymGradShape": ["ops.array_ops.placeholder", "test.TestCase.assertEqual", "ops.functional_ops.symbolic_gradient", "framework.ops.Graph"], "framework.test_util.run_deprecated_v1": [], "framework.function_test.FunctionTest.testSymGradAttr": ["test.TestCase.assertTrue", "ops.gradients_impl.gradients", "framework.ops.Graph", "protobuf.config_pb2.ConfigProto", "framework.function.Defun", "test.TestCase.assertAllClose", "framework.constant_op.constant", "protobuf.config_pb2.GraphOptions", "protobuf.config_pb2.OptimizerOptions", "test.TestCase.session", "framework.function_test.FunctionTest.testSymGradAttr.Foo"], "framework.function_test.FunctionTest.testSymGradAttr.Foo": [], "test.TestCase.assertTrue": [], "framework.constant_op.constant": [], "test.TestCase.session": [], "framework.function_test.FunctionTest._testZNoDepOnY": ["client.session.Session", "framework.function_test.FunctionTest._testZNoDepOnY.Foo", "ops.gradients_impl.gradients", "framework.ops.Graph", "framework.function.Defun", "framework.constant_op.constant", "test.TestCase.evaluate", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest._testZNoDepOnY.Foo": [], "framework.function_test.FunctionTest.testZNoDepOnY": ["framework.function_test.FunctionTest._testZNoDepOnY"], "framework.function_test.FunctionTest.testZNoDepOnYConstGradYs": ["framework.function_test.FunctionTest._testZNoDepOnY"], "framework.function_test.FunctionTest.testDefineFunctionNoArgs": ["client.session.Session", "framework.function_test.FunctionTest.testDefineFunctionNoArgs.AConstant", "framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "test.TestCase.evaluate", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testDefineFunctionNoArgs.AConstant": ["framework.constant_op.constant"], "framework.function_test.FunctionTest.testDefineFunctionNames": ["framework.ops.Graph", "framework.function.Defun", "framework.ops.name_scope", "framework.function_test.FunctionTest.testDefineFunctionNames.Foo", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testDefineFunctionNames.Foo": [], "framework.ops.name_scope": [], "framework.function_test.FunctionTest.testNoOp": ["test.TestCase.cached_session", "framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "framework.constant_op.constant", "framework.function_test.FunctionTest.testNoOp.Foo"], "framework.function_test.FunctionTest.testNoOp.Foo": ["ops.control_flow_ops.no_op", "ops.logging_ops.Print", "framework.ops.control_dependencies"], "ops.logging_ops.Print": [], "framework.ops.control_dependencies": [], "ops.control_flow_ops.no_op": [], "test.TestCase.cached_session": [], "framework.function_test.FunctionTest.testAssertOp": ["test.TestCase.cached_session", "framework.ops.Graph", "framework.function_test.FunctionTest.testAssertOp.Foo", "framework.function.Defun", "test.TestCase.assertAllEqual", "framework.constant_op.constant", "test.TestCase.assertRaisesRegex", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testAssertOp.Foo": ["ops.gen_logging_ops._assert", "framework.ops.control_dependencies", "ops.math_ops.greater"], "ops.math_ops.greater": [], "ops.gen_logging_ops._assert": [], "framework.function_test.FunctionTest.testAssertWrapper": ["framework.function_test.FunctionTest.testAssertWrapper.MyFn", "test.TestCase.cached_session", "framework.function.Defun", "test.TestCase.assertRaisesRegex", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testAssertWrapper.MyFn": ["ops.control_flow_ops.Assert", "ops.math_ops.less_equal", "framework.ops.control_dependencies", "ops.array_ops.identity"], "ops.math_ops.less_equal": [], "ops.control_flow_ops.Assert": [], "ops.array_ops.identity": [], "framework.function_test.FunctionTest.testWhileLoopCallsFunc": ["framework.function.Defun", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "test.TestCase.evaluate", "test.TestCase.session"], "framework.function_test.FunctionTest.testWhileLoopCallsFunc.Times2": ["framework.constant_op.constant", "ops.math_ops.cast"], "ops.math_ops.cast": [], "framework.function_test.FunctionTest.testWhileLoopCallsFunc.Body": ["framework.function_test.FunctionTest.testWhileLoopCallsFunc.Times2"], "framework.function_test.FunctionTest.testWhileLoopCallsFunc.<lambda1>": [], "ops.control_flow_ops.while_loop": [], "framework.function_test.FunctionTest.testControlFlowStrictness": ["client.session.Session", "protobuf.config_pb2.ConfigProto", "framework.function.Defun", "protobuf.rewriter_config_pb2.RewriterConfig", "ops.control_flow_ops.while_loop", "framework.ops.device", "protobuf.config_pb2.GraphOptions", "protobuf.config_pb2.OptimizerOptions", "ops.control_flow_ops.cond", "ops.array_ops.placeholder", "test.TestCase.assertRaisesRegex", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testControlFlowStrictness.AssertFail": ["ops.control_flow_ops.Assert", "framework.ops.control_dependencies", "ops.array_ops.identity"], "framework.ops.device": [], "framework.function_test.FunctionTest.testControlFlowStrictness.<lambda1>": [], "framework.function_test.FunctionTest.testControlFlowStrictness.<lambda2>": ["framework.function_test.FunctionTest.testControlFlowStrictness.AssertFail"], "ops.control_flow_ops.cond": [], "framework.function_test.FunctionTest.testControlFlowStrictness.<lambda3>": [], "framework.function_test.FunctionTest.testControlFlowStrictness.<lambda4>": ["framework.function_test.FunctionTest.testControlFlowStrictness.AssertFail"], "protobuf.rewriter_config_pb2.RewriterConfig": [], "framework.function_test.FunctionTest.testVar": ["framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "framework.function_test.FunctionTest.testVar.Foo", "ops.variables.global_variables_initializer", "framework.constant_op.constant", "test.TestCase.session", "test.TestCase.evaluate", "ops.variables.Variable"], "framework.function_test.FunctionTest.testVar.Foo": [], "ops.variables.Variable": [], "ops.variables.global_variables_initializer": [], "framework.function_test.FunctionTest.testResourceVarAsImplicitInput": ["framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "framework.ops.device", "ops.variable_scope.get_variable", "framework.tensor_shape.TensorShape", "test.TestCase.session", "test.TestCase.evaluate", "framework.function_test.FunctionTest.testResourceVarAsImplicitInput.Foo"], "framework.tensor_shape.TensorShape": [], "ops.variable_scope.get_variable": [], "framework.function_test.FunctionTest.testResourceVarAsImplicitInput.Foo": ["test.TestCase.assertEqual", "ops.array_ops.shape", "ops.array_ops.identity"], "ops.array_ops.shape": [], "framework.function_test.FunctionTest.testDefineErrors": ["test.TestCase.assertRaisesRegex", "framework.function.Defun", "framework.ops.Graph"], "framework.function_test.FunctionTest.testDefineErrors.TwoNone": [], "framework.function_test.FunctionTest.testDefineErrors.DefaultArg": ["framework.constant_op.constant"], "framework.function_test.FunctionTest.testDefineErrors.KwArgs": ["framework.constant_op.constant"], "framework.function_test.FunctionTest.testDefineErrors.PlusMinusV2": [], "framework.function_test.FunctionTest.testDefineErrors.PlusMinusV3": [], "framework.function_test.FunctionTest.testCallErrors": ["framework.function_test.FunctionTest.testCallErrors.PlusMinus", "framework.ops.Graph", "framework.function.Defun", "framework.function_test.FunctionTest.testCallErrors.Const", "framework.function_test.FunctionTest.testCallErrors.PlusOne", "test.TestCase.assertRaisesRegex"], "framework.function_test.FunctionTest.testCallErrors.Const": ["framework.constant_op.constant"], "framework.function_test.FunctionTest.testCallErrors.PlusOne": [], "framework.function_test.FunctionTest.testCallErrors.PlusMinus": [], "framework.function_test.FunctionTest.testFunctionDecorator": ["test.TestCase.assertTrue", "client.session.Session", "framework.function_test.FunctionTest.testFunctionDecorator.Minus1", "framework.ops.Graph", "framework.function.Defun", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "<builtin>.isinstance", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testFunctionDecorator.Minus1": [], "<builtin>.isinstance": [], "framework.function_test.FunctionTest.testNestedFunction": ["framework.function_test.FunctionTest.testNestedFunction.CubeXPlusY", "test.TestCase.cached_session", "test.TestCase.assertAllEqual", "framework.ops.Graph", "framework.function.Defun"], "framework.function_test.FunctionTest.testNestedFunction.Cube": [], "framework.function_test.FunctionTest.testNestedFunction.CubeXPlusY": ["framework.function_test.FunctionTest.testNestedFunction.Cube"], "framework.function_test.FunctionTest.testNestedDefinedFunction": ["test.TestCase.cached_session", "test.TestCase.assertAllEqual", "framework.ops.Graph", "framework.function.Defun", "framework.function_test.FunctionTest.testNestedDefinedFunction.CubeXPlusY"], "framework.function_test.FunctionTest.testNestedDefinedFunction.CubeXPlusY": ["framework.function.Defun", "framework.function_test.FunctionTest.testNestedDefinedFunction.CubeXPlusY.Cube"], "framework.function_test.FunctionTest.testNestedDefinedFunction.CubeXPlusY.Cube": [], "framework.function_test.FunctionTest.testUnusedFunction": ["test.TestCase.assertFalse", "framework.ops.Graph", "framework.function.Defun", "framework.constant_op.constant", "<builtin>.len", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testUnusedFunction.Unused": ["framework.constant_op.constant"], "test.TestCase.assertFalse": [], "framework.function_test.FunctionTest.testUnusedFunction.Unused2": ["framework.constant_op.constant"], "framework.function_test.FunctionTest.testReduction": ["framework.function_test.FunctionTest.testReduction.BN0", "framework.function_test.FunctionTest.testReduction.BN1", "ops.gradients_impl.gradients", "framework.ops.Graph", "framework.function.Defun", "test.TestCase.assertAllClose", "test.TestCase.session", "ops.array_ops.placeholder"], "framework.function_test.FunctionTest.testReduction.BN0": ["ops.math_ops.rsqrt", "ops.math_ops.reduce_mean", "ops.math_ops.square"], "ops.math_ops.reduce_mean": [], "ops.math_ops.square": [], "ops.math_ops.rsqrt": [], "framework.function_test.FunctionTest.testReduction.BN1": ["framework.function_test.FunctionTest.testReduction.BN0"], "framework.function_test.FunctionTest.testCapture": ["framework.function_test.FunctionTest.testCapture.Foo", "framework.ops.Graph", "framework.function.Defun", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "framework.constant_op.constant", "test.TestCase.session", "test.TestCase.evaluate", "framework.function_test.FunctionTest.testCapture.Bar", "ops.variables.Variable"], "framework.function_test.FunctionTest.testCapture.Foo": ["framework.function.Defun", "ops.math_ops.matmul", "framework.function_test.FunctionTest.testCapture.Foo.Plus"], "framework.function_test.FunctionTest.testCapture.Foo.Plus": [], "ops.math_ops.matmul": [], "framework.function_test.FunctionTest.testCapture.Bar": [], "framework.function_test.FunctionTest.testCaptureControls": ["framework.ops.Graph", "framework.function.Defun", "framework.constant_op.constant", "ops.logging_ops.Print", "test.TestCase.assertRaisesRegex", "framework.function_test.FunctionTest.testCaptureControls.Foo"], "framework.function_test.FunctionTest.testCaptureControls.Foo": ["framework.ops.control_dependencies", "ops.logging_ops.Print"], "framework.function_test.FunctionTest.testCaptureInWhileLoop": ["framework.ops.Graph", "framework.function.Defun", "framework.constant_op.constant", "test.TestCase.session", "test.TestCase.evaluate", "test.TestCase.assertEqual", "framework.function_test.FunctionTest.testCaptureInWhileLoop.Foo"], "framework.function_test.FunctionTest.testCaptureInWhileLoop.Foo": ["ops.control_flow_ops.while_loop"], "framework.function_test.FunctionTest.testCaptureInWhileLoop.Foo.<lambda1>": [], "framework.function_test.FunctionTest.testCaptureInWhileLoop.Foo.<lambda2>": [], "framework.function_test.FunctionTest.testCaptureInCond": ["framework.ops.Graph", "framework.function_test.FunctionTest.testCaptureInCond.Foo", "framework.function.Defun", "framework.constant_op.constant", "test.TestCase.session", "test.TestCase.evaluate", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testCaptureInCond.Foo": ["ops.control_flow_ops.cond"], "framework.function_test.FunctionTest.testCaptureInCond.Foo.<lambda1>": [], "framework.function_test.FunctionTest.testCaptureInCond.Foo.<lambda2>": [], "framework.function_test.FunctionTest.testSignatureHash": ["framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "framework.constant_op.constant", "test.TestCase.session", "test.TestCase.evaluate", "framework.function_test.FunctionTest.testSignatureHash.Bar", "framework.function_test.FunctionTest.testSignatureHash.Foo"], "framework.function_test.FunctionTest.testSignatureHash.Foo": ["framework.function.Defun", "framework.function_test.FunctionTest.testSignatureHash.Foo.Inner"], "framework.function_test.FunctionTest.testSignatureHash.Foo.Inner": [], "framework.function_test.FunctionTest.testSignatureHash.Bar": ["framework.function.Defun", "framework.function_test.FunctionTest.testSignatureHash.Bar.Inner"], "framework.function_test.FunctionTest.testSignatureHash.Bar.Inner": [], "framework.function_test.FunctionTest.testShapeFunction": ["ops.array_ops.zeros", "framework.function_test.FunctionTest.testShapeFunction.Foo", "framework.ops.Graph", "framework.function_test.FunctionTest.testShapeFunction.Bar", "framework.function.Defun", "test.TestCase.assertAllEqual", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testShapeFunction.<lambda1>": [], "framework.function_test.FunctionTest.testShapeFunction.Foo": [], "framework.function_test.FunctionTest.testShapeFunction.<lambda2>": [], "framework.function_test.FunctionTest.testShapeFunction.Bar": ["ops.array_ops.stack"], "ops.array_ops.stack": [], "ops.array_ops.zeros": [], "framework.function_test.FunctionTest.testVariableReuse": ["client.session.Session", "ops.variables.global_variables", "framework.function.Defun", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "<builtin>.len", "ops.array_ops.placeholder", "test.TestCase.assertEqual", "framework.function_test.FunctionTest.testVariableReuse.Foo"], "framework.function_test.FunctionTest.testVariableReuse.LinearWithReuse": ["ops.math_ops.matmul", "ops.variable_scope.get_variable", "ops.variable_scope.variable_scope"], "ops.variable_scope.variable_scope": [], "framework.function_test.FunctionTest.testVariableReuse.Foo": ["framework.function_test.FunctionTest.testVariableReuse.LinearWithReuse", "ops.array_ops.reshape"], "ops.variables.global_variables": [], "framework.function_test.FunctionTest.testFunctionCallInDifferentVariableScopes": ["client.session.Session", "numpy.linspace", "ops.variables.global_variables", "test.TestCase.assertAllEqual", "framework.function.Defun", "ops.variable_scope.variable_scope", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "<builtin>.len", "framework.function_test.FunctionTest.testFunctionCallInDifferentVariableScopes.Foo", "ops.array_ops.placeholder", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testFunctionCallInDifferentVariableScopes.Foo": ["ops.init_ops.ones_initializer", "ops.variable_scope.get_variable"], "ops.init_ops.ones_initializer": [], "numpy.linspace": [], "framework.function_test.FunctionTest.testTwoInputsSameOp": ["framework.ops.Graph", "framework.graph_to_function_def.graph_to_function_def", "ops.linalg_ops.svd", "<builtin>.len", "ops.array_ops.placeholder", "test.TestCase.assertEqual", "ops.math_ops.reduce_sum"], "ops.linalg_ops.svd": [], "framework.graph_to_function_def.graph_to_function_def": [], "framework.function_test.FunctionTest.testGradientWithIntegerFunctionArgument": ["client.session.Session", "ops.gradients_impl.gradients", "numpy.zeros", "framework.ops.Graph", "framework.function.Defun", "test.TestCase.assertAllClose", "framework.constant_op.constant", "framework.function_test.FunctionTest.testGradientWithIntegerFunctionArgument.Foo", "ops.array_ops.placeholder", "numpy.array"], "framework.function_test.FunctionTest.testGradientWithIntegerFunctionArgument.Foo": [], "numpy.zeros": [], "framework.function_test.FunctionTest.testFunctionMarkedStateful": ["client.session.Session", "framework.function_test.FunctionTest.testFunctionMarkedStateful.Foo", "framework.function.Defun", "framework.function_test.FunctionTest.testFunctionMarkedStateful.Bar", "framework.constant_op.constant", "test.TestCase.evaluate", "test.TestCase.assertEqual"], "framework.function_test.FunctionTest.testFunctionMarkedStateful.Foo": [], "framework.function_test.FunctionTest.testFunctionMarkedStateful.Bar": [], "framework.function_test.FunctionTest.testStatefulFunction": ["test.TestCase.assertTrue", "client.session.Session", "<builtin>.all", "test.TestCase.assertFalse", "framework.function_test.FunctionTest.testStatefulFunction.FunctionWithStatefulFunctionCall", "framework.function.Defun", "framework.function_test._OptimizerOptions"], "framework.function_test.FunctionTest.testStatefulFunction.FunctionWithStatelessOp": ["framework.constant_op.constant"], "framework.function_test.FunctionTest.testStatefulFunction.FunctionWithStatefulOp": ["ops.random_ops.random_uniform"], "ops.random_ops.random_uniform": [], "framework.function_test.FunctionTest.testStatefulFunction.FunctionWithStatelessFunctionCall": ["framework.function_test.FunctionTest.testStatefulFunction.FunctionWithStatelessOp"], "framework.function_test.FunctionTest.testStatefulFunction.FunctionWithStatefulFunctionCall": ["framework.function_test.FunctionTest.testStatefulFunction.FunctionWithStatefulOp"], "<builtin>.all": [], "framework.function_test.FunctionTest.testStatefulFunctionWithAllowlisting": ["client.session.Session", "<builtin>.set", "ops.random_ops.random_uniform", "test.TestCase.assertGreaterEqual", "framework.function.Defun", "test.TestCase.assertRaisesRegex", "framework.function_test.FunctionTest.testStatefulFunctionWithAllowlisting.StatefulFn2", "framework.function_test.FunctionTest.testStatefulFunctionWithAllowlisting.StatefulFn"], "framework.function_test.FunctionTest.testStatefulFunctionWithAllowlisting.StatefulFn": ["framework.constant_op.constant"], "<builtin>.set": [], "framework.function_test.FunctionTest.testStatefulFunctionWithAllowlisting.StatefulFn2": ["framework.constant_op.constant"], "test.TestCase.assertGreaterEqual": [], "framework.function_test.FunctionTest.testSameFunctionOnTwoDevices": ["client.session.Session", "framework.function.Defun", "framework.ops.device", "test.TestCase.evaluate", "framework.function_test._OptimizerOptions", "test.TestCase.assertEqual", "framework.function_test.FunctionTest.testSameFunctionOnTwoDevices.AddOne"], "framework.function_test.FunctionTest.testSameFunctionOnTwoDevices.AddOne": [], "framework.function_test.FunctionTest.testGuaranteedConstsAreCaptured": ["framework.function_test.FunctionTest.testGuaranteedConstsAreCaptured.CapturesGuaranteedConst", "framework.function.Defun", "ops.array_ops.guarantee_const", "test.TestCase.evaluate", "test.TestCase.session", "ops.array_ops.placeholder", "ops.variables.Variable", "ops.array_ops.identity"], "ops.array_ops.guarantee_const": [], "framework.function_test.FunctionTest.testGuaranteedConstsAreCaptured.CapturesGuaranteedConst": ["framework.function.get_extra_args", "test.TestCase.assertEqual", "test.TestCase.assertNotEqual"], "framework.function.get_extra_args": [], "framework.function_test.FunctionTest.testSameFunctionDifferentGrads": ["ops.gradients_impl.gradients", "framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartTwo", "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartThree", "framework.constant_op.constant", "test.TestCase.session", "test.TestCase.evaluate", "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartOne"], "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartOne": ["framework.function.Defun", "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartOne.Foo"], "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartOne.Foo": [], "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartTwo": ["framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartTwo.Foo", "framework.function.Defun"], "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartTwo.Bar": [], "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartTwo.Foo": [], "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartThree": ["framework.function.Defun", "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartThree.Foo"], "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartThree.Bar": [], "framework.function_test.FunctionTest.testSameFunctionDifferentGrads.PartThree.Foo": [], "framework.function_test.FunctionsFromProtos.stripInternalFunctionDefAnnotations": ["framework.function_pb2.FunctionDef"], "framework.function_pb2.FunctionDef": [], "framework.function_test.FunctionsFromProtos.expectFunctionsEqual": ["framework.function._from_definition", "test.TestCase.assertEqual", "framework.function_test.FunctionsFromProtos.stripInternalFunctionDefAnnotations", "function_pb2.FunctionDef.FromString"], "function_pb2.FunctionDef.FromString": [], "framework.function._from_definition": [], "framework.function_test.FunctionsFromProtos": ["framework.test_util.run_deprecated_v1"], "framework.function_test.FunctionsFromProtos.testBasic": ["framework.function.Defun", "framework.function_test.FunctionsFromProtos.expectFunctionsEqual"], "framework.function_test.FunctionsFromProtos.testBasic.Foo": [], "framework.function_test.FunctionsFromProtos.testGradFunc": ["framework.function.Defun", "framework.function_test.FunctionsFromProtos.expectFunctionsEqual"], "framework.function_test.FunctionsFromProtos.testGradFunc.G": [], "framework.function_test.FunctionsFromProtos.testGradFunc.F": ["ops.math_ops.exp"], "framework.function_test.FunctionsFromProtos.testCapturedInputs": ["framework.function._from_definition", "framework.function.Defun", "framework.constant_op.constant", "<builtin>.len", "test.TestCase.assertEqual", "framework.function_test.FunctionsFromProtos.stripInternalFunctionDefAnnotations"], "framework.function_test.FunctionsFromProtos.testCapturedInputs.Foo": [], "framework.function_test.FunctionsFromProtos.testNestedFunctions": ["framework.function.Defun", "framework.function_test.FunctionsFromProtos.expectFunctionsEqual"], "framework.function_test.FunctionsFromProtos.testNestedFunctions.Outer": ["framework.function.Defun", "framework.function_test.FunctionsFromProtos.testNestedFunctions.Outer.Inner"], "framework.function_test.FunctionsFromProtos.testNestedFunctions.Outer.Inner": [], "framework.function_test.FunctionsFromProtos.testFromLibrary": ["framework.function_test.FunctionsFromProtos.testFromLibrary.CheckNewFunc", "framework.function_test.FunctionsFromProtos.testFromLibrary.F4", "ops.gradients_impl.gradients", "framework.ops.Graph", "framework.function.Defun", "framework.function.from_library", "framework.function_test.FunctionsFromProtos.testFromLibrary.F1", "framework.constant_op.constant", "framework.function_test.FunctionsFromProtos.testFromLibrary.F3", "framework.function_test.FunctionsFromProtos.testFromLibrary.F2"], "framework.function_test.FunctionsFromProtos.testFromLibrary.G1": [], "framework.function_test.FunctionsFromProtos.testFromLibrary.G2": [], "framework.function_test.FunctionsFromProtos.testFromLibrary.F1": ["ops.math_ops.exp"], "framework.function_test.FunctionsFromProtos.testFromLibrary.F2": ["ops.math_ops.exp"], "framework.function_test.FunctionsFromProtos.testFromLibrary.F3": ["ops.math_ops.exp"], "framework.function_test.FunctionsFromProtos.testFromLibrary.F4": ["ops.math_ops.exp"], "framework.function.from_library": [], "framework.function_test.FunctionsFromProtos.testFromLibrary.CheckNewFunc": ["test.TestCase.assertEqual", "framework.function_test.FunctionsFromProtos.expectFunctionsEqual", "<builtin>.len"], "framework.function_test.FunctionsFromProtos.testFromLibraryEmptyLib": ["test.TestCase.assertEqual", "framework.function.from_library", "<builtin>.len", "framework.function_pb2.FunctionDefLibrary"], "framework.function_pb2.FunctionDefLibrary": [], "framework.function_test.FunctionsFromProtos.testFromLibraryMissingFuncDef": ["framework.function_pb2.FunctionDefLibrary", "framework.function.Defun", "framework.function.from_library", "framework.function_pb2.GradientDef", "test.TestCase.assertRaisesRegex"], "framework.function_test.FunctionsFromProtos.testFromLibraryMissingFuncDef.G1": [], "framework.function_test.FunctionsFromProtos.testFromLibraryMissingFuncDef.F1": ["ops.math_ops.exp"], "framework.function_pb2.GradientDef": [], "framework.function_test.FunctionsFromProtos.testFromLibraryCyclicGradFuncs": ["framework.function_pb2.FunctionDefLibrary", "framework.function.Defun", "framework.function.from_library", "framework.function_pb2.GradientDef", "test.TestCase.assertRaisesRegex"], "framework.function_test.FunctionsFromProtos.testFromLibraryCyclicGradFuncs.F1": ["ops.math_ops.exp"], "framework.function_test.FunctionsFromProtos.testFromLibraryCyclicGradFuncs.F2": ["ops.math_ops.exp"], "framework.function_test.FunctionsFromProtos.testExperimentalAttrs": ["test.TestCase.assertTrue", "framework.function.Defun", "test.TestCase.assertEqual"], "framework.function_test.FunctionsFromProtos.testExperimentalAttrs.FunctionWithStrAttr": ["ops.array_ops.identity"], "framework.function_test.FunctionsFromProtos.testExperimentalAttrs.FunctionWithIntAttr": ["ops.array_ops.identity"], "framework.function_test.FunctionsFromProtos.testExperimentalAttrs.FunctionWithFloatAttr": ["ops.array_ops.identity"], "framework.function_test.FunctionsFromProtos.testExperimentalAttrs.FunctionWithBoolAttr": ["ops.array_ops.identity"], "framework.function_test.FunctionsFromProtos.testImplementsReferenceAttrs": ["test.TestCase.assertIn", "framework.function.Defun", "test.TestCase.assertEqual"], "framework.function_test.FunctionsFromProtos.testImplementsReferenceAttrs.FunctionWithStrAttr": ["ops.array_ops.identity"], "test.TestCase.assertIn": [], "framework.function_test.FunctionOverloadTest": ["framework.test_util.run_deprecated_v1"], "framework.function_test.FunctionOverloadTest.testBasic": ["framework.ops.Graph", "framework.function.Defun", "numpy.sinh", "test.TestCase.assertAllClose", "framework.constant_op.constant", "test.TestCase.session", "framework.function_test.FunctionOverloadTest.testBasic.Sinh"], "framework.function_test.FunctionOverloadTest.testBasic.Sinh": ["ops.math_ops.exp"], "numpy.sinh": [], "framework.function_test.FunctionOverloadTest.testGradient": ["ops.gradients_impl.gradients", "framework.function_test.FunctionOverloadTest.testGradient.F", "framework.ops.Graph", "framework.function.Defun", "test.TestCase.assertAllClose", "framework.constant_op.constant", "test.TestCase.session"], "framework.function_test.FunctionOverloadTest.testGradient.G": [], "framework.function_test.FunctionOverloadTest.testGradient.F": ["ops.math_ops.exp"], "framework.function_test.FunctionOverloadTest.testDocString": ["framework.function.Defun", "test.TestCase.assertEqual", "framework.function_test.FunctionOverloadTest.testDocString.Foo", "framework.ops.Graph"], "framework.function_test.FunctionOverloadTest.testDocString.Foo": [], "framework.function_test.FunctionCaptureByValueTest": ["framework.test_util.run_deprecated_v1"], "framework.function_test.FunctionCaptureByValueTest.testCaptureByValue": ["framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "framework.constant_op.constant", "test.TestCase.session", "<builtin>.len", "test.TestCase.assertEqual", "framework.function_test.FunctionCaptureByValueTest.testCaptureByValue.Foo"], "framework.function_test.FunctionCaptureByValueTest.testCaptureByValue.Foo": ["framework.function.Defun", "framework.function_test.FunctionCaptureByValueTest.testCaptureByValue.Foo.Plus", "<builtin>.len", "ops.math_ops.matmul", "test.TestCase.assertEqual"], "framework.function_test.FunctionCaptureByValueTest.testCaptureByValue.Foo.Plus": [], "framework.function_test.UnrollLSTMTest._Weights": ["ops.random_ops.random_uniform"], "framework.function_test.UnrollLSTMTest._Input": ["ops.random_ops.random_uniform"], "framework.function_test.UnrollLSTMTest.LSTMCell": ["ops.math_ops.sigmoid", "ops.array_ops.split", "ops.math_ops.maximum", "ops.math_ops.minimum", "ops.math_ops.matmul", "ops.array_ops.concat", "ops.math_ops.tanh"], "ops.array_ops.concat": [], "ops.array_ops.split": [], "ops.math_ops.sigmoid": [], "ops.math_ops.minimum": [], "ops.math_ops.maximum": [], "framework.function_test.UnrollLSTMTest._BuildForward": ["framework.function_test.UnrollLSTMTest._BuildForward.Loop", "framework.function.Defun", "framework.function_test.UnrollLSTMTest._BuildForward.LSTMLoop10", "framework.function_test.UnrollLSTMTest._BuildForward.LSTMLoop"], "framework.function_test.UnrollLSTMTest._BuildForward.Loop": ["framework.function_test.UnrollLSTMTest.LSTMCell", "ops.array_ops.zeros_like", "<builtin>.range", "ops.array_ops.unstack"], "ops.array_ops.unstack": [], "<builtin>.range": [], "framework.function_test.UnrollLSTMTest._BuildForward.LSTMLoop": ["framework.function_test.UnrollLSTMTest._BuildForward.Loop"], "framework.function_test.UnrollLSTMTest._BuildForward.Loop10": ["framework.function_test.UnrollLSTMTest.LSTMCell"], "framework.function_test.UnrollLSTMTest._BuildForward.LSTMLoop10": ["framework.function_test.UnrollLSTMTest._BuildForward.Loop10", "ops.array_ops.zeros_like", "<builtin>.range", "ops.array_ops.unstack"], "framework.function_test.UnrollLSTMTest.testUnrollLSTM": ["platform.tf_logging.info", "framework.function_test._OptimizerOptions", "framework.function_test.UnrollLSTMTest.testUnrollLSTM.RunForward", "test.TestCase.assertAllClose"], "framework.function_test.UnrollLSTMTest.testUnrollLSTM.RunForward": ["client.session.Session", "time.time", "framework.function_test.UnrollLSTMTest._Weights", "framework.function_test.UnrollLSTMTest._BuildForward", "framework.ops.Graph", "platform.tf_logging.info", "test.TestCase.evaluate", "<builtin>.len", "framework.function_test.UnrollLSTMTest._Input", "<builtin>.str"], "time.time": [], "<builtin>.str": [], "framework.function_test.UnrollLSTMTest.testUnrollLSTMGrad": ["platform.tf_logging.info", "framework.function_test._OptimizerOptions", "test.TestCase.assertAllClose", "framework.function_test.UnrollLSTMTest.testUnrollLSTMGrad.RunForwardBackward"], "framework.function_test.UnrollLSTMTest.testUnrollLSTMGrad.RunForwardBackward": ["client.session.Session", "time.time", "framework.function_test.UnrollLSTMTest._Weights", "ops.math_ops.square", "ops.gradients_impl.gradients", "framework.function_test.UnrollLSTMTest._BuildForward", "framework.ops.Graph", "platform.tf_logging.info", "test.TestCase.evaluate", "<builtin>.len", "framework.function_test.UnrollLSTMTest._Input", "<builtin>.str", "ops.math_ops.reduce_sum"], "testing.parameterized.parameters": [], "framework.function_test.FunctionInlineControlTest": ["framework.test_util.disable_xla", "testing.parameterized.parameters"], "framework.function_test.FunctionInlineControlTest.testFoo": ["ops.gradients_impl.gradients", "test.TestCase.assertAllClose", "protobuf.config_pb2.GraphOptions", "numpy.sum", "protobuf.config_pb2.RunOptions", "numpy.random.seed", "protobuf.config_pb2.RunMetadata", "framework.function_test.FunctionInlineControlTest.testFoo.Forward", "platform.test.is_built_with_rocm", "framework.function.Defun", "protobuf.config_pb2.ConfigProto", "framework.function_test.FunctionInlineControlTest.testFoo.MetadataHasCell", "protobuf.config_pb2.OptimizerOptions", "re.compile", "client.session.Session", "framework.ops.Graph", "numpy.random.uniform", "ops.array_ops.placeholder", "test.TestCase.assertEqual"], "re.compile": [], "framework.function_test.FunctionInlineControlTest.testFoo.Cell": ["ops.array_ops.transpose", "ops.math_ops.tanh", "ops.math_ops.reduce_sum"], "ops.array_ops.transpose": [], "framework.function_test.FunctionInlineControlTest.testFoo.Forward": ["ops.math_ops.reduce_sum", "<builtin>.range", "framework.function_test.FunctionInlineControlTest.testFoo.Cell"], "platform.test.is_built_with_rocm": [], "numpy.random.seed": [], "protobuf.config_pb2.RunMetadata": [], "protobuf.config_pb2.RunOptions": [], "framework.function_test.FunctionInlineControlTest.testFoo.MetadataHasCell": [], "framework.function_test.ModuleFunctionTest": ["framework.test_util.run_deprecated_v1"], "framework.function_test.ModuleFunctionTest.testBasic": ["client.session.Session", "framework.ops.Graph", "framework.function_test.ModuleFunctionTest.testBasic.Linear2WithCApi", "framework.function.Defun", "test.TestCase.assertAllEqual", "framework.constant_op.constant", "test.TestCase.evaluate", "<builtin>.range", "framework.function_test.ModuleFunctionTest.testBasic.LinearWithCApi"], "framework.function_test.ModuleFunctionTest.testBasic.LinearWithCApi": ["ops.math_ops.matmul", "ops.nn_ops.relu"], "ops.nn_ops.relu": [], "framework.function_test.ModuleFunctionTest.testBasic.Linear2WithCApi": ["framework.function_test.ModuleFunctionTest.testBasic.LinearWithCApi"], "framework.function_test.VariableHoistingTest._testSimpleModel": ["framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "ops.random_ops.random_normal", "test.TestCase.assertAllClose", "ops.variable_scope.variable_scope", "ops.variables.global_variables_initializer", "framework.function_test.VariableHoistingTest._testSimpleModel.Grad", "test.TestCase.session", "test.TestCase.evaluate", "numpy.sum", "<builtin>.len", "test.TestCase.assertEqual"], "framework.function_test.VariableHoistingTest._testSimpleModel._Model": ["ops.init_ops.random_uniform_initializer", "ops.math_ops.sigmoid", "ops.variable_scope.get_variable", "ops.init_ops.zeros_initializer", "ops.math_ops.matmul"], "ops.init_ops.random_uniform_initializer": [], "ops.init_ops.zeros_initializer": [], "framework.function_test.VariableHoistingTest._testSimpleModel.Model": ["framework.function_test.VariableHoistingTest._testSimpleModel._Model"], "framework.function_test.VariableHoistingTest._testSimpleModel.Grad": ["framework.function.get_extra_args", "ops.gradients_impl.gradients", "framework.function_test.VariableHoistingTest._testSimpleModel._Model", "framework.tensor_shape.TensorShape", "framework.function_test.VariableHoistingTest._testSimpleModel.Model", "ops.math_ops.reduce_mean", "framework.function.get_extra_vars", "test.TestCase.assertEqual", "ops.math_ops.log", "ops.math_ops.reduce_sum"], "framework.function.get_extra_vars": [], "ops.random_ops.random_normal": [], "framework.function_test.VariableHoistingTest": ["framework.test_util.run_deprecated_v1"], "framework.function_test.VariableHoistingTest.testBasic": ["framework.function_test.VariableHoistingTest._testSimpleModel"], "framework.function_test.VariableHoistingTest.testBasicResource": ["framework.function_test.VariableHoistingTest._testSimpleModel"], "framework.function_test.TemplateTest": ["framework.test_util.run_v1_only"], "framework.function_test.TemplateTest.testBasic": ["framework.function_test.TemplateTest.assertTemplateVariableSharing"], "framework.function_test.TemplateTest.assertTemplateVariableSharing": ["framework.function.Defun", "ops.template.make_template", "test.TestCase.assertIs", "ops.array_ops.placeholder", "framework.function_test.TemplateTest.assertTemplateVariableSharing.ModelDefun"], "framework.function_test.TemplateTest.testBasicRef": ["framework.function_test.TemplateTest.assertTemplateVariableSharing"], "framework.function_test.TemplateTest.testBasicDefunFirst": ["framework.function_test.TemplateTest.assertTemplateVariableSharing"], "framework.function_test.TemplateTest.testBasicRefDefunFirst": ["framework.function_test.TemplateTest.assertTemplateVariableSharing"], "framework.function_test.TemplateTest.assertTemplateVariableSharing.MakeModel": ["ops.init_ops.random_uniform_initializer", "ops.math_ops.sigmoid", "ops.variable_scope.get_variable", "ops.init_ops.zeros_initializer", "ops.math_ops.matmul"], "ops.template.make_template": [], "framework.function_test.TemplateTest.assertTemplateVariableSharing.ModelDefun": [], "test.TestCase.assertIs": [], "framework.function_test.DevicePlacementTest.testNoDeviceGraph": ["framework.function_test.DevicePlacementTest.testNoDeviceGraph.Matmul", "framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "<builtin>.len", "framework.ops.get_default_graph"], "framework.function_test.DevicePlacementTest.testNoDeviceGraph.Matmul": ["ops.math_ops.matmul"], "framework.ops.get_default_graph": [], "framework.function_test.DevicePlacementTest.testNestedDevices": ["framework.function_test.DevicePlacementTest.testNestedDevices.Divide", "framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function.Defun", "framework.function_test.DevicePlacementTest.testNestedDevices.Matmul", "framework.ops.device", "<builtin>.len", "framework.ops.get_default_graph"], "framework.function_test.DevicePlacementTest.testNestedDevices.Matmul": ["ops.math_ops.matmul"], "framework.function_test.DevicePlacementTest.testNestedDevices.Divide": ["ops.math_ops.divide"], "ops.math_ops.divide": [], "framework.function_test.DevicePlacementTest._testNestedDeviceWithSameFunction": ["framework.ops.Graph", "test.TestCase.assertAllEqual", "framework.function_test.DevicePlacementTest._testNestedDeviceWithSameFunction.MatmulWrap", "<builtin>.sorted", "framework.ops.device", "framework.ops.get_default_graph"], "framework.function_test.DevicePlacementTest._testNestedDeviceWithSameFunction.MatmulWrap": ["framework.function.Defun", "framework.function_test.DevicePlacementTest._testNestedDeviceWithSameFunction.MatmulWrap.Matmul"], "framework.function_test.DevicePlacementTest._testNestedDeviceWithSameFunction.MatmulWrap.Matmul": ["ops.math_ops.matmul"], "<builtin>.sorted": [], "framework.function_test.DevicePlacementTest.testFunctionWithName": ["test.TestCase.assertRaises", "test.TestCase.assertEqual", "framework.function_test.DevicePlacementTest._testNestedDeviceWithSameFunction"], "test.TestCase.assertRaises": [], "framework.function_test.DevicePlacementTest.testFunctionWithoutName": ["framework.function_test.DevicePlacementTest._testNestedDeviceWithSameFunction"], "platform.test.main": []}