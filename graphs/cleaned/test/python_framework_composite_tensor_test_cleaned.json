{"framework.composite_tensor_test": ["platform.googletest.main"], "framework.composite_tensor_test.CTSpec.__init__": [], "framework.composite_tensor_test.CTSpec.<lambda1>": [], "<builtin>.property": [], "framework.composite_tensor_test.CTSpec": ["<builtin>.property"], "framework.composite_tensor_test.CTSpec.<lambda2>": [], "framework.composite_tensor_test.CTSpec._serialize": [], "framework.composite_tensor_test.CTSpec._to_components": [], "framework.composite_tensor_test.CTSpec._from_components": ["framework.composite_tensor_test.CT.__init__"], "framework.composite_tensor_test.CT.__init__": ["<builtin>.isinstance", "<builtin>.tuple"], "<builtin>.isinstance": [], "<builtin>.tuple": [], "framework.composite_tensor_test.CT._type_spec": ["framework.composite_tensor_test.CTSpec.__init__", "util.nest.map_structure"], "util.nest.map_structure": [], "framework.composite_tensor_test.CT.__repr__": ["<builtin>.type"], "<builtin>.type": [], "framework.composite_tensor_test.CT.__eq__": ["<builtin>.type"], "testing.parameterized.parameters": [], "framework.composite_tensor_test.CompositeTensorTest": ["testing.parameterized.parameters", "testing.parameterized.named_parameters"], "framework.composite_tensor_test.CompositeTensorTest.testNestFlatten": ["test_util.TensorFlowTestCase.assertEqual", "util.nest.flatten_with_tuple_paths", "<builtin>.str", "util.nest.flatten_with_joined_string_paths", "util.nest.flatten", "util.nest.yield_flat_paths", "<builtin>.zip", "<builtin>.list"], "util.nest.flatten": [], "test_util.TensorFlowTestCase.assertEqual": [], "util.nest.flatten_with_tuple_paths": [], "<builtin>.zip": [], "<builtin>.list": [], "<builtin>.str": [], "util.nest.flatten_with_joined_string_paths": [], "util.nest.yield_flat_paths": [], "framework.composite_tensor_test.CompositeTensorTest.testNestFlattenUpTo": ["util.nest.flatten_up_to", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.zip", "util.nest.flatten_with_tuple_paths_up_to", "<builtin>.list"], "util.nest.flatten_up_to": [], "util.nest.flatten_with_tuple_paths_up_to": [], "framework.composite_tensor_test.CompositeTensorTest.testNestPackSequenceAs": ["test_util.TensorFlowTestCase.assertEqual", "util.nest.pack_sequence_as"], "util.nest.pack_sequence_as": [], "framework.composite_tensor_test.CompositeTensorTest.testNestAssertSameStructure": ["util.nest.assert_shallow_structure", "util.nest.assert_same_structure"], "util.nest.assert_same_structure": [], "util.nest.assert_shallow_structure": [], "framework.composite_tensor_test.CompositeTensorTest.testNestAssertSameStructureCompositeMismatch": ["util.nest.assert_shallow_structure", "util.nest.assert_same_structure", "test_util.TensorFlowTestCase.assertRaises"], "test_util.TensorFlowTestCase.assertRaises": [], "framework.composite_tensor_test.CompositeTensorTest.testNestAssertShallowStructure": ["util.nest.assert_shallow_structure"], "framework.composite_tensor_test.CompositeTensorTest.testNestAssertShallowStructureCompositeMismatch": ["util.nest.assert_shallow_structure", "test_util.TensorFlowTestCase.assertRaises"], "framework.composite_tensor_test.CompositeTensorTest.testNestMapStructure": ["util.nest.map_structure", "test_util.TensorFlowTestCase.assertEqual"], "framework.composite_tensor_test.CompositeTensorTest.testNestMapStructure.<lambda1>": [], "framework.composite_tensor_test.CompositeTensorTest.testNestMapStructureUpTo": ["test_util.TensorFlowTestCase.assertEqual", "util.nest.map_structure_up_to"], "framework.composite_tensor_test.CompositeTensorTest.testNestMapStructureUpTo.<lambda1>": ["<builtin>.isinstance"], "util.nest.map_structure_up_to": [], "framework.composite_tensor_test.CompositeTensorTest.testNestMapStructureWithPaths": ["test_util.TensorFlowTestCase.assertEqual", "util.nest.map_structure_with_tuple_paths", "util.nest.map_structure_with_paths"], "framework.composite_tensor_test.CompositeTensorTest.testNestMapStructureWithPaths.func1": [], "util.nest.map_structure_with_paths": [], "framework.composite_tensor_test.CompositeTensorTest.testNestMapStructureWithPaths.func2": ["<builtin>.str"], "util.nest.map_structure_with_tuple_paths": [], "framework.composite_tensor_test.CompositeTensorTest.testNestMapStructureWithTuplePathsUpTo": ["test_util.TensorFlowTestCase.assertEqual", "util.nest.map_structure_with_tuple_paths_up_to"], "framework.composite_tensor_test.CompositeTensorTest.testNestMapStructureWithTuplePathsUpTo.func": ["<builtin>.str"], "util.nest.map_structure_with_tuple_paths_up_to": [], "framework.composite_tensor_test.CompositeTensorTest.testNestGetTraverseShallowStructure": ["test_util.TensorFlowTestCase.assertEqual", "util.nest.get_traverse_shallow_structure", "framework.composite_tensor_test.CT.__init__"], "framework.composite_tensor_test.CompositeTensorTest.testNestGetTraverseShallowStructure.<lambda1>": ["<builtin>.isinstance"], "util.nest.get_traverse_shallow_structure": [], "framework.composite_tensor_test.CompositeTensorTest.testMemoryIsFreed": ["<builtin>.set", "test_util.TensorFlowTestCase.assertIsNone", "framework.composite_tensor_test.CT.__init__", "util.nest.map_structure", "test_util.TensorFlowTestCase.assertIsNotNone", "gc.collect", "numpy.array", "<builtin>.hasattr", "weakref.ref", "test_util.TensorFlowTestCase.assertRaises", "sys.exc_clear"], "numpy.array": [], "<builtin>.set": [], "framework.composite_tensor_test.CompositeTensorTest.testMemoryIsFreed.<lambda1>": [], "<builtin>.hasattr": [], "sys.exc_clear": [], "weakref.ref": [], "test_util.TensorFlowTestCase.assertIsNotNone": [], "gc.collect": [], "test_util.TensorFlowTestCase.assertIsNone": [], "testing.parameterized.named_parameters": [], "framework.composite_tensor_test.CompositeTensorTest.testAssertSameStructureWithValueAndTypeSpec": ["util.nest.map_structure", "util.nest.assert_same_structure"], "platform.googletest.main": []}