{"kernel_tests.matrix_triangular_solve_op_test": ["platform.test.main"], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWays": ["kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolve"], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolve": ["ops.array_ops.placeholder_with_default", "<builtin>.list", "test.TestCase.evaluate", "numpy.tile", "numpy.linalg.solve", "numpy.triu", "test.TestCase.assertEqual", "<builtin>.range", "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolve.broadcast", "numpy.transpose", "ops.linalg_ops.matrix_triangular_solve", "numpy.tril", "numpy.conj", "test.TestCase.assertAllClose", "<builtin>.len"], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWaysReal": ["kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWays"], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWaysComplex": ["kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWays"], "numpy.tril": [], "numpy.triu": [], "<builtin>.len": [], "<builtin>.range": [], "<builtin>.list": [], "numpy.transpose": [], "numpy.conj": [], "numpy.tile": [], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolve.broadcast": ["numpy.zeros"], "numpy.zeros": [], "ops.array_ops.placeholder_with_default": [], "ops.linalg_ops.matrix_triangular_solve": [], "test.TestCase.evaluate": [], "numpy.linalg.solve": [], "test.TestCase.assertEqual": [], "test.TestCase.assertAllClose": [], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest": ["framework.test_util.disable_xla", "framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest.testSolve": ["kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWaysReal", "numpy.array"], "numpy.array": [], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest.testSolveComplex": ["kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWaysComplex", "numpy.array"], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest.testSolveBatch": ["kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWaysReal", "numpy.array"], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest.testSolveBatchBroadcast": ["kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWaysReal", "numpy.array"], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest.testSolveBatchBroadcastLargerBatches": ["kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWaysReal", "numpy.fill_diagonal", "numpy.random.uniform"], "numpy.random.uniform": [], "numpy.fill_diagonal": [], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest.testSolveBatchComplex": ["kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolveAllWaysComplex", "numpy.array"], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest.testNonSquareMatrix": ["test.TestCase.cached_session", "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolve", "test.TestCase.assertRaises", "numpy.array"], "test.TestCase.cached_session": [], "test.TestCase.assertRaises": [], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest.testWrongDimensions": ["test.TestCase.cached_session", "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolve", "test.TestCase.assertRaises", "numpy.array"], "framework.test_util.disable_xla": [], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest.testNotInvertible": ["test.TestCase.cached_session", "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolve", "test.TestCase.assertRaisesOpError", "numpy.array"], "test.TestCase.assertRaisesOpError": [], "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest.testEmpty": ["numpy.empty", "kernel_tests.matrix_triangular_solve_op_test.MatrixTriangularSolveOpTest._verifySolve"], "numpy.empty": [], "platform.test.main": []}