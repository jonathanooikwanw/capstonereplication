{"ops.control_flow_ops_test": ["platform.googletest.main", "collections.namedtuple"], "collections.namedtuple": [], "ops.control_flow_ops_test.GroupTestCase._StripNode": ["framework.node_def_pb2.NodeDef"], "framework.node_def_pb2.NodeDef": [], "ops.control_flow_ops_test.GroupTestCase._StripGraph": ["framework.graph_pb2.GraphDef", "ops.control_flow_ops_test.GroupTestCase._StripNode"], "framework.graph_pb2.GraphDef": [], "ops.control_flow_ops_test.GroupTestCase.testGroup_NoDevices": ["ops.control_flow_ops.group", "framework.ops.Graph", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertProtoEquals", "ops.control_flow_ops_test.GroupTestCase._StripGraph"], "framework.ops.Graph": [], "framework.constant_op.constant": [], "ops.control_flow_ops.group": [], "test_util.TensorFlowTestCase.assertProtoEquals": [], "ops.control_flow_ops_test.GroupTestCase.testGroup_OneDevice": ["ops.control_flow_ops.group", "framework.ops.Graph", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertProtoEquals", "ops.control_flow_ops_test.GroupTestCase._StripGraph"], "ops.control_flow_ops_test.GroupTestCase.testGroup_MultiDevice": ["ops.control_flow_ops.group", "framework.ops.Graph", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertProtoEquals", "ops.control_flow_ops_test.GroupTestCase._StripGraph"], "ops.control_flow_ops_test.GroupTestCase.testPassingList": ["ops.control_flow_ops.group", "framework.ops.Graph", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertProtoEquals", "ops.control_flow_ops_test.GroupTestCase._StripGraph"], "ops.control_flow_ops_test.GroupTestCase": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "ops.control_flow_ops_test.GroupTestCase.testPassingNonTensors": ["ops.control_flow_ops.group", "test_util.TensorFlowTestCase.assertRaises"], "test_util.TensorFlowTestCase.assertRaises": [], "ops.control_flow_ops_test.ShapeTestCase.testShape": ["test_util.TensorFlowTestCase.assertEqual", "framework.constant_op.constant", "ops.control_flow_ops.with_dependencies"], "test_util.TensorFlowTestCase.assertEqual": [], "ops.control_flow_ops.with_dependencies": [], "ops.control_flow_ops_test.WithDependenciesTestCase": ["framework.test_util.run_deprecated_v1"], "ops.control_flow_ops_test.WithDependenciesTestCase.testTupleDependencies": ["ops.variables.global_variables_initializer", "framework.constant_op.constant", "ops.init_ops.zeros_initializer", "ops.control_flow_ops.with_dependencies", "ops.state_ops.assign_add", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate", "ops.variable_scope.get_variable"], "ops.init_ops.zeros_initializer": [], "ops.variable_scope.get_variable": [], "ops.state_ops.assign_add": [], "ops.variables.global_variables_initializer": [], "test_util.TensorFlowTestCase.evaluate": [], "ops.control_flow_ops_test.WithDependenciesTestCase.testListDependencies": ["ops.variables.global_variables_initializer", "framework.constant_op.constant", "ops.init_ops.zeros_initializer", "ops.control_flow_ops.with_dependencies", "ops.state_ops.assign_add", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate", "ops.variable_scope.get_variable"], "ops.control_flow_ops_test.SwitchTestCase": ["framework.test_util.run_v1_only", "framework.test_util.run_deprecated_v1"], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesWithDenseShape": ["test_util.TensorFlowTestCase.cached_session", "ops.control_flow_ops.switch", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.less", "framework.constant_op.constant", "framework.ops.IndexedSlices"], "test_util.TensorFlowTestCase.cached_session": [], "framework.ops.IndexedSlices": [], "ops.math_ops.less": [], "ops.control_flow_ops.switch": [], "test_util.TensorFlowTestCase.assertAllEqual": [], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesGradient": ["test_util.TensorFlowTestCase.cached_session", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "framework.constant_op.constant", "training.momentum.MomentumOptimizer", "<builtin>.range", "test_util.TensorFlowTestCase.evaluate", "ops.init_ops.random_normal_initializer", "ops.variable_scope.get_variable"], "ops.init_ops.random_normal_initializer": [], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesGradient.cond": [], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesGradient.body": ["ops.embedding_ops.embedding_lookup", "ops.math_ops.reduce_sum"], "ops.embedding_ops.embedding_lookup": [], "ops.math_ops.reduce_sum": [], "ops.control_flow_ops.while_loop": [], "training.momentum.MomentumOptimizer": [], "<builtin>.range": [], "ops.control_flow_ops_test.SwitchTestCase.testResourceReadInLoop": ["test_util.TensorFlowTestCase.cached_session", "ops.variables.global_variables_initializer", "test_util.TensorFlowTestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "ops.variable_scope.get_variable"], "ops.control_flow_ops_test.SwitchTestCase.testResourceReadInLoop.cond": [], "ops.control_flow_ops_test.SwitchTestCase.testResourceReadInLoop.body": ["ops.embedding_ops.embedding_lookup", "ops.math_ops.reduce_sum"], "ops.control_flow_ops_test.SwitchTestCase.doTestIndexedSlicesGradientInCondInWhileLoop": ["ops.init_ops.random_normal_initializer", "ops.variable_scope.get_variable"], "ops.control_flow_ops_test.SwitchTestCase.doTestIndexedSlicesGradientInCondInWhileLoop.cond": [], "ops.control_flow_ops_test.SwitchTestCase.doTestIndexedSlicesGradientInCondInWhileLoop.body": ["ops.math_ops.square", "test_util.TensorFlowTestCase.cached_session", "ops.variables.global_variables_initializer", "ops.gradients_impl.gradients", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.reduce_sum", "ops.control_flow_ops.while_loop", "framework.constant_op.constant", "ops.math_ops.segment_sum", "ops.embedding_ops.embedding_lookup", "ops.math_ops.equal", "ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.evaluate"], "ops.math_ops.equal": [], "ops.control_flow_ops_test.SwitchTestCase.doTestIndexedSlicesGradientInCondInWhileLoop.body.<lambda1>": ["ops.math_ops.square"], "ops.math_ops.square": [], "ops.control_flow_ops_test.SwitchTestCase.doTestIndexedSlicesGradientInCondInWhileLoop.body.<lambda2>": ["ops.math_ops.reduce_sum"], "ops.control_flow_ops.cond": [], "ops.gradients_impl.gradients": [], "ops.math_ops.segment_sum": [], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesGradientInCondInWhileLoop": ["ops.control_flow_ops_test.SwitchTestCase.doTestIndexedSlicesGradientInCondInWhileLoop"], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesGradientInCondInWhileLoopResource": ["ops.control_flow_ops_test.SwitchTestCase.doTestIndexedSlicesGradientInCondInWhileLoop"], "framework.test_util.run_v1_only": [], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesWithShapeGradientInWhileLoop": ["test_util.TensorFlowTestCase.cached_session", "ops.tensor_array_ops.TensorArray", "ops.gradients_impl.gradients", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.reduce_sum", "framework.ops.convert_to_tensor", "ops.control_flow_ops.while_loop", "ops.array_ops.placeholder", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "ops.array_ops.placeholder": [], "ops.tensor_array_ops.TensorArray": [], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesWithShapeGradientInWhileLoop.cond": [], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesWithShapeGradientInWhileLoop.body": ["ops.array_ops.gather"], "ops.array_ops.gather": [], "framework.ops.convert_to_tensor": [], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesWithDynamicShapeGradientInWhileLoop": ["test_util.TensorFlowTestCase.cached_session", "ops.tensor_array_ops.TensorArray", "ops.gradients_impl.gradients", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.reduce_sum", "framework.ops.convert_to_tensor", "ops.control_flow_ops.while_loop", "ops.array_ops.placeholder", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesWithDynamicShapeGradientInWhileLoop.cond": ["ops.array_ops.size"], "ops.array_ops.size": [], "ops.control_flow_ops_test.SwitchTestCase.testIndexedSlicesWithDynamicShapeGradientInWhileLoop.body": ["ops.array_ops.gather"], "ops.control_flow_ops_test.SwitchTestCase.testGradientThroughSingleBranchOutsideOfContext": ["ops.control_flow_ops.switch", "ops.gradients_impl.gradients", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.CondTest.testCondTrue": ["ops.math_ops.less", "framework.constant_op.constant", "ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.CondTest.testCondTrue.<lambda1>": ["ops.math_ops.multiply"], "ops.math_ops.multiply": [], "ops.control_flow_ops_test.CondTest.testCondTrue.<lambda2>": ["ops.math_ops.add"], "ops.math_ops.add": [], "ops.control_flow_ops_test.CondTest.testCondFalse": ["ops.math_ops.less", "framework.constant_op.constant", "ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.CondTest.testCondFalse.<lambda1>": ["ops.math_ops.multiply"], "ops.control_flow_ops_test.CondTest.testCondFalse.<lambda2>": ["ops.math_ops.add"], "ops.control_flow_ops_test.CondTest.testCondTrueLegacy": ["ops.math_ops.less", "framework.constant_op.constant", "ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.CondTest.testCondTrueLegacy.<lambda1>": ["ops.math_ops.multiply"], "ops.control_flow_ops_test.CondTest.testCondTrueLegacy.<lambda2>": ["ops.math_ops.add"], "ops.control_flow_ops_test.CondTest.testCondFalseLegacy": ["ops.math_ops.less", "framework.constant_op.constant", "ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.CondTest.testCondFalseLegacy.<lambda1>": ["ops.math_ops.multiply"], "ops.control_flow_ops_test.CondTest.testCondFalseLegacy.<lambda2>": ["ops.math_ops.add"], "ops.control_flow_ops_test.CondTest": ["framework.test_util.run_v1_only", "framework.test_util.enable_control_flow_v2", "framework.test_util.run_in_graph_and_eager_modes"], "ops.control_flow_ops_test.CondTest.testCondModifyBoolPred": ["framework.test_util.use_gpu", "ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate", "ops.variable_scope.get_variable"], "framework.test_util.use_gpu": [], "ops.control_flow_ops_test.CondTest.testCondModifyBoolPred.<lambda1>": ["ops.state_ops.assign"], "ops.state_ops.assign": [], "ops.control_flow_ops_test.CondTest.testCondModifyBoolPred.<lambda2>": [], "ops.control_flow_ops_test.CondTest.testCondMissingArg1": ["ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant"], "ops.control_flow_ops_test.CondTest.testCondMissingArg1.<lambda1>": [], "ops.control_flow_ops_test.CondTest.testCondMissingArg2": ["ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant"], "ops.control_flow_ops_test.CondTest.testCondMissingArg2.<lambda1>": [], "ops.control_flow_ops_test.CondTest.testCondDuplicateArg1": ["ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant"], "ops.control_flow_ops_test.CondTest.testCondDuplicateArg1.<lambda1>": [], "ops.control_flow_ops_test.CondTest.testCondDuplicateArg1.<lambda2>": [], "ops.control_flow_ops_test.CondTest.testCondDuplicateArg1.<lambda3>": [], "ops.control_flow_ops_test.CondTest.testCondDuplicateArg2": ["ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant"], "ops.control_flow_ops_test.CondTest.testCondDuplicateArg2.<lambda1>": [], "ops.control_flow_ops_test.CondTest.testCondDuplicateArg2.<lambda2>": [], "ops.control_flow_ops_test.CondTest.testCondDuplicateArg2.<lambda3>": [], "framework.test_util.enable_control_flow_v2": [], "framework.test_util.run_in_graph_and_eager_modes": [], "ops.control_flow_ops_test.CondTest.testCond_gradient": ["ops.array_ops.constant", "ops.control_flow_ops.cond", "eager.backprop.GradientTape", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.array_ops.constant": [], "eager.backprop.GradientTape": [], "ops.control_flow_ops_test.CondTest.testCond_gradient.<lambda1>": [], "ops.control_flow_ops_test.CondTest.testCond_gradient.<lambda2>": [], "ops.control_flow_ops_test.CondTest.testCond_gradient.<lambda3>": [], "ops.control_flow_ops_test.CondTest.testCond_gradient.<lambda4>": [], "eager.context.executing_eagerly": [], "ops.control_flow_ops_test.CondTest.testCondWithGroupAndSummaries": ["ops.variables.global_variables_initializer", "ops.summary_ops_v2.create_file_writer", "framework.ops.Graph", "ops.summary_ops_v2.summary_writer_initializer_op", "framework.constant_op.constant", "ops.control_flow_ops.cond", "ops.summary_ops_v2.always_record_summaries", "test_util.TensorFlowTestCase.get_temp_dir", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "test_util.TensorFlowTestCase.get_temp_dir": [], "ops.summary_ops_v2.create_file_writer": [], "ops.summary_ops_v2.always_record_summaries": [], "ops.control_flow_ops_test.CondTest.testCondWithGroupAndSummaries.<lambda1>": ["ops.summary_ops_v2.scalar", "ops.control_flow_ops.group"], "ops.summary_ops_v2.scalar": [], "ops.summary_ops_v2.summary_writer_initializer_op": [], "ops.control_flow_ops_test.ContextTest": ["framework.test_util.run_deprecated_v1"], "ops.control_flow_ops_test.ContextTest.testCondContext": ["test_util.TensorFlowTestCase.cached_session", "control_flow_ops.CondContext.from_proto", "ops.math_ops.less", "framework.constant_op.constant", "ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertProtoEquals"], "ops.control_flow_ops_test.ContextTest.testCondContext.<lambda1>": ["ops.math_ops.multiply"], "ops.control_flow_ops_test.ContextTest.testCondContext.<lambda2>": ["ops.math_ops.add"], "control_flow_ops.CondContext.from_proto": [], "ops.control_flow_ops_test.ContextTest._testWhileContextHelper": ["control_flow_ops.WhileContext.from_proto", "test_util.TensorFlowTestCase.cached_session", "ops.control_flow_ops.while_loop", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertProtoEquals"], "ops.control_flow_ops_test.ContextTest._testWhileContextHelper.<lambda1>": ["ops.math_ops.less"], "ops.control_flow_ops_test.ContextTest._testWhileContextHelper.<lambda2>": ["ops.math_ops.add"], "control_flow_ops.WhileContext.from_proto": [], "ops.control_flow_ops_test.ContextTest.testWhileContext": ["ops.control_flow_ops_test.ContextTest._testWhileContextHelper"], "ops.control_flow_ops_test.ContextTest.testWhileContextWithMaximumIterations": ["ops.control_flow_ops_test.ContextTest._testWhileContextHelper"], "ops.control_flow_ops_test.ContextTest.testControlContextImportScope": ["test_util.TensorFlowTestCase.cached_session", "<builtin>.set", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertProtoEquals", "control_flow_ops.ControlFlowContext._to_values_def", "test_util.TensorFlowTestCase.assertEqual", "control_flow_ops.ControlFlowContext.__init__"], "ops.control_flow_ops_test.ContextTest.testControlContextImportScope.NoABCControlFlowContext.to_control_flow_context_def": ["<builtin>.super"], "<builtin>.super": [], "control_flow_ops.ControlFlowContext.__init__": [], "control_flow_ops.ControlFlowContext._to_values_def": [], "<builtin>.set": [], "ops.control_flow_ops_test._get_nested_shape": ["util.nest.map_structure"], "ops.control_flow_ops_test._get_nested_shape._get_shape": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "util.nest.map_structure": [], "ops.control_flow_ops_test._create_tensor_array": ["ops.array_ops.zeros", "<builtin>.range", "ops.tensor_array_ops.TensorArray"], "ops.array_ops.zeros": [], "ops.control_flow_ops_test._raw_nested_shape": ["util.nest.map_structure"], "ops.control_flow_ops_test._raw_nested_shape._raw_shape": ["<builtin>.isinstance"], "ops.control_flow_ops_test.DataTypesTest.assertAllEqualNested": ["<builtin>.zip", "test_util.TensorFlowTestCase.assertAllEqual", "ops.control_flow_ops_test.DataTypesTest.assertAllEqualNested", "<builtin>.isinstance"], "<builtin>.zip": [], "ops.control_flow_ops_test.DataTypesTest._testShape": ["ops.control_flow_ops.case", "ops.array_ops.placeholder", "ops.control_flow_ops_test._raw_nested_shape", "ops.control_flow_ops.cond", "ops.control_flow_ops_test._get_nested_shape", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops.case": [], "ops.control_flow_ops_test.DataTypesTest._testReturnValues": ["test_util.TensorFlowTestCase.cached_session", "ops.variables.global_variables_initializer", "ops.control_flow_ops.case", "ops.control_flow_ops_test.DataTypesTest.assertAllEqualNested", "ops.array_ops.placeholder", "ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.DataTypesTest": ["framework.test_util.run_v1_only", "framework.test_util.run_deprecated_v1"], "ops.control_flow_ops_test.DataTypesTest.test_int": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "framework.tensor_shape.TensorShape": [], "ops.control_flow_ops_test.DataTypesTest.test_int.<lambda1>": [], "ops.control_flow_ops_test.DataTypesTest.test_int.<lambda2>": [], "ops.control_flow_ops_test.DataTypesTest.test_float": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_float.<lambda1>": [], "ops.control_flow_ops_test.DataTypesTest.test_float.<lambda2>": [], "ops.control_flow_ops_test.DataTypesTest.test_noop": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_string": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_string.<lambda1>": [], "ops.control_flow_ops_test.DataTypesTest.test_string.<lambda2>": [], "ops.control_flow_ops_test.DataTypesTest.test_variable": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_variable.<lambda1>": ["ops.variables.Variable"], "ops.variables.Variable": [], "ops.control_flow_ops_test.DataTypesTest.test_variable.<lambda2>": ["ops.variables.Variable"], "ops.control_flow_ops_test.DataTypesTest.test_none": ["ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_none.<lambda1>": [], "ops.control_flow_ops_test.DataTypesTest.test_none.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_tensors": ["ops.control_flow_ops_test.DataTypesTest._testShape", "framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest.test_tensors._build_true_branch", "ops.control_flow_ops_test.DataTypesTest._testReturnValues", "ops.control_flow_ops_test.DataTypesTest.test_tensors._build_false_branch", "numpy.ones", "numpy.zeros"], "ops.control_flow_ops_test.DataTypesTest.test_tensors._build_true_branch": [], "ops.control_flow_ops_test.DataTypesTest.test_tensors._build_true_branch._build": ["ops.array_ops.zeros", "ops.array_ops.ones"], "ops.array_ops.ones": [], "ops.control_flow_ops_test.DataTypesTest.test_tensors._build_false_branch": [], "ops.control_flow_ops_test.DataTypesTest.test_tensors._build_false_branch._build": ["ops.array_ops.zeros", "ops.array_ops.ones"], "numpy.zeros": [], "numpy.ones": [], "ops.control_flow_ops_test.DataTypesTest.test_tensors_unknown_shape": ["ops.control_flow_ops_test.DataTypesTest.test_tensors_unknown_shape._build_true_branch", "ops.control_flow_ops_test.DataTypesTest._testShape", "framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues", "ops.control_flow_ops_test.DataTypesTest.test_tensors_unknown_shape._build_false_branch", "numpy.ones", "numpy.zeros"], "ops.control_flow_ops_test.DataTypesTest.test_tensors_unknown_shape._build_true_branch": ["ops.array_ops.placeholder"], "ops.control_flow_ops_test.DataTypesTest.test_tensors_unknown_shape._build_true_branch._build": [], "ops.control_flow_ops_test.DataTypesTest.test_tensors_unknown_shape._build_false_branch": ["ops.array_ops.placeholder"], "ops.control_flow_ops_test.DataTypesTest.test_tensors_unknown_shape._build_false_branch._build": [], "ops.control_flow_ops_test.DataTypesTest.test_sparse_tensors": ["framework.sparse_tensor.SparseTensorValue", "ops.control_flow_ops_test.DataTypesTest._testShape", "framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues", "python.tf2.enabled"], "ops.control_flow_ops_test.DataTypesTest.test_sparse_tensors.true_fn": ["framework.sparse_tensor.SparseTensor"], "framework.sparse_tensor.SparseTensor": [], "ops.control_flow_ops_test.DataTypesTest.test_sparse_tensors.false_fn": ["framework.sparse_tensor.SparseTensor"], "framework.sparse_tensor.SparseTensorValue": [], "python.tf2.enabled": [], "ops.control_flow_ops_test.DataTypesTest.test_tensors_with_partially_specified_shapes": ["ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest.test_tensors_with_partially_specified_shapes._build_branch", "framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues", "numpy.ones", "numpy.zeros"], "ops.control_flow_ops_test.DataTypesTest.test_tensors_with_partially_specified_shapes._build_branch": ["ops.array_ops.placeholder"], "ops.control_flow_ops_test.DataTypesTest.test_tensors_with_partially_specified_shapes._build_branch._build": [], "ops.control_flow_ops_test.DataTypesTest.test_tensor_arrays": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test._create_tensor_array", "ops.control_flow_ops_test.DataTypesTest._testShape"], "ops.control_flow_ops_test.DataTypesTest.test_tensor_arrays.<lambda1>": [], "ops.control_flow_ops_test.DataTypesTest.test_tensor_arrays.<lambda2>": [], "ops.control_flow_ops_test.DataTypesTest.test_tensor_array_reads": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test._create_tensor_array", "ops.control_flow_ops_test.DataTypesTest._testShape"], "ops.control_flow_ops_test.DataTypesTest.test_tensor_array_reads.<lambda1>": [], "ops.control_flow_ops_test.DataTypesTest.test_tensor_array_reads.<lambda2>": [], "ops.control_flow_ops_test.DataTypesTest.test_list": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_list.<lambda1>": ["framework.constant_op.constant", "ops.variables.Variable"], "ops.control_flow_ops_test.DataTypesTest.test_list.<lambda2>": ["framework.constant_op.constant", "ops.variables.Variable"], "ops.control_flow_ops_test.DataTypesTest.test_non_strict": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_non_strict.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_non_strict.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_non_strict.<lambda3>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_strict": ["ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant", "ops.control_flow_ops.case"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_strict.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_strict.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_strict.<lambda3>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_list": ["framework.tensor_shape.TensorShape", "python.tf2.enabled", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_list.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_list.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_tuple": ["framework.tensor_shape.TensorShape", "python.tf2.enabled", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_tuple.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_tuple.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_namedtuple": ["framework.tensor_shape.TensorShape", "python.tf2.enabled", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_namedtuple.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_singleton_namedtuple.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_tuple": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_tuple.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_tuple.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_namedtuple": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues"], "ops.control_flow_ops_test.DataTypesTest.test_namedtuple.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_namedtuple.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_nested": ["ops.control_flow_ops_test.DataTypesTest._testShape", "framework.tensor_shape.TensorShape", "ops.control_flow_ops_test.DataTypesTest._testReturnValues", "numpy.ones", "numpy.zeros"], "ops.control_flow_ops_test.DataTypesTest.test_nested.true_fn": ["ops.array_ops.zeros", "framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_nested.false_fn": ["framework.constant_op.constant", "ops.array_ops.ones"], "ops.control_flow_ops_test.DataTypesTest.test_cond_inside_while_loop": ["framework.tensor_shape.TensorShape", "ops.control_flow_ops.while_loop", "framework.constant_op.constant", "ops.array_ops.ones", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.DataTypesTest.test_cond_inside_while_loop.body": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "ops.control_flow_ops_test.DataTypesTest.test_cond_inside_while_loop.body.<lambda1>": [], "ops.control_flow_ops_test.DataTypesTest.test_cond_inside_while_loop.body.<lambda2>": [], "ops.control_flow_ops_test.DataTypesTest.test_cond_inside_while_loop.<lambda1>": [], "ops.control_flow_ops_test.IndexedCaseTest.make_name": ["test_util.TensorFlowTestCase.id"], "test_util.TensorFlowTestCase.id": [], "ops.control_flow_ops_test.IndexedCaseTest.disabled_testCase_ticklesGpuVsHostMemoryIssueWithInt32": ["ops.control_flow_ops_test.IndexedCaseTest.disabled_testCase_ticklesGpuVsHostMemoryIssueWithInt32.make_func", "ops.control_flow_ops.switch_case", "<builtin>.range", "ops.array_ops.placeholder_with_default", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.IndexedCaseTest.disabled_testCase_ticklesGpuVsHostMemoryIssueWithInt32.make_func": [], "ops.control_flow_ops_test.IndexedCaseTest.disabled_testCase_ticklesGpuVsHostMemoryIssueWithInt32.make_func.<lambda1>": ["ops.array_ops.constant"], "ops.array_ops.placeholder_with_default": [], "ops.control_flow_ops.switch_case": [], "testing.parameterized.parameters": [], "ops.control_flow_ops_test.IndexedCaseTest": ["testing.parameterized.parameters", "framework.test_util.run_gpu_only", "framework.test_util.disable_xla"], "ops.control_flow_ops_test.IndexedCaseTest.testCase": ["ops.control_flow_ops_test.IndexedCaseTest.make_name", "ops.control_flow_ops.switch_case", "<builtin>.range", "ops.array_ops.placeholder_with_default", "test_util.TensorFlowTestCase.assertEqual", "ops.control_flow_ops_test.IndexedCaseTest.testCase.make_func", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.IndexedCaseTest.testCase.make_func": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase.make_func.<lambda1>": ["ops.array_ops.constant"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_withDefault": ["ops.control_flow_ops_test.IndexedCaseTest.make_name", "ops.control_flow_ops.switch_case", "ops.control_flow_ops_test.IndexedCaseTest.testCase_withDefault.make_func", "<builtin>.range", "ops.array_ops.placeholder_with_default", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_withDefault.make_func": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase_withDefault.make_func.<lambda1>": ["ops.array_ops.constant"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_dictWithDefault": ["ops.control_flow_ops_test.IndexedCaseTest.make_name", "ops.control_flow_ops_test.IndexedCaseTest.testCase_dictWithDefault.make_func", "ops.control_flow_ops.switch_case", "<builtin>.range", "ops.array_ops.placeholder_with_default", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_dictWithDefault.make_func": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase_dictWithDefault.make_func.<lambda1>": ["ops.array_ops.constant"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_gradient_disable_lowering": ["ops.control_flow_ops_test.IndexedCaseTest._testCase_gradient"], "ops.control_flow_ops_test.IndexedCaseTest._testCase_gradient": ["<builtin>.zip", "ops.array_ops.constant", "ops.control_flow_ops.switch_case", "ops.control_flow_ops_test.IndexedCaseTest._testCase_gradient.make_func", "<builtin>.float", "<builtin>.range", "eager.backprop.GradientTape", "ops.array_ops.placeholder_with_default", "<builtin>.len", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_gradient_enable_lowering": ["ops.control_flow_ops_test.IndexedCaseTest._testCase_gradient"], "<builtin>.float": [], "ops.control_flow_ops_test.IndexedCaseTest._testCase_gradient.make_func": [], "ops.control_flow_ops_test.IndexedCaseTest._testCase_gradient.make_func.<lambda1>": [], "<builtin>.len": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase_gradient_diffShapedIntermediates": ["ops.control_flow_ops_test.IndexedCaseTest.make_name", "ops.control_flow_ops_test.IndexedCaseTest.testCase_gradient_diffShapedIntermediates.make_func", "test_util.TensorFlowTestCase.assertAllEqual", "ops.control_flow_ops_test.IndexedCaseTest.testCase_gradient_diffShapedIntermediates.make_func.f", "ops.array_ops.constant", "<builtin>.zip", "test_util.TensorFlowTestCase.assertIsNone", "ops.control_flow_ops.switch_case", "<builtin>.float", "<builtin>.range", "eager.backprop.GradientTape", "ops.array_ops.placeholder_with_default", "<builtin>.len", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_gradient_diffShapedIntermediates.make_func": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase_gradient_diffShapedIntermediates.make_func.f": ["ops.math_ops.reduce_sum"], "test_util.TensorFlowTestCase.assertIsNone": [], "framework.test_util.run_gpu_only": [], "framework.test_util.disable_xla": [], "ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution": ["ops.array_ops.unstack", "protobuf.config_pb2.RunMetadata", "ops.control_flow_v2_toggles.control_flow_v2_enabled", "framework.ops.Graph", "protobuf.config_pb2.RunOptions", "<builtin>.zip", "ops.control_flow_ops.while_loop", "numpy.count_nonzero", "<builtin>.sorted", "ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution.overlap", "test_util.TensorFlowTestCase.assertLen", "protobuf.config_pb2.ConfigProto", "client.session.Session", "<builtin>.list", "test_util.TensorFlowTestCase.skipTest", "ops.random_ops.random_uniform", "test_util.TensorFlowTestCase.assertGreater", "ops.array_ops.matrix_diag"], "ops.control_flow_v2_toggles.control_flow_v2_enabled": [], "test_util.TensorFlowTestCase.skipTest": [], "ops.random_ops.random_uniform": [], "ops.array_ops.matrix_diag": [], "ops.array_ops.unstack": [], "ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution.make_branch": [], "ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution.make_branch.branch_fn": ["framework.ops.device", "ops.math_ops.reduce_sum", "ops.linalg_ops.cholesky"], "framework.ops.device": [], "ops.linalg_ops.cholesky": [], "ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution.make_branches": ["ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution.make_branch", "<builtin>.range"], "ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution.cond": [], "ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution.body": ["framework.ops.device", "ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution.make_branches", "ops.control_flow_ops.switch_case"], "protobuf.config_pb2.RunMetadata": [], "protobuf.config_pb2.RunOptions": [], "protobuf.config_pb2.ConfigProto": [], "client.session.Session": [], "test_util.TensorFlowTestCase.assertLen": [], "ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution.<lambda1>": [], "<builtin>.sorted": [], "ops.control_flow_ops_test.IndexedCaseTest.testParallelExecution.overlap": [], "<builtin>.list": [], "numpy.count_nonzero": [], "test_util.TensorFlowTestCase.assertGreater": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateIndicesContiguous": ["test_util.TensorFlowTestCase.assertRaisesRegex", "ops.array_ops.constant", "ops.control_flow_ops.switch_case", "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateIndicesContiguous.make_func", "<builtin>.range"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateIndicesContiguous.make_func": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateIndicesContiguous.make_func.<lambda1>": ["ops.array_ops.constant"], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateIndicesDup": ["test_util.TensorFlowTestCase.assertRaisesRegex", "ops.array_ops.constant", "ops.control_flow_ops.switch_case", "<builtin>.range", "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateIndicesDup.make_func"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateIndicesDup.make_func": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateIndicesDup.make_func.<lambda1>": ["ops.array_ops.constant"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateBranchIndex": ["ops.control_flow_ops_test.IndexedCaseTest.testCase_validateBranchIndex.make_func", "<builtin>.range", "test_util.TensorFlowTestCase.assertRaisesRegex", "ops.control_flow_ops.switch_case"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateBranchIndex.make_func": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateBranchIndex.make_func.<lambda1>": ["ops.array_ops.constant"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateNonIntKeys": ["test_util.TensorFlowTestCase.assertRaisesRegex", "ops.array_ops.constant", "ops.control_flow_ops.switch_case", "<builtin>.range", "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateNonIntKeys.make_func"], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateNonIntKeys.make_func": [], "ops.control_flow_ops_test.IndexedCaseTest.testCase_validateNonIntKeys.make_func.<lambda1>": ["ops.array_ops.constant"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest": ["framework.test_util.disable_xla"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases": ["framework.ops.device", "ops.array_ops.constant", "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.run_defun_and_tape", "framework.test_util.is_gpu_available", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.cpu_fn": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.gpu_fn": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.flexible_fn": ["ops.control_flow_ops.execute_fn_for_device"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.flexible_fn.<dict1>.<lambda1>": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.flexible_fn.<lambda1>": ["ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.cpu_fn"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.flexible_fn.<dict1>.<lambda2>": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.flexible_fn.<lambda2>": ["ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.gpu_fn"], "ops.control_flow_ops.execute_fn_for_device": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.flexible_defun": ["ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.flexible_fn"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.run_defun_and_tape": ["eager.backprop.GradientTape", "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.flexible_fn", "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCommonCases.flexible_defun"], "framework.test_util.is_gpu_available": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile": ["ops.array_ops.constant", "eager.def_function.function", "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile.flexible_defun", "framework.test_util.is_gpu_available", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile.cpu_fn": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile.gpu_fn": [], "eager.def_function.function": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile.flexible_defun": ["ops.control_flow_ops.execute_fn_for_device"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile.flexible_defun.<dict1>.<lambda1>": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile.flexible_defun.<lambda1>": ["ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile.cpu_fn"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile.flexible_defun.<dict1>.<lambda2>": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile.flexible_defun.<lambda2>": ["ops.control_flow_ops_test.ExecuteFnForDeviceTest.testCompile.gpu_fn"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack": ["framework.ops.device", "ops.array_ops.constant", "framework.test_util.is_gpu_available", "test_util.TensorFlowTestCase.assertEqual", "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.flexible_fn", "test_util.TensorFlowTestCase.evaluate", "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.flexible_defun"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.default_fn": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.tpu_fn": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.flexible_fn": ["ops.control_flow_ops.execute_fn_for_device"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.flexible_fn.<dict1>.<lambda1>": [], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.flexible_fn.<lambda1>": ["ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.default_fn", "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.tpu_fn"], "ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.flexible_defun": ["ops.control_flow_ops_test.ExecuteFnForDeviceTest.testFallBack.flexible_fn"], "ops.control_flow_ops_test.CaseTest": ["framework.test_util.run_deprecated_v1", "framework.test_util.run_in_graph_and_eager_modes"], "ops.control_flow_ops_test.CaseTest.testCase_withDefault": ["test_util.TensorFlowTestCase.cached_session", "ops.control_flow_ops.case", "ops.array_ops.placeholder", "ops.math_ops.equal", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.CaseTest.testCase_withDefault.<list2>.<lambda1>": [], "ops.control_flow_ops_test.CaseTest.testCase_withDefault.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_withDefault.<list2>.<lambda2>": [], "ops.control_flow_ops_test.CaseTest.testCase_withDefault.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_exclusive": ["test_util.TensorFlowTestCase.cached_session", "test_util.TensorFlowTestCase.assertRaisesRegex", "ops.control_flow_ops.case", "ops.array_ops.placeholder", "ops.math_ops.equal", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_exclusive.<list2>.<lambda1>": [], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_exclusive.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_exclusive.<list2>.<lambda2>": [], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_exclusive.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_exclusive.<list2>.<lambda3>": [], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_exclusive.<lambda3>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_non_exclusive": ["test_util.TensorFlowTestCase.cached_session", "ops.control_flow_ops.case", "ops.array_ops.placeholder", "ops.math_ops.equal", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_non_exclusive.<list2>.<lambda1>": [], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_non_exclusive.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_non_exclusive.<list2>.<lambda2>": [], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_non_exclusive.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_non_exclusive.<list2>.<lambda3>": [], "ops.control_flow_ops_test.CaseTest.testCase_multiple_matches_non_exclusive.<lambda3>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_withoutDefault": ["test_util.TensorFlowTestCase.cached_session", "test_util.TensorFlowTestCase.assertRaisesRegex", "ops.control_flow_ops.case", "ops.array_ops.placeholder", "ops.math_ops.equal", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.CaseTest.testCase_withoutDefault.<list2>.<lambda1>": [], "ops.control_flow_ops_test.CaseTest.testCase_withoutDefault.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_withoutDefault.<list2>.<lambda2>": [], "ops.control_flow_ops_test.CaseTest.testCase_withoutDefault.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_withoutDefault.<list2>.<lambda3>": [], "ops.control_flow_ops_test.CaseTest.testCase_withoutDefault.<lambda3>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_withoutDefault_oneCondition": ["test_util.TensorFlowTestCase.cached_session", "test_util.TensorFlowTestCase.assertRaisesRegex", "ops.control_flow_ops.case", "ops.array_ops.placeholder", "ops.math_ops.equal", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.CaseTest.testCase_withoutDefault_oneCondition.<list2>.<lambda1>": [], "ops.control_flow_ops_test.CaseTest.testCase_withoutDefault_oneCondition.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_dict": ["ops.control_flow_ops.case", "framework.constant_op.constant", "ops.math_ops.equal", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.CaseTest.testCase_dict.<list1>.<lambda1>": [], "ops.control_flow_ops_test.CaseTest.testCase_dict.<lambda1>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.CaseTest.testCase_dict.<list1>.<lambda2>": [], "ops.control_flow_ops_test.CaseTest.testCase_dict.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops_test.WhileLoopTestCase": ["framework.test_util.run_v1_only", "framework.test_util.enable_control_flow_v2", "framework.test_util.run_in_graph_and_eager_modes"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopWithSingleVariable": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopWithSingleVariable.<lambda1>": ["ops.math_ops.less"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopWithSingleVariable.<lambda2>": ["ops.math_ops.add"], "ops.control_flow_ops_test.WhileLoopTestCase.testEagerWhileLoopWithSingleVariable_bodyReturnsTuple": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.WhileLoopTestCase.testEagerWhileLoopWithSingleVariable_bodyReturnsTuple.<lambda1>": ["ops.math_ops.less"], "ops.control_flow_ops_test.WhileLoopTestCase.testEagerWhileLoopWithSingleVariable_bodyReturnsTuple.<lambda2>": ["ops.math_ops.add"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_False": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_False.<lambda1>": ["ops.math_ops.less"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_False.<lambda2>": ["ops.math_ops.add"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_FalseSingleLoopVar": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_FalseSingleLoopVar.<lambda1>": ["ops.math_ops.less"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_FalseSingleLoopVar.<lambda2>": ["ops.math_ops.add"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_True": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_True.<lambda1>": ["ops.math_ops.less"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_True.<lambda2>": ["ops.math_ops.add"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_TrueSingleLoopVar": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_TrueSingleLoopVar.<lambda1>": ["ops.math_ops.less"], "ops.control_flow_ops_test.WhileLoopTestCase.testWhileLoopSameReturnShape_TrueSingleLoopVar.<lambda2>": ["ops.math_ops.add"], "ops.control_flow_ops_test.WhileLoopTestCase.testSkipsUnnecessaryCaptureGradients": ["ops.array_ops.constant", "ops.control_flow_ops.while_loop", "test_util.TensorFlowTestCase.assertAllEqual", "eager.backprop.GradientTape"], "ops.control_flow_ops_test.WhileLoopTestCase.testSkipsUnnecessaryCaptureGradients.gradient_trap": [], "ops.control_flow_ops_test.WhileLoopTestCase.testSkipsUnnecessaryCaptureGradients.gradient_trap.grad": ["ops.check_ops.assert_equal"], "ops.check_ops.assert_equal": [], "ops.control_flow_ops_test.WhileLoopTestCase.testSkipsUnnecessaryCaptureGradients.cond": [], "ops.control_flow_ops_test.WhileLoopTestCase.testSkipsUnnecessaryCaptureGradients.body": ["ops.control_flow_ops_test.WhileLoopTestCase.testSkipsUnnecessaryCaptureGradients.gradient_trap"], "ops.control_flow_ops_test.WhileLoopParallelismTest.setUp": ["<builtin>.super"], "ops.control_flow_ops_test.WhileLoopParallelismTest.tearDown": ["<builtin>.super"], "itertools.product": [], "ops.control_flow_ops_test.WhileLoopParallelismTest": ["testing.parameterized.parameters", "itertools.product"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testResourceHandlingInLoop": ["test_util.TensorFlowTestCase.skipTest", "ops.math_ops.reduce_max", "ops.control_flow_ops_test.WhileLoopParallelismTest.testResourceHandlingInLoop.run_loop", "ops.variables.Variable", "<builtin>.int", "python.tf2.enabled", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testResourceHandlingInLoop.run_loop": ["framework.constant_op.constant", "ops.tensor_array_ops.TensorArray", "lang.directives.set_loop_options"], "lang.directives.set_loop_options": [], "ops.math_ops.reduce_max": [], "<builtin>.int": [], "ops.control_flow_ops_test.WhileLoopParallelismTest.testMultiReadsBeforeWrite": ["test_util.TensorFlowTestCase.skipTest", "test_util.TensorFlowTestCase.assertAllEqual", "ops.control_flow_ops_test.WhileLoopParallelismTest.testMultiReadsBeforeWrite.run_loop", "ops.variables.Variable", "python.tf2.enabled", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testMultiReadsBeforeWrite.run_loop": ["ops.math_ops.reduce_max", "ops.tensor_array_ops.TensorArray", "framework.constant_op.constant", "lang.directives.set_loop_options", "ops.math_ops.cast", "ops.random_ops.random_uniform"], "ops.math_ops.cast": [], "ops.control_flow_ops_test.WhileLoopParallelismTest.testCondDependenceOnMutatedResource": ["test_util.TensorFlowTestCase.skipTest", "ops.control_flow_ops_test.WhileLoopParallelismTest.testCondDependenceOnMutatedResource.run_loop", "ops.variables.Variable", "python.tf2.enabled", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testCondDependenceOnMutatedResource.run_loop": ["ops.math_ops.reduce_max", "ops.math_ops.cast", "ops.random_ops.random_uniform", "lang.directives.set_loop_options"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testIndependentSideEffectsInCond": ["test_util.TensorFlowTestCase.skipTest", "test_util.TensorFlowTestCase.assertListEqual", "python.tf2.enabled", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate", "ops.control_flow_ops_test.WhileLoopParallelismTest.testIndependentSideEffectsInCond.run_loop"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testIndependentSideEffectsInCond.record_side_effect": ["ops.script_ops.eager_py_func"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testIndependentSideEffectsInCond.record_side_effect.side_effect_py_fn": [], "ops.script_ops.eager_py_func": [], "ops.control_flow_ops_test.WhileLoopParallelismTest.testIndependentSideEffectsInCond.run_loop": ["ops.control_flow_ops_test.WhileLoopParallelismTest.testIndependentSideEffectsInCond.run_loop.complex_cond", "ops.control_flow_ops_test.WhileLoopParallelismTest.testIndependentSideEffectsInCond.record_side_effect", "framework.constant_op.constant", "lang.directives.set_loop_options"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testIndependentSideEffectsInCond.run_loop.complex_cond": ["ops.control_flow_ops_test.WhileLoopParallelismTest.testIndependentSideEffectsInCond.record_side_effect"], "test_util.TensorFlowTestCase.assertListEqual": [], "ops.control_flow_ops_test.WhileLoopParallelismTest.testStatelessLoop": ["ops.control_flow_ops_test.WhileLoopParallelismTest.testStatelessLoop.run_loop", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testStatelessLoop.run_loop": ["framework.constant_op.constant", "lang.directives.set_loop_options"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testStatefulParallelism": ["test_util.TensorFlowTestCase.skipTest", "ops.math_ops.reduce_max", "ops.control_flow_ops_test.WhileLoopParallelismTest.testStatefulParallelism.run_loop", "test_util.TensorFlowTestCase.assertListEqual", "ops.variables.Variable", "python.tf2.enabled", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testStatefulParallelism.wait_then_tick": ["ops.script_ops.eager_py_func"], "ops.control_flow_ops_test.WhileLoopParallelismTest.testStatefulParallelism.wait_then_tick.wait_then_tick_py_fn": ["time.sleep"], "time.sleep": [], "ops.control_flow_ops_test.WhileLoopParallelismTest.testStatefulParallelism.run_loop": ["ops.control_flow_ops_test.WhileLoopParallelismTest.testStatefulParallelism.wait_then_tick", "framework.constant_op.constant", "ops.tensor_array_ops.TensorArray", "lang.directives.set_loop_options"], "ops.control_flow_ops_test.AssertTest": ["framework.test_util.run_deprecated_v1", "framework.test_util.run_in_graph_and_eager_modes"], "ops.control_flow_ops_test.AssertTest.testAssert": ["test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "ops.control_flow_ops.Assert"], "ops.control_flow_ops.Assert": [], "ops.control_flow_ops_test.AssertTest.testAssertInFunction": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertRaises", "ops.control_flow_ops_test.AssertTest.testAssertInFunction.whiny", "framework.test_util.is_gpu_available", "test_util.TensorFlowTestCase.skipTest", "test_util.TensorFlowTestCase.evaluate"], "ops.control_flow_ops_test.AssertTest.testAssertInFunction.whiny": ["framework.constant_op.constant", "ops.control_flow_ops.Assert"], "platform.googletest.main": []}