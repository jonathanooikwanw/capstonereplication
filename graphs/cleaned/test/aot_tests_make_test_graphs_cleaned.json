{"tests.make_test_graphs": ["absl.app.run", "argparse.ArgumentParser"], "tests.make_test_graphs.tfadd": ["ops.math_ops.add", "framework.constant_op.constant"], "framework.constant_op.constant": [], "ops.math_ops.add": [], "tests.make_test_graphs.tfadd_with_ckpt": ["ops.variables.VariableV1", "training.saver.Saver", "ops.variables.global_variables_initializer", "framework.constant_op.constant", "ops.math_ops.add", "ops.array_ops.placeholder", "os.path.join", "client.session.Session"], "ops.array_ops.placeholder": [], "ops.variables.VariableV1": [], "ops.variables.global_variables_initializer": [], "training.saver.Saver": [], "client.session.Session": [], "os.path.join": [], "tests.make_test_graphs.tfadd_with_ckpt_saver": ["six.ensure_binary", "ops.variables.VariableV1", "training.saver.Saver", "ops.variables.global_variables_initializer", "framework.constant_op.constant", "ops.math_ops.add", "ops.array_ops.placeholder", "os.path.join", "client.session.Session", "<builtin>.open"], "<builtin>.open": [], "six.ensure_binary": [], "tests.make_test_graphs.tfassert_eq": ["ops.math_ops.add", "ops.array_ops.placeholder", "ops.control_flow_ops.Assert", "ops.math_ops.equal", "ops.math_ops.negative"], "ops.math_ops.equal": [], "ops.control_flow_ops.Assert": [], "ops.math_ops.negative": [], "tests.make_test_graphs.tfcond": ["ops.array_ops.placeholder", "ops.control_flow_ops.cond", "ops.array_ops.identity"], "tests.make_test_graphs.tfcond.<lambda1>": [], "tests.make_test_graphs.tfcond.<lambda2>": [], "ops.control_flow_ops.cond": [], "ops.array_ops.identity": [], "tests.make_test_graphs.tfgather": ["ops.array_ops.placeholder", "ops.array_ops.gather"], "ops.array_ops.gather": [], "tests.make_test_graphs.tfmatmul": ["ops.array_ops.placeholder", "ops.math_ops.matmul"], "ops.math_ops.matmul": [], "tests.make_test_graphs.tfmatmulandadd": ["ops.array_ops.placeholder", "ops.math_ops.matmul", "ops.math_ops.add"], "tests.make_test_graphs.tffunction": ["tests.make_test_graphs.tffunction.test_func", "framework.function.Defun", "framework.constant_op.constant"], "framework.function.Defun": [], "tests.make_test_graphs.tffunction.test_func": [], "tests.make_test_graphs.tfsplits": ["six.moves.range", "ops.math_ops.add", "ops.array_ops.placeholder", "ops.math_ops.matmul", "ops.array_ops.identity", "ops.array_ops.concat", "ops.array_ops.split"], "six.moves.range": [], "ops.array_ops.split": [], "ops.array_ops.concat": [], "tests.make_test_graphs.tftop_k": ["ops.array_ops.placeholder", "ops.array_ops.identity", "ops.nn_ops.top_k"], "ops.nn_ops.top_k": [], "tests.make_test_graphs.tfvariable_readonly": ["ops.array_ops.identity", "ops.variables.Variable", "ops.math_ops.add", "framework.ops.control_dependencies"], "ops.variables.Variable": [], "framework.ops.control_dependencies": [], "tests.make_test_graphs.tfvariable": ["ops.array_ops.stack", "ops.variables.Variable", "framework.ops.control_dependencies"], "ops.array_ops.stack": [], "tests.make_test_graphs.tfvariable_sequential_updates": ["ops.control_flow_ops.no_op", "six.moves.range", "ops.variables.Variable", "framework.ops.control_dependencies", "ops.array_ops.identity"], "ops.control_flow_ops.no_op": [], "tests.make_test_graphs.export_debug_info": ["framework.error_interpolation.create_graph_debug_info_def"], "framework.error_interpolation.create_graph_debug_info_def": [], "tests.make_test_graphs.write_graph": ["tests.make_test_graphs.tfadd_with_ckpt_saver", "six.ensure_binary", "tests.make_test_graphs.tfmatmulandadd", "tests.make_test_graphs.export_debug_info", "tests.make_test_graphs.tfvariable", "tests.make_test_graphs.tftop_k", "tests.make_test_graphs.tfsplits", "tests.make_test_graphs.tfcond", "tests.make_test_graphs.tfassert_eq", "os.path.join", "tests.make_test_graphs.tfadd_with_ckpt", "tests.make_test_graphs.tfvariable_readonly", "tests.make_test_graphs.tffunction", "<builtin>.open", "tests.make_test_graphs.tfgather", "framework.ops.Graph", "tests.make_test_graphs.tfmatmul", "tests.make_test_graphs.tfvariable_sequential_updates", "tests.make_test_graphs.tfadd"], "framework.ops.Graph": [], "tests.make_test_graphs.main": ["ops.control_flow_util.enable_control_flow_v2", "tests.make_test_graphs.write_graph"], "ops.control_flow_util.enable_control_flow_v2": [], "argparse.ArgumentParser": [], "tests.make_test_graphs.<lambda1>": [], "absl.app.run": []}