{"tests.tridiagonal_solve_ops_test": ["numpy.array", "platform.test.main"], "numpy.array": [], "tests.tridiagonal_solve_ops_test._tfconst": ["framework.constant_op.constant"], "framework.constant_op.constant": [], "tests.tridiagonal_solve_ops_test._tf_ones": ["ops.array_ops.ones"], "ops.array_ops.ones": [], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testTridiagonalSolverSolves1Rhs": ["<builtin>.range", "numpy.zeros", "numpy.random.normal", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.session", "numpy.random.seed", "ops.array_ops.placeholder", "xla_test.XLATestCase.assertAllClose", "linalg.linalg_impl.tridiagonal_solve"], "numpy.random.seed": [], "numpy.random.normal": [], "xla_test.XLATestCase.session": [], "xla_test.XLATestCase.test_scope": [], "ops.array_ops.placeholder": [], "linalg.linalg_impl.tridiagonal_solve": [], "numpy.zeros": [], "<builtin>.range": [], "xla_test.XLATestCase.assertAllClose": [], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testTridiagonalSolverSolvesKRhs": ["<builtin>.range", "numpy.zeros", "numpy.random.normal", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.session", "numpy.random.seed", "ops.array_ops.placeholder", "xla_test.XLATestCase.assertAllClose", "linalg.linalg_impl.tridiagonal_solve"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test": ["numpy.asarray", "tests.tridiagonal_solve_ops_test._tfconst", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.session", "xla_test.XLATestCase.assertAllClose", "linalg.linalg_impl.tridiagonal_solve"], "numpy.asarray": [], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._testWithDiagonalLists": ["tests.tridiagonal_solve_ops_test._tfconst", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.session", "xla_test.XLATestCase.assertAllClose", "linalg.linalg_impl.tridiagonal_solve"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testReal": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.test3x3": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.test2x2": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.test1x1": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.test0x0": ["numpy.zeros", "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.test2x2WithMultipleRhs": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.test1x1WithMultipleRhs": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "framework.test_util.disable_mlir_bridge": [], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest": ["framework.test_util.disable_mlir_bridge"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testPartialPivotingRaises": ["numpy.random.normal", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.session", "numpy.random.seed", "ops.array_ops.placeholder", "xla_test.XLATestCase.assertRaisesRegex", "linalg.linalg_impl.tridiagonal_solve"], "xla_test.XLATestCase.assertRaisesRegex": [], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testDiagonal": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testUpperTriangular": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testLowerTriangular": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testWithTwoRightHandSides": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test", "numpy.transpose"], "numpy.transpose": [], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testBatching": ["numpy.array", "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testWithTwoBatchingDimensions": ["numpy.array", "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testBatchingAndTwoRightHandSides": ["numpy.array", "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test", "numpy.transpose"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testSequenceFormat": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._testWithDiagonalLists"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testSequenceFormatWithDummyElements": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._testWithDiagonalLists"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testSequenceFormatWithBatching": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._testWithDiagonalLists"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testMatrixFormat": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testMatrixFormatWithMultipleRightHandSides": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testMatrixFormatWithBatching": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testRightHandSideAsColumn": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test", "numpy.transpose"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testTransposeRhs": ["numpy.array", "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testTransposeRhsWithRhsAsVector": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testTransposeRhsWithRhsAsVectorAndBatching": ["numpy.array", "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._test"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._gradientTest": ["ops.math_ops.reduce_sum", "tests.tridiagonal_solve_ops_test._tfconst", "ops.gradients.gradients", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.session", "xla_test.XLATestCase.assertAllClose", "numpy.array", "linalg.linalg_impl.tridiagonal_solve"], "ops.math_ops.reduce_sum": [], "ops.gradients.gradients": [], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testGradientSimple": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._gradientTest"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testGradientWithMultipleRhs": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._gradientTest"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._makeDataForGradientWithBatching": ["numpy.array"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testGradientWithBatchDims": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._makeDataForGradientWithBatching", "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._gradientTest"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._assertRaises": ["xla_test.XLATestCase.assertRaises", "linalg.linalg_impl.tridiagonal_solve"], "xla_test.XLATestCase.assertRaises": [], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testInvalidShapesCompactFormat": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testInvalidShapesCompactFormat.test_raises"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testInvalidShapesCompactFormat.test_raises": ["tests.tridiagonal_solve_ops_test._tf_ones", "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._assertRaises"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testInvalidShapesSequenceFormat": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testInvalidShapesSequenceFormat.test_raises"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testInvalidShapesSequenceFormat.test_raises": ["<builtin>.tuple", "tests.tridiagonal_solve_ops_test._tf_ones", "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._assertRaises"], "<builtin>.tuple": [], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testInvalidShapesMatrixFormat": ["tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testInvalidShapesMatrixFormat.test_raises"], "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest.testInvalidShapesMatrixFormat.test_raises": ["tests.tridiagonal_solve_ops_test._tf_ones", "tests.tridiagonal_solve_ops_test.TridiagonalSolveOpsTest._assertRaises"], "platform.test.main": []}