{"coordinator.cluster_coordinator_test": ["compat.v2_compat.enable_v2_behavior", "eager.test.main"], "coordinator.cluster_coordinator_test.ClosureWithOutput.__init__": ["cluster_coordinator.Closure.build_output_remote_value", "<builtin>.super"], "<builtin>.super": [], "cluster_coordinator.Closure.build_output_remote_value": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testBasic": ["test.TestCase.assertIs", "coordinator.cluster_coordinator._CoordinatedClosureQueue", "test.TestCase.assertTrue", "test.TestCase.assertEqual", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._create_closure", "test.TestCase.assertFalse"], "coordinator.cluster_coordinator._CoordinatedClosureQueue": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._create_closure": ["eager.def_function.function", "coordinator.cluster_coordinator_test.ClosureWithOutput.__init__"], "test.TestCase.assertIs": [], "test.TestCase.assertFalse": [], "test.TestCase.assertEqual": [], "test.TestCase.assertTrue": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testProcessAtLeaseOnce": ["coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testProcessAtLeaseOnce.get_func", "collections.Counter", "coordinator.cluster_coordinator_test.ClosureWithOutput.__init__", "coordinator.cluster_coordinator._CoordinatedClosureQueue", "training.coordinator.Coordinator", "threading.Thread", "eager.cancellation.CancellationManager", "test.TestCase.assertEqual", "collections.defaultdict"], "collections.defaultdict": [], "training.coordinator.Coordinator": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testProcessAtLeaseOnce.process_queue": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testProcessAtLeaseOnce.get_func": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testProcessAtLeaseOnce.get_func.func": ["time.sleep"], "time.sleep": [], "eager.cancellation.CancellationManager": [], "threading.Thread": [], "collections.Counter": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testNotifyBeforeWait": ["coordinator.cluster_coordinator._CoordinatedClosureQueue", "training.coordinator.Coordinator", "threading.Thread", "coordinator.cluster_coordinator_test.ClosureWithOutput.__init__"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testNotifyBeforeWait.func": ["platform.tf_logging.info"], "platform.tf_logging.info": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testNotifyBeforeWait.process_queue": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._assert_one_unblock_the_other": ["coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._test_cancel_closure_when_error.report_error", "test.TestCase.assertTrue", "threading.Event", "training.coordinator.Coordinator", "threading.Thread", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testWaitRaiseErrorAfterMarkFailure.wait_fn", "test.TestCase.assertFalse"], "threading.Event": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._assert_one_unblock_the_other.wrapped_first_fn": ["coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._test_cancel_closure_when_error.fake_cancellation", "test.TestCase.assertFalse", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testWaitRaiseErrorAfterMarkFailure.mark_finished_fn"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._test_cancel_closure_when_error.fake_cancellation": ["<builtin>.ValueError", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._set_error"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testWaitRaiseErrorAfterMarkFailure.mark_finished_fn": ["<builtin>.ValueError"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testWaitRaiseErrorAfterMarkFailure.wait_fn": ["test.TestCase.assertRaises"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._test_cancel_closure_when_error.report_error": ["test.TestCase.assertRaisesRegex"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testWaitRaiseErrorAfterMarkFailure": ["coordinator.cluster_coordinator._CoordinatedClosureQueue", "test.TestCase.assertTrue", "threading.Event", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._assert_one_unblock_the_other", "training.coordinator.Coordinator", "test.TestCase.skipTest", "platform.system", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._create_closure"], "platform.system": [], "test.TestCase.skipTest": [], "<builtin>.ValueError": [], "test.TestCase.assertRaises": [], "eager.def_function.function": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._create_closure.some_function": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._put_two_closures_and_get_one": ["coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._create_closure", "test.TestCase.assertIs", "coordinator.cluster_coordinator._CoordinatedClosureQueue", "test.TestCase.assertIsNot"], "test.TestCase.assertIsNot": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testPutRaiseError": ["<builtin>.ValueError", "test.TestCase.assertTrue", "test.TestCase.assertRaises", "test.TestCase.assertRaisesRegex", "test.TestCase.skipTest", "platform.system", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._create_closure", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._put_two_closures_and_get_one"], "test.TestCase.assertRaisesRegex": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testWaitRaiseError": ["<builtin>.ValueError", "test.TestCase.assertTrue", "test.TestCase.assertRaises", "test.TestCase.assertRaisesRegex", "test.TestCase.skipTest", "platform.system", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._put_two_closures_and_get_one"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testDoneRaiseError": ["<builtin>.ValueError", "test.TestCase.assertRaises", "test.TestCase.skipTest", "platform.system", "test.TestCase.assertFalse", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._put_two_closures_and_get_one"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._set_error": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._test_cancel_closure_when_error": ["<builtin>.ValueError", "test.TestCase.assertTrue", "test.TestCase.assertIsNone", "test.TestCase.assertRaisesRegex", "test.TestCase.assertEqual", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._assert_one_unblock_the_other", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._set_error", "test.TestCase.skipTest", "platform.system", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._create_closure", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testBasic", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._put_two_closures_and_get_one"], "test.TestCase.assertIsNone": [], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testWaitRaiseErrorAfterCancelClosure": ["coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._test_cancel_closure_when_error"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testPutRaiseErrorAfterCancelClosure": ["coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._test_cancel_closure_when_error"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testStateIsRestoredAfterJoinIsCalled": ["<builtin>.ValueError", "test.TestCase.assertIsNone", "test.TestCase.assertRaises", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._create_closure", "test.TestCase.skipTest", "platform.system", "test.TestCase.assertEqual", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._put_two_closures_and_get_one"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testThreadSafey": ["<builtin>.range", "coordinator.cluster_coordinator._CoordinatedClosureQueue", "test.TestCase.assertTrue", "threading.Thread", "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest._create_closure"], "coordinator.cluster_coordinator_test.CoordinatedClosureQueueTest.testThreadSafey.func": ["<builtin>.range"], "<builtin>.range": [], "coordinator.cluster_coordinator_test.ErrorReportingThread.__init__": ["<builtin>.super", "functools.wraps"], "functools.wraps": [], "coordinator.cluster_coordinator_test.ErrorReportingThread.__init__.wrapped_target": ["sys.exc_info", "traceback.print_exception"], "sys.exc_info": [], "traceback.print_exception": [], "coordinator.cluster_coordinator_test.TestCaseWithErrorReportingThread.setUpClass": ["<builtin>.super"], "coordinator.cluster_coordinator_test.TestCaseWithErrorReportingThread.tearDownClass": ["<builtin>.super"], "coordinator.cluster_coordinator_test.TestCaseWithErrorReportingThread.setUp": ["<builtin>.super"], "coordinator.cluster_coordinator_test.TestCaseWithErrorReportingThread.tearDown": ["<builtin>.super"], "coordinator.cluster_coordinator_test.make_coordinator": ["distribute.multi_worker_test_base.pick_unused_port", "training.server_lib.ClusterSpec", "distribute.multi_worker_test_base.create_in_process_cluster", "distribute.parameter_server_strategy_v2.ParameterServerStrategyV2", "distribute.cluster_resolver.SimpleClusterResolver", "coordinator.cluster_coordinator.ClusterCoordinator"], "distribute.multi_worker_test_base.create_in_process_cluster": [], "distribute.multi_worker_test_base.pick_unused_port": [], "training.server_lib.ClusterSpec": [], "distribute.cluster_resolver.SimpleClusterResolver": [], "distribute.parameter_server_strategy_v2.ParameterServerStrategyV2": [], "coordinator.cluster_coordinator.ClusterCoordinator": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.setUpClass": ["coordinator.cluster_coordinator_test.make_coordinator", "<builtin>.super"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testClusterCoordinatorOnlyInitOnce": ["test.TestCase.assertIs", "coordinator.cluster_coordinator.ClusterCoordinator"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testFnReturnNestedValues": ["test.TestCase.assertEqual", "framework.constant_op.constant"], "framework.constant_op.constant": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testFnReturnNestedValues.f": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testFetchingRemoteValueStructure": ["test.TestCase.assertAllEqual", "framework.constant_op.constant", "<builtin>.range"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testFetchingRemoteValueStructure.f": [], "test.TestCase.assertAllEqual": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testInputFunction": ["test.TestCase.assertEqual", "ops.variables.Variable", "<builtin>.iter", "test.TestCase.assertAlmostEqual"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testInputFunction.input_fn": ["dataset_ops.DatasetV2.range"], "dataset_ops.DatasetV2.range": [], "ops.variables.Variable": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testInputFunction.worker_fn": ["<builtin>.next"], "<builtin>.next": [], "<builtin>.iter": [], "test.TestCase.assertAlmostEqual": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testAsyncScheduleAndJoin": ["<builtin>.range", "framework.test_util.is_xla_enabled", "test.TestCase.assertTrue", "test.TestCase.skipTest", "test.TestCase.assertEqual", "ops.variables.Variable", "<builtin>.iter"], "framework.test_util.is_xla_enabled": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testAsyncScheduleAndJoin.input_fn": ["dataset_ops.DatasetV2.from_tensor_slices"], "dataset_ops.DatasetV2.from_tensor_slices": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testAsyncScheduleAndJoin.worker_fn": ["<builtin>.next"], "testing.parameterized.parameters": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest": ["testing.parameterized.parameters"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testInputFunctionWithMap": ["coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testInputFunctionWithMap.input_fn", "test.TestCase.assertEqual", "<builtin>.iter"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testInputFunctionWithMap.input_fn": ["dataset_ops.DatasetV2.range"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testInputFunctionWithMap.input_fn.map_fn": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testInputFunctionWithMap.worker_fn": ["<builtin>.next"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testInputFunctionCreateVariables": ["test.TestCase.assertRaises"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testInputFunctionCreateVariables.input_fn": ["ops.variables.Variable"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testDatasetsShuffledDifferently": ["<builtin>.len", "test.TestCase.assertNotAllEqual", "test.TestCase.assertGreaterEqual", "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testDatasetsShuffledDifferently.input_fn", "<builtin>.iter", "framework.random_seed.set_random_seed"], "<builtin>.len": [], "test.TestCase.assertGreaterEqual": [], "framework.random_seed.set_random_seed": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testDatasetsShuffledDifferently.input_fn": ["dataset_ops.DatasetV2.range"], "test.TestCase.assertNotAllEqual": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testPerWorkerValue": ["<builtin>.tuple", "<builtin>.range", "framework.tensor_spec.TensorSpec", "test.TestCase.skipTest", "test.TestCase.assertEqual", "<builtin>.sum"], "<builtin>.tuple": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testPerWorkerValue.create_var": ["test.TestCase.assertIn", "ops.variables.Variable"], "test.TestCase.assertIn": [], "framework.tensor_spec.TensorSpec": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testPerWorkerValue.worker_fn": [], "<builtin>.sum": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testDisallowRemoteValueAsInput": ["test.TestCase.assertRaises"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testDisallowRemoteValueAsInput.func_0": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testDisallowRemoteValueAsInput.func_1": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testPythonFunctionNotAllowedToSchedule": ["test.TestCase.assertRaisesRegexp"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testPythonFunctionNotAllowedToSchedule.func": ["ops.array_ops.identity"], "ops.array_ops.identity": [], "test.TestCase.assertRaisesRegexp": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testDatasetPartiallyCreatedOnCoordinator": ["dataset_ops.DatasetV2.range", "test.TestCase.assertRaisesRegexp", "<builtin>.iter"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testDatasetPartiallyCreatedOnCoordinator.input_fn": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testDatasetPartiallyCreatedOnCoordinator.worker_fn": ["<builtin>.next"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testPassDatasetToCreatePerWorkerDataset": ["test.TestCase.assertAllEqual", "dataset_ops.DatasetV2.range", "ops.math_ops.range", "<builtin>.iter"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testPassDatasetToCreatePerWorkerDataset.worker_fn": ["<builtin>.next"], "ops.math_ops.range": [], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testMultipleDatasets": ["test.TestCase.assertEqual", "test.TestCase.assertGreaterEqual", "<builtin>.iter"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testMultipleDatasets.input_fn1": ["dataset_ops.DatasetV2.range"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testMultipleDatasets.input_fn2": ["dataset_ops.DatasetV2.range"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testMultipleDatasets.worker_fn": ["<builtin>.next"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testRepeatedIteratorCreation": ["<builtin>.range", "test.TestCase.assertGreaterEqual", "gc.collect", "test.TestCase.assertIsNone", "<builtin>.iter"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testRepeatedIteratorCreation.input_fn": ["dataset_ops.DatasetV2.range"], "coordinator.cluster_coordinator_test.ClusterCoordinatorTest.testRepeatedIteratorCreation.worker_fn": ["<builtin>.next"], "gc.collect": [], "coordinator.cluster_coordinator_test.LimitedClosureQueueSizeBasicTest.setUpClass": ["coordinator.cluster_coordinator_test.make_coordinator", "<builtin>.super"], "coordinator.cluster_coordinator_test.ScheduleStartDelayTest.setUpClass": ["coordinator.cluster_coordinator_test.make_coordinator", "<builtin>.super"], "coordinator.cluster_coordinator_test.ScheduleStartDelayTest.tearDownClass": ["<builtin>.super"], "coordinator.cluster_coordinator_test.ErrorReportingTest.setUpClass": ["coordinator.cluster_coordinator_test.make_coordinator", "ops.variables.Variable", "<builtin>.super"], "coordinator.cluster_coordinator_test.ErrorReportingTest._normal_function": ["ops.random_ops.random_uniform", "ops.math_ops.reduce_mean", "ops.math_ops.matmul"], "ops.random_ops.random_uniform": [], "ops.math_ops.matmul": [], "ops.math_ops.reduce_mean": [], "coordinator.cluster_coordinator_test.ErrorReportingTest._error_function": ["ops.random_ops.random_uniform", "ops.math_ops.matmul", "ops.check_ops.assert_non_positive_v2", "ops.math_ops.reduce_sum"], "ops.math_ops.reduce_sum": [], "ops.check_ops.assert_non_positive_v2": [], "coordinator.cluster_coordinator_test.ErrorReportingTest._long_function": ["ops.random_ops.random_uniform", "ops.math_ops.range", "ops.math_ops.matmul"], "coordinator.cluster_coordinator_test.ErrorReportingTest.testJoinRaiseError": ["test.TestCase.assertRaises", "<builtin>.range"], "coordinator.cluster_coordinator_test.ErrorReportingTest.testScheduleRaiseError": ["test.TestCase.assertRaises", "<builtin>.range"], "coordinator.cluster_coordinator_test.ErrorReportingTest.testScheduleRaiseErrorWithMultipleFailure": ["test.TestCase.assertRaises", "<builtin>.range"], "coordinator.cluster_coordinator_test.ErrorReportingTest.testErrorWillbeCleared": ["test.TestCase.assertRaises", "<builtin>.range"], "coordinator.cluster_coordinator_test.ErrorReportingTest.testRemoteValueReturnError": ["test.TestCase.assertRaises"], "coordinator.cluster_coordinator_test.ErrorReportingTest.testInputError": ["test.TestCase.assertRaises"], "coordinator.cluster_coordinator_test.ErrorReportingTest.testInputError.func": [], "coordinator.cluster_coordinator_test.ErrorReportingTest.testCancellation": ["test.TestCase.assertRaises", "<builtin>.range"], "coordinator.cluster_coordinator_test.LimitedClosureQueueErrorTest.setUpClass": ["coordinator.cluster_coordinator_test.make_coordinator", "ops.variables.Variable", "<builtin>.super"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.setUpClass": ["coordinator.cluster_coordinator_test.make_coordinator", "<builtin>.super"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunNotUsedWithClusterCoordinatorSchedule": ["<builtin>.tuple", "<builtin>.range", "contextlib.contextmanager", "test.TestCase.assertAllEqual", "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunNotUsedWithClusterCoordinatorSchedule._assert_logs_usage_warning", "ops.variables.Variable", "<builtin>.iter", "framework.constant_op.constant"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunNotUsedWithClusterCoordinatorSchedule.input_fn": ["dataset_ops.DatasetV2.range"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunNotUsedWithClusterCoordinatorSchedule.replica_fn": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunNotUsedWithClusterCoordinatorSchedule.worker_fn": ["<builtin>.next"], "contextlib.contextmanager": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunNotUsedWithClusterCoordinatorSchedule._assert_logs_usage_warning": ["test.TestCase.assertLogs", "test.TestCase.assertIn"], "test.TestCase.assertLogs": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testBasicVariableAssignment": ["test.TestCase.assertEqual", "ops.variables.Variable", "platform.tf_logging.info", "test.TestCase.assertAlmostEqual"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testBasicVariableAssignment.worker_fn": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunAndReduce": ["test.TestCase.assertTrue", "test.TestCase.assertIsInstance", "distribute.distribution_strategy_context.in_cross_replica_context", "test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.assertFalse", "framework.constant_op.constant"], "distribute.distribution_strategy_context.in_cross_replica_context": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunAndReduce.worker_fn": ["ops.check_ops.assert_equal_v2"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunAndReduce.worker_fn.replica_fn": ["test.TestCase.assertFalse", "distribute.distribution_strategy_context.in_cross_replica_context"], "ops.check_ops.assert_equal_v2": [], "test.TestCase.assertIsInstance": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunAndReduceWithAssignAdd": ["test.TestCase.assertTrue", "test.TestCase.assertIsInstance", "distribute.distribution_strategy_context.in_cross_replica_context", "test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.assertFalse", "framework.constant_op.constant"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunAndReduceWithAssignAdd.worker_fn": ["ops.check_ops.assert_equal_v2"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testRunAndReduceWithAssignAdd.worker_fn.replica_fn": ["test.TestCase.assertFalse", "distribute.distribution_strategy_context.in_cross_replica_context"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testVariableAggregation": ["<builtin>.range", "test.TestCase.assertTrue", "distribute.distribution_strategy_context.in_cross_replica_context", "test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.assertFalse"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testVariableAggregation.worker_fn": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testVariableAggregation.worker_fn.replica_fn": ["ops.math_ops.cast", "distribute.distribution_strategy_context.get_replica_context"], "distribute.distribution_strategy_context.get_replica_context": [], "ops.math_ops.cast": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testVariableCaching": ["test.TestCase.assertTrue", "test.TestCase.assertRaises", "distribute.distribution_strategy_context.in_cross_replica_context", "test.TestCase.assertEqual", "distribute.distribute_utils.cache_variable_reads", "ops.variables.Variable", "test.TestCase.assertFalse", "framework.constant_op.constant"], "distribute.distribute_utils.cache_variable_reads": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testVariableCaching.worker_fn": ["distribute.distribute_utils.cache_variable_reads"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testVariableCaching.worker_fn.replica_fn": ["framework.constant_op.constant"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testVariableCaching.worker_fn1": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testVariableCaching.worker_fn1.replica_fn": ["framework.constant_op.constant"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest": ["testing.parameterized.parameters"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testDistributedDatasetInsidePerWorkerDatasetFn": ["test.TestCase.assertAllEqual", "ops.math_ops.range", "<builtin>.iter", "ops.array_ops.split"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testDistributedDatasetInsidePerWorkerDatasetFn.per_worker_dataset_fn": ["dataset_ops.DatasetV2.range"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testDistributedDatasetInsidePerWorkerDatasetFn.per_worker_dataset_fn.<lambda1>": ["dataset_ops.DatasetV2.range"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testDistributedDatasetInsidePerWorkerDatasetFn.worker_fn": ["<builtin>.next"], "ops.array_ops.split": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testPassDistributedDatasetToCreatePerWorkerDataset": ["test.TestCase.assertAllEqual", "ops.math_ops.range", "dataset_ops.DatasetV2.range", "<builtin>.iter", "ops.array_ops.split"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testPassDistributedDatasetToCreatePerWorkerDataset.<lambda1>": ["dataset_ops.DatasetV2.range"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testPassDistributedDatasetToCreatePerWorkerDataset.worker_fn": ["<builtin>.next"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testDistributeDatasetsFromFunction": ["test.TestCase.assertAllEqual", "<builtin>.iter", "<builtin>.range"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testDistributeDatasetsFromFunction.per_worker_dataset_fn": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testDistributeDatasetsFromFunction.per_worker_dataset_fn.input_worker_device_fn": ["dataset_ops.DatasetV2.range", "test.TestCase.assertIsNotNone"], "test.TestCase.assertIsNotNone": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testDistributeDatasetsFromFunction.worker_fn": ["<builtin>.next"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testAsyncScheduleWithDistributedDataset": ["<builtin>.range", "test.TestCase.assertTrue", "test.TestCase.assertAllEqual", "ops.variables.Variable", "<builtin>.iter"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testAsyncScheduleWithDistributedDataset.input_fn": ["dataset_ops.DatasetV2.from_tensor_slices"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testAsyncScheduleWithDistributedDataset.worker_fn": ["<builtin>.next"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testInputFunctionWithMapWithDistributedDataset": ["<builtin>.tuple", "test.TestCase.assertAllEqual", "ops.math_ops.range", "test.TestCase.assertEqual", "<builtin>.iter", "ops.array_ops.split"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testInputFunctionWithMapWithDistributedDataset.input_fn": ["dataset_ops.DatasetV2.range"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testInputFunctionWithMapWithDistributedDataset.input_fn.map_fn": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testInputFunctionWithMapWithDistributedDataset.worker_fn": ["<builtin>.next"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testPerWorkerDistributeDatasetsElementSpec": ["test.TestCase.assertAllEqual", "dataset_ops.DatasetV2.from_tensor_slices", "distribute.input_lib._create_distributed_tensor_spec"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testPerWorkerDistributeDatasetsElementSpec.per_worker_dataset_fn": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testPerWorkerDistributeDatasetsElementSpec.per_worker_dataset_fn.<lambda1>": ["dataset_ops.DatasetV2.from_tensor_slices"], "distribute.input_lib._create_distributed_tensor_spec": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testPerWorkerDistributedIteratorTypeSpec": ["test.TestCase.assertEqual", "<builtin>.iter"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testPerWorkerDistributedIteratorTypeSpec.per_worker_dataset_fn": [], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testPerWorkerDistributedIteratorTypeSpec.per_worker_dataset_fn.<lambda1>": ["dataset_ops.DatasetV2.range"], "coordinator.cluster_coordinator_test.StrategyIntegrationTest.testPerWorkerDistributedIteratorTypeSpec.worker_fn": ["<builtin>.next"], "compat.v2_compat.enable_v2_behavior": [], "eager.test.main": []}