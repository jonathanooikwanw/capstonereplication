{"preprocessing.sequence_test": ["platform.test.main"], "preprocessing.sequence_test.TestSequence.test_pad_sequences": ["test.TestCase.assertAllClose", "preprocessing.sequence.pad_sequences"], "preprocessing.sequence.pad_sequences": [], "test.TestCase.assertAllClose": [], "preprocessing.sequence_test.TestSequence.test_pad_sequences_vector": ["test.TestCase.assertAllClose", "preprocessing.sequence.pad_sequences"], "preprocessing.sequence_test.TestSequence.test_make_sampling_table": ["test.TestCase.assertAllClose", "preprocessing.sequence.make_sampling_table", "numpy.asarray"], "preprocessing.sequence.make_sampling_table": [], "numpy.asarray": [], "preprocessing.sequence_test.TestSequence.test_skipgrams": ["test.TestCase.assertLessEqual", "test.TestCase.assertEqual", "numpy.arange", "preprocessing.sequence.skipgrams", "<builtin>.len", "test.TestCase.assertIn"], "numpy.arange": [], "preprocessing.sequence.skipgrams": [], "test.TestCase.assertIn": [], "test.TestCase.assertLessEqual": [], "<builtin>.len": [], "test.TestCase.assertEqual": [], "preprocessing.sequence_test.TestSequence.test_remove_long_seq": ["test.TestCase.assertEqual", "preprocessing.sequence._remove_long_seq"], "preprocessing.sequence._remove_long_seq": [], "preprocessing.sequence_test.TestSequence.test_TimeseriesGenerator": ["preprocessing.sequence.TimeseriesGenerator", "test.TestCase.assertEqual", "numpy.random.random_sample", "<builtin>.range", "numpy.array", "<builtin>.len", "test.TestCase.assertAllClose", "<builtin>.str", "test.TestCase.assertIn", "test.TestCase.assertRaises"], "<builtin>.range": [], "numpy.array": [], "preprocessing.sequence.TimeseriesGenerator": [], "numpy.random.random_sample": [], "test.TestCase.assertRaises": [], "<builtin>.str": [], "preprocessing.sequence_test.TestSequence.test_TimeSeriesGenerator_doesnt_miss_any_sample": ["preprocessing.sequence.TimeseriesGenerator", "test.TestCase.assertEqual", "numpy.concatenate", "numpy.arange", "math.ceil", "<builtin>.float", "<builtin>.range", "numpy.array", "<builtin>.len", "test.TestCase.assertAllClose", "<builtin>.sum", "<builtin>.zip", "<builtin>.max"], "<builtin>.max": [], "numpy.concatenate": [], "<builtin>.zip": [], "<builtin>.float": [], "math.ceil": [], "<builtin>.sum": [], "platform.test.main": []}