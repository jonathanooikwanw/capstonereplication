{"python.lite_test": ["platform.test.main"], "python.lite_test.TestModels.assertValidDebugInfo": ["<builtin>.set", "os.path.basename", "test_util.TensorFlowTestCase.assertIn", "test_util.TensorFlowTestCase.assertNotIn"], "<builtin>.set": [], "os.path.basename": [], "test_util.TensorFlowTestCase.assertIn": [], "test_util.TensorFlowTestCase.assertNotIn": [], "python.lite_test.FromConstructor.testInvalidConstructor": ["test_util.TensorFlowTestCase.assertEqual", "python.lite.TFLiteConverter", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises"], "test_util.TensorFlowTestCase.assertRaises": [], "python.lite.TFLiteConverter": [], "<builtin>.str": [], "test_util.TensorFlowTestCase.assertEqual": [], "python.lite_test.FromConstructor.testValidConstructor": ["python.lite.TFLiteConverter", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertFalse", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertTrue"], "test_util.TensorFlowTestCase.assertFalse": [], "test_util.TensorFlowTestCase.assertTrue": [], "python.lite_test.FromConstructor.testRedundantArgumentsWarning": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "python.lite.TFLiteConverter", "test_util.TensorFlowTestCase.assertIn", "framework.ops.Graph", "ops.array_ops.placeholder", "logging.StreamHandler", "ops.math_ops.add", "io.StringIO", "framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "io.BytesIO", "logging.root.addHandler", "logging.root.removeHandler"], "framework.ops.Graph": [], "ops.array_ops.placeholder": [], "ops.math_ops.add": [], "client.session.Session": [], "framework.convert_to_constants.convert_variables_to_constants_from_session_graph": [], "io.BytesIO": [], "io.StringIO": [], "logging.StreamHandler": [], "logging.root.addHandler": [], "test_util.TensorFlowTestCase.assertIsNotNone": [], "logging.root.removeHandler": [], "python.lite_test.FromConstructor.testShapeOverriding": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "python.lite.TFLiteConverter", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.math_ops.add", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "python.interpreter.Interpreter"], "python.interpreter.Interpreter": [], "test_util.TensorFlowTestCase.assertLen": [], "test_util.TensorFlowTestCase.assertAllEqual": [], "python.lite_test.FromConstructor.testPartialShapeOverriding": ["client.session.Session", "python.lite.TFLiteConverter", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.math_ops.add", "framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "test_util.TensorFlowTestCase.assertRaises"], "python.lite_test.FromConstructor.testInvalidShapeOverriding": ["client.session.Session", "python.lite.TFLiteConverter", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.math_ops.add", "framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "test_util.TensorFlowTestCase.assertRaises"], "python.lite_test.FromSessionTest.testFloatModel": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "lite.TFLiteConverter.from_session": [], "python.lite_test.FromSessionTest.testFloatModelQuantizedInput": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testForgottenCallToAllocateTensors": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "numpy.ones", "framework.ops.Graph", "ops.array_ops.placeholder", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session"], "numpy.ones": [], "testing.parameterized.named_parameters": [], "python.lite_test.FromSessionTest": ["testing.parameterized.named_parameters", "framework.test_util.run_in_graph_and_eager_modes"], "python.lite_test.FromSessionTest.testIntegerQuantizationWithUnsupportedOps": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "ops.math_ops.ceil", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.math_ops.add", "ops.math_ops.tanh", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "ops.math_ops.ceil": [], "ops.math_ops.tanh": [], "python.lite_test.FromSessionTest.testIntegerQuantizationWithUnsupportedOps.calibration_gen": ["numpy.random.uniform", "six.moves.range"], "six.moves.range": [], "numpy.random.uniform": [], "python.lite_test.FromSessionTest.testDisablePerChannelQuantization": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "<builtin>.next", "python.lite_test.FromSessionTest._getIntegerQuantizeModel", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest._getIntegerQuantizeModel": ["ops.nn_ops.conv2d", "ops.array_ops.placeholder", "ops.nn_ops.relu", "numpy.random.seed", "ops.array_ops.ones"], "<builtin>.next": [], "python.lite_test.FromSessionTest.testString": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.array_ops.reshape", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "ops.array_ops.reshape": [], "python.lite_test.FromSessionTest.testIntermediateInputArray": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testSizeNoneInvalid": ["client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testScalarValid": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEmpty", "python.interpreter.Interpreter", "numpy.array", "lite.TFLiteConverter.from_session"], "test_util.TensorFlowTestCase.assertEmpty": [], "numpy.array": [], "python.lite_test.FromSessionTest.testSizeInvalid": ["client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testSizeNone": ["client.session.Session", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertIn", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testResizeTensorInputStrict": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertIn", "framework.ops.Graph", "ops.array_ops.placeholder", "python.interpreter.Interpreter", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testBatchSizeValid": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testBatchSizeNonZero": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session", "ops.math_ops.matmul"], "ops.math_ops.matmul": [], "python.lite_test.FromSessionTest.testFreezeGraph": ["ops.nn_ops.top_k", "ops.variable_scope.get_variable", "client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session", "ops.variables.global_variables_initializer"], "ops.variable_scope.get_variable": [], "ops.nn_ops.top_k": [], "ops.variables.global_variables_initializer": [], "python.lite_test.FromSessionTest.testGraphviz": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "framework.ops.Graph", "ops.array_ops.placeholder", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testDumpGraphviz": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "<builtin>.len", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertGreater", "os.listdir", "os.path.exists", "test_util.TensorFlowTestCase.get_temp_dir", "python.interpreter.Interpreter", "os.path.join", "lite.TFLiteConverter.from_session"], "test_util.TensorFlowTestCase.get_temp_dir": [], "os.listdir": [], "<builtin>.len": [], "os.path.join": [], "os.path.exists": [], "test_util.TensorFlowTestCase.assertGreater": [], "python.lite_test.FromSessionTest.testDumpConversionSummary": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertNotEmpty", "os.listdir", "test_util.TensorFlowTestCase.get_temp_dir", "lite.TFLiteConverter.from_session"], "test_util.TensorFlowTestCase.assertNotEmpty": [], "python.lite_test.FromSessionTest.testDumpConversionSummaryWithOldConverter": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "<builtin>.len", "framework.ops.Graph", "ops.array_ops.placeholder", "os.listdir", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.get_temp_dir", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testQuantizeDynamicRange": ["numpy.random.uniform", "client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "<builtin>.len", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertLess", "framework.constant_op.constant", "lite.TFLiteConverter.from_session", "ops.math_ops.matmul", "numpy.random.seed"], "numpy.random.seed": [], "framework.constant_op.constant": [], "test_util.TensorFlowTestCase.assertLess": [], "python.lite_test.FromSessionTest.testQuantizeDynamicRangeDeprecatedPostTrainingQuantizeAttribute": ["numpy.random.uniform", "client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertFalse", "lite.TFLiteConverter.from_session", "ops.math_ops.matmul", "test_util.TensorFlowTestCase.assertTrue"], "ops.array_ops.ones": [], "ops.nn_ops.conv2d": [], "ops.nn_ops.relu": [], "python.lite_test.FromSessionTest._getIntegerQuantizeModel.calibration_gen": ["numpy.random.uniform", "six.moves.range"], "python.lite_test.FromSessionTest.testQuantizeInt8AllowFloat": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "<builtin>.len", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertLess", "test_util.TensorFlowTestCase.assertEqual", "python.lite_test.FromSessionTest._getIntegerQuantizeModel", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testQuantizeInt8And16x8": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "<builtin>.len", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertLess", "test_util.TensorFlowTestCase.assertEqual", "python.lite_test.FromSessionTest._getIntegerQuantizeModel", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testQuantizeInt8InputOutput": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "<builtin>.len", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertLess", "test_util.TensorFlowTestCase.assertEqual", "python.lite_test.FromSessionTest._getIntegerQuantizeModel", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testInvalidQuantizeInt8": ["numpy.random.uniform", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual", "framework.constant_op.constant", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertRaises", "<builtin>.str", "ops.math_ops.matmul", "numpy.random.seed"], "python.lite_test.FromSessionTest.testQuantizeUInt8": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertGreater", "ops.array_ops.fake_quant_with_min_max_args", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "ops.array_ops.fake_quant_with_min_max_args": [], "python.lite_test.FromSessionTest.testQuantizeUInt8UsingDefaultRangeStats": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertGreater", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testQuantizeFloat16": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "<builtin>.ValueError", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertEqual", "python.lite_test.FromSessionTest._getIntegerQuantizeModel", "python.interpreter.Interpreter", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session"], "<builtin>.ValueError": [], "python.lite_test.FromSessionTest.testInvalidQuantizeFloat16": ["client.session.Session", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertEqual", "python.lite_test.FromSessionTest._getIntegerQuantizeModel", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testInvalidQuantizeQATModelRequiresInputStats": ["client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.array_ops.fake_quant_with_min_max_args", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testInvalidQuantizeQATModelMissingInputStats": ["client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.array_ops.fake_quant_with_min_max_args", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testTrainingTimeAndPostTrainingCalibrateAndQuantize": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "<builtin>.len", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertLess", "test_util.TensorFlowTestCase.assertEqual", "python.lite_test.FromSessionTest._getIntegerQuantizeModel", "python.interpreter.Interpreter", "python.convert.mlir_quantize", "lite.TFLiteConverter.from_session"], "python.convert.mlir_quantize": [], "python.lite_test.FromSessionTest.testFloatTocoConverter": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "framework.ops.Graph", "ops.array_ops.placeholder", "lite.TocoConverter.from_session", "python.interpreter.Interpreter"], "lite.TocoConverter.from_session": [], "python.lite_test.FromSessionTest.testMultipleOutputNodeNames": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "numpy.asarray", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session", "ops.array_ops.split"], "ops.array_ops.split": [], "numpy.asarray": [], "framework.test_util.run_in_graph_and_eager_modes": [], "python.lite_test.FromSessionTest.testFunctions": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "ops.variables.variables_initializer", "test_util.TensorFlowTestCase.assertLen", "python.lite_test.FromSessionTest.testFunctions.plus_placeholder", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.variables.Variable", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertAllEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session", "ops.math_ops.multiply"], "python.lite_test.FromSessionTest.testFunctions.plus_placeholder": [], "ops.variables.Variable": [], "ops.math_ops.multiply": [], "ops.variables.variables_initializer": [], "python.lite_test.FromSessionTest.testInferenceInputOutputTypeFloatDefault": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testInferenceInputOutputTypeQuantizedUint8Default": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.array_ops.fake_quant_with_min_max_args", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testReusingConverterWithDifferentPostTrainingQuantization": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.array_ops.fake_quant_with_min_max_args", "lite.TFLiteConverter.from_session"], "python.lite_test.FromSessionTest.testResizeWithShape": ["client.session.Session", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.array_ops.reshape", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session", "ops.array_ops.shape"], "ops.array_ops.shape": [], "python.lite_test.FromSessionTest.testResizingIntermediateDynamicTensor": ["client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.math_ops.negative", "ops.array_ops.pad", "python.interpreter.Interpreter", "numpy.array", "lite.TFLiteConverter.from_session"], "ops.math_ops.negative": [], "ops.array_ops.pad": [], "python.lite_test.FromSessionTest.testGraphDebugInfo": ["client.session.Session", "ops.variables.variables_initializer", "six.ensure_str", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIn", "python.lite_test.FromSessionTest.testGraphDebugInfo.plus_placeholder", "python.lite_test.TestModels.assertValidDebugInfo", "ops.variables.Variable", "lite.TFLiteConverter.from_session", "ops.math_ops.multiply"], "python.lite_test.FromSessionTest.testGraphDebugInfo.plus_placeholder": [], "six.ensure_str": [], "python.lite_test.FromSessionTest.testOutputOnlyModel": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "ops.random_ops.random_normal", "framework.ops.Graph", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertTrue"], "ops.random_ops.random_normal": [], "python.lite_test.FromFrozenGraphFile.testFloat": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_frozen_graph", "training.training_util.write_graph"], "training.training_util.write_graph": [], "lite.TFLiteConverter.from_frozen_graph": [], "python.lite_test.FromFrozenGraphFile.testFloatWithShapesArray": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_frozen_graph", "training.training_util.write_graph"], "python.lite_test.FromFrozenGraphFile.testInvalidShapesArray": ["client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_frozen_graph", "training.training_util.write_graph"], "python.lite_test.FromFrozenGraphFile.testPartialShapesArray": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.math_ops.add", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_frozen_graph", "training.training_util.write_graph"], "python.lite_test.FromFrozenGraphFile.testFreezeGraph": ["client.session.Session", "ops.variable_scope.get_variable", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "test_util.TensorFlowTestCase.assertRaises", "<builtin>.str", "lite.TFLiteConverter.from_frozen_graph", "training.training_util.write_graph"], "python.lite_test.FromFrozenGraphFile.testPbtxt": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_frozen_graph", "training.training_util.write_graph"], "python.lite_test.FromFrozenGraphFile.testInvalidFileNotFound": ["test_util.TensorFlowTestCase.assertEqual", "lite.TFLiteConverter.from_frozen_graph", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises"], "python.lite_test.FromFrozenGraphFile.testInvalidFileBadData": ["platform.gfile.Open", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "test_util.TensorFlowTestCase.assertRaises", "<builtin>.str", "lite.TFLiteConverter.from_frozen_graph"], "platform.gfile.Open": [], "python.lite_test.FromFrozenGraphFile.testFloatTocoConverter": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "framework.ops.Graph", "ops.array_ops.placeholder", "lite.TocoConverter.from_frozen_graph", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "python.interpreter.Interpreter", "training.training_util.write_graph"], "lite.TocoConverter.from_frozen_graph": [], "python.lite_test.FromFrozenGraphFile.testGraphDebugInfo": ["client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "lite.TocoConverter.from_frozen_graph", "test_util.TensorFlowTestCase.assertFalse", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "training.training_util.write_graph"], "python.lite_test.FromFrozenGraphObjectDetection._initObjectDetectionArgs": ["platform.resource_loader.get_root_dir_with_all_resources", "<builtin>.IOError", "os.path.exists", "os.path.join", "platform.resource_loader.get_path_to_datafile"], "platform.resource_loader.get_path_to_datafile": [], "platform.resource_loader.get_root_dir_with_all_resources": [], "<builtin>.IOError": [], "python.lite_test.FromFrozenGraphObjectDetection.testTFLiteGraphDef": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "python.lite_test.FromFrozenGraphObjectDetection._initObjectDetectionArgs", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_frozen_graph"], "python.lite_test.FromFrozenGraphObjectDetection.testTFLiteGraphDefWithControlOutput": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "python.lite.TFLiteConverter", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "ops.logging_ops.print_v2", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "python.util._convert_model_from_bytearray_to_object"], "ops.logging_ops.print_v2": [], "python.util._convert_model_from_bytearray_to_object": [], "python.lite_test.FromFrozenGraphObjectDetection.testModifyIOToUint8": ["test_util.TensorFlowTestCase.assertIsNotNone", "python.lite_test.FromFrozenGraphObjectDetection._initObjectDetectionArgs", "python.util._convert_tflite_enum_type_to_tf_type", "python.util.get_quantize_opcode_idx", "test_util.TensorFlowTestCase.assertEqual", "python.util._convert_model_from_bytearray_to_object", "lite.TFLiteConverter.from_frozen_graph"], "python.lite_test.FromFrozenGraphObjectDetection.testModifyIOToUint8.representative_dataset_gen": ["numpy.random.uniform", "six.moves.range"], "python.util.get_quantize_opcode_idx": [], "python.util._convert_tflite_enum_type_to_tf_type": [], "python.lite_test.FromSavedModelTest._createSavedModel": ["client.session.Session", "ops.array_ops.placeholder", "framework.ops.Graph", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "saved_model.saved_model.simple_save"], "saved_model.saved_model.simple_save": [], "python.lite_test.FromSavedModelTest.testSimpleModel": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_saved_model", "test_util.TensorFlowTestCase.assertStartsWith", "test_util.TensorFlowTestCase.assertAllEqual", "python.lite_test.FromSavedModelTest._createSavedModel", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter"], "lite.TFLiteConverter.from_saved_model": [], "test_util.TensorFlowTestCase.assertStartsWith": [], "python.lite_test.FromSavedModelTest.testOldConverterWarning": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertIn", "lite.TFLiteConverter.from_saved_model", "logging.StreamHandler", "io.StringIO", "python.lite_test.FromSavedModelTest._createSavedModel", "io.BytesIO", "logging.root.addHandler", "logging.root.removeHandler"], "python.lite_test.FromSavedModelTest.testNewConverterOptOut": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertIn", "lite.TFLiteConverter.from_saved_model", "logging.StreamHandler", "io.StringIO", "python.lite_test.FromSavedModelTest._createSavedModel", "io.BytesIO", "logging.root.addHandler", "logging.root.removeHandler"], "python.lite_test.FromSavedModelTest.testNoneBatchSize": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_saved_model", "test_util.TensorFlowTestCase.assertStartsWith", "test_util.TensorFlowTestCase.assertAllEqual", "python.lite_test.FromSavedModelTest._createSavedModel", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter"], "python.lite_test.FromSavedModelTest.testOrderInputArrays": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_saved_model", "test_util.TensorFlowTestCase.assertStartsWith", "test_util.TensorFlowTestCase.assertAllEqual", "python.lite_test.FromSavedModelTest._createSavedModel", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter"], "python.lite_test.FromSavedModelTest.testShapeOverriding": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_saved_model", "test_util.TensorFlowTestCase.assertStartsWith", "test_util.TensorFlowTestCase.assertAllEqual", "python.lite_test.FromSavedModelTest._createSavedModel", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter"], "python.lite_test.FromSavedModelTest.testWrongInputShapes": ["python.lite_test.FromSavedModelTest._createSavedModel", "lite.TFLiteConverter.from_saved_model", "test_util.TensorFlowTestCase.assertRaises"], "python.lite_test.FromSavedModelTest.testSubsetInputShaapes": ["python.lite_test.FromSavedModelTest._createSavedModel", "lite.TFLiteConverter.from_saved_model", "test_util.TensorFlowTestCase.assertRaises"], "python.lite_test.FromSavedModelTest.testSimpleModelTocoConverter": ["python.lite_test.FromSavedModelTest._createSavedModel", "lite.TocoConverter.from_saved_model", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertIsNotNone"], "lite.TocoConverter.from_saved_model": [], "python.lite_test.FromSavedModelTest.testGraphDebugInfo": ["python.lite_test.TestModels.assertValidDebugInfo", "python.lite_test.FromSavedModelTest._createSavedModel", "lite.TFLiteConverter.from_saved_model"], "python.lite_test.MyAddLayer.__init__": ["<builtin>.super"], "<builtin>.super": [], "python.lite_test.MyAddLayer.call": [], "python.lite_test.MyAddLayer.get_config": ["<builtin>.super"], "python.lite_test.FromKerasFile.setUp": ["keras.backend.clear_session", "<builtin>.super", "eager.context.executing_eagerly"], "eager.context.executing_eagerly": [], "keras.backend.clear_session": [], "python.lite_test.FromKerasFile.tearDown": ["<builtin>.super", "os.remove"], "os.remove": [], "python.lite_test.FromKerasFile._getSequentialModel": ["keras.layers.RepeatVector", "tempfile.mkstemp", "numpy.random.random", "keras.layers.TimeDistributed", "python.lite_test.MyAddLayer.__init__", "os.close", "keras.models.save_model", "keras.models.Sequential", "keras.layers.Dense"], "keras.models.Sequential": [], "keras.layers.Dense": [], "keras.layers.RepeatVector": [], "keras.layers.TimeDistributed": [], "numpy.random.random": [], "tempfile.mkstemp": [], "keras.models.save_model": [], "os.close": [], "python.lite_test.FromKerasFile": ["testing.parameterized.named_parameters"], "python.lite_test.FromKerasFile.testSequentialModel": ["test_util.TensorFlowTestCase.assertIsNotNone", "python.lite_test.FromKerasFile._getSequentialModel", "test_util.TensorFlowTestCase.assertLen", "numpy.testing.assert_almost_equal", "lite.TFLiteConverter.from_keras_model_file", "keras.models.load_model", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "numpy.array"], "lite.TFLiteConverter.from_keras_model_file": [], "test_util.TensorFlowTestCase.assertEndsWith": [], "keras.models.load_model": [], "numpy.testing.assert_almost_equal": [], "python.lite_test.FromKerasFile.testCustomLayer": ["test_util.TensorFlowTestCase.assertIsNotNone", "python.lite_test.FromKerasFile._getSequentialModel", "numpy.testing.assert_almost_equal", "lite.TFLiteConverter.from_keras_model_file", "keras.models.load_model", "python.interpreter.Interpreter", "numpy.array"], "python.lite_test.FromKerasFile.testSequentialModelInputArray": ["test_util.TensorFlowTestCase.assertIsNotNone", "python.lite_test.FromKerasFile._getSequentialModel", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "framework.ops.disable_eager_execution"], "framework.ops.disable_eager_execution": [], "python.lite_test.FromKerasFile.testSequentialModelInputShape": ["test_util.TensorFlowTestCase.assertIsNotNone", "python.lite_test.FromKerasFile._getSequentialModel", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises"], "python.lite_test.FromKerasFile.testSequentialModelOutputArray": ["test_util.TensorFlowTestCase.assertIsNotNone", "python.lite_test.FromKerasFile._getSequentialModel", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "framework.ops.disable_eager_execution"], "python.lite_test.FromKerasFile.testFunctionalModel": ["tempfile.mkstemp", "test_util.TensorFlowTestCase.assertIsNotNone", "numpy.random.random", "test_util.TensorFlowTestCase.assertLen", "numpy.testing.assert_almost_equal", "os.close", "lite.TFLiteConverter.from_keras_model_file", "keras.models.load_model", "keras.models.Model", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "keras.layers.Input", "python.interpreter.Interpreter", "keras.models.save_model", "keras.layers.Dense"], "keras.layers.Input": [], "keras.models.Model": [], "python.lite_test.FromKerasFile._getFunctionalModelMultipleInputs": ["tempfile.mkstemp", "numpy.random.random", "os.close", "keras.models.Model", "keras.layers.Dropout", "keras.layers.Input", "keras.models.save_model", "keras.layers.Dense"], "keras.layers.Dropout": [], "python.lite_test.FromKerasFile.testFunctionalModelMultipleInputs": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "python.lite_test.FromKerasFile._getFunctionalModelMultipleInputs"], "python.lite_test.FromKerasFile.testShapeOverriding": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "python.lite_test.FromKerasFile._getFunctionalModelMultipleInputs"], "python.lite_test.FromKerasFile.testPartialShapeOverriding": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "python.lite_test.FromKerasFile._getFunctionalModelMultipleInputs"], "python.lite_test.FromKerasFile.testWrongShapeOverriding": ["python.lite_test.FromKerasFile._getFunctionalModelMultipleInputs", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertRaises"], "python.lite_test.FromKerasFile.testFunctionalSequentialModel": ["tempfile.mkstemp", "numpy.random.random", "os.close", "keras.models.Model", "test_util.TensorFlowTestCase.assertLen", "numpy.testing.assert_almost_equal", "keras.models.load_model", "test_util.TensorFlowTestCase.assertEqual", "numpy.array", "keras.models.save_model", "keras.layers.Dense", "keras.layers.TimeDistributed", "python.interpreter.Interpreter", "keras.models.Sequential", "keras.layers.RepeatVector", "test_util.TensorFlowTestCase.assertIsNotNone", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertAllEqual"], "python.lite_test.FromKerasFile.testSequentialModelTocoConverter": ["test_util.TensorFlowTestCase.assertIsNotNone", "lite.TocoConverter.from_keras_model_file", "python.lite_test.FromKerasFile._getSequentialModel", "python.interpreter.Interpreter"], "lite.TocoConverter.from_keras_model_file": [], "python.lite_test.FromKerasFile.testGraphDebugInfo": ["python.lite_test.TestModels.assertValidDebugInfo", "lite.TFLiteConverter.from_keras_model_file", "python.lite_test.FromKerasFile._getSequentialModel"], "python.lite_test.FromKerasFile.testSparsifyModel": ["lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertTrue", "python.lite_test.FromKerasFile._getSequentialModel"], "python.lite_test.FromKerasFile.testSparsifyQuantizedModel": ["lite.TFLiteConverter.from_keras_model_file", "python.lite_test.FromKerasFile._getSequentialModel", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.GrapplerTest.testConstantFolding": ["client.session.Session", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "framework.constant_op.constant", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session", "ops.math_ops.matmul", "ops.gen_array_ops.broadcast_to", "framework.ops.disable_eager_execution"], "ops.gen_array_ops.broadcast_to": [], "python.lite_test.GrapplerTest": ["testing.parameterized.named_parameters"], "python.lite_test.GrapplerTest.testInputNodeIsNotFolded": ["client.session.Session", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual", "framework.constant_op.constant", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session", "framework.ops.disable_eager_execution"], "python.lite_test.GrapplerTest.testGrapplerConstFolding": ["client.session.Session", "test_util.TensorFlowTestCase.assertLen", "framework.ops.Graph", "ops.array_ops.placeholder", "python.lite_test.GrapplerTest.testGrapplerConstFolding.plus_placeholder", "ops.array_ops.reshape", "ops.array_ops.zeros", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "lite.TFLiteConverter.from_session"], "python.lite_test.GrapplerTest.testGrapplerConstFolding.plus_placeholder": [], "ops.array_ops.zeros": [], "python.lite_test.DefaultConverterAttrsTest.testAttrs": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNotNone", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNone", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertFalse", "lite.TFLiteConverter.from_session"], "test_util.TensorFlowTestCase.assertIsNone": [], "python.lite_test.ControlFlowV1OpsTest.testConverterErrorOnControlFlowV1Ops": ["test_util.TensorFlowTestCase.assertIn", "<builtin>.str", "test_util.TensorFlowTestCase.assertRaises", "platform.resource_loader.get_path_to_datafile", "lite.TFLiteConverter.from_frozen_graph"], "python.lite_test.QuantizationModeTest": ["testing.parameterized.named_parameters"], "python.lite_test.QuantizationModeTest.testDeprecatedOptionWarning": ["python.lite.QuantizationMode", "test_util.TensorFlowTestCase.assertIn", "logging.StreamHandler", "io.StringIO", "python.lite.TargetSpec", "logging.root.addHandler", "logging.root.removeHandler"], "python.lite.TargetSpec": [], "python.lite.QuantizationMode": [], "platform.test.main": []}