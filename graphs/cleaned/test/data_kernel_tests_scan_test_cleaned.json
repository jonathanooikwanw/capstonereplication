{"kernel_tests.scan_test": ["platform.test.main"], "kernel_tests.scan_test.ScanTest._counting_dataset": ["dataset_ops.Dataset.from_tensors"], "dataset_ops.Dataset.from_tensors": [], "kernel_tests.test_base.default_test_combinations": [], "kernel_tests.scan_test.ScanTest": ["framework.combinations.combine", "framework.combinations.generate", "kernel_tests.test_base.default_test_combinations"], "framework.combinations.generate": [], "kernel_tests.scan_test.ScanTest.testCount": ["kernel_tests.scan_test.ScanTest.testCount.dataset_fn", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertRaises", "test_base.DatasetTestBase.getNext", "itertools.count", "<builtin>.zip", "test_base.DatasetTestBase.evaluate", "<builtin>.range"], "kernel_tests.scan_test.ScanTest.testCount.make_scan_fn": [], "kernel_tests.scan_test.ScanTest.testCount.make_scan_fn.<lambda1>": [], "kernel_tests.scan_test.ScanTest.testCount.dataset_fn": ["kernel_tests.scan_test.ScanTest._counting_dataset", "kernel_tests.scan_test.ScanTest.testCount.make_scan_fn"], "test_base.DatasetTestBase.getNext": [], "itertools.count": [], "<builtin>.range": [], "<builtin>.zip": [], "test_base.DatasetTestBase.evaluate": [], "test_base.DatasetTestBase.assertEqual": [], "test_base.DatasetTestBase.assertRaises": [], "kernel_tests.scan_test.ScanTest.testFibonacci": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.assertEqual", "dataset_ops.Dataset.from_tensors"], "kernel_tests.scan_test.ScanTest.testFibonacci.<lambda1>": [], "kernel_tests.scan_test.ScanTest.testSparseCount": ["test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertRaises", "test_base.DatasetTestBase.getNext", "itertools.count", "<builtin>.zip", "test_base.DatasetTestBase.evaluate", "<builtin>.range", "kernel_tests.scan_test.ScanTest.testSparseCount.dataset_fn"], "kernel_tests.scan_test.ScanTest.testSparseCount._sparse": ["framework.sparse_tensor.SparseTensorValue", "numpy.array"], "numpy.array": [], "framework.sparse_tensor.SparseTensorValue": [], "kernel_tests.scan_test.ScanTest.testSparseCount.make_scan_fn": [], "kernel_tests.scan_test.ScanTest.testSparseCount.make_scan_fn.<lambda1>": ["kernel_tests.scan_test.ScanTest.testSparseCount._sparse"], "kernel_tests.scan_test.ScanTest.testSparseCount.dataset_fn": ["kernel_tests.scan_test.ScanTest.testSparseCount.make_scan_fn", "kernel_tests.scan_test.ScanTest._counting_dataset", "kernel_tests.scan_test.ScanTest.testSparseCount._sparse"], "kernel_tests.scan_test.ScanTest.testTensorArraySimple": ["ops.tensor_array_ops.TensorArray", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.scan_test.ScanTest.testTensorArraySimple.scan_fn": [], "ops.tensor_array_ops.TensorArray": [], "dataset_ops.Dataset.range": [], "test_base.DatasetTestBase.assertDatasetProduces": [], "kernel_tests.scan_test.ScanTest.testTensorArrayWithCondReset": ["dataset_ops.Dataset.range", "kernel_tests.scan_test.ScanTest.testTensorArrayWithCondReset.empty", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.scan_test.ScanTest.testTensorArrayWithCondReset.empty": ["ops.tensor_array_ops.TensorArray"], "kernel_tests.scan_test.ScanTest.testTensorArrayWithCondReset.scan_fn": ["ops.control_flow_ops.cond", "ops.math_ops.equal"], "ops.math_ops.equal": [], "kernel_tests.scan_test.ScanTest.testTensorArrayWithCondReset.scan_fn.<lambda1>": [], "ops.control_flow_ops.cond": [], "kernel_tests.scan_test.ScanTest.testTensorArrayWithCondResetByExternalCaptureBreaks": ["test_base.DatasetTestBase.assertRaisesRegex", "ops.tensor_array_ops.TensorArray", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.skipTest", "ops.control_flow_v2_toggles.control_flow_v2_enabled"], "ops.control_flow_v2_toggles.control_flow_v2_enabled": [], "test_base.DatasetTestBase.skipTest": [], "kernel_tests.scan_test.ScanTest.testTensorArrayWithCondResetByExternalCaptureBreaks.scan_fn": ["ops.control_flow_ops.cond", "ops.math_ops.equal"], "kernel_tests.scan_test.ScanTest.testTensorArrayWithCondResetByExternalCaptureBreaks.scan_fn.<lambda1>": [], "kernel_tests.scan_test.ScanTest.testTensorArrayWithCondResetByExternalCaptureBreaks.scan_fn.<lambda2>": [], "test_base.DatasetTestBase.assertRaisesRegex": [], "kernel_tests.scan_test.ScanTest.testChangingStateShape": ["test_base.DatasetTestBase.assertEqual", "dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertRaises", "test_base.DatasetTestBase.getNext", "numpy.array", "test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.assertIs", "test_base.DatasetTestBase.evaluate", "<builtin>.range", "ops.dataset_ops.get_legacy_output_shapes"], "kernel_tests.scan_test.ScanTest.testChangingStateShape._scan_fn": ["ops.array_ops.concat", "ops.array_ops.expand_dims"], "ops.array_ops.concat": [], "ops.array_ops.expand_dims": [], "ops.dataset_ops.get_legacy_output_shapes": [], "test_base.DatasetTestBase.assertIs": [], "test_base.DatasetTestBase.assertAllEqual": [], "kernel_tests.scan_test.ScanTest.testIncorrectStateType": ["test_base.DatasetTestBase.assertRaisesRegex", "dataset_ops.Dataset.range", "framework.constant_op.constant"], "kernel_tests.scan_test.ScanTest.testIncorrectStateType._scan_fn": ["framework.constant_op.constant"], "framework.constant_op.constant": [], "kernel_tests.scan_test.ScanTest.testIncorrectReturnType": ["test_base.DatasetTestBase.assertRaisesRegex", "dataset_ops.Dataset.range", "framework.constant_op.constant"], "kernel_tests.scan_test.ScanTest.testIncorrectReturnType._scan_fn": ["framework.constant_op.constant"], "kernel_tests.scan_test.ScanTest.testPreserveCardinality": ["dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertRaises", "framework.constant_op.constant", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.evaluate"], "kernel_tests.scan_test.ScanTest.testPreserveCardinality.scan_fn": ["ops.script_ops.py_func"], "kernel_tests.scan_test.ScanTest.testPreserveCardinality.scan_fn.py_fn": ["<builtin>.StopIteration"], "<builtin>.StopIteration": [], "ops.script_ops.py_func": [], "framework.combinations.combine": [], "kernel_tests.scan_test.ScanTest.testUseDefaultDevice": ["ops.dataset_ops._ScanDataset", "ops.variables.Variable", "test_base.DatasetTestBase.assertIn", "test_base.DatasetTestBase.getNext", "numpy.int64", "dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.skipTest", "test_base.DatasetTestBase.evaluate", "ops.array_ops.zeros", "framework.test_util.is_gpu_available"], "framework.test_util.is_gpu_available": [], "ops.array_ops.zeros": [], "ops.variables.Variable": [], "kernel_tests.scan_test.ScanTest.testUseDefaultDevice.scan_fn": ["framework.ops.colocate_with", "framework.test_ops.device_placement_op", "ops.math_ops.matmul"], "ops.math_ops.matmul": [], "framework.ops.colocate_with": [], "framework.test_ops.device_placement_op": [], "dataset_ops.Dataset.from_tensor_slices": [], "numpy.int64": [], "ops.dataset_ops._ScanDataset": [], "test_base.DatasetTestBase.assertIn": [], "kernel_tests.scan_test.ScanCheckpointTest._build_dataset": ["dataset_ops.Dataset.from_tensors"], "kernel_tests.scan_test.ScanCheckpointTest._build_dataset.<lambda1>": [], "kernel_tests.scan_test.ScanCheckpointTest": ["framework.combinations.generate", "framework.combinations.times", "kernel_tests.test_base.default_test_combinations", "kernel_tests.checkpoint_test_base.default_test_combinations"], "kernel_tests.checkpoint_test_base.default_test_combinations": [], "framework.combinations.times": [], "kernel_tests.scan_test.ScanCheckpointTest.test": [], "kernel_tests.scan_test.ScanCheckpointTest.test.<lambda1>": ["kernel_tests.scan_test.ScanCheckpointTest._build_dataset"], "platform.test.main": []}