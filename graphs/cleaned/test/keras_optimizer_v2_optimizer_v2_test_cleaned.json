{"optimizer_v2.optimizer_v2_test": ["<builtin>.dict", "platform.test.main", "framework.test_util.IsBuiltWithNvcc", "platform.test.is_built_with_rocm"], "framework.test_util.IsBuiltWithNvcc": [], "platform.test.is_built_with_rocm": [], "keras.combinations.combine": [], "optimizer_v2.optimizer_v2_test.OptimizerTest": ["keras.combinations.generate", "keras.combinations.combine"], "keras.combinations.generate": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testBasic": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer"], "keras.testing_utils.use_gpu": [], "ops.variables.Variable": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testBasic.<lambda1>": [], "optimizer_v2.gradient_descent.SGD": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testAdaptiveLearningRate": ["ops.variables.Variable", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer", "optimizer_v2.learning_rate_schedule.InverseTimeDecay", "test.TestCase.test_session", "eager.context.executing_eagerly"], "test.TestCase.test_session": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testAdaptiveLearningRate.loss": [], "eager.context.executing_eagerly": [], "optimizer_v2.learning_rate_schedule.InverseTimeDecay": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testPrecomputedGradient": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer", "framework.constant_op.constant"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testPrecomputedGradient.<lambda1>": [], "framework.constant_op.constant": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testNoGradients": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertRaisesRegex"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testNoGradients.<lambda1>": [], "test.TestCase.assertRaisesRegex": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testNoGradientsForAnyVariables_Minimize": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertRaisesRegex"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testNoGradientsForAnyVariables_Minimize.<lambda1>": ["framework.constant_op.constant"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testNoGradientsForAnyVariables_ApplyGradients": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertRaisesRegex"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGradientsAsVariables": ["ops.state_ops.assign", "keras.testing_utils.use_gpu", "ops.variables.Variable", "test.TestCase.assertAllClose", "<builtin>.zip", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer", "<builtin>.list", "ops.array_ops.zeros", "<builtin>.enumerate"], "<builtin>.enumerate": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGradientsAsVariables.<lambda1>": [], "ops.array_ops.zeros": [], "ops.state_ops.assign": [], "<builtin>.zip": [], "<builtin>.list": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testComputeGradientsWithTensors": ["keras.testing_utils.use_gpu", "test.TestCase.assertEqual", "framework.ops.convert_to_tensor_v2_with_dispatch", "test.TestCase.assertRaises", "test.TestCase.assertIs", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertLen"], "framework.ops.convert_to_tensor_v2_with_dispatch": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testComputeGradientsWithTensors.f": [], "test.TestCase.assertLen": [], "test.TestCase.assertIs": [], "test.TestCase.assertEqual": [], "test.TestCase.assertRaises": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testConstraint": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testConstraint.<lambda1>": ["ops.clip_ops.clip_by_value"], "ops.clip_ops.clip_by_value": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testConstraint.<lambda2>": ["ops.clip_ops.clip_by_value"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testConstraint.<lambda3>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testIterationWithoutMinimize": ["keras.testing_utils.use_gpu", "optimizer_v2.gradient_descent.SGD", "test.TestCase.evaluate", "test.TestCase.assertEqual"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testConfig": ["keras.testing_utils.use_gpu", "test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "gradient_descent.SGD.from_config", "ops.variables.global_variables_initializer"], "gradient_descent.SGD.from_config": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testConfig.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testConfigWithLearningRateDecay": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "gradient_descent.SGD.from_config", "ops.variables.global_variables_initializer"], "test.TestCase.assertAllEqual": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testConfigWithLearningRateDecay.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGradClipValue": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGradClipValue.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGradClipNorm": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGradClipNorm.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGradGlobalClipNorm": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGradGlobalClipNorm.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testInvalidClipNorm": ["optimizer_v2.gradient_descent.SGD", "test.TestCase.assertRaisesRegex"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testConfigWithCliping": ["optimizer_v2.gradient_descent.SGD", "gradient_descent.SGD.from_config", "test.TestCase.assertEqual", "<builtin>.getattr"], "<builtin>.getattr": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testInvalidKwargs": ["optimizer_v2.gradient_descent.SGD", "test.TestCase.assertRaisesRegex"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testWeights": ["keras.testing_utils.use_gpu", "ops.variables.Variable", "test.TestCase.assertEqual", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "test.TestCase.assertRaisesRegex", "ops.variables.global_variables_initializer", "adam.Adam.from_config", "optimizer_v2.adam.Adam"], "optimizer_v2.adam.Adam": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testWeights.<lambda1>": [], "adam.Adam.from_config": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testWeights.<lambda2>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testWeights.<lambda3>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testWeights.<lambda4>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGettingHyperParameters": ["test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.assertRaises", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "test.TestCase.test_session", "optimizer_v2.adam.Adam"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGettingHyperParameters.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGettingHyperParametersWithLrInConstructor": ["test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer", "test.TestCase.test_session", "test.TestCase.assertIsInstance"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testGettingHyperParametersWithLrInConstructor.<lambda1>": [], "test.TestCase.assertIsInstance": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testDir": ["optimizer_v2.gradient_descent.SGD", "<builtin>.dir", "test.TestCase.assertIn", "<builtin>.set"], "<builtin>.dir": [], "<builtin>.set": [], "test.TestCase.assertIn": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testOptimizerWithKerasModel": ["layers.core.Dense", "engine.input_layer.Input", "optimizer_v2.gradient_descent.SGD", "numpy.random.random", "engine.training.Model", "layers.core.Dropout"], "engine.input_layer.Input": [], "layers.core.Dense": [], "layers.core.Dropout": [], "engine.training.Model": [], "numpy.random.random": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testOptimizerWithCallbacks": ["layers.core.Dense", "test.TestCase.assertAllClose", "keras.callbacks.ReduceLROnPlateau", "<builtin>.float", "engine.input_layer.Input", "optimizer_v2.gradient_descent.SGD", "engine.sequential.Sequential", "numpy.random.random", "numpy.random.seed", "layers.core.Dropout", "keras.backend.get_value"], "numpy.random.seed": [], "engine.sequential.Sequential": [], "keras.callbacks.ReduceLROnPlateau": [], "keras.backend.get_value": [], "<builtin>.float": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testOptimizerSetIterations": ["test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.evaluate", "training.training_util.get_or_create_global_step", "ops.variables.global_variables_initializer", "optimizer_v2.adam.Adam"], "training.training_util.get_or_create_global_step": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testOptimizerSetIterations.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testOptimizerWithCallableVarList": ["test.TestCase.assertEqual", "utils.np_utils.to_categorical", "optimizer_v2.optimizer_v2_test.OptimizerTest.testOptimizerWithCallableVarList.<lambda2>", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate", "keras.testing_utils.get_test_data", "ops.variables.global_variables_initializer", "test.TestCase.assertNotEqual", "test.TestCase.assertLen", "eager.context.executing_eagerly", "optimizer_v2.adam.Adam", "keras.testing_utils.get_small_sequential_mlp"], "keras.testing_utils.get_test_data": [], "utils.np_utils.to_categorical": [], "keras.testing_utils.get_small_sequential_mlp": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testOptimizerWithCallableVarList.<lambda1>": ["keras.losses.mean_squared_error"], "keras.losses.mean_squared_error": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testOptimizerWithCallableVarList.<lambda2>": [], "test.TestCase.assertNotEqual": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testVarKey": ["test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.assertTrue", "framework.ops.get_default_graph", "optimizer_v2.optimizer_v2._var_key"], "framework.ops.get_default_graph": [], "test.TestCase.assertTrue": [], "optimizer_v2.optimizer_v2._var_key": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testVarName": ["test.TestCase.assertEqual", "ops.variables.Variable", "framework.ops.get_default_graph", "keras.backend.name_scope", "test.TestCase.assertLen", "optimizer_v2.adam.Adam"], "keras.backend.name_scope": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testEmptyVarList": ["optimizer_v2.gradient_descent.SGD"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testEmptyVarList.<lambda1>": ["framework.constant_op.constant"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testAggregationTrue": ["ops.variables.Variable", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testAggregationFalse": ["ops.variables.Variable", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer"], "optimizer_v2.optimizer_v2_test.OptimizerTest.testRestoringIterationsWithoutAnOptimizer": ["test.TestCase.assertEqual", "ops.variables.Variable", "parameterized.TestCase.get_temp_dir", "test.TestCase.evaluate", "tracking.util.Checkpoint", "optimizer_v2.gradient_descent.SGD", "test.TestCase.get_temp_dir"], "tracking.util.Checkpoint": [], "parameterized.TestCase.get_temp_dir": [], "test.TestCase.get_temp_dir": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.testSlotWithNonstandardShapeRestoresBasedOnCheckpoint": ["test.TestCase.assertEqual", "ops.variables.Variable", "optimizer_v2.optimizer_v2.OptimizerV2", "tracking.util.Checkpoint", "test.TestCase.get_temp_dir"], "optimizer_v2.optimizer_v2.OptimizerV2": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.test_gradient_aggregator": ["test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.evaluate", "optimizer_v2.gradient_descent.SGD", "ops.variables.global_variables_initializer"], "optimizer_v2.optimizer_v2_test.OptimizerTest.test_gradient_aggregator.gradient_aggregator": ["<builtin>.zip", "<builtin>.list"], "optimizer_v2.optimizer_v2_test.OptimizerTest.test_gradient_aggregator.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.test_override_aggregate_gradients": ["test.TestCase.assertEqual", "ops.variables.Variable", "gradient_descent.SGD.__init__", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "gradient_descent.SGD.minimize"], "optimizer_v2.optimizer_v2_test.OptimizerTest.test_override_aggregate_gradients.MyOptimizer._aggregate_gradients": ["<builtin>.zip", "<builtin>.list"], "gradient_descent.SGD.__init__": [], "optimizer_v2.optimizer_v2_test.OptimizerTest.test_override_aggregate_gradients.<lambda1>": [], "gradient_descent.SGD.minimize": [], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest._testOptimizersCompatibility": ["keras.testing_utils.use_gpu", "utils.np_utils.to_categorical", "keras_parameterized.TestCase.assertAllClose", "keras.testing_utils.get_test_data", "framework.ops.executing_eagerly_outside_functions", "keras.testing_utils.should_run_eagerly", "keras_parameterized.TestCase.skipTest", "numpy.random.seed", "eager.context.executing_eagerly", "keras.testing_utils.get_small_sequential_mlp"], "keras_parameterized.TestCase.skipTest": [], "keras.testing_utils.should_run_eagerly": [], "framework.ops.executing_eagerly_outside_functions": [], "keras_parameterized.TestCase.assertAllClose": [], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest.testAdadeltaCompatibility": ["optimizer_v2.adadelta.Adadelta", "keras.optimizer_v1.Adadelta", "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest._testOptimizersCompatibility"], "keras.optimizer_v1.Adadelta": [], "optimizer_v2.adadelta.Adadelta": [], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest.testAdagradCompatibility": ["optimizer_v2.adagrad.Adagrad", "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest._testOptimizersCompatibility", "keras.optimizer_v1.Adagrad"], "keras.optimizer_v1.Adagrad": [], "optimizer_v2.adagrad.Adagrad": [], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest.testAdamCompatibility": ["optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest._testOptimizersCompatibility", "optimizer_v2.adam.Adam", "keras.optimizer_v1.Adam"], "keras.optimizer_v1.Adam": [], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest.testAdamaxCompatibility": ["optimizer_v2.adamax.Adamax", "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest._testOptimizersCompatibility", "keras.optimizer_v1.Adamax"], "keras.optimizer_v1.Adamax": [], "optimizer_v2.adamax.Adamax": [], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest.testNadamCompatibility": ["optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest._testOptimizersCompatibility", "keras.optimizer_v1.Nadam", "optimizer_v2.nadam.Nadam"], "keras.optimizer_v1.Nadam": [], "optimizer_v2.nadam.Nadam": [], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest.testMomentumCompatibility": ["optimizer_v2.gradient_descent.SGD", "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest._testOptimizersCompatibility", "keras.optimizer_v1.SGD"], "keras.optimizer_v1.SGD": [], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest.testRMSpropCompatibility": ["optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest._testOptimizersCompatibility", "optimizer_v2.rmsprop.RMSprop", "keras.optimizer_v1.RMSprop"], "keras.optimizer_v1.RMSprop": [], "optimizer_v2.rmsprop.RMSprop": [], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest.testSGDCompatibility": ["optimizer_v2.gradient_descent.SGD", "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest._testOptimizersCompatibility", "keras.optimizer_v1.SGD"], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest.testNumericEquivalenceForNesterovMomentum": ["keras.testing_utils.use_gpu", "utils.np_utils.to_categorical", "keras_parameterized.TestCase.assertAllClose", "keras.testing_utils.get_test_data", "optimizer_v2.gradient_descent.SGD", "training.momentum.MomentumOptimizer", "keras.testing_utils.should_run_eagerly", "keras_parameterized.TestCase.skipTest", "numpy.random.seed", "eager.context.executing_eagerly", "keras.testing_utils.get_small_sequential_mlp", "keras.optimizer_v1.SGD"], "training.momentum.MomentumOptimizer": [], "optimizer_v2.optimizer_v2_test.OptimizersCompatibilityTest.testNumericEquivalenceForAmsgrad": ["keras.testing_utils.use_gpu", "utils.np_utils.to_categorical", "keras.optimizer_v1.Adam", "keras_parameterized.TestCase.assertAllClose", "keras.testing_utils.get_test_data", "keras.testing_utils.should_run_eagerly", "keras_parameterized.TestCase.skipTest", "numpy.random.seed", "eager.context.executing_eagerly", "optimizer_v2.adam.Adam", "keras.testing_utils.get_small_sequential_mlp"], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testBasic": ["ops.variables.Variable", "optimizer_v2.adam.Adam", "test.TestCase.assertAllClose", "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testBasic.fn"], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testBasic.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testBasic.fn": [], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testBasicWithConstantDecay": ["ops.variables.Variable", "optimizer_v2.adam.Adam", "test.TestCase.assertAllClose", "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testBasicWithConstantDecay.fn"], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testBasicWithConstantDecay.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testBasicWithConstantDecay.fn": [], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testVarKeyWithVarCreatedInEager": ["ops.variables.Variable", "framework.test_util.also_run_as_tf_function", "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testVarKeyWithVarCreatedInEager.var_key_test"], "framework.test_util.also_run_as_tf_function": [], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testVarKeyWithVarCreatedInEager.var_key_test": ["test.TestCase.assertNotEqual", "test.TestCase.assertStartsWith", "test.TestCase.assertFalse", "optimizer_v2.optimizer_v2._var_key"], "test.TestCase.assertFalse": [], "test.TestCase.assertStartsWith": [], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testLearningRateDecayUsedInTwoFunctions": ["ops.variables.Variable", "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testLearningRateDecayUsedInTwoFunctions.fn_a", "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testLearningRateDecayUsedInTwoFunctions.fn_b", "optimizer_v2.learning_rate_schedule.InverseTimeDecay", "optimizer_v2.adam.Adam"], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testLearningRateDecayUsedInTwoFunctions.<lambda1>": [], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testLearningRateDecayUsedInTwoFunctions.<lambda2>": [], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testLearningRateDecayUsedInTwoFunctions.fn_a": [], "optimizer_v2.optimizer_v2_test.OptimizerWithFunctionTest.testLearningRateDecayUsedInTwoFunctions.fn_b": [], "optimizer_v2.optimizer_v2_test.get_inputs": ["<builtin>.list", "<builtin>.getattr"], "optimizer_v2.optimizer_v2_test.strip_name": [], "optimizer_v2.optimizer_v2_test.topological_sort": ["<builtin>.ValueError", "<builtin>.len", "collections.defaultdict", "optimizer_v2.optimizer_v2_test.get_inputs", "<builtin>.set"], "collections.defaultdict": [], "<builtin>.len": [], "<builtin>.ValueError": [], "optimizer_v2.optimizer_v2_test.identify_redundant_ops": ["<builtin>.any", "<builtin>.zip", "optimizer_v2.optimizer_v2_test.strip_name", "<builtin>.repr", "collections.defaultdict", "<builtin>.len", "optimizer_v2.optimizer_v2_test.get_inputs", "optimizer_v2.optimizer_v2_test.topological_sort"], "<builtin>.repr": [], "<builtin>.any": [], "optimizer_v2.optimizer_v2_test.make_model": ["keras.layers.Dense", "keras.layers.Input", "keras.layers.Embedding", "keras.layers.Concatenate", "keras.models.Model", "<builtin>.range"], "<builtin>.range": [], "keras.layers.Input": [], "keras.layers.Embedding": [], "keras.layers.Dense": [], "keras.layers.Concatenate": [], "keras.models.Model": [], "<builtin>.dict": [], "testing.parameterized.named_parameters": [], "optimizer_v2.optimizer_v2_test.OptimizerCoefficientTest": ["testing.parameterized.named_parameters"], "optimizer_v2.optimizer_v2_test.OptimizerCoefficientTest.test_duplicate_ops": ["<builtin>.zip", "optimizer_v2.optimizer_v2_test.identify_redundant_ops", "<builtin>.ValueError", "keras.backend.name_scope", "framework.ops.Graph", "<builtin>.len", "optimizer_v2.optimizer_v2_test.make_model"], "framework.ops.Graph": [], "optimizer_v2.optimizer_v2_test.OptimizerCoefficientTest.test_subclass_compat": ["<builtin>.zip", "keras.backend.name_scope", "framework.ops.Graph", "optimizer_v2.optimizer_v2_test.make_model"], "optimizer_v2.optimizer_v2_test.OptimizerCoefficientTest.test_subclass_compat.SubclassedOptimizer._resource_apply_dense": ["<builtin>.super"], "<builtin>.super": [], "optimizer_v2.optimizer_v2_test.OptimizerCoefficientTest.test_subclass_compat.SubclassedOptimizer._resource_apply_sparse": ["<builtin>.super"], "platform.test.main": []}