{"kernel_tests.snapshot_test": ["platform.test.main"], "kernel_tests.snapshot_test.is_graphdef_file": [], "kernel_tests.snapshot_test.is_temp_file": [], "kernel_tests.snapshot_test.listdir_and_filter": ["kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains.<lambda1>", "os.listdir", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains.<lambda2>", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains.<lambda2>", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains.<lambda1>", "<builtin>.sorted"], "os.listdir": [], "<builtin>.sorted": [], "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains.<lambda1>": ["kernel_tests.snapshot_test.is_temp_file", "kernel_tests.snapshot_test.is_graphdef_file"], "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains.<lambda2>": ["kernel_tests.snapshot_test.is_temp_file"], "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains.<lambda1>": ["kernel_tests.snapshot_test.is_temp_file", "kernel_tests.snapshot_test.is_graphdef_file"], "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains.<lambda2>": ["kernel_tests.snapshot_test.is_temp_file"], "kernel_tests.snapshot_test.SnapshotTest.setUp": ["os.mkdir", "os.path.join", "<builtin>.super", "tf_record_test_base.TFRecordTestBase.get_temp_dir"], "<builtin>.super": [], "tf_record_test_base.TFRecordTestBase.get_temp_dir": [], "os.path.join": [], "os.mkdir": [], "kernel_tests.snapshot_test.SnapshotTest.tearDown": ["shutil.rmtree", "<builtin>.super"], "shutil.rmtree": [], "kernel_tests.snapshot_test.SnapshotTest.createTFRecords": ["tf_record_test_base.TFRecordTestBase._createFiles"], "tf_record_test_base.TFRecordTestBase._createFiles": [], "kernel_tests.snapshot_test.SnapshotTest.removeTFRecords": ["os.remove"], "os.remove": [], "kernel_tests.snapshot_test.SnapshotTest.assertDatasetProducesSet": ["tf_record_test_base.TFRecordTestBase.assertRaises", "<builtin>.range", "tf_record_test_base.TFRecordTestBase.getNext", "<builtin>.len", "tf_record_test_base.TFRecordTestBase.assertCountEqual", "tf_record_test_base.TFRecordTestBase.evaluate"], "tf_record_test_base.TFRecordTestBase.getNext": [], "<builtin>.len": [], "<builtin>.range": [], "tf_record_test_base.TFRecordTestBase.evaluate": [], "tf_record_test_base.TFRecordTestBase.assertCountEqual": [], "tf_record_test_base.TFRecordTestBase.assertRaises": [], "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains": ["os.path.join", "<builtin>.range", "tf_record_test_base.TFRecordTestBase.assertLen", "os.listdir", "tf_record_test_base.TFRecordTestBase.assertEqual", "kernel_tests.snapshot_test.listdir_and_filter", "<builtin>.sorted"], "tf_record_test_base.TFRecordTestBase.assertLen": [], "tf_record_test_base.TFRecordTestBase.assertEqual": [], "kernel_tests.test_base.default_test_combinations": [], "kernel_tests.snapshot_test.SnapshotTest": ["framework.combinations.generate", "kernel_tests.test_base.default_test_combinations"], "framework.combinations.generate": [], "kernel_tests.snapshot_test.SnapshotTest.testCreateSnapshotDataset": ["dataset_ops.Dataset.from_tensors"], "dataset_ops.Dataset.from_tensors": [], "kernel_tests.snapshot_test.SnapshotTest.testReadSnapshotDatasetDefault": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "kernel_tests.snapshot_test.SnapshotTest.removeTFRecords", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "ops.readers._TFRecordDataset", "multiprocessing.cpu_count", "kernel_tests.snapshot_test.SnapshotTest.createTFRecords"], "ops.readers._TFRecordDataset": [], "tf_record_test_base.TFRecordTestBase.assertDatasetProduces": [], "multiprocessing.cpu_count": [], "kernel_tests.snapshot_test.SnapshotTest.testReadSnapshotDatasetAutoWriteSnappyRead": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "kernel_tests.snapshot_test.SnapshotTest.removeTFRecords", "<builtin>.range", "ops.readers._TFRecordDataset", "kernel_tests.snapshot_test.SnapshotTest.createTFRecords"], "kernel_tests.snapshot_test.SnapshotTest.testReadSnapshotDatasetCustomShardFn": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "kernel_tests.snapshot_test.SnapshotTest.removeTFRecords", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "ops.readers._TFRecordDataset", "kernel_tests.snapshot_test.SnapshotTest.createTFRecords"], "kernel_tests.snapshot_test.SnapshotTest.testReadSnapshotDatasetCustomShardFn.<lambda1>": ["numpy.int64"], "numpy.int64": [], "kernel_tests.snapshot_test.SnapshotTest.testReadSnapshotDatasetCustomShardFn.<lambda2>": [], "kernel_tests.snapshot_test.SnapshotTest.testReadSnapshotDatasetCustomReaderFn": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "kernel_tests.snapshot_test.SnapshotTest.removeTFRecords", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "kernel_tests.snapshot_test.SnapshotTest.assertDatasetProducesSet", "ops.readers._TFRecordDataset", "multiprocessing.cpu_count", "kernel_tests.snapshot_test.SnapshotTest.createTFRecords"], "kernel_tests.snapshot_test.SnapshotTest.testReadSnapshotDatasetCustomReaderFn.<lambda1>": [], "kernel_tests.snapshot_test.SnapshotTest.testReadSnapshotDatasetCustomReaderFn.<lambda1>.<lambda1>": [], "kernel_tests.snapshot_test.SnapshotTest.testReadSnapshotDatasetCustomReaderFn.<lambda2>": [], "kernel_tests.snapshot_test.SnapshotTest.testReadSnapshotDatasetCustomReaderFn.<lambda2>.<lambda1>": [], "kernel_tests.snapshot_test.SnapshotTest.testSnapshotDatasetInvalidShardFn": ["tf_record_test_base.TFRecordTestBase.assertRaises", "tf_record_test_base.TFRecordTestBase.getNext", "dataset_ops.Dataset.range", "tf_record_test_base.TFRecordTestBase.evaluate"], "dataset_ops.Dataset.range": [], "kernel_tests.snapshot_test.SnapshotTest.testSnapshotDatasetInvalidShardFn.<lambda1>": [], "kernel_tests.snapshot_test.SnapshotTest.testSnapshotDatasetInvalidReaderFn": ["tf_record_test_base.TFRecordTestBase.assertRaises", "tf_record_test_base.TFRecordTestBase.getNext", "dataset_ops.Dataset.range", "tf_record_test_base.TFRecordTestBase.evaluate"], "kernel_tests.snapshot_test.SnapshotTest.testSnapshotDatasetInvalidReaderFn.<lambda1>": [], "kernel_tests.snapshot_test.SnapshotTest.testRoundtripEmptySnapshot": ["kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range"], "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotDatasetSimple": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "multiprocessing.cpu_count", "<builtin>.list"], "<builtin>.list": [], "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotDatasetMultipleFingerprints": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "multiprocessing.cpu_count", "<builtin>.list"], "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotDatasetSameFingerprintMultipleCompleteRuns": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "multiprocessing.cpu_count", "<builtin>.list"], "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotDatasetSameFingerprintIncompleteRunRestart": ["dataset_ops.Dataset.range", "<builtin>.range", "tf_record_test_base.TFRecordTestBase.getNext", "tf_record_test_base.TFRecordTestBase.assertEqual", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "multiprocessing.cpu_count", "tf_record_test_base.TFRecordTestBase.evaluate"], "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotCustomShardFunction": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "<builtin>.list"], "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotCustomShardFunction.<lambda1>": [], "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotCustomShardFunction.<lambda2>": [], "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotDatasetWithTuples": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "dataset_ops.Dataset.zip", "<builtin>.zip", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "multiprocessing.cpu_count", "<builtin>.list"], "dataset_ops.Dataset.zip": [], "<builtin>.zip": [], "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotShuffleSameFingerprint": ["<builtin>.range", "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotShuffleSameFingerprint.make_dataset", "kernel_tests.snapshot_test.SnapshotTest.assertDatasetProducesSet", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "multiprocessing.cpu_count", "<builtin>.list"], "kernel_tests.snapshot_test.SnapshotTest.testWriteSnapshotShuffleSameFingerprint.make_dataset": ["dataset_ops.Dataset.range"], "kernel_tests.snapshot_test.SnapshotTest.testReadUsingFlatMap": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.list", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "multiprocessing.cpu_count", "dataset_ops.Dataset.from_tensors"], "kernel_tests.snapshot_test.SnapshotTest.testReadUsingFlatMap.<lambda1>": [], "kernel_tests.snapshot_test.SnapshotTest.testReadOptimizableUsingFlatMap": ["dataset_ops.Dataset.range", "<builtin>.list", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotTest.assertDatasetProducesSet", "kernel_tests.snapshot_test.SnapshotTest.assertSnapshotDirectoryContains", "multiprocessing.cpu_count", "dataset_ops.Dataset.from_tensors"], "kernel_tests.snapshot_test.SnapshotTest.testReadOptimizableUsingFlatMap.<lambda1>": [], "kernel_tests.snapshot_test.SnapshotTest.testRepeatAndPrefetch": ["<builtin>.range", "numpy.random.rand", "tf_record_test_base.TFRecordTestBase.getNext", "dataset_ops.Dataset.from_tensor_slices", "tf_record_test_base.TFRecordTestBase.evaluate"], "numpy.random.rand": [], "dataset_ops.Dataset.from_tensor_slices": [], "kernel_tests.snapshot_test.LegacySnapshotTest.setUp": ["os.path.join", "kernel_tests.snapshot_test.LegacySnapshotTest.removeTFRecords", "os.mkdir", "<builtin>.super", "tf_record_test_base.TFRecordTestBase.get_temp_dir"], "kernel_tests.snapshot_test.LegacySnapshotTest.removeTFRecords": ["os.remove"], "kernel_tests.snapshot_test.LegacySnapshotTest.tearDown": ["shutil.rmtree", "<builtin>.super"], "kernel_tests.snapshot_test.LegacySnapshotTest.setUpTFRecord": ["tf_record_test_base.TFRecordTestBase._createFiles"], "kernel_tests.snapshot_test.LegacySnapshotTest.makeSnapshotDirectory": [], "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains": ["os.path.join", "<builtin>.range", "tf_record_test_base.TFRecordTestBase.assertLen", "os.listdir", "tf_record_test_base.TFRecordTestBase.assertEqual", "kernel_tests.snapshot_test.listdir_and_filter", "<builtin>.sorted"], "kernel_tests.snapshot_test.LegacySnapshotTest": ["framework.combinations.generate", "framework.combinations.combine", "framework.combinations.times", "kernel_tests.test_base.default_test_combinations"], "kernel_tests.snapshot_test.LegacySnapshotTest.testWriteDifferentPipelinesInOneDirectory": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "<builtin>.list"], "ops.snapshot.legacy_snapshot": [], "kernel_tests.snapshot_test.LegacySnapshotTest.testWriteSnapshotMultipleSimultaneous": ["dataset_ops.Dataset.range", "<builtin>.range", "tf_record_test_base.TFRecordTestBase.getNext", "tf_record_test_base.TFRecordTestBase.assertEqual", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "tf_record_test_base.TFRecordTestBase.evaluate"], "kernel_tests.snapshot_test.LegacySnapshotTest.testGetNextCreatesDir": ["dataset_ops.Dataset.range", "<builtin>.range", "tf_record_test_base.TFRecordTestBase.getNext", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "tf_record_test_base.TFRecordTestBase.evaluate"], "framework.combinations.combine": [], "framework.combinations.times": [], "kernel_tests.snapshot_test.LegacySnapshotTest.testWriteSnapshotSimpleSuccessful": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "<builtin>.list"], "kernel_tests.snapshot_test.LegacySnapshotTest.testWriteSnapshotRepeatAfterwards": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "<builtin>.list"], "kernel_tests.snapshot_test.LegacySnapshotTest.testWriteSnapshotMixTypes": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "<builtin>.str", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot"], "kernel_tests.snapshot_test.LegacySnapshotTest.testWriteSnapshotMixTypes.map_fn": ["ops.string_ops.as_string"], "ops.string_ops.as_string": [], "<builtin>.str": [], "kernel_tests.snapshot_test.LegacySnapshotTest.testSpecifySnapshotNameWriteAndRead": ["os.path.exists", "tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "os.path.join", "tf_record_test_base.TFRecordTestBase.assertTrue", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "<builtin>.list"], "os.path.exists": [], "tf_record_test_base.TFRecordTestBase.assertTrue": [], "kernel_tests.snapshot_test.LegacySnapshotTest.testForcePassthroughMode": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "<builtin>.list"], "kernel_tests.snapshot_test.LegacySnapshotTest.testForceWriteMode": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "<builtin>.list"], "kernel_tests.snapshot_test.LegacySnapshotTest.testForceReadMode": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "os.path.join", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "shutil.move", "ops.snapshot.legacy_snapshot", "<builtin>.list"], "shutil.move": [], "kernel_tests.snapshot_test.LegacySnapshotTest.testForceReadNonexistentSnapshot": ["tf_record_test_base.TFRecordTestBase.assertRaises", "dataset_ops.Dataset.range", "tf_record_test_base.TFRecordTestBase.getNext", "ops.snapshot.legacy_snapshot", "tf_record_test_base.TFRecordTestBase.evaluate"], "kernel_tests.snapshot_test.LegacySnapshotTest.testForceReadNonexistentNamedSnapshot": ["tf_record_test_base.TFRecordTestBase.assertRaises", "dataset_ops.Dataset.range", "tf_record_test_base.TFRecordTestBase.getNext", "ops.snapshot.legacy_snapshot", "tf_record_test_base.TFRecordTestBase.evaluate"], "kernel_tests.snapshot_test.LegacySnapshotTest.testReadSnapshotBackAfterWrite": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "kernel_tests.snapshot_test.LegacySnapshotTest.removeTFRecords", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.setUpTFRecord", "ops.readers._TFRecordDataset", "ops.snapshot.legacy_snapshot"], "kernel_tests.snapshot_test.LegacySnapshotTest.testReadShuffledSnapshotAfterWrite": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "kernel_tests.snapshot_test.LegacySnapshotTest.removeTFRecords", "<builtin>.range", "tf_record_test_base.TFRecordTestBase.getNext", "kernel_tests.snapshot_test.LegacySnapshotTest.setUpTFRecord", "tf_record_test_base.TFRecordTestBase.assertNotEqual", "ops.readers._TFRecordDataset", "ops.snapshot.legacy_snapshot", "tf_record_test_base.TFRecordTestBase.evaluate"], "tf_record_test_base.TFRecordTestBase.assertNotEqual": [], "kernel_tests.snapshot_test.LegacySnapshotTest.testReadShuffledSnapshotWithSeedAfterWrite": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "kernel_tests.snapshot_test.LegacySnapshotTest.removeTFRecords", "<builtin>.range", "tf_record_test_base.TFRecordTestBase.getNext", "kernel_tests.snapshot_test.LegacySnapshotTest.setUpTFRecord", "tf_record_test_base.TFRecordTestBase.assertEqual", "ops.readers._TFRecordDataset", "ops.snapshot.legacy_snapshot", "tf_record_test_base.TFRecordTestBase.evaluate"], "kernel_tests.snapshot_test.LegacySnapshotTest.testReadSnapshotParallelAfterWrite": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "kernel_tests.snapshot_test.LegacySnapshotTest.removeTFRecords", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.setUpTFRecord", "ops.readers._TFRecordDataset", "ops.snapshot.legacy_snapshot"], "kernel_tests.snapshot_test.LegacySnapshotTest.testReadSnapshotBackAfterMultiThreadedWrite": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "kernel_tests.snapshot_test.LegacySnapshotTest.removeTFRecords", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.setUpTFRecord", "ops.readers._TFRecordDataset", "ops.snapshot.legacy_snapshot"], "kernel_tests.snapshot_test.LegacySnapshotTest.testSameFingerprintWithDifferentInitializationOrder": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "<builtin>.list"], "kernel_tests.snapshot_test.LegacySnapshotTest.testExpiredSnapshotRewrite": ["dataset_ops.Dataset.range", "<builtin>.range", "tf_record_test_base.TFRecordTestBase.getNext", "time.sleep", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "tf_record_test_base.TFRecordTestBase.evaluate"], "time.sleep": [], "kernel_tests.snapshot_test.LegacySnapshotTest.testSnapshotArgsCreateNewSnapshot": ["dataset_ops.Dataset.range", "<builtin>.range", "tf_record_test_base.TFRecordTestBase.getNext", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "tf_record_test_base.TFRecordTestBase.evaluate"], "kernel_tests.snapshot_test.LegacySnapshotTest.testSpecifyShardSize": ["<builtin>.range", "tf_record_test_base.TFRecordTestBase.getNext", "dataset_ops.Dataset.from_tensor_slices", "kernel_tests.snapshot_test.LegacySnapshotTest.assertSnapshotDirectoryContains", "ops.snapshot.legacy_snapshot", "tf_record_test_base.TFRecordTestBase.evaluate"], "kernel_tests.snapshot_test.LegacySnapshotTest.testSpecifyShardSize.<lambda1>": ["ops.gen_array_ops.broadcast_to"], "ops.gen_array_ops.broadcast_to": [], "kernel_tests.snapshot_test.LegacySnapshotTest.testAdditionalOperationsAfterReadBack": ["tf_record_test_base.TFRecordTestBase.assertDatasetProduces", "kernel_tests.snapshot_test.LegacySnapshotTest.removeTFRecords", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotTest.setUpTFRecord", "ops.readers._TFRecordDataset", "ops.snapshot.legacy_snapshot"], "kernel_tests.snapshot_test.LegacySnapshotTest.testAdditionalOperationsAfterReadBack.<lambda1>": ["ops.string_ops.substr_v2"], "ops.string_ops.substr_v2": [], "kernel_tests.snapshot_test.SnapshotCheckpointTest._build_snapshot_dataset": [], "kernel_tests.snapshot_test.SnapshotCheckpointTest._build_snapshot_dataset.ds_fn": ["os.path.join", "dataset_ops.Dataset.range", "os.mkdir", "parameterized.TestCase.get_temp_dir", "os.path.exists"], "parameterized.TestCase.get_temp_dir": [], "kernel_tests.snapshot_test.SnapshotCheckpointTest": ["framework.combinations.generate", "kernel_tests.test_base.default_test_combinations"], "kernel_tests.snapshot_test.SnapshotCheckpointTest.testCheckpointBeforeEpochEndNoRepeat": ["checkpoint_test_base.CheckpointTestBase.gen_outputs", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotCheckpointTest._build_snapshot_dataset"], "checkpoint_test_base.CheckpointTestBase.gen_outputs": [], "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual": [], "kernel_tests.snapshot_test.SnapshotCheckpointTest.testCheckpointBeforeOneEpochWithReading": ["kernel_tests.snapshot_test.SnapshotCheckpointTest._build_snapshot_dataset", "checkpoint_test_base.CheckpointTestBase.gen_outputs", "<builtin>.range", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual", "<builtin>.list"], "kernel_tests.snapshot_test.SnapshotCheckpointTest.testCheckpointBeforeOneEpochThenRunAFewSteps": ["checkpoint_test_base.CheckpointTestBase.gen_outputs", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual", "<builtin>.range", "kernel_tests.snapshot_test.SnapshotCheckpointTest._build_snapshot_dataset"], "kernel_tests.snapshot_test.SnapshotCheckpointTest.testCheckpointAfterOneEpoch": ["kernel_tests.snapshot_test.SnapshotCheckpointTest._build_snapshot_dataset", "checkpoint_test_base.CheckpointTestBase.gen_outputs", "<builtin>.range", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual", "<builtin>.list"], "kernel_tests.snapshot_test.SnapshotCheckpointTest.testCheckpointAfterOneEpochRunFewSteps": ["kernel_tests.snapshot_test.SnapshotCheckpointTest._build_snapshot_dataset", "checkpoint_test_base.CheckpointTestBase.gen_outputs", "<builtin>.range", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual", "<builtin>.list"], "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest._build_snapshot_dataset": [], "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest._build_snapshot_dataset.ds_fn": ["os.path.join", "dataset_ops.Dataset.range", "os.mkdir", "ops.snapshot.legacy_snapshot", "parameterized.TestCase.get_temp_dir", "os.path.exists"], "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest": ["kernel_tests.test_base.graph_only_combinations", "framework.combinations.times", "framework.combinations.generate", "framework.combinations.combine", "kernel_tests.test_base.default_test_combinations"], "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest.testSnapshotBeforeEpochEnd": ["checkpoint_test_base.CheckpointTestBase.gen_outputs", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest._build_snapshot_dataset", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual"], "kernel_tests.test_base.graph_only_combinations": [], "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest.testCheckpointBeforeOneEpochThenRunFewStepsSmallShardMultiThread": ["os.path.join", "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest._build_snapshot_dataset", "<builtin>.list", "<builtin>.range", "checkpoint_test_base.CheckpointTestBase.gen_outputs", "os.listdir", "parameterized.TestCase.assertLen", "checkpoint_test_base.CheckpointTestBase._save", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual", "checkpoint_test_base.CheckpointTestBase.session", "checkpoint_test_base.CheckpointTestBase._initialize", "checkpoint_test_base.CheckpointTestBase._build_graph", "framework.ops.Graph"], "framework.ops.Graph": [], "checkpoint_test_base.CheckpointTestBase._build_graph": [], "checkpoint_test_base.CheckpointTestBase.session": [], "checkpoint_test_base.CheckpointTestBase._initialize": [], "checkpoint_test_base.CheckpointTestBase._save": [], "parameterized.TestCase.assertLen": [], "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest.testCheckpointBeforeOneEpochThenRunFewSteps": ["checkpoint_test_base.CheckpointTestBase.gen_outputs", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest._build_snapshot_dataset", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual"], "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest.testCheckpointBeforeOneEpochThenRunFewStepsMultipleThreads": ["checkpoint_test_base.CheckpointTestBase.gen_outputs", "<builtin>.range", "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest._build_snapshot_dataset", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual"], "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest.testCheckpointAfterOneEpoch": ["kernel_tests.snapshot_test.LegacySnapshotCheckpointTest._build_snapshot_dataset", "checkpoint_test_base.CheckpointTestBase.gen_outputs", "<builtin>.range", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual", "<builtin>.list"], "kernel_tests.snapshot_test.LegacySnapshotCheckpointTest.testCheckpointAfterOneEpochThenRunFewSteps": ["kernel_tests.snapshot_test.LegacySnapshotCheckpointTest._build_snapshot_dataset", "checkpoint_test_base.CheckpointTestBase.gen_outputs", "<builtin>.range", "checkpoint_test_base.CheckpointTestBase.assertSequenceEqual", "<builtin>.list"], "platform.test.main": []}