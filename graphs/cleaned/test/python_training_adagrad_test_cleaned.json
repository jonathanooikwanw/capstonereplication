{"training.adagrad_test": ["platform.test.main"], "training.adagrad_test.AdagradOptimizerTest.doTestBasic": ["<builtin>.zip", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "<builtin>.range", "training.adagrad_test.AdagradOptimizerTest.doTestBasic.<lambda1>", "test.TestCase.assertAllClose", "numpy.array", "training.adagrad.AdagradOptimizer", "ops.variables.global_variables_initializer", "eager.context.executing_eagerly", "framework.constant_op.constant", "ops.variables.Variable"], "ops.resource_variable_ops.ResourceVariable": [], "ops.variables.Variable": [], "framework.constant_op.constant": [], "training.adagrad_test.AdagradOptimizerTest.doTestBasic.<lambda1>": [], "training.adagrad.AdagradOptimizer": [], "eager.context.executing_eagerly": [], "<builtin>.zip": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "<builtin>.range": [], "numpy.array": [], "test.TestCase.assertAllCloseAccordingToType": [], "training.adagrad_test.AdagradOptimizerTest.testBasic": ["training.adagrad_test.AdagradOptimizerTest.doTestBasic"], "training.adagrad_test.AdagradOptimizerTest": ["framework.test_util.run_in_graph_and_eager_modes"], "framework.test_util.run_in_graph_and_eager_modes": [], "training.adagrad_test.AdagradOptimizerTest.testBasicResource": ["training.adagrad_test.AdagradOptimizerTest.doTestBasic"], "training.adagrad_test.AdagradOptimizerTest.testBasicCallableParams": ["eager.context.eager_mode", "training.adagrad_test.AdagradOptimizerTest.doTestBasic"], "eager.context.eager_mode": [], "training.adagrad_test.AdagradOptimizerTest.testBasicLocked": ["training.adagrad_test.AdagradOptimizerTest.doTestBasic"], "training.adagrad_test.AdagradOptimizerTest.testMinimizeSparseResourceVariable": ["test.TestCase.assertAllCloseAccordingToType", "ops.math_ops.matmul", "ops.resource_variable_ops.ResourceVariable", "framework.ops.Graph", "training.adagrad.AdagradOptimizer", "ops.variables.global_variables_initializer", "ops.embedding_ops.embedding_lookup", "test.TestCase.cached_session", "test.TestCase.evaluate", "framework.constant_op.constant"], "framework.ops.Graph": [], "test.TestCase.cached_session": [], "ops.embedding_ops.embedding_lookup": [], "ops.math_ops.matmul": [], "training.adagrad_test.AdagradOptimizerTest.testTensorLearningRate": ["<builtin>.zip", "test.TestCase.assertAllCloseAccordingToType", "<builtin>.range", "framework.ops.Graph", "test.TestCase.assertAllClose", "numpy.array", "training.adagrad.AdagradOptimizer", "ops.variables.global_variables_initializer", "test.TestCase.cached_session", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.variables.Variable"], "training.adagrad_test.AdagradOptimizerTest.testSparseBasic": ["<builtin>.zip", "test.TestCase.assertAllCloseAccordingToType", "<builtin>.range", "framework.ops.Graph", "test.TestCase.assertAllClose", "numpy.array", "training.adagrad.AdagradOptimizer", "ops.variables.global_variables_initializer", "framework.ops.IndexedSlices", "test.TestCase.cached_session", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.variables.Variable"], "framework.ops.IndexedSlices": [], "training.adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndices": ["<builtin>.range", "framework.ops.Graph", "test.TestCase.assertAllClose", "training.adagrad.AdagradOptimizer", "ops.variables.global_variables_initializer", "framework.ops.IndexedSlices", "test.TestCase.cached_session", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.variables.Variable"], "training.adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndicesResourceVariable": ["test.TestCase.assertAllCloseAccordingToType", "ops.resource_variable_ops.ResourceVariable", "<builtin>.range", "framework.ops.Graph", "ops.math_ops.reduce_sum", "training.adagrad.AdagradOptimizer", "ops.variables.global_variables_initializer", "ops.embedding_ops.embedding_lookup", "test.TestCase.cached_session", "test.TestCase.evaluate"], "ops.math_ops.reduce_sum": [], "training.adagrad_test.AdagradOptimizerTest.testSparseStability": ["<builtin>.zip", "test.TestCase.assertAllCloseAccordingToType", "<builtin>.range", "framework.ops.Graph", "numpy.array", "training.adagrad.AdagradOptimizer", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "framework.ops.IndexedSlices", "test.TestCase.cached_session", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.variables.Variable"], "test.TestCase.assertEqual": [], "training.adagrad_test.AdagradOptimizerTest.testSharing": ["<builtin>.zip", "test.TestCase.assertAllCloseAccordingToType", "framework.ops.Graph", "test.TestCase.assertAllClose", "numpy.array", "training.adagrad.AdagradOptimizer", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "test.TestCase.cached_session", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.variables.Variable"], "training.adagrad_test.AdagradOptimizerTest.testDynamicShapeVariableWithCallableInit": ["<builtin>.zip", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate", "<builtin>.range", "framework.ops.Graph", "test.TestCase.assertAllClose", "numpy.array", "training.adagrad.AdagradOptimizer", "ops.variables.global_variables_initializer", "ops.variable_scope.get_variable", "eager.context.executing_eagerly", "framework.constant_op.constant"], "ops.variable_scope.get_variable": [], "training.adagrad_test.AdagradOptimizerTest.testDynamicShapeVariableWithCallableInit.<lambda1>": [], "platform.test.main": []}