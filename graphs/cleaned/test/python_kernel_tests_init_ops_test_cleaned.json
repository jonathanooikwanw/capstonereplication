{"kernel_tests.init_ops_test": ["platform.test.main"], "kernel_tests.init_ops_test.identicaltest": ["numpy.allclose", "framework.ops.Graph", "test.TestCase.test_session"], "framework.ops.Graph": [], "test.TestCase.test_session": [], "numpy.allclose": [], "kernel_tests.init_ops_test.duplicated_initializer": ["numpy.allclose", "framework.random_seed.set_random_seed", "framework.ops.Graph", "test.TestCase.test_session"], "framework.random_seed.set_random_seed": [], "kernel_tests.init_ops_test._init_sampler": [], "kernel_tests.init_ops_test._init_sampler.func": [], "kernel_tests.init_ops_test.ConstantInitializersTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "kernel_tests.init_ops_test.ConstantInitializersTest.testZerosInitializer": ["test.TestCase.session", "ops.init_ops.zeros_initializer", "ops.variable_scope.get_variable", "numpy.zeros", "test.TestCase.evaluate", "test.TestCase.assertAllEqual"], "test.TestCase.session": [], "ops.init_ops.zeros_initializer": [], "ops.variable_scope.get_variable": [], "test.TestCase.evaluate": [], "numpy.zeros": [], "test.TestCase.assertAllEqual": [], "kernel_tests.init_ops_test.ConstantInitializersTest.testOnesInitializer": ["test.TestCase.session", "ops.variable_scope.get_variable", "ops.init_ops.ones_initializer", "test.TestCase.evaluate", "numpy.ones", "test.TestCase.assertAllEqual"], "ops.init_ops.ones_initializer": [], "numpy.ones": [], "kernel_tests.init_ops_test.ConstantInitializersTest.testConstantZeroInitializer": ["test.TestCase.session", "ops.init_ops.constant_initializer", "ops.variable_scope.get_variable", "numpy.zeros", "test.TestCase.evaluate", "test.TestCase.assertAllEqual"], "ops.init_ops.constant_initializer": [], "kernel_tests.init_ops_test.ConstantInitializersTest.testConstantOneInitializer": ["test.TestCase.session", "ops.init_ops.constant_initializer", "ops.variable_scope.get_variable", "test.TestCase.evaluate", "numpy.ones", "test.TestCase.assertAllEqual"], "kernel_tests.init_ops_test.ConstantInitializersTest.testConstantIntInitializer": ["test.TestCase.session", "ops.init_ops.constant_initializer", "ops.variable_scope.get_variable", "test.TestCase.assertEqual", "test.TestCase.evaluate", "numpy.ones", "test.TestCase.assertAllEqual"], "test.TestCase.assertEqual": [], "kernel_tests.init_ops_test.ConstantInitializersTest.testConstantTupleInitializer": ["test.TestCase.session", "ops.init_ops.constant_initializer", "ops.variable_scope.get_variable", "test.TestCase.assertEqual", "test.TestCase.evaluate", "test.TestCase.assertAllEqual"], "kernel_tests.init_ops_test.ConstantInitializersTest._testNDimConstantInitializer": ["test.TestCase.cached_session", "<builtin>.zip", "ops.variable_scope.get_variable", "ops.init_ops.constant_initializer", "test.TestCase.assertEqual", "ops.array_ops.reshape", "test.TestCase.evaluate", "<builtin>.len"], "test.TestCase.cached_session": [], "ops.array_ops.reshape": [], "<builtin>.len": [], "<builtin>.zip": [], "kernel_tests.init_ops_test.ConstantInitializersTest.testNDimConstantInitializer": ["<builtin>.tuple", "kernel_tests.init_ops_test.ConstantInitializersTest._testNDimConstantInitializer", "numpy.asarray", "<builtin>.list"], "<builtin>.list": [], "numpy.asarray": [], "<builtin>.tuple": [], "kernel_tests.init_ops_test.ConstantInitializersTest._testNDimConstantInitializerLessValues": ["test.TestCase.cached_session", "ops.variable_scope.get_variable", "ops.init_ops.constant_initializer", "test.TestCase.assertEqual", "ops.array_ops.reshape", "test.TestCase.assertGreater", "test.TestCase.evaluate", "<builtin>.len", "six.moves.xrange"], "test.TestCase.assertGreater": [], "six.moves.xrange": [], "kernel_tests.init_ops_test.ConstantInitializersTest.testNDimConstantInitializerLessValues": ["<builtin>.tuple", "kernel_tests.init_ops_test.ConstantInitializersTest._testNDimConstantInitializerLessValues", "numpy.asarray", "<builtin>.list"], "kernel_tests.init_ops_test.ConstantInitializersTest._testNDimConstantInitializerMoreValues": ["test.TestCase.assertRaises", "framework.ops.reset_default_graph", "ops.init_ops.constant_initializer", "test.TestCase.cached_session"], "framework.ops.reset_default_graph": [], "test.TestCase.assertRaises": [], "kernel_tests.init_ops_test.ConstantInitializersTest.testNDimConstantInitializerMoreValues": ["kernel_tests.init_ops_test.ConstantInitializersTest._testNDimConstantInitializerMoreValues", "numpy.asarray", "<builtin>.tuple"], "kernel_tests.init_ops_test.ConstantInitializersTest.testInvalidValueTypeForConstantInitializerCausesTypeError": ["test.TestCase.assertRaisesRegex", "ops.init_ops.constant_initializer", "framework.constant_op.constant", "ops.variables.Variable"], "framework.constant_op.constant": [], "test.TestCase.assertRaisesRegex": [], "ops.variables.Variable": [], "kernel_tests.init_ops_test.RandomNormalInitializationTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.RandomNormalInitializationTest.testInitializerIdentical": ["test.TestCase.assertTrue", "kernel_tests.init_ops_test.identicaltest", "ops.init_ops.random_normal_initializer"], "ops.init_ops.random_normal_initializer": [], "test.TestCase.assertTrue": [], "kernel_tests.init_ops_test.RandomNormalInitializationTest.testInitializerDifferent": ["kernel_tests.init_ops_test.identicaltest", "test.TestCase.assertFalse", "ops.init_ops.random_normal_initializer"], "test.TestCase.assertFalse": [], "kernel_tests.init_ops_test.RandomNormalInitializationTest.testDuplicatedInitializer": ["kernel_tests.init_ops_test.duplicated_initializer", "test.TestCase.assertFalse", "ops.init_ops.random_normal_initializer"], "kernel_tests.init_ops_test.RandomNormalInitializationTest.testInvalidDataType": ["test.TestCase.assertRaises"], "kernel_tests.init_ops_test.TruncatedNormalInitializationTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.TruncatedNormalInitializationTest.testInitializerIdentical": ["test.TestCase.assertTrue", "ops.init_ops.truncated_normal_initializer", "kernel_tests.init_ops_test.identicaltest"], "ops.init_ops.truncated_normal_initializer": [], "kernel_tests.init_ops_test.TruncatedNormalInitializationTest.testInitializerDifferent": ["ops.init_ops.truncated_normal_initializer", "kernel_tests.init_ops_test.identicaltest", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.TruncatedNormalInitializationTest.testDuplicatedInitializer": ["ops.init_ops.truncated_normal_initializer", "kernel_tests.init_ops_test.duplicated_initializer", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.TruncatedNormalInitializationTest.testInvalidDataType": ["test.TestCase.assertRaises"], "kernel_tests.init_ops_test.RandomUniformInitializationTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.RandomUniformInitializationTest.testInitializerIdentical": ["test.TestCase.assertTrue", "ops.init_ops.random_uniform_initializer", "kernel_tests.init_ops_test.identicaltest"], "ops.init_ops.random_uniform_initializer": [], "kernel_tests.init_ops_test.RandomUniformInitializationTest.testInitializerDifferent": ["ops.init_ops.random_uniform_initializer", "kernel_tests.init_ops_test.identicaltest", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.RandomUniformInitializationTest.testDuplicatedInitializer": ["ops.init_ops.random_uniform_initializer", "kernel_tests.init_ops_test.duplicated_initializer", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.UniformUnitScalingInitializationTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.UniformUnitScalingInitializationTest.testInitializerIdentical": ["test.TestCase.assertTrue", "kernel_tests.init_ops_test.identicaltest", "ops.init_ops.uniform_unit_scaling_initializer"], "ops.init_ops.uniform_unit_scaling_initializer": [], "kernel_tests.init_ops_test.UniformUnitScalingInitializationTest.testInitializerDifferent": ["kernel_tests.init_ops_test.identicaltest", "test.TestCase.assertFalse", "ops.init_ops.uniform_unit_scaling_initializer"], "kernel_tests.init_ops_test.UniformUnitScalingInitializationTest.testZeroSize": ["ops.variables.global_variables_initializer", "test.TestCase.cached_session", "ops.variable_scope.get_variable", "test.TestCase.evaluate", "ops.init_ops.uniform_unit_scaling_initializer", "test.TestCase.assertAllEqual"], "ops.variables.global_variables_initializer": [], "kernel_tests.init_ops_test.UniformUnitScalingInitializationTest.testDuplicatedInitializer": ["kernel_tests.init_ops_test.duplicated_initializer", "test.TestCase.assertFalse", "ops.init_ops.uniform_unit_scaling_initializer"], "kernel_tests.init_ops_test.UniformUnitScalingInitializationTest.testInvalidDataType": ["test.TestCase.assertRaises"], "kernel_tests.init_ops_test.VarianceScalingInitializationTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.VarianceScalingInitializationTest.testTruncatedNormalDistribution": ["test.TestCase.assertTrue", "test.TestCase.session", "numpy.var", "mock.patch.object", "ops.init_ops.variance_scaling_initializer", "numpy.mean", "test.TestCase.assertNear"], "ops.init_ops.variance_scaling_initializer": [], "mock.patch.object": [], "numpy.mean": [], "test.TestCase.assertNear": [], "numpy.var": [], "kernel_tests.init_ops_test.VarianceScalingInitializationTest.testNormalDistribution": ["test.TestCase.assertTrue", "test.TestCase.session", "numpy.var", "mock.patch.object", "ops.init_ops.variance_scaling_initializer", "numpy.mean", "test.TestCase.assertNear"], "kernel_tests.init_ops_test.VarianceScalingInitializationTest.testUntruncatedNormalDistribution": ["test.TestCase.assertTrue", "test.TestCase.session", "numpy.var", "mock.patch.object", "ops.init_ops.variance_scaling_initializer", "numpy.mean", "test.TestCase.assertNear"], "kernel_tests.init_ops_test.VarianceScalingInitializationTest.testUniformDistribution": ["test.TestCase.session", "numpy.var", "ops.init_ops.variance_scaling_initializer", "numpy.mean", "test.TestCase.assertNear"], "kernel_tests.init_ops_test.RangeTest._Range": ["test.TestCase.cached_session", "test.TestCase.assertEqual", "test.TestCase.evaluate", "ops.math_ops.range", "<builtin>.len", "numpy.arange"], "ops.math_ops.range": [], "numpy.arange": [], "kernel_tests.init_ops_test.RangeTest.testBasic": ["test.TestCase.assertTrue", "kernel_tests.init_ops_test.RangeTest._Range", "numpy.array", "test.TestCase.assertEqual", "numpy.array_equal", "ops.math_ops.range"], "numpy.array": [], "numpy.array_equal": [], "kernel_tests.init_ops_test.RangeTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.RangeTest.testLimitOnly": ["test.TestCase.session", "numpy.arange", "ops.math_ops.range", "test.TestCase.assertAllEqual"], "kernel_tests.init_ops_test.RangeTest.testEmpty": ["test.TestCase.assertTrue", "numpy.array_equal", "kernel_tests.init_ops_test.RangeTest._Range"], "kernel_tests.init_ops_test.RangeTest.testNonInteger": ["test.TestCase.assertTrue", "kernel_tests.init_ops_test.RangeTest._Range", "numpy.allclose", "numpy.array", "test.TestCase.assertEqual", "ops.math_ops.range"], "kernel_tests.init_ops_test.RangeTest.testNegativeDelta": ["test.TestCase.assertTrue", "kernel_tests.init_ops_test.RangeTest._Range", "numpy.allclose", "numpy.array", "numpy.array_equal"], "kernel_tests.init_ops_test.RangeTest.testDType": ["ops.math_ops.range", "ops.math_ops.cast", "test.TestCase.assertEqual"], "ops.math_ops.cast": [], "kernel_tests.init_ops_test.RangeTest.testMixedDType": ["numpy.array", "test.TestCase.evaluate", "ops.math_ops.range", "framework.constant_op.constant", "test.TestCase.assertAllEqual"], "kernel_tests.init_ops_test.LinSpaceTest._gpu_modes": ["platform.test.is_gpu_available"], "platform.test.is_gpu_available": [], "kernel_tests.init_ops_test.LinSpaceTest._LinSpace": ["test.TestCase.session", "ops.math_ops.linspace", "framework.ops.Graph", "test.TestCase.assertEqual", "test.TestCase.evaluate"], "ops.math_ops.linspace": [], "kernel_tests.init_ops_test.LinSpaceTest.testPositive": ["kernel_tests.init_ops_test.LinSpaceTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceTest._LinSpace", "test.TestCase.assertArrayNear", "numpy.array"], "test.TestCase.assertArrayNear": [], "kernel_tests.init_ops_test.LinSpaceTest.testNegative": ["kernel_tests.init_ops_test.LinSpaceTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceTest._LinSpace", "test.TestCase.assertArrayNear", "numpy.array"], "kernel_tests.init_ops_test.LinSpaceTest.testNegativeToPositive": ["kernel_tests.init_ops_test.LinSpaceTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceTest._LinSpace", "test.TestCase.assertArrayNear", "numpy.array"], "kernel_tests.init_ops_test.LinSpaceTest.testPoint": ["kernel_tests.init_ops_test.LinSpaceTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceTest._LinSpace", "test.TestCase.assertArrayNear", "numpy.array"], "kernel_tests.init_ops_test.LinSpaceTest.testEndpointsAreExact": ["kernel_tests.init_ops_test.LinSpaceTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceTest._LinSpace", "test.TestCase.assertAllEqual", "numpy.array"], "kernel_tests.init_ops_test.LinSpaceNdTest._gpu_modes": ["platform.test.is_gpu_available"], "kernel_tests.init_ops_test.LinSpaceNdTest._LinSpace": ["test.TestCase.session", "ops.math_ops.linspace_nd", "framework.ops.Graph", "test.TestCase.evaluate"], "ops.math_ops.linspace_nd": [], "kernel_tests.init_ops_test.LinSpaceNdTest._LinSpaceNumConstant": ["test.TestCase.session", "ops.math_ops.linspace_nd", "framework.ops.Graph", "test.TestCase.evaluate", "framework.constant_op.constant"], "kernel_tests.init_ops_test.LinSpaceNdTest._LinspaceNoneShape": ["ops.array_ops.placeholder", "test.TestCase.session", "ops.math_ops.linspace_nd", "framework.ops.Graph"], "ops.array_ops.placeholder": [], "kernel_tests.init_ops_test.LinSpaceNdTest.testPositive": ["kernel_tests.init_ops_test.LinSpaceNdTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceNdTest._LinSpace", "test.TestCase.assertArrayNear", "numpy.array"], "kernel_tests.init_ops_test.LinSpaceNdTest.testNegative": ["kernel_tests.init_ops_test.LinSpaceNdTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceNdTest._LinSpace", "test.TestCase.assertArrayNear", "numpy.array"], "kernel_tests.init_ops_test.LinSpaceNdTest.testNegativeToPositive": ["kernel_tests.init_ops_test.LinSpaceNdTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceNdTest._LinSpace", "test.TestCase.assertArrayNear", "numpy.array"], "kernel_tests.init_ops_test.LinSpaceNdTest.testPoint": ["kernel_tests.init_ops_test.LinSpaceNdTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceNdTest._LinSpace", "test.TestCase.assertArrayNear", "numpy.array"], "kernel_tests.init_ops_test.LinSpaceNdTest.testEndpointsAreExact": ["kernel_tests.init_ops_test.LinSpaceNdTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceNdTest._LinSpace", "test.TestCase.assertAllEqual", "numpy.array"], "kernel_tests.init_ops_test.LinSpaceNdTest.testScalarsCompareToNumpy": ["numpy.linspace", "kernel_tests.init_ops_test.LinSpaceNdTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceNdTest._LinSpace", "test.TestCase.assertArrayNear"], "numpy.linspace": [], "kernel_tests.init_ops_test.LinSpaceNdTest._baseNDArrayCompareToNumpy": ["kernel_tests.init_ops_test.LinSpaceNdTest.create_nd_inputs_and_expected_output", "kernel_tests.init_ops_test.LinSpaceNdTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceNdTest._LinSpace", "kernel_tests.init_ops_test.LinSpaceNdTest.assert_close"], "kernel_tests.init_ops_test.LinSpaceNdTest.create_nd_inputs_and_expected_output": ["numpy.arange", "numpy.array"], "kernel_tests.init_ops_test.LinSpaceNdTest.assert_close": ["test.TestCase.assertTrue", "numpy.where", "numpy.allclose"], "numpy.where": [], "kernel_tests.init_ops_test.LinSpaceNdTest.testNDArrayCompareToNumpyDefaultAxis": ["kernel_tests.init_ops_test.LinSpaceNdTest._baseNDArrayCompareToNumpy"], "kernel_tests.init_ops_test.LinSpaceNdTest.testNDArrayAxisStrictlyPositive": ["kernel_tests.init_ops_test.LinSpaceNdTest._baseNDArrayCompareToNumpy"], "kernel_tests.init_ops_test.LinSpaceNdTest.testNDArrayAxisStrictlyNegative": ["kernel_tests.init_ops_test.LinSpaceNdTest._baseNDArrayCompareToNumpy"], "kernel_tests.init_ops_test.LinSpaceNdTest.testNumConstant": ["numpy.linspace", "kernel_tests.init_ops_test.LinSpaceNdTest._gpu_modes", "test.TestCase.assertArrayNear", "kernel_tests.init_ops_test.LinSpaceNdTest._LinSpaceNumConstant"], "kernel_tests.init_ops_test.LinSpaceNdTest.testUnknownShapeAtGraphCreationTime": ["kernel_tests.init_ops_test.LinSpaceNdTest.base_test_unknown_shape"], "kernel_tests.init_ops_test.LinSpaceNdTest.base_test_unknown_shape": ["kernel_tests.init_ops_test.LinSpaceNdTest.create_nd_inputs_and_expected_output", "kernel_tests.init_ops_test.LinSpaceNdTest._gpu_modes", "kernel_tests.init_ops_test.LinSpaceNdTest.assert_close", "kernel_tests.init_ops_test.LinSpaceNdTest._LinspaceNoneShape"], "kernel_tests.init_ops_test.LinSpaceNdTest.testNoneValuesInShapeAtGraphCreationTime": ["kernel_tests.init_ops_test.LinSpaceNdTest.base_test_unknown_shape"], "kernel_tests.init_ops_test.LinSpaceNdTest.testNoneShapeAtGraphCreationTime": ["kernel_tests.init_ops_test.LinSpaceNdTest.base_test_unknown_shape"], "kernel_tests.init_ops_test.DeviceTest.testNoDevice": ["test.TestCase.assertDeviceEqual", "framework.ops.Graph", "ops.variables.Variable"], "test.TestCase.assertDeviceEqual": [], "kernel_tests.init_ops_test.DeviceTest.testDevice": ["framework.ops.device", "test.TestCase.assertDeviceEqual", "framework.ops.Graph", "ops.variables.Variable"], "framework.ops.device": [], "kernel_tests.init_ops_test.OrthogonalInitializerTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.OrthogonalInitializerTest.testInitializerIdentical": ["ops.init_ops.orthogonal_initializer", "test.TestCase.assertTrue", "kernel_tests.init_ops_test.identicaltest"], "ops.init_ops.orthogonal_initializer": [], "kernel_tests.init_ops_test.OrthogonalInitializerTest.testInitializerDifferent": ["ops.init_ops.orthogonal_initializer", "kernel_tests.init_ops_test.identicaltest", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.OrthogonalInitializerTest.testDuplicatedInitializer": ["ops.init_ops.orthogonal_initializer", "kernel_tests.init_ops_test.duplicated_initializer", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.OrthogonalInitializerTest.testInvalidDataType": ["test.TestCase.assertRaises"], "kernel_tests.init_ops_test.OrthogonalInitializerTest.testInvalidShape": ["ops.init_ops.orthogonal_initializer", "test.TestCase.session", "test.TestCase.assertRaises", "framework.ops.Graph"], "kernel_tests.init_ops_test.OrthogonalInitializerTest.testGain": ["ops.init_ops.orthogonal_initializer", "test.TestCase.session", "test.TestCase.assertAllClose", "framework.ops.Graph"], "test.TestCase.assertAllClose": [], "kernel_tests.init_ops_test.OrthogonalInitializerTest.testShapesValues": ["test.TestCase.session", "ops.init_ops.orthogonal_initializer", "numpy.eye", "framework.ops.Graph", "numpy.dot", "numpy.prod", "test.TestCase.assertAllEqual", "test.TestCase.assertAllClose"], "numpy.prod": [], "numpy.dot": [], "numpy.eye": [], "kernel_tests.init_ops_test.ConvolutionDeltaOrthogonalInitializerTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.ConvolutionDeltaOrthogonalInitializerTest.testInitializerIdentical": ["test.TestCase.assertTrue", "kernel_tests.init_ops_test.identicaltest", "ops.init_ops.convolutional_delta_orthogonal"], "ops.init_ops.convolutional_delta_orthogonal": [], "kernel_tests.init_ops_test.ConvolutionDeltaOrthogonalInitializerTest.testInitializerDifferent": ["kernel_tests.init_ops_test.identicaltest", "ops.init_ops.convolutional_delta_orthogonal", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.ConvolutionDeltaOrthogonalInitializerTest.testDuplicatedInitializer": ["ops.init_ops.convolutional_delta_orthogonal", "kernel_tests.init_ops_test.duplicated_initializer", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.ConvolutionDeltaOrthogonalInitializerTest.testInvalidDataType": ["test.TestCase.assertRaises"], "kernel_tests.init_ops_test.ConvolutionDeltaOrthogonalInitializerTest.testInvalidShape": ["test.TestCase.assertRaises", "test.TestCase.session", "framework.ops.Graph", "ops.init_ops.convolutional_delta_orthogonal"], "kernel_tests.init_ops_test.ConvolutionDeltaOrthogonalInitializerTest.testGain": ["test.TestCase.session", "framework.ops.Graph", "ops.init_ops.convolutional_delta_orthogonal", "test.TestCase.assertAllClose"], "kernel_tests.init_ops_test.ConvolutionDeltaOrthogonalInitializerTest.testShapesValues": ["test.TestCase.session", "ops.init_ops.convolutional_delta_orthogonal", "layers.convolutional.conv3d", "ops.variables.global_variables_initializer", "layers.convolutional.conv1d", "layers.convolutional.conv2d", "test.TestCase.evaluate", "ops.random_ops.random_normal", "<builtin>.len", "test.TestCase.assertAllClose", "test.TestCase.assertAllEqual", "ops.linalg_ops.norm"], "ops.random_ops.random_normal": [], "ops.linalg_ops.norm": [], "layers.convolutional.conv1d": [], "layers.convolutional.conv2d": [], "layers.convolutional.conv3d": [], "kernel_tests.init_ops_test.ConvolutionDeltaOrthogonalInitializerTest.testNonuniformity": ["test.TestCase.assertLess", "test.TestCase.session", "numpy.abs", "numpy.linalg.det", "ops.variable_scope.get_variable", "test.TestCase.evaluate", "<builtin>.range", "test.TestCase.assertAllClose"], "<builtin>.range": [], "numpy.linalg.det": [], "numpy.abs": [], "test.TestCase.assertLess": [], "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest.testInitializerIdentical": ["test.TestCase.assertTrue", "ops.init_ops.convolutional_orthogonal_1d", "kernel_tests.init_ops_test.identicaltest"], "ops.init_ops.convolutional_orthogonal_1d": [], "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest.testInitializerDifferent": ["ops.init_ops.convolutional_orthogonal_1d", "kernel_tests.init_ops_test.identicaltest", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest.testDuplicatedInitializer": ["ops.init_ops.convolutional_orthogonal_1d", "kernel_tests.init_ops_test.duplicated_initializer", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest.testInvalidDataType": ["test.TestCase.assertRaises"], "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest.testInvalidShape": ["test.TestCase.assertRaises", "test.TestCase.session", "ops.init_ops.convolutional_orthogonal_1d", "framework.ops.Graph"], "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest.testGain": ["test.TestCase.session", "ops.init_ops.convolutional_orthogonal_1d", "framework.ops.Graph", "test.TestCase.assertAllClose"], "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest.testNonuniformity": ["test.TestCase.assertLess", "test.TestCase.session", "numpy.abs", "numpy.linalg.det", "ops.variable_scope.get_variable", "test.TestCase.evaluate", "<builtin>.range", "test.TestCase.assertAllClose", "numpy.sum"], "numpy.sum": [], "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest.testShapesValues": ["test.TestCase.session", "ops.variables.global_variables_initializer", "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest.testShapesValues.circular_pad", "layers.convolutional.conv1d", "test.TestCase.evaluate", "ops.random_ops.random_normal", "test.TestCase.assertAllClose", "ops.init_ops.convolutional_orthogonal_1d", "test.TestCase.assertAllEqual", "ops.linalg_ops.norm"], "kernel_tests.init_ops_test.ConvolutionOrthogonal1dInitializerTest.testShapesValues.circular_pad": ["ops.array_ops.concat", "ops.array_ops.slice"], "ops.array_ops.slice": [], "ops.array_ops.concat": [], "kernel_tests.init_ops_test.ConvolutionOrthogonal2dInitializerTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.ConvolutionOrthogonal2dInitializerTest.testInitializerIdentical": ["test.TestCase.assertTrue", "ops.init_ops.convolutional_orthogonal_2d", "kernel_tests.init_ops_test.identicaltest"], "ops.init_ops.convolutional_orthogonal_2d": [], "kernel_tests.init_ops_test.ConvolutionOrthogonal2dInitializerTest.testInitializerDifferent": ["ops.init_ops.convolutional_orthogonal_2d", "kernel_tests.init_ops_test.identicaltest", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.ConvolutionOrthogonal2dInitializerTest.testDuplicatedInitializer": ["ops.init_ops.convolutional_orthogonal_2d", "kernel_tests.init_ops_test.duplicated_initializer", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.ConvolutionOrthogonal2dInitializerTest.testInvalidDataType": ["test.TestCase.assertRaises"], "kernel_tests.init_ops_test.ConvolutionOrthogonal2dInitializerTest.testInvalidShape": ["test.TestCase.assertRaises", "test.TestCase.session", "ops.init_ops.convolutional_orthogonal_2d", "framework.ops.Graph"], "kernel_tests.init_ops_test.ConvolutionOrthogonal2dInitializerTest.testGain": ["test.TestCase.session", "ops.init_ops.convolutional_orthogonal_2d", "test.TestCase.assertAllClose", "framework.ops.Graph"], "kernel_tests.init_ops_test.ConvolutionOrthogonal2dInitializerTest.testShapesValues": ["test.TestCase.session", "ops.variables.global_variables_initializer", "ops.init_ops.convolutional_orthogonal_2d", "layers.convolutional.conv2d", "test.TestCase.evaluate", "ops.random_ops.random_normal", "test.TestCase.assertAllClose", "test.TestCase.assertAllEqual", "kernel_tests.init_ops_test.ConvolutionOrthogonal2dInitializerTest.testShapesValues.circular_pad", "ops.linalg_ops.norm"], "kernel_tests.init_ops_test.ConvolutionOrthogonal2dInitializerTest.testShapesValues.circular_pad": ["ops.array_ops.concat", "ops.array_ops.slice"], "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest.testInitializerIdentical": ["test.TestCase.assertTrue", "ops.init_ops.convolutional_orthogonal_3d", "kernel_tests.init_ops_test.identicaltest"], "ops.init_ops.convolutional_orthogonal_3d": [], "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest.testInitializerDifferent": ["ops.init_ops.convolutional_orthogonal_3d", "kernel_tests.init_ops_test.identicaltest", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest.testDuplicatedInitializer": ["ops.init_ops.convolutional_orthogonal_3d", "kernel_tests.init_ops_test.duplicated_initializer", "test.TestCase.assertFalse"], "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest.testInvalidDataType": ["test.TestCase.assertRaises"], "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest.testInvalidShape": ["test.TestCase.assertRaises", "test.TestCase.session", "ops.init_ops.convolutional_orthogonal_3d", "framework.ops.Graph"], "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest.testGain": ["test.TestCase.session", "ops.init_ops.convolutional_orthogonal_3d", "framework.ops.Graph", "test.TestCase.assertAllClose"], "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest.testNonuniformity": ["test.TestCase.assertLess", "test.TestCase.session", "numpy.abs", "numpy.linalg.det", "ops.variable_scope.get_variable", "test.TestCase.evaluate", "<builtin>.range", "test.TestCase.assertAllClose", "numpy.sum"], "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest.testShapesValues": ["ops.init_ops.convolutional_orthogonal_3d", "layers.convolutional.conv3d", "ops.variables.global_variables_initializer", "test.TestCase.cached_session", "test.TestCase.evaluate", "ops.random_ops.random_normal", "test.TestCase.assertAllClose", "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest.testShapesValues.circular_pad", "test.TestCase.assertAllEqual", "ops.linalg_ops.norm"], "kernel_tests.init_ops_test.ConvolutionOrthogonal3dInitializerTest.testShapesValues.circular_pad": ["ops.array_ops.concat", "ops.array_ops.slice"], "kernel_tests.init_ops_test.IdentityInitializerTest.testInvalidDataType": ["test.TestCase.assertRaises"], "kernel_tests.init_ops_test.IdentityInitializerTest.testInvalidShape": ["test.TestCase.assertRaises", "test.TestCase.session", "framework.ops.Graph", "ops.init_ops.identity_initializer"], "ops.init_ops.identity_initializer": [], "kernel_tests.init_ops_test.IdentityInitializerTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.init_ops_test.IdentityInitializerTest.testNonSquare": ["test.TestCase.session", "numpy.eye", "framework.ops.Graph", "test.TestCase.assertAllClose", "ops.init_ops.identity_initializer"], "kernel_tests.init_ops_test.IdentityInitializerTest.testGain": ["test.TestCase.session", "numpy.eye", "framework.ops.Graph", "test.TestCase.assertAllClose", "ops.init_ops.identity_initializer"], "kernel_tests.init_ops_test.IdentityInitializerTest.testPartitions": ["test.TestCase.session", "ops.array_ops.identity", "ops.variables.global_variables_initializer", "numpy.eye", "framework.ops.Graph", "ops.variable_scope.get_variable", "test.TestCase.evaluate", "ops.init_ops.identity_initializer", "test.TestCase.assertAllClose", "ops.partitioned_variables.variable_axis_size_partitioner", "ops.variable_scope.variable_scope"], "ops.partitioned_variables.variable_axis_size_partitioner": [], "ops.variable_scope.variable_scope": [], "ops.array_ops.identity": [], "platform.test.main": []}