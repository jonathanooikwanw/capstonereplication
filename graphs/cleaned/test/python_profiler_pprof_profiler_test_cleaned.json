{"profiler.pprof_profiler_test": ["platform.test.main"], "profiler.pprof_profiler_test.PprofProfilerTest.testDataEmpty": ["<builtin>.len", "profiler.pprof_profiler.get_profiles", "profiler.pprof_profiler.profile", "test.TestCase.assertEqual", "platform.test.get_temp_dir", "protobuf.config_pb2.RunMetadata", "test.mock.MagicMock"], "platform.test.get_temp_dir": [], "protobuf.config_pb2.RunMetadata": [], "test.mock.MagicMock": [], "profiler.pprof_profiler.get_profiles": [], "<builtin>.len": [], "test.TestCase.assertEqual": [], "profiler.pprof_profiler.profile": [], "profiler.pprof_profiler_test.PprofProfilerTest.testRunMetadataEmpty": ["<builtin>.len", "profiler.pprof_profiler.get_profiles", "profiler.pprof_profiler.profile", "test.TestCase.assertEqual", "platform.test.get_temp_dir", "protobuf.config_pb2.RunMetadata", "test.mock.MagicMock"], "profiler.pprof_profiler_test.PprofProfilerTest.testValidProfile": ["<builtin>.str", "proto.profile_pb2.Profile", "<builtin>.len", "test.TestCase.assertTrue", "framework.step_stats_pb2.NodeExecStats", "profiler.pprof_profiler.get_profiles", "profiler.pprof_profiler.profile", "test.TestCase.assertEqual", "platform.test.get_temp_dir", "gzip.open", "protobuf.config_pb2.RunMetadata", "test.mock.MagicMock"], "framework.step_stats_pb2.NodeExecStats": [], "test.TestCase.assertTrue": [], "<builtin>.str": [], "gzip.open": [], "proto.profile_pb2.Profile": [], "framework.test_util.run_v1_only": [], "profiler.pprof_profiler_test.PprofProfilerTest": ["framework.test_util.run_v1_only"], "profiler.pprof_profiler_test.PprofProfilerTest.testProfileWithWhileLoop": ["<builtin>.len", "framework.constant_op.constant", "ops.control_flow_ops.while_loop", "profiler.pprof_profiler.get_profiles", "test.TestCase.cached_session", "protobuf.config_pb2.RunOptions", "test.TestCase.assertEqual", "<builtin>.next", "<builtin>.iter", "protobuf.config_pb2.RunMetadata"], "protobuf.config_pb2.RunOptions": [], "test.TestCase.cached_session": [], "framework.constant_op.constant": [], "profiler.pprof_profiler_test.PprofProfilerTest.testProfileWithWhileLoop.<lambda1>": ["ops.math_ops.less"], "ops.math_ops.less": [], "profiler.pprof_profiler_test.PprofProfilerTest.testProfileWithWhileLoop.<lambda2>": ["ops.math_ops.add"], "ops.math_ops.add": [], "ops.control_flow_ops.while_loop": [], "<builtin>.iter": [], "<builtin>.next": [], "platform.test.main": []}