{"util.structure_test": ["platform.test.main"], "util.structure_test._test_flat_structure_combinations": ["functools.reduce"], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda1>": [], "framework.constant_op.constant": [], "util.structure_test._test_flat_structure_combinations.<lambda1>": ["framework.constant_op.constant"], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda2>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda3>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda4>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda5>": [], "ops.tensor_array_ops.TensorArray": [], "util.structure_test._test_flat_structure_combinations.<lambda5>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda6>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda7>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda8>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda9>": [], "framework.sparse_tensor.SparseTensor": [], "util.structure_test._test_flat_structure_combinations.<lambda9>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda10>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda11>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda12>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda13>": [], "ragged.ragged_factory_ops.constant": [], "util.structure_test._test_flat_structure_combinations.<lambda13>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda14>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda15>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda16>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda17>": [], "util.structure_test._test_flat_structure_combinations.<lambda17>": ["framework.constant_op.constant"], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda18>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda19>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda20>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda21>": [], "util.structure_test._test_flat_structure_combinations.<lambda21>": ["framework.constant_op.constant"], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda22>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda23>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda24>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda25>": [], "util.structure_test._test_flat_structure_combinations.<lambda25>": ["framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda26>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda27>": [], "util.structure_test._test_flat_structure_combinations.<list1>.<lambda28>": [], "util.structure_test._test_flat_structure_combinations.reduce_fn": ["framework.combinations.combine", "framework.combinations.NamedObject"], "framework.combinations.NamedObject": [], "framework.combinations.combine": [], "functools.reduce": [], "util.structure_test._test_is_compatible_with_structure_combinations": ["functools.reduce"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda1>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda1>": ["framework.constant_op.constant"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda2>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda2>": ["ops.variables.Variable", "framework.constant_op.constant", "numpy.array", "ops.array_ops.placeholder"], "ops.array_ops.placeholder": [], "ops.variables.Variable": [], "numpy.array": [], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda3>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda3>": ["framework.constant_op.constant"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda4>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda4>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda5>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda5>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda6>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda6>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda7>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda7>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda8>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda8>": ["framework.sparse_tensor.SparseTensorValue", "ops.array_ops.sparse_placeholder", "framework.sparse_tensor.SparseTensor"], "framework.sparse_tensor.SparseTensorValue": [], "ops.array_ops.sparse_placeholder": [], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda9>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda9>": ["ops.array_ops.sparse_placeholder", "framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda10>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda10>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda11>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda11>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda12>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda12>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda13>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda13>": ["framework.constant_op.constant"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda14>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda14>": ["framework.constant_op.constant"], "util.structure_test._test_is_compatible_with_structure_combinations.<list1>.<lambda15>": [], "util.structure_test._test_is_compatible_with_structure_combinations.<lambda15>": ["framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "util.structure_test._test_is_compatible_with_structure_combinations.reduce_fn": ["framework.combinations.combine", "framework.combinations.NamedObject"], "util.structure_test._test_structure_from_value_equality_combinations": ["functools.reduce"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda1>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda1>": ["framework.constant_op.constant"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda2>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda2>": ["framework.constant_op.constant"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda3>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda3>": ["framework.constant_op.constant"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda4>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda4>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda5>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda5>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda6>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda6>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda7>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda7>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda8>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda8>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda9>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda9>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda10>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda10>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda11>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda11>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda12>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda12>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda13>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda13>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda14>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda14>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda15>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda15>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda16>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda16>": ["framework.constant_op.constant"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda17>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda17>": ["framework.constant_op.constant"], "util.structure_test._test_structure_from_value_equality_combinations.<list1>.<lambda18>": [], "util.structure_test._test_structure_from_value_equality_combinations.<lambda18>": ["framework.constant_op.constant"], "util.structure_test._test_structure_from_value_equality_combinations.reduce_fn": ["framework.combinations.combine", "framework.combinations.NamedObject"], "util.structure_test._test_ragged_structure_inequality_combinations": ["functools.reduce", "ragged.ragged_tensor.RaggedTensorSpec"], "ragged.ragged_tensor.RaggedTensorSpec": [], "util.structure_test._test_ragged_structure_inequality_combinations.reduce_fn": ["framework.combinations.combine"], "util.structure_test._test_hash_combinations": ["functools.reduce"], "util.structure_test._test_hash_combinations.<list1>.<lambda1>": [], "util.structure_test._test_hash_combinations.<lambda1>": ["framework.constant_op.constant"], "util.structure_test._test_hash_combinations.<list1>.<lambda2>": [], "util.structure_test._test_hash_combinations.<lambda2>": ["framework.constant_op.constant"], "util.structure_test._test_hash_combinations.<list1>.<lambda3>": [], "util.structure_test._test_hash_combinations.<lambda3>": ["framework.constant_op.constant"], "util.structure_test._test_hash_combinations.<list1>.<lambda4>": [], "util.structure_test._test_hash_combinations.<lambda4>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_hash_combinations.<list1>.<lambda5>": [], "util.structure_test._test_hash_combinations.<lambda5>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_hash_combinations.<list1>.<lambda6>": [], "util.structure_test._test_hash_combinations.<lambda6>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_hash_combinations.<list1>.<lambda7>": [], "util.structure_test._test_hash_combinations.<lambda7>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_hash_combinations.<list1>.<lambda8>": [], "util.structure_test._test_hash_combinations.<lambda8>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_hash_combinations.<list1>.<lambda9>": [], "util.structure_test._test_hash_combinations.<lambda9>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_hash_combinations.<list1>.<lambda10>": [], "util.structure_test._test_hash_combinations.<lambda10>": ["framework.constant_op.constant"], "util.structure_test._test_hash_combinations.<list1>.<lambda11>": [], "util.structure_test._test_hash_combinations.<lambda11>": ["framework.constant_op.constant"], "util.structure_test._test_hash_combinations.<list1>.<lambda12>": [], "util.structure_test._test_hash_combinations.<lambda12>": ["framework.constant_op.constant"], "util.structure_test._test_hash_combinations.reduce_fn": ["framework.combinations.combine", "framework.combinations.NamedObject"], "util.structure_test._test_round_trip_conversion_combinations": ["functools.reduce"], "util.structure_test._test_round_trip_conversion_combinations.<list1>.<lambda1>": [], "util.structure_test._test_round_trip_conversion_combinations.<lambda1>": ["framework.constant_op.constant"], "util.structure_test._test_round_trip_conversion_combinations.<list1>.<lambda2>": [], "util.structure_test._test_round_trip_conversion_combinations.<lambda2>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_round_trip_conversion_combinations.<list1>.<lambda3>": [], "util.structure_test._test_round_trip_conversion_combinations.<lambda3>": ["ops.tensor_array_ops.TensorArray"], "util.structure_test._test_round_trip_conversion_combinations.<list1>.<lambda4>": [], "util.structure_test._test_round_trip_conversion_combinations.<lambda4>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_round_trip_conversion_combinations.<list1>.<lambda5>": [], "util.structure_test._test_round_trip_conversion_combinations.<lambda5>": ["framework.constant_op.constant"], "util.structure_test._test_round_trip_conversion_combinations.<list1>.<lambda6>": [], "util.structure_test._test_round_trip_conversion_combinations.<lambda6>": ["framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "util.structure_test._test_round_trip_conversion_combinations.reduce_fn": ["framework.combinations.combine", "framework.combinations.NamedObject"], "util.structure_test._test_convert_legacy_structure_combinations": ["ops.tensor_array_ops.TensorArraySpec", "framework.tensor_spec.TensorSpec", "functools.reduce", "framework.tensor_shape.TensorShape", "ragged.ragged_tensor.RaggedTensorSpec", "framework.sparse_tensor.SparseTensorSpec"], "framework.tensor_shape.TensorShape": [], "framework.tensor_spec.TensorSpec": [], "framework.sparse_tensor.SparseTensorSpec": [], "ops.tensor_array_ops.TensorArraySpec": [], "util.structure_test._test_convert_legacy_structure_combinations.reduce_fn": ["framework.combinations.combine"], "util.structure_test._test_batch_combinations": ["framework.sparse_tensor.SparseTensorSpec", "functools.reduce", "ragged.ragged_tensor.RaggedTensorSpec", "framework.tensor_spec.TensorSpec"], "util.structure_test._test_batch_combinations.reduce_fn": ["framework.combinations.combine"], "util.structure_test._test_unbatch_combinations": ["framework.sparse_tensor.SparseTensorSpec", "functools.reduce", "ragged.ragged_tensor.RaggedTensorSpec", "framework.tensor_spec.TensorSpec"], "util.structure_test._test_unbatch_combinations.reduce_fn": ["framework.combinations.combine"], "util.structure_test._test_to_batched_tensor_list_combinations": ["functools.reduce"], "util.structure_test._test_to_batched_tensor_list_combinations.<list1>.<lambda1>": [], "util.structure_test._test_to_batched_tensor_list_combinations.<lambda1>": ["framework.constant_op.constant"], "util.structure_test._test_to_batched_tensor_list_combinations.<list1>.<lambda2>": [], "util.structure_test._test_to_batched_tensor_list_combinations.<lambda2>": ["framework.constant_op.constant"], "util.structure_test._test_to_batched_tensor_list_combinations.<list1>.<lambda3>": [], "util.structure_test._test_to_batched_tensor_list_combinations.<lambda3>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_to_batched_tensor_list_combinations.<list1>.<lambda4>": [], "util.structure_test._test_to_batched_tensor_list_combinations.<lambda4>": ["framework.sparse_tensor.SparseTensor"], "util.structure_test._test_to_batched_tensor_list_combinations.<list1>.<lambda5>": [], "util.structure_test._test_to_batched_tensor_list_combinations.<lambda5>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_to_batched_tensor_list_combinations.<list1>.<lambda6>": [], "util.structure_test._test_to_batched_tensor_list_combinations.<lambda6>": ["ragged.ragged_factory_ops.constant"], "util.structure_test._test_to_batched_tensor_list_combinations.<list1>.<lambda7>": [], "util.structure_test._test_to_batched_tensor_list_combinations.<lambda7>": ["framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "util.structure_test._test_to_batched_tensor_list_combinations.<list1>.<lambda8>": [], "util.structure_test._test_to_batched_tensor_list_combinations.<lambda8>": ["framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "util.structure_test._test_to_batched_tensor_list_combinations.reduce_fn": ["framework.combinations.combine", "framework.combinations.NamedObject"], "kernel_tests.test_base.default_test_combinations": [], "util.structure_test.StructureTest": ["util.structure_test._test_convert_legacy_structure_combinations", "util.structure_test._test_round_trip_conversion_combinations", "framework.combinations.times", "util.structure_test._test_is_compatible_with_structure_combinations", "util.structure_test._test_to_batched_tensor_list_combinations", "util.structure_test._test_structure_from_value_equality_combinations", "kernel_tests.test_base.default_test_combinations", "util.structure_test._test_batch_combinations", "util.structure_test._test_flat_structure_combinations", "util.structure_test._test_ragged_structure_inequality_combinations", "util.structure_test._test_unbatch_combinations", "util.structure_test._test_hash_combinations", "kernel_tests.test_base.graph_only_combinations", "framework.combinations.generate"], "framework.combinations.times": [], "framework.combinations.generate": [], "util.structure_test.StructureTest.testFlatStructure": ["util.structure.type_spec_from_value", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertLen", "util.structure.get_flat_tensor_shapes", "<builtin>.len", "<builtin>.zip", "test_base.DatasetTestBase.assertIsInstance", "util.structure.get_flat_tensor_types"], "util.structure.type_spec_from_value": [], "test_base.DatasetTestBase.assertIsInstance": [], "util.structure.get_flat_tensor_types": [], "test_base.DatasetTestBase.assertEqual": [], "util.structure.get_flat_tensor_shapes": [], "<builtin>.len": [], "test_base.DatasetTestBase.assertLen": [], "<builtin>.zip": [], "kernel_tests.test_base.graph_only_combinations": [], "util.structure_test.StructureTest.testIsCompatibleWithStructure": ["util.structure.type_spec_from_value", "test_base.DatasetTestBase.assertFalse", "test_base.DatasetTestBase.assertTrue", "util.structure.are_compatible"], "util.structure.are_compatible": [], "test_base.DatasetTestBase.assertTrue": [], "test_base.DatasetTestBase.assertFalse": [], "util.structure_test.StructureTest.testStructureFromValueEquality": ["util.structure.type_spec_from_value", "test_base.DatasetTestBase.assertFalse", "<builtin>.hash", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertNotEqual", "util.nest.flatten", "<builtin>.zip"], "util.nest.flatten": [], "<builtin>.hash": [], "test_base.DatasetTestBase.assertNotEqual": [], "util.structure_test.StructureTest.testRaggedStructureInequality": ["test_base.DatasetTestBase.assertNotEqual", "test_base.DatasetTestBase.assertFalse"], "util.structure_test.StructureTest.testHash": ["util.structure.type_spec_from_value", "<builtin>.hash", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertNotEqual", "util.nest.flatten", "<builtin>.zip"], "util.structure_test.StructureTest.testRoundTripConversion": ["util.structure.type_spec_from_value", "util.structure.to_tensor_list", "util.nest.flatten", "util.structure.from_tensor_list", "<builtin>.isinstance", "test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.evaluate", "util.structure_test.StructureTest.testRoundTripConversion.maybe_stack_ta", "<builtin>.zip"], "util.structure_test.StructureTest.testRoundTripConversion.maybe_stack_ta": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "test_base.DatasetTestBase.evaluate": [], "util.structure.to_tensor_list": [], "util.structure.from_tensor_list": [], "test_base.DatasetTestBase.assertAllEqual": [], "util.structure_test.StructureTest.preserveStaticShape": ["util.structure.type_spec_from_value", "framework.sparse_tensor.SparseTensor", "test_base.DatasetTestBase.assertEqual", "util.structure.to_tensor_list", "util.structure.from_tensor_list", "ragged.ragged_factory_ops.constant"], "util.structure_test.StructureTest.testPreserveTensorArrayShape": ["util.structure.type_spec_from_value", "test_base.DatasetTestBase.assertEqual", "util.structure.to_tensor_list", "util.structure.from_tensor_list", "ops.tensor_array_ops.TensorArray"], "util.structure_test.StructureTest.testPreserveInferredTensorArrayShape": ["util.structure.type_spec_from_value", "test_base.DatasetTestBase.assertEqual", "util.structure.to_tensor_list", "util.structure.from_tensor_list", "ops.tensor_array_ops.TensorArray"], "util.structure_test.StructureTest.testIncompatibleStructure": ["util.structure.type_spec_from_value", "framework.sparse_tensor.SparseTensor", "test_base.DatasetTestBase.assertRaisesRegex", "util.structure.to_tensor_list", "util.structure.from_tensor_list", "framework.constant_op.constant"], "test_base.DatasetTestBase.assertRaisesRegex": [], "util.structure_test.StructureTest.testIncompatibleNestedStructure": ["util.structure.type_spec_from_value", "framework.sparse_tensor.SparseTensor", "test_base.DatasetTestBase.assertRaisesRegex", "util.structure.to_tensor_list", "util.structure.from_tensor_list", "framework.constant_op.constant"], "util.structure_test.StructureTest.testConvertLegacyStructure": ["test_base.DatasetTestBase.assertEqual", "util.structure.convert_legacy_structure"], "util.structure.convert_legacy_structure": [], "util.structure_test.StructureTest.testNestedNestedStructure": ["framework.tensor_spec.TensorSpec", "util.structure.to_tensor_list", "util.structure.from_tensor_list", "framework.constant_op.constant", "<builtin>.zip", "util.structure.from_compatible_tensor_list", "test_base.DatasetTestBase.assertIs"], "test_base.DatasetTestBase.assertIs": [], "util.structure.from_compatible_tensor_list": [], "util.structure_test.StructureTest.testBatch": ["util.nest.map_structure", "test_base.DatasetTestBase.assertEqual"], "util.structure_test.StructureTest.testBatch.<lambda1>": [], "util.nest.map_structure": [], "util.structure_test.StructureTest.testUnbatch": ["util.nest.map_structure", "test_base.DatasetTestBase.assertEqual"], "util.structure_test.StructureTest.testUnbatch.<lambda1>": [], "util.structure_test.StructureTest.testToBatchedTensorList": ["util.structure.type_spec_from_value", "util.nest.map_structure", "test_base.DatasetTestBase.assertValuesEqual", "ops.array_ops.shape", "test_base.DatasetTestBase.assertEqual", "util.nest.flatten", "util.structure.from_tensor_list", "test_base.DatasetTestBase.evaluate", "<builtin>.zip", "util.structure.to_batched_tensor_list"], "util.structure.to_batched_tensor_list": [], "ops.array_ops.shape": [], "util.structure_test.StructureTest.testToBatchedTensorList.<lambda1>": [], "test_base.DatasetTestBase.assertValuesEqual": [], "util.structure_test.StructureTest.testDatasetSpecConstructor": ["ops.dataset_ops.DatasetSpec", "framework.tensor_spec.TensorSpec", "test_base.DatasetTestBase.assertEqual", "framework.tensor_shape.TensorShape", "ragged.ragged_tensor.RaggedTensorSpec", "framework.sparse_tensor.SparseTensorSpec"], "ops.dataset_ops.DatasetSpec": [], "util.structure_test.StructureTest.testCustomMapping": ["util.structure.type_spec_from_value", "framework.tensor_spec.TensorSpec", "util.structure_test.CustomMap.__init__", "test_base.DatasetTestBase.assertEqual", "framework.constant_op.constant", "test_base.DatasetTestBase.assertIsInstance"], "util.structure_test.CustomMap.__init__": ["Mapping.__dict__.update", "<builtin>.dict"], "util.structure_test.StructureTest.testObjectProxy": ["util.structure.type_spec_from_value", "collections.namedtuple", "wrapt.ObjectProxy", "test_base.DatasetTestBase.assertEqual"], "collections.namedtuple": [], "wrapt.ObjectProxy": [], "<builtin>.dict": [], "Mapping.__dict__.update": [], "util.structure_test.CustomMap.__getitem__": [], "util.structure_test.CustomMap.__iter__": ["<builtin>.iter"], "<builtin>.iter": [], "util.structure_test.CustomMap.__len__": ["<builtin>.len"], "platform.test.main": []}