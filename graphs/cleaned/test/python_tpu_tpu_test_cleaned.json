{"tpu.tpu_test": ["platform.test.main"], "tpu.tpu_test.TPUContextTest.testIsInContext": ["ops.array_ops.identity", "ops.control_flow_util.IsInXLAContext", "test.TestCase.assertFalse", "tpu.tpu.TPUReplicateContext", "test.TestCase.assertTrue", "framework.ops.Graph", "ops.control_flow_ops.no_op"], "framework.ops.Graph": [], "ops.array_ops.identity": [], "ops.control_flow_ops.no_op": [], "tpu.tpu.TPUReplicateContext": [], "ops.control_flow_util.IsInXLAContext": [], "test.TestCase.assertFalse": [], "test.TestCase.assertTrue": [], "tpu.tpu_test.TPUContextTest.testHandlesNameCollision": ["ops.array_ops.zeros", "framework.ops.Graph"], "ops.array_ops.zeros": [], "tpu.tpu_test.TPUContextTest.testHandlesNameCollision.f": ["ops.array_ops.zeros", "ops.array_ops.identity", "tpu.tpu.TPUReplicateContext", "ops.control_flow_ops.no_op"], "tpu.tpu_test.TPULayerRewriteTest.testUsingInfeedQueueWithRegularizer": ["ops.array_ops.ones", "tpu.tpu_feed.InfeedQueue", "ops.array_ops.zeros", "tpu.tpu.rewrite", "framework.ops.Graph"], "tpu.tpu_test.TPULayerRewriteTest.testUsingInfeedQueueWithRegularizer.make_regularizer": [], "tpu.tpu_test.TPULayerRewriteTest.testUsingInfeedQueueWithRegularizer.make_regularizer.regularizer": ["ops.math_ops.reduce_sum", "ops.math_ops.square"], "ops.math_ops.square": [], "ops.math_ops.reduce_sum": [], "tpu.tpu_test.TPULayerRewriteTest.testUsingInfeedQueueWithRegularizer.training_step": ["layers.convolutional.conv2d", "ops.math_ops.reduce_mean", "tpu.tpu_test.TPULayerRewriteTest.testUsingInfeedQueueWithRegularizer.make_regularizer", "ops.math_ops.square"], "layers.convolutional.conv2d": [], "ops.math_ops.reduce_mean": [], "ops.array_ops.ones": [], "tpu.tpu_feed.InfeedQueue": [], "tpu.tpu_test.TPULayerRewriteTest.testUsingInfeedQueueWithRegularizer.loop": ["tpu.training_loop.repeat"], "tpu.training_loop.repeat": [], "tpu.tpu.rewrite": [], "tpu.tpu_test.TPUGraphPruneTest.test_prune_unconnected_ops": ["framework.constant_op.constant", "framework.ops.get_default_graph", "ops.math_ops.add", "ops.variable_scope.get_variable", "test.TestCase.assertEqual", "test.TestCase.assertRaisesRegex", "ops.init_ops.constant_initializer", "ops.array_ops.placeholder", "framework.importer.import_graph_def", "framework.ops.Graph", "tpu.tpu.prune_unconnected_ops_from_xla", "<builtin>.enumerate"], "ops.array_ops.placeholder": [], "framework.constant_op.constant": [], "ops.init_ops.constant_initializer": [], "ops.variable_scope.get_variable": [], "ops.math_ops.add": [], "framework.ops.get_default_graph": [], "<builtin>.enumerate": [], "framework.importer.import_graph_def": [], "tpu.tpu.prune_unconnected_ops_from_xla": [], "test.TestCase.assertEqual": [], "test.TestCase.assertRaisesRegex": [], "tpu.tpu_test.do_einsum": ["ops.special_math_ops.einsum", "ops.array_ops.placeholder"], "ops.special_math_ops.einsum": [], "tpu.tpu_test.find_einsum": [], "tpu.tpu_test.find_xla_einsum": [], "tpu.tpu_test.TPUXlaEinsumTest.test_tpu_rewrite_uses_xla_einsum": ["tpu.tpu.rewrite", "test.TestCase.assertTrue", "framework.ops.Graph", "tpu.tpu_test.find_xla_einsum", "tpu.tpu_test.find_einsum"], "tpu.tpu_test.TPUXlaEinsumTest.test_default_does_not_use_xla_einsum": ["tpu.tpu_test.do_einsum", "test.TestCase.assertFalse", "framework.ops.Graph", "tpu.tpu_test.find_xla_einsum"], "platform.test.main": []}