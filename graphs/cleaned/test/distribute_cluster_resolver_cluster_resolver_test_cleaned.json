{"cluster_resolver.cluster_resolver_test": ["platform.test.main"], "cluster_resolver.cluster_resolver_test.MockBaseClusterResolver.cluster_spec": [], "cluster_resolver.cluster_resolver_test.MockBaseClusterResolver.master": [], "cluster_resolver.cluster_resolver_test.MockBaseClusterResolver.environment": [], "mock.patch.object": [], "cluster_resolver.cluster_resolver_test.BaseClusterResolverTest": ["mock.patch.object"], "cluster_resolver.cluster_resolver_test.BaseClusterResolverTest.testNumAcceleratorsSuccess": ["test.TestCase.assertEqual", "cluster_resolver.ClusterResolver.__init__", "cluster_resolver.ClusterResolver.num_accelerators", "client.session._DeviceAttributes", "eager.context.LogicalDevice"], "eager.context.LogicalDevice": [], "client.session._DeviceAttributes": [], "cluster_resolver.ClusterResolver.__init__": [], "cluster_resolver.ClusterResolver.num_accelerators": [], "test.TestCase.assertEqual": [], "cluster_resolver.cluster_resolver_test.BaseClusterResolverTest.testNumAcceleratorsMultiDeviceSuccess": ["test.TestCase.assertEqual", "cluster_resolver.ClusterResolver.__init__", "cluster_resolver.ClusterResolver.num_accelerators", "client.session._DeviceAttributes", "eager.context.LogicalDevice"], "cluster_resolver.cluster_resolver_test.BaseClusterResolverTest.testNumAcceleratorsFilterTasks": ["test.TestCase.assertEqual", "cluster_resolver.ClusterResolver.__init__", "cluster_resolver.ClusterResolver.num_accelerators", "client.session._DeviceAttributes", "eager.context.LogicalDevice"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest._verifyClusterSpecEquality": ["training.server_lib.ClusterSpec", "test.TestCase.assertProtoEquals"], "test.TestCase.assertProtoEquals": [], "training.server_lib.ClusterSpec": [], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testSingleClusterResolver": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.UnionClusterResolver", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest._verifyClusterSpecEquality"], "cluster_resolver.cluster_resolver.SimpleClusterResolver": [], "cluster_resolver.cluster_resolver.UnionClusterResolver": [], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testInitSimpleClusterResolver": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertEqual"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testOverrideSimpleClusterResolver": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertEqual"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testSimpleOverrideMasterWithTaskIndexZero": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertEqual"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testSimpleOverrideMasterWithRpcLayer": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertEqual"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testSimpleOverrideMaster": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertEqual"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testUnionClusterResolverGetProperties": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.UnionClusterResolver", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertEqual"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testTwoNonOverlappingJobMergedClusterResolver": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.UnionClusterResolver", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest._verifyClusterSpecEquality"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testMergedClusterResolverMaster": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.UnionClusterResolver", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertEqual"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testOverlappingJobMergedClusterResolver": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.UnionClusterResolver", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest._verifyClusterSpecEquality"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testOverlappingSparseJobMergedClusterResolverThrowError": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.UnionClusterResolver", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertRaises"], "test.TestCase.assertRaises": [], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testOverlappingDictAndListThrowError": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.UnionClusterResolver", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertRaises"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testOverlappingJobNonOverlappingKey": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.UnionClusterResolver", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest._verifyClusterSpecEquality"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testMixedModeNonOverlappingKey": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.UnionClusterResolver", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest._verifyClusterSpecEquality"], "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest.testRetainSparseJobWithNoMerging": ["training.server_lib.ClusterSpec", "cluster_resolver.cluster_resolver.UnionClusterResolver", "cluster_resolver.cluster_resolver.SimpleClusterResolver", "cluster_resolver.cluster_resolver_test.UnionClusterResolverTest._verifyClusterSpecEquality"], "platform.test.main": []}