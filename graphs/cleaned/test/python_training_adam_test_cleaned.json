{"training.adam_test": ["platform.test.main"], "training.adam_test.adam_update_numpy": ["numpy.sqrt"], "numpy.sqrt": [], "training.adam_test.AdamOptimizerTest.doTestSparse": ["framework.ops.IndexedSlices", "ops.resource_variable_ops.ResourceVariable", "training.adam_test.adam_update_numpy", "numpy.array", "ops.variables.RefVariable", "framework.constant_op.constant", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "training.adam.AdamOptimizer", "ops.variables.global_variables_initializer", "test.TestCase.cached_session", "<builtin>.zip"], "test.TestCase.cached_session": [], "numpy.array": [], "ops.resource_variable_ops.ResourceVariable": [], "ops.variables.RefVariable": [], "framework.constant_op.constant": [], "framework.ops.IndexedSlices": [], "training.adam.AdamOptimizer": [], "<builtin>.zip": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "<builtin>.range": [], "test.TestCase.assertAllCloseAccordingToType": [], "training.adam_test.AdamOptimizerTest.testSparse": ["framework.ops.Graph", "training.adam_test.AdamOptimizerTest.doTestSparse"], "framework.ops.Graph": [], "training.adam_test.AdamOptimizerTest.testResourceSparse": ["framework.ops.Graph", "training.adam_test.AdamOptimizerTest.doTestSparse"], "training.adam_test.AdamOptimizerTest.testSparseDevicePlacement": ["framework.ops.Graph", "framework.constant_op.constant", "ops.variables.Variable", "ops.math_ops.reduce_sum", "ops.array_ops.gather", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "training.adam.AdamOptimizer", "platform.test.is_gpu_available", "test.TestCase.cached_session"], "platform.test.is_gpu_available": [], "ops.variables.Variable": [], "ops.array_ops.gather": [], "ops.math_ops.reduce_sum": [], "training.adam_test.AdamOptimizerTest.testSparseRepeatedIndices": ["framework.ops.Graph", "framework.ops.IndexedSlices", "framework.constant_op.constant", "<builtin>.range", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "training.adam.AdamOptimizer", "ops.variables.Variable", "test.TestCase.cached_session"], "training.adam_test.AdamOptimizerTest.doTestBasic": ["<builtin>.enumerate", "framework.ops.Graph", "ops.resource_variable_ops.ResourceVariable", "eager.context.executing_eagerly", "training.adam.AdamOptimizer", "numpy.array", "ops.variables.RefVariable", "test.TestCase.assertAllClose", "test.TestCase.assertTrue", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "training.adam_test.AdamOptimizerTest.doTestBasic.<lambda1>", "test.TestCase.assertIn", "test.TestCase.evaluate", "ops.resource_variable_ops.is_resource_variable", "test.TestCase.session", "training.adam_test.AdamOptimizerTest.doTestBasic.<lambda3>", "<builtin>.len", "<builtin>.zip", "training.adam_test.adam_update_numpy", "training.adam_test.AdamOptimizerTest.doTestBasic.<lambda2>", "test.TestCase.skipTest", "framework.constant_op.constant", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "training.adam_test.AdamOptimizerTest.doTestBasic.<lambda4>"], "eager.context.executing_eagerly": [], "test.TestCase.skipTest": [], "<builtin>.enumerate": [], "test.TestCase.session": [], "training.adam_test.AdamOptimizerTest.doTestBasic.<lambda1>": [], "training.adam_test.AdamOptimizerTest.doTestBasic.<lambda2>": [], "training.adam_test.AdamOptimizerTest.doTestBasic.<lambda3>": [], "training.adam_test.AdamOptimizerTest.doTestBasic.<lambda4>": [], "test.TestCase.assertTrue": [], "test.TestCase.assertIn": [], "ops.resource_variable_ops.is_resource_variable": [], "test.TestCase.assertEqual": [], "<builtin>.len": [], "training.adam_test.AdamOptimizerTest.testBasic": ["training.adam_test.AdamOptimizerTest.doTestBasic", "test.TestCase.cached_session"], "training.adam_test.AdamOptimizerTest": ["framework.test_util.disable_tfrt", "framework.test_util.run_in_graph_and_eager_modes", "framework.test_util.deprecated_graph_mode_only"], "framework.test_util.run_in_graph_and_eager_modes": [], "framework.test_util.disable_tfrt": [], "training.adam_test.AdamOptimizerTest.testResourceBasic": ["training.adam_test.AdamOptimizerTest.doTestBasic"], "training.adam_test.AdamOptimizerTest.testBasicCallableParams": ["training.adam_test.AdamOptimizerTest.doTestBasic", "eager.context.eager_mode"], "eager.context.eager_mode": [], "training.adam_test.AdamOptimizerTest.testTensorLearningRate": ["framework.ops.Graph", "training.adam_test.adam_update_numpy", "numpy.array", "framework.constant_op.constant", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "training.adam.AdamOptimizer", "ops.variables.Variable", "test.TestCase.cached_session", "<builtin>.zip"], "training.adam_test.AdamOptimizerTest.testSharing": ["framework.ops.Graph", "training.adam_test.adam_update_numpy", "numpy.array", "framework.constant_op.constant", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "training.adam.AdamOptimizer", "ops.variables.Variable", "test.TestCase.cached_session", "<builtin>.zip"], "training.adam_test.AdamOptimizerTest.testTwoSessions": ["framework.ops.Graph", "numpy.array", "framework.constant_op.constant", "eager.context.eager_mode", "client.session.Session", "training.adam.AdamOptimizer", "ops.variables.Variable"], "client.session.Session": [], "training.adam_test.AdamOptimizerTest.testSlotsUniqueEager": ["ops.resource_variable_ops.ResourceVariable", "<builtin>.id", "eager.context.eager_mode", "test.TestCase.assertEqual", "training.adam.AdamOptimizer", "<builtin>.len"], "training.adam_test.AdamOptimizerTest.testSlotsUniqueEager.<lambda1>": [], "<builtin>.id": [], "framework.test_util.deprecated_graph_mode_only": [], "training.adam_test.AdamOptimizerTest.testXlaSharding": ["framework.ops.Graph", "ops.resource_variable_ops.ResourceVariable", "numpy.array", "test.TestCase.assertIsNotNone", "framework.constant_op.constant", "test.TestCase.evaluate", "xla_sharding.xla_sharding.mesh_split", "xla_sharding.xla_sharding.get_tensor_sharding", "test.TestCase.session", "training.adam.AdamOptimizer", "ops.variables.global_variables_initializer", "test.TestCase.assertIsNone", "<builtin>.zip"], "xla_sharding.xla_sharding.mesh_split": [], "training.adam_test.AdamOptimizerTest.testXlaSharding.<lambda1>": [], "xla_sharding.xla_sharding.get_tensor_sharding": [], "test.TestCase.assertIsNone": [], "test.TestCase.assertIsNotNone": [], "platform.test.main": []}