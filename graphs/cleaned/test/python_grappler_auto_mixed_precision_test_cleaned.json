{"grappler.auto_mixed_precision_test": ["platform.test.main", "framework.function.Defun"], "grappler.auto_mixed_precision_test._input": ["ops.variables.Variable", "ops.random_ops.truncated_normal"], "ops.random_ops.truncated_normal": [], "ops.variables.Variable": [], "grappler.auto_mixed_precision_test._weight": ["ops.variables.Variable"], "grappler.auto_mixed_precision_test._weight.<lambda1>": ["ops.init_ops.glorot_uniform_initializer"], "ops.init_ops.glorot_uniform_initializer": [], "grappler.auto_mixed_precision_test._bias": ["framework.constant_op.constant"], "framework.constant_op.constant": [], "grappler.auto_mixed_precision_test._conv2d": ["ops.nn.conv2d"], "ops.nn.conv2d": [], "grappler.auto_mixed_precision_test._conv3d": ["ops.nn.conv3d"], "ops.nn.conv3d": [], "grappler.auto_mixed_precision_test._max_pool_2x2": ["ops.nn.max_pool"], "ops.nn.max_pool": [], "grappler.auto_mixed_precision_test._fused_batchnorm": ["ops.nn_impl.fused_batch_norm"], "ops.nn_impl.fused_batch_norm": [], "grappler.auto_mixed_precision_test._conv_bn": ["ops.array_ops.identity", "grappler.auto_mixed_precision_test._conv2d", "ops.array_ops.reshape", "grappler.auto_mixed_precision_test._weight", "grappler.auto_mixed_precision_test._fused_batchnorm"], "ops.array_ops.reshape": [], "ops.array_ops.identity": [], "grappler.auto_mixed_precision_test._conv3d_bn": ["ops.array_ops.identity", "ops.array_ops.reshape", "grappler.auto_mixed_precision_test._conv3d", "grappler.auto_mixed_precision_test._weight", "grappler.auto_mixed_precision_test._fused_batchnorm"], "grappler.auto_mixed_precision_test._matmul_act": ["ops.math_ops.matmul", "grappler.auto_mixed_precision_test._weight", "ops.nn.relu", "ops.array_ops.reshape"], "ops.math_ops.matmul": [], "ops.nn.relu": [], "grappler.auto_mixed_precision_test._conv_pool": ["ops.nn.bias_add", "grappler.auto_mixed_precision_test._conv2d", "ops.array_ops.reshape", "grappler.auto_mixed_precision_test._bias", "grappler.auto_mixed_precision_test._weight", "ops.nn.relu", "grappler.auto_mixed_precision_test._max_pool_2x2"], "ops.nn.bias_add": [], "grappler.auto_mixed_precision_test._depthwise_conv2d": ["ops.nn.depthwise_conv2d"], "ops.nn.depthwise_conv2d": [], "grappler.auto_mixed_precision_test._simple_loop": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "grappler.auto_mixed_precision_test._simple_loop.<lambda1>": [], "grappler.auto_mixed_precision_test._simple_loop.<lambda2>": ["grappler.auto_mixed_precision_test._build_simple_loop_graph.body", "grappler.auto_mixed_precision_test._matmul_act"], "grappler.auto_mixed_precision_test._build_simple_loop_graph.body": ["grappler.auto_mixed_precision_test._make_node_with_color", "<builtin>.enumerate"], "ops.control_flow_ops.while_loop": [], "grappler.auto_mixed_precision_test._loop_vars_intertwined": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "grappler.auto_mixed_precision_test._loop_vars_intertwined.<lambda1>": [], "grappler.auto_mixed_precision_test._loop_vars_intertwined.<lambda2>": ["grappler.auto_mixed_precision_test._matmul_act"], "grappler.auto_mixed_precision_test._lstm_cell": ["ops.nn.bias_add", "ops.math_ops.tanh", "grappler.auto_mixed_precision_test._bias", "grappler.auto_mixed_precision_test._weight", "ops.math_ops.sigmoid", "ops.math_ops.matmul", "ops.array_ops.concat", "ops.array_ops.split"], "ops.array_ops.concat": [], "ops.array_ops.split": [], "ops.math_ops.sigmoid": [], "ops.math_ops.tanh": [], "grappler.auto_mixed_precision_test._recurrent_lstm": ["ops.control_flow_ops.while_loop", "ops.tensor_array_ops.TensorArray", "<builtin>.range", "framework.constant_op.constant"], "grappler.auto_mixed_precision_test._recurrent_lstm.cond": [], "grappler.auto_mixed_precision_test._recurrent_lstm.body": ["grappler.auto_mixed_precision_test._lstm_cell"], "ops.tensor_array_ops.TensorArray": [], "<builtin>.range": [], "grappler.auto_mixed_precision_test._make_node_with_color": ["ops.math_ops.add", "<builtin>.ValueError", "grappler.auto_mixed_precision_test._weight", "ops.math_ops.matmul", "ops.math_ops.pow", "<builtin>.str", "ops.nn.relu"], "ops.math_ops.add": [], "ops.math_ops.pow": [], "<builtin>.str": [], "<builtin>.ValueError": [], "grappler.auto_mixed_precision_test._build_simple_loop_graph": ["ops.array_ops.identity", "grappler.auto_mixed_precision_test._simple_loop", "grappler.auto_mixed_precision_test._make_node_with_color", "grappler.auto_mixed_precision_test._input", "<builtin>.enumerate"], "<builtin>.enumerate": [], "grappler.auto_mixed_precision_test._get_config": ["protobuf.config_pb2.GraphOptions", "protobuf.config_pb2.ConfigProto", "protobuf.rewriter_config_pb2.RewriterConfig"], "protobuf.rewriter_config_pb2.RewriterConfig": [], "protobuf.config_pb2.GraphOptions": [], "protobuf.config_pb2.ConfigProto": [], "grappler.auto_mixed_precision_test._get_device": [], "grappler.auto_mixed_precision_test._is_cast_to_fp16": [], "grappler.auto_mixed_precision_test._is_cast_to_bf16": [], "grappler.auto_mixed_precision_test._is_cast_to_fp32": [], "grappler.auto_mixed_precision_test._count_casts": ["grappler.auto_mixed_precision_test._is_cast_to_fp32", "grappler.auto_mixed_precision_test._is_cast_to_bf16", "grappler.auto_mixed_precision_test._is_cast_to_fp16"], "grappler.auto_mixed_precision_test._build_node_map": [], "grappler.auto_mixed_precision_test._example_noninlined_funcdef_shape": [], "framework.function.Defun": [], "grappler.auto_mixed_precision_test._example_noninlined_funcdef_grad": ["ops.math_ops.sigmoid"], "grappler.auto_mixed_precision_test._example_noninlined_funcdef": ["ops.math_ops.sigmoid"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.setUp": ["os.getenv", "<builtin>.super"], "<builtin>.super": [], "os.getenv": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.tearDown": ["<builtin>.super"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._lower_precision_dtype": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16": ["test.TestCase.assertEqual", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._lower_precision_dtype"], "test.TestCase.assertEqual": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run": ["protobuf.config_pb2.RunMetadata", "ops.variables.global_variables_initializer", "grappler.auto_mixed_precision_test._get_config", "test.TestCase.evaluate", "client.session.Session"], "client.session.Session": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "protobuf.config_pb2.RunMetadata": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip": ["platform.test.is_gpu_available", "framework.test_util.IsMklEnabled", "util._pywrap_utils.IsBF16SupportedByOneDNNOnThisCPU", "test.TestCase.skipTest"], "platform.test.is_gpu_available": [], "test.TestCase.skipTest": [], "framework.test_util.IsMklEnabled": [], "util._pywrap_utils.IsBF16SupportedByOneDNNOnThisCPU": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run_simple_loop_test": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "<builtin>.zip", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._lower_precision_dtype", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test._get_device", "grappler.auto_mixed_precision_test._build_simple_loop_graph", "framework.random_seed.set_random_seed", "<builtin>.print", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "test.TestCase.assertTrue", "<builtin>.enumerate"], "framework.ops.device": [], "framework.random_seed.set_random_seed": [], "<builtin>.zip": [], "<builtin>.print": [], "test.TestCase.assertTrue": [], "test.TestCase.assertAllClose": [], "testing.parameterized.parameters": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest": ["framework.test_util.disable_xla", "testing.parameterized.parameters", "framework.test_util.run_v1_only", "framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "framework.test_util.disable_xla": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_conv_bn": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "test.TestCase.assertEqual", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "grappler.auto_mixed_precision_test._get_device", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "grappler.auto_mixed_precision_test._conv_bn", "grappler.auto_mixed_precision_test._input", "grappler.auto_mixed_precision_test._count_casts", "platform.test.is_built_with_rocm"], "platform.test.is_built_with_rocm": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_conv3d_bn": ["test.TestCase.skipTest", "grappler.auto_mixed_precision_test._conv3d_bn", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "test.TestCase.assertEqual", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "grappler.auto_mixed_precision_test._get_device", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "grappler.auto_mixed_precision_test._count_casts", "grappler.auto_mixed_precision_test._input"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_conv3d": ["test.TestCase.skipTest", "ops.array_ops.identity", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "training.gradient_descent.GradientDescentOptimizer", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test._conv3d", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "grappler.auto_mixed_precision_test._weight", "grappler.auto_mixed_precision_test._get_device", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "grappler.auto_mixed_precision_test._input"], "training.gradient_descent.GradientDescentOptimizer": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_conv_bn_dropout": ["ops.math_ops.add", "ops.array_ops.identity", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "ops.nn.dropout", "training.gradient_descent.GradientDescentOptimizer", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "grappler.auto_mixed_precision_test._get_device", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "grappler.auto_mixed_precision_test._conv_bn", "grappler.auto_mixed_precision_test._input"], "ops.nn.dropout": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_conv_pool": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "grappler.auto_mixed_precision_test._conv_pool", "test.TestCase.assertEqual", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "grappler.auto_mixed_precision_test._get_device", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "grappler.auto_mixed_precision_test._count_casts", "grappler.auto_mixed_precision_test._input"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_depthwise_conv2d": ["test.TestCase.skipTest", "ops.array_ops.identity", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "grappler.auto_mixed_precision_test._depthwise_conv2d", "training.gradient_descent.GradientDescentOptimizer", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "<builtin>.int", "grappler.auto_mixed_precision_test._weight", "grappler.auto_mixed_precision_test._get_device", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "<builtin>.tuple", "grappler.auto_mixed_precision_test._input", "platform.sysconfig.get_build_info"], "platform.sysconfig.get_build_info": [], "<builtin>.int": [], "<builtin>.tuple": [], "framework.test_util.run_v1_only": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_simple_loop": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "training.gradient_descent.GradientDescentOptimizer", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "grappler.auto_mixed_precision_test._get_device", "grappler.auto_mixed_precision_test._simple_loop", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "grappler.auto_mixed_precision_test._input"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_loop_with_vars_intertwined": ["grappler.auto_mixed_precision_test._loop_vars_intertwined", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "training.gradient_descent.GradientDescentOptimizer", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "grappler.auto_mixed_precision_test._get_device", "framework.random_seed.set_random_seed", "ops.array_ops.shape", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "ops.array_ops.ones", "grappler.auto_mixed_precision_test._input"], "ops.array_ops.shape": [], "ops.array_ops.ones": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_multi_paths": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "grappler.auto_mixed_precision_test._conv_pool", "ops.array_ops.identity", "training.gradient_descent.GradientDescentOptimizer", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "<builtin>.range", "grappler.auto_mixed_precision_test._get_device", "framework.random_seed.set_random_seed", "ops.array_ops.concat", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "grappler.auto_mixed_precision_test._input", "ops.array_ops.split"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_multi_paths_2": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "training.gradient_descent.GradientDescentOptimizer", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "grappler.auto_mixed_precision_test._get_device", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "platform.test.is_built_with_rocm", "grappler.auto_mixed_precision_test._input", "grappler.auto_mixed_precision_test._matmul_act"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_recurrent_lstm": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "training.gradient_descent.GradientDescentOptimizer", "grappler.auto_mixed_precision_test._recurrent_lstm", "grappler.auto_mixed_precision_test._build_node_map", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "grappler.auto_mixed_precision_test._get_device", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "grappler.auto_mixed_precision_test._input"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_propagation_through_simple_loop_1": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run_simple_loop_test"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_propagation_through_simple_loop_2": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run_simple_loop_test"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_propagation_through_simple_loop_3": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run_simple_loop_test"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_propagation_through_simple_loop_4": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run_simple_loop_test"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_propagation_through_simple_loop_5": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run_simple_loop_test"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_propagation_through_simple_loop_6": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run_simple_loop_test"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_propagation_through_simple_loop_7": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run_simple_loop_test"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_propagation_through_simple_loop_8": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run_simple_loop_test"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_noninlined_funcdef": ["grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "training.gradient_descent.GradientDescentOptimizer", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "grappler.auto_mixed_precision_test._get_device", "grappler.auto_mixed_precision_test._example_noninlined_funcdef", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "grappler.auto_mixed_precision_test._input", "grappler.auto_mixed_precision_test._matmul_act"], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_ingraph_train_loop": ["test.TestCase.skipTest", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._run", "python.tf2.enabled", "numpy.random.normal", "test.TestCase.assertAllClose", "grappler.auto_mixed_precision_test._build_node_map", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._assert_output_f16", "numpy.random.randint", "grappler.auto_mixed_precision_test._get_device", "dataset_ops.Dataset.from_tensor_slices", "framework.random_seed.set_random_seed", "framework.ops.device", "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest._maybe_skip", "framework.constant_op.constant", "ops.control_flow_ops.while_loop", "numpy.random.seed"], "python.tf2.enabled": [], "numpy.random.seed": [], "numpy.random.normal": [], "numpy.random.randint": [], "dataset_ops.Dataset.from_tensor_slices": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_ingraph_train_loop.body": ["ops.array_ops.identity", "layers.layers.Dense", "framework.ops.control_dependencies", "losses.losses.sparse_softmax_cross_entropy", "training.adam.AdamOptimizer"], "layers.layers.Dense": [], "losses.losses.sparse_softmax_cross_entropy": [], "training.adam.AdamOptimizer": [], "framework.ops.control_dependencies": [], "grappler.auto_mixed_precision_test.AutoMixedPrecisionTest.test_ingraph_train_loop.<lambda1>": ["ops.math_ops.less"], "ops.math_ops.less": [], "platform.test.main": []}