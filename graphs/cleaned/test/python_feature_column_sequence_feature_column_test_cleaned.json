{"feature_column.sequence_feature_column_test": ["platform.test.main"], "feature_column.sequence_feature_column_test._initialized_session": ["ops.lookup_ops.tables_initializer", "client.session.Session", "ops.variables.global_variables_initializer"], "client.session.Session": [], "ops.variables.global_variables_initializer": [], "ops.lookup_ops.tables_initializer": [], "feature_column.sequence_feature_column_test.ConcatenateContextInputTest.test_concatenate_context_input": ["test.TestCase.assertAllEqual", "ops.math_ops.cast", "test.TestCase.evaluate", "framework.ops.convert_to_tensor", "numpy.array", "numpy.arange", "feature_column.sequence_feature_column.concatenate_context_input"], "numpy.arange": [], "framework.ops.convert_to_tensor": [], "ops.math_ops.cast": [], "feature_column.sequence_feature_column.concatenate_context_input": [], "numpy.array": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllEqual": [], "testing.parameterized.named_parameters": [], "feature_column.sequence_feature_column_test.ConcatenateContextInputTest": ["testing.parameterized.named_parameters"], "feature_column.sequence_feature_column_test.ConcatenateContextInputTest.test_sequence_input_throws_error": ["ops.math_ops.cast", "framework.ops.convert_to_tensor", "numpy.arange", "feature_column.sequence_feature_column.concatenate_context_input", "test.TestCase.assertRaisesRegex"], "test.TestCase.assertRaisesRegex": [], "feature_column.sequence_feature_column_test.ConcatenateContextInputTest.test_context_input_throws_error": ["ops.math_ops.cast", "framework.ops.convert_to_tensor", "numpy.arange", "feature_column.sequence_feature_column.concatenate_context_input", "test.TestCase.assertRaisesRegex"], "feature_column.sequence_feature_column_test.ConcatenateContextInputTest.test_integer_seq_input_throws_error": ["ops.math_ops.cast", "framework.ops.convert_to_tensor", "numpy.arange", "feature_column.sequence_feature_column.concatenate_context_input", "test.TestCase.assertRaisesRegex"], "feature_column.sequence_feature_column_test.ConcatenateContextInputTest.test_integer_context_input_throws_error": ["ops.math_ops.cast", "framework.ops.convert_to_tensor", "numpy.arange", "feature_column.sequence_feature_column.concatenate_context_input", "test.TestCase.assertRaisesRegex"], "feature_column.sequence_feature_column_test._assert_sparse_tensor_value": ["test.TestCase.assertAllEqual", "feature_column.sequence_feature_column_test._assert_sparse_tensor_indices_shape", "test.TestCase.assertEqual", "numpy.array"], "feature_column.sequence_feature_column_test._assert_sparse_tensor_indices_shape": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "numpy.array"], "test.TestCase.assertEqual": [], "feature_column.sequence_feature_column_test._get_sequence_dense_tensor": ["feature_column.feature_column_v2.FeatureTransformationCache"], "feature_column.feature_column_v2.FeatureTransformationCache": [], "feature_column.sequence_feature_column_test._get_sequence_dense_tensor_state": ["feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2._StateManagerImpl", "feature_column.feature_column_lib.DenseFeatures"], "feature_column.feature_column_lib.DenseFeatures": [], "feature_column.feature_column_v2._StateManagerImpl": [], "feature_column.sequence_feature_column_test._get_sparse_tensors": ["feature_column.feature_column_v2.FeatureTransformationCache"], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithIdentityTest": ["testing.parameterized.named_parameters"], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithIdentityTest.test_get_sparse_tensors": ["test.TestCase.assertIsNone", "feature_column.sequence_feature_column_test._assert_sparse_tensor_value", "feature_column.sequence_feature_column_test._get_sparse_tensors", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "framework.sparse_tensor.SparseTensorValue": [], "feature_column.sequence_feature_column.sequence_categorical_column_with_identity": [], "test.TestCase.assertIsNone": [], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithIdentityTest.test_serialization": ["test.TestCase.assertIs", "feature_column.serialization._column_name_with_class_name", "feature_column_v2.IndicatorColumn.from_config", "feature_column.feature_column_v2.indicator_column", "test.TestCase.assertIsNot", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "test.TestCase.assertEqual"], "feature_column.feature_column_v2.indicator_column": [], "feature_column_v2.IndicatorColumn.from_config": [], "test.TestCase.assertIsNot": [], "feature_column.serialization._column_name_with_class_name": [], "test.TestCase.assertIs": [], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithHashBucketTest": ["testing.parameterized.named_parameters"], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithHashBucketTest.test_get_sparse_tensors": ["test.TestCase.assertIsNone", "feature_column.sequence_feature_column.sequence_categorical_column_with_hash_bucket", "test.TestCase.evaluate", "feature_column.sequence_feature_column_test._get_sparse_tensors", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._assert_sparse_tensor_indices_shape"], "feature_column.sequence_feature_column.sequence_categorical_column_with_hash_bucket": [], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest._write_vocab": ["test.TestCase.get_temp_dir", "<builtin>.open", "os.path.join"], "test.TestCase.get_temp_dir": [], "os.path.join": [], "<builtin>.open": [], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest.setUp": ["feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest._write_vocab", "<builtin>.super"], "<builtin>.super": [], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest": ["testing.parameterized.named_parameters"], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest.test_get_sparse_tensors": ["test.TestCase.assertIsNone", "feature_column.sequence_feature_column_test._assert_sparse_tensor_value", "feature_column.sequence_feature_column_test._get_sparse_tensors", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_file", "ops.lookup_ops.tables_initializer"], "feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_file": [], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest.test_get_sparse_tensors_dynamic_zero_length": ["ops.array_ops.sparse_placeholder", "<builtin>.list", "framework.ops.Graph", "test.TestCase.assertIsNone", "feature_column.sequence_feature_column_test._assert_sparse_tensor_value", "feature_column.sequence_feature_column_test._get_sparse_tensors", "numpy.array", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_file", "feature_column.sequence_feature_column_test._initialized_session", "numpy.zeros"], "framework.ops.Graph": [], "numpy.zeros": [], "<builtin>.list": [], "ops.array_ops.sparse_placeholder": [], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyListTest": ["testing.parameterized.named_parameters"], "feature_column.sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyListTest.test_get_sparse_tensors": ["test.TestCase.assertIsNone", "feature_column.sequence_feature_column_test._assert_sparse_tensor_value", "feature_column.sequence_feature_column_test._get_sparse_tensors", "test.TestCase.evaluate", "feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_list", "ops.variables.global_variables_initializer", "framework.sparse_tensor.SparseTensorValue", "ops.lookup_ops.tables_initializer"], "feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_list": [], "feature_column.sequence_feature_column_test.SequenceEmbeddingColumnTest": ["testing.parameterized.named_parameters"], "feature_column.sequence_feature_column_test.SequenceEmbeddingColumnTest.test_get_sequence_dense_tensor": ["test.TestCase.assertAllEqual", "feature_column.feature_column_v2.embedding_column", "<builtin>.tuple", "test.TestCase.assertCountEqual", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor_state", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "feature_column.sequence_feature_column_test.SequenceEmbeddingColumnTest.test_get_sequence_dense_tensor._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertIsNone", "test.TestCase.assertEqual"], "feature_column.feature_column_v2.embedding_column": [], "<builtin>.tuple": [], "test.TestCase.assertCountEqual": [], "feature_column.sequence_feature_column_test.SequenceEmbeddingColumnTest.test_sequence_length": ["test.TestCase.assertAllEqual", "feature_column.feature_column_v2.embedding_column", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor_state", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "test.TestCase.assertEqual"], "feature_column.sequence_feature_column_test.SequenceEmbeddingColumnTest.test_sequence_length_with_empty_rows": ["test.TestCase.assertAllEqual", "feature_column.feature_column_v2.embedding_column", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor_state", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "feature_column.sequence_feature_column_test.SequenceSharedEmbeddingColumnTest.test_get_sequence_dense_tensor": ["test.TestCase.assertAllEqual", "framework.ops.Graph", "<builtin>.tuple", "test.TestCase.assertItemsEqual", "test.TestCase.evaluate", "framework.ops.get_collection", "ops.variables.global_variables_initializer", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.feature_column_v2.shared_embedding_columns_v2", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "feature_column.sequence_feature_column_test.SequenceSharedEmbeddingColumnTest.test_get_sequence_dense_tensor._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertIsNone", "test.TestCase.assertEqual"], "feature_column.feature_column_v2.shared_embedding_columns_v2": [], "framework.ops.get_collection": [], "test.TestCase.assertItemsEqual": [], "feature_column.sequence_feature_column_test.SequenceSharedEmbeddingColumnTest.test_sequence_length": ["test.TestCase.assertAllEqual", "framework.ops.Graph", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.feature_column_v2.shared_embedding_columns_v2", "feature_column.sequence_feature_column_test._initialized_session", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "test.TestCase.assertEqual"], "feature_column.sequence_feature_column_test.SequenceSharedEmbeddingColumnTest.test_sequence_length_with_empty_rows": ["test.TestCase.assertAllEqual", "framework.ops.Graph", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.feature_column_v2.shared_embedding_columns_v2", "feature_column.sequence_feature_column_test._initialized_session", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "feature_column.sequence_feature_column_test.SequenceIndicatorColumnTest": ["testing.parameterized.named_parameters"], "feature_column.sequence_feature_column_test.SequenceIndicatorColumnTest.test_get_sequence_dense_tensor": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.feature_column_v2.indicator_column", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "feature_column.sequence_feature_column_test.SequenceIndicatorColumnTest.test_sequence_length": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.feature_column_v2.indicator_column", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "test.TestCase.assertEqual"], "feature_column.sequence_feature_column_test.SequenceIndicatorColumnTest.test_sequence_length_with_empty_rows": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.feature_column_v2.indicator_column", "feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_defaults": ["test.TestCase.assertIsNone", "feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertEqual"], "feature_column.sequence_feature_column.sequence_numeric_column": [], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_shape_saved_as_tuple": ["feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertEqual"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_shape_must_be_positive_integer": ["test.TestCase.assertRaisesRegex", "feature_column.sequence_feature_column.sequence_numeric_column"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_dtype_is_convertible_to_float": ["test.TestCase.assertRaisesRegex", "feature_column.sequence_feature_column.sequence_numeric_column"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_normalizer_fn_must_be_callable": ["test.TestCase.assertRaisesRegex", "feature_column.sequence_feature_column.sequence_numeric_column"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest": ["testing.parameterized.named_parameters"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_get_sequence_dense_tensor": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.sequence_feature_column.sequence_numeric_column"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_get_sequence_dense_tensor_with_normalizer_fn": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.sequence_feature_column.sequence_numeric_column"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_get_sequence_dense_tensor_with_normalizer_fn._increment_two": ["ops.sparse_ops.sparse_add", "framework.sparse_tensor.SparseTensor"], "framework.sparse_tensor.SparseTensor": [], "ops.sparse_ops.sparse_add": [], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_get_dense_tensor_multi_dim": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.sequence_feature_column.sequence_numeric_column"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_sequence_length": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertEqual"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_sequence_length_with_empty_rows": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.sequence_feature_column_test._get_sequence_dense_tensor", "feature_column.sequence_feature_column.sequence_numeric_column"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_serialization": ["<builtin>.int", "feature_column.serialization.deserialize_feature_column", "feature_column.serialization.serialize_feature_column", "feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertRaisesRegex", "test.TestCase.assertEqual"], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_serialization._custom_fn": [], "feature_column.serialization.serialize_feature_column": [], "feature_column.serialization.deserialize_feature_column": [], "<builtin>.int": [], "feature_column.sequence_feature_column_test.SequenceNumericColumnTest.test_parents": ["feature_column.sequence_feature_column.sequence_numeric_column", "test.TestCase.assertEqual"], "platform.test.main": []}