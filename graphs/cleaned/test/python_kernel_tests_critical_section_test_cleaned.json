{"kernel_tests.critical_section_test": ["platform.test.main"], "kernel_tests.critical_section_test.CriticalSectionTest": ["framework.test_util.run_v1_only", "itertools.product", "framework.test_util.xla_allow_fallback", "framework.test_util.run_in_graph_and_eager_modes", "testing.parameterized.named_parameters"], "framework.test_util.run_in_graph_and_eager_modes": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCreateCriticalSection": ["<builtin>.range", "<builtin>.sorted", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "ops.critical_section_ops.CriticalSection", "test.TestCase.assertAllClose"], "ops.critical_section_ops.CriticalSection": [], "ops.resource_variable_ops.ResourceVariable": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCreateCriticalSection.fn": ["ops.array_ops.identity", "framework.ops.control_dependencies"], "framework.ops.control_dependencies": [], "ops.array_ops.identity": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCreateCriticalSection.<lambda1>": ["kernel_tests.critical_section_test.CriticalSectionTest.testCreateCriticalSection.fn"], "<builtin>.range": [], "test.TestCase.evaluate": [], "<builtin>.sorted": [], "test.TestCase.assertAllClose": [], "itertools.product": [], "testing.parameterized.named_parameters": [], "framework.test_util.xla_allow_fallback": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionWithControlFlow": ["<builtin>.range", "eager.context.executing_eagerly", "<builtin>.sorted", "test.TestCase.skipTest", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "ops.critical_section_ops.CriticalSection", "test.TestCase.assertAllClose", "ops.control_flow_ops.cond", "ops.array_ops.identity", "ops.control_flow_v2_toggles.control_flow_v2_enabled"], "eager.context.executing_eagerly": [], "ops.control_flow_v2_toggles.control_flow_v2_enabled": [], "test.TestCase.skipTest": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionWithControlFlow.fn": ["ops.array_ops.identity", "ops.control_flow_ops.cond"], "kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionWithControlFlow.fn.true_fn": ["ops.array_ops.identity", "framework.ops.control_dependencies"], "kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionWithControlFlow.fn.<lambda1>": [], "ops.control_flow_ops.cond": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionWithControlFlow.execute": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionWithControlFlow.execute.<lambda1>": ["kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionWithControlFlow.fn"], "framework.test_util.run_v1_only": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionInParallelDoesntDeadlockOnError": ["<builtin>.range", "eager.context.executing_eagerly", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "ops.critical_section_ops.CriticalSection", "test.TestCase.assertRaisesOpError", "eager.def_function.function"], "kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionInParallelDoesntDeadlockOnError.fn": ["ops.control_flow_ops.Assert", "framework.ops.control_dependencies"], "ops.control_flow_ops.Assert": [], "eager.def_function.function": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionInParallelDoesntDeadlockOnError.run_concurrently": ["<builtin>.range"], "kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionInParallelDoesntDeadlockOnError.run_concurrently.<lambda1>": ["kernel_tests.critical_section_test.CriticalSectionTest.testCriticalSectionInParallelDoesntDeadlockOnError.fn"], "test.TestCase.assertRaisesOpError": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCreateCriticalSectionFnReturnsOp": ["<builtin>.range", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "ops.critical_section_ops.CriticalSection", "test.TestCase.assertAllClose"], "kernel_tests.critical_section_test.CriticalSectionTest.testCreateCriticalSectionFnReturnsOp.fn_return_op": ["framework.ops.control_dependencies", "ops.control_flow_ops.no_op"], "ops.control_flow_ops.no_op": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCreateCriticalSectionFnReturnsOp.<lambda1>": ["kernel_tests.critical_section_test.CriticalSectionTest.testCreateCriticalSectionFnReturnsOp.fn_return_op"], "kernel_tests.critical_section_test.CriticalSectionTest.testCollection": ["ops.critical_section_ops.CriticalSection", "framework.ops.get_collection", "test.TestCase.assertIn"], "framework.ops.get_collection": [], "test.TestCase.assertIn": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCollection.<lambda1>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testCollection.<lambda2>": ["kernel_tests.critical_section_test.CriticalSectionTest.testCollection.<lambda1>"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegal": ["test.TestCase.assertRaisesRegex", "ops.critical_section_ops.CriticalSection"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegal.<lambda1>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegal.fn": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegal.fn.<lambda1>": ["kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegal.<lambda1>"], "test.TestCase.assertRaisesRegex": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegal.<lambda2>": ["kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegal.fn"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected": ["framework.ops.control_dependencies", "test.TestCase.assertEqual", "test.TestCase.evaluate", "ops.critical_section_ops.CriticalSection", "ops.array_ops.identity"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda1>": ["ops.array_ops.identity"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda2>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda3>": ["kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda1>"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda4>": ["kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda1>"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda5>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda6>": ["kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda2>"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda7>": ["kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessViaCapturedTensorIsProtected.<lambda2>"], "test.TestCase.assertEqual": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected": ["test.TestCase.assertEqual", "test.TestCase.evaluate", "ops.control_flow_ops.while_loop", "ops.critical_section_ops.CriticalSection", "ops.array_ops.identity", "platform.tf_logging.warn"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.body_implicit_capture": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.body_implicit_capture.<lambda1>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.<lambda1>": [], "ops.control_flow_ops.while_loop": [], "platform.tf_logging.warn": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.body_implicit_capture_protected": ["framework.ops.control_dependencies"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.body_implicit_capture_protected.<lambda1>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.<lambda2>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.body_args_capture": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.body_args_capture.<lambda1>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.body_args_capture.<lambda2>": ["kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.body_args_capture.<lambda1>"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessWithinLoopIsProtected.<lambda3>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegalSameSharedName": ["test.TestCase.assertRaisesRegex", "ops.critical_section_ops.CriticalSection"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegalSameSharedName.<lambda1>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegalSameSharedName.fn": [], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegalSameSharedName.fn.<lambda1>": ["kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegalSameSharedName.<lambda1>"], "kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegalSameSharedName.<lambda2>": ["kernel_tests.critical_section_test.CriticalSectionTest.testRecursiveCriticalSectionAccessIsIllegalSameSharedName.fn"], "kernel_tests.critical_section_test.CriticalSectionTest.testMultipleCSExecutionsRequestSameResource": ["test.TestCase.assertRaisesRegex", "ops.critical_section_ops.CriticalSection", "ops.resource_variable_ops.ResourceVariable"], "kernel_tests.critical_section_test.CriticalSectionTest.testMultipleCSExecutionsRequestSameResource.<lambda1>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testMultipleCSExecutionsRequestSameResource.<lambda2>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testMultipleCSExecutionsRequestSameResource.<lambda3>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testMultipleCSExecutionsRequestSameResource.<lambda4>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testMultipleCSExecutionsRequestSameResource.<lambda5>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testMultipleCSExecutionsRequestSameResource.<lambda6>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testMultipleCSExecutionsRequestSameResource.<lambda7>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testControlDependencyFromOutsideWhileLoopMixedWithInsideLoop": ["test.TestCase.assertEqual", "test.TestCase.evaluate", "ops.resource_variable_ops.ResourceVariable", "ops.control_flow_ops.while_loop", "ops.critical_section_ops.CriticalSection"], "kernel_tests.critical_section_test.CriticalSectionTest.testControlDependencyFromOutsideWhileLoopMixedWithInsideLoop.body": [], "kernel_tests.critical_section_test.CriticalSectionTest.testControlDependencyFromOutsideWhileLoopMixedWithInsideLoop.body.<lambda1>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testControlDependencyFromOutsideWhileLoopMixedWithInsideLoop.body.<lambda2>": ["kernel_tests.critical_section_test.CriticalSectionTest.testControlDependencyFromOutsideWhileLoopMixedWithInsideLoop.body.<lambda1>"], "kernel_tests.critical_section_test.CriticalSectionTest.testControlDependencyFromOutsideWhileLoopMixedWithInsideLoop.<lambda1>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testInsideFunction": ["framework.test_util.is_gpu_available", "dataset_ops.Dataset.range", "test.TestCase.assertEqual", "test.TestCase.skipTest", "framework.ops.device", "ops.prefetching_ops.map_on_gpu", "kernel_tests.critical_section_test.CriticalSectionTest.testInsideFunction.get_first", "ops.resource_variable_ops.ResourceVariable", "ops.critical_section_ops.CriticalSection", "ops.prefetching_ops.copy_to_device"], "framework.test_util.is_gpu_available": [], "framework.ops.device": [], "kernel_tests.critical_section_test.CriticalSectionTest.testInsideFunction.fn": [], "dataset_ops.Dataset.range": [], "kernel_tests.critical_section_test.CriticalSectionTest.testInsideFunction.<lambda1>": [], "ops.prefetching_ops.map_on_gpu": [], "ops.prefetching_ops.copy_to_device": [], "kernel_tests.critical_section_test.CriticalSectionTest.testInsideFunction.<lambda2>": [], "kernel_tests.critical_section_test.CriticalSectionTest.testInsideFunction.get_first": ["test.TestCase.evaluate", "eager.context.executing_eagerly", "ops.dataset_ops.make_one_shot_iterator", "ops.dataset_ops.make_initializable_iterator"], "ops.dataset_ops.make_one_shot_iterator": [], "ops.dataset_ops.make_initializable_iterator": [], "platform.test.main": []}