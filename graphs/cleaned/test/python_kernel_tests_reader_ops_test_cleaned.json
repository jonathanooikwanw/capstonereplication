{"kernel_tests.reader_ops_test": ["platform.test.main"], "kernel_tests.reader_ops_test.TFCompressionTestCase.setUp": ["<builtin>.super"], "<builtin>.super": [], "kernel_tests.reader_ops_test.TFCompressionTestCase._Record": ["util.compat.as_bytes"], "util.compat.as_bytes": [], "kernel_tests.reader_ops_test.TFCompressionTestCase._CreateFiles": ["kernel_tests.reader_ops_test.TFCompressionTestCase._WriteRecordsToFile", "kernel_tests.reader_ops_test.TFCompressionTestCase._Record", "<builtin>.range"], "<builtin>.range": [], "kernel_tests.reader_ops_test.TFCompressionTestCase._WriteRecordsToFile": ["io.tf_record.TFRecordWriter", "test.TestCase.get_temp_dir", "os.path.join"], "test.TestCase.get_temp_dir": [], "os.path.join": [], "io.tf_record.TFRecordWriter": [], "kernel_tests.reader_ops_test.TFCompressionTestCase._ZlibCompressFile": ["<builtin>.open", "zlib.compress", "os.path.join", "test.TestCase.get_temp_dir"], "<builtin>.open": [], "zlib.compress": [], "kernel_tests.reader_ops_test.TFCompressionTestCase._GzipCompressFile": ["<builtin>.open", "test.TestCase.get_temp_dir", "os.path.join", "gzip.GzipFile"], "gzip.GzipFile": [], "kernel_tests.reader_ops_test.TFCompressionTestCase._ZlibDecompressFile": ["<builtin>.open", "os.path.join", "test.TestCase.get_temp_dir", "zlib.decompress"], "zlib.decompress": [], "kernel_tests.reader_ops_test.TFCompressionTestCase._GzipDecompressFile": ["<builtin>.open", "test.TestCase.get_temp_dir", "os.path.join", "gzip.GzipFile"], "kernel_tests.reader_ops_test.IdentityReaderTest._ExpectRead": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual"], "test.TestCase.evaluate": [], "test.TestCase.assertAllEqual": [], "kernel_tests.reader_ops_test.IdentityReaderTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "kernel_tests.reader_ops_test.IdentityReaderTest.testOneEpoch": ["ops.io_ops.IdentityReader", "test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "kernel_tests.reader_ops_test.IdentityReaderTest._ExpectRead"], "ops.io_ops.IdentityReader": [], "ops.data_flow_ops.FIFOQueue": [], "test.TestCase.assertRaisesOpError": [], "kernel_tests.reader_ops_test.IdentityReaderTest.testMultipleEpochs": ["ops.io_ops.IdentityReader", "ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "kernel_tests.reader_ops_test.IdentityReaderTest._ExpectRead"], "kernel_tests.reader_ops_test.IdentityReaderTest.testSerializeRestore": ["ops.io_ops.IdentityReader", "test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "test.TestCase.assertRaises", "<builtin>.type", "test.TestCase.assertEqual", "kernel_tests.reader_ops_test.IdentityReaderTest._ExpectRead"], "<builtin>.type": [], "test.TestCase.assertEqual": [], "test.TestCase.assertRaises": [], "kernel_tests.reader_ops_test.IdentityReaderTest.testReset": ["ops.io_ops.IdentityReader", "test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "test.TestCase.assertLess", "kernel_tests.reader_ops_test.IdentityReaderTest._ExpectRead"], "test.TestCase.assertLess": [], "kernel_tests.reader_ops_test.WholeFileReaderTest.setUp": ["test.TestCase.get_temp_dir", "<builtin>.open", "<builtin>.zip", "<builtin>.super", "os.path.join", "<builtin>.range"], "<builtin>.zip": [], "kernel_tests.reader_ops_test.WholeFileReaderTest.tearDown": ["os.remove", "<builtin>.super"], "os.remove": [], "kernel_tests.reader_ops_test.WholeFileReaderTest._ExpectRead": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "util.compat.as_bytes"], "kernel_tests.reader_ops_test.WholeFileReaderTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.reader_ops_test.WholeFileReaderTest.testOneEpoch": ["kernel_tests.reader_ops_test.WholeFileReaderTest._ExpectRead", "ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "ops.io_ops.WholeFileReader"], "ops.io_ops.WholeFileReader": [], "kernel_tests.reader_ops_test.WholeFileReaderTest.testInfiniteEpochs": ["ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "ops.io_ops.WholeFileReader", "kernel_tests.reader_ops_test.WholeFileReaderTest._ExpectRead"], "kernel_tests.reader_ops_test.TextLineReaderTest.setUp": ["<builtin>.super"], "kernel_tests.reader_ops_test.TextLineReaderTest._LineText": ["util.compat.as_bytes"], "kernel_tests.reader_ops_test.TextLineReaderTest._CreateFiles": ["test.TestCase.get_temp_dir", "kernel_tests.reader_ops_test.TextLineReaderTest._LineText", "<builtin>.open", "os.path.join", "<builtin>.range"], "kernel_tests.reader_ops_test.TextLineReaderTest._testOneEpoch": ["ops.io_ops.TextLineReader", "kernel_tests.reader_ops_test.TextLineReaderTest._LineText", "test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "<builtin>.range", "util.compat.as_text"], "ops.io_ops.TextLineReader": [], "util.compat.as_text": [], "kernel_tests.reader_ops_test.TextLineReaderTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.reader_ops_test.TextLineReaderTest.testOneEpochLF": ["kernel_tests.reader_ops_test.TextLineReaderTest._testOneEpoch", "kernel_tests.reader_ops_test.TextLineReaderTest._CreateFiles"], "kernel_tests.reader_ops_test.TextLineReaderTest.testOneEpochCRLF": ["kernel_tests.reader_ops_test.TextLineReaderTest._testOneEpoch", "kernel_tests.reader_ops_test.TextLineReaderTest._CreateFiles"], "kernel_tests.reader_ops_test.TextLineReaderTest.testSkipHeaderLines": ["ops.io_ops.TextLineReader", "kernel_tests.reader_ops_test.TextLineReaderTest._LineText", "test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "<builtin>.range", "kernel_tests.reader_ops_test.TextLineReaderTest._CreateFiles", "util.compat.as_text"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest.setUp": ["<builtin>.super"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._Record": ["<builtin>.str", "util.compat.as_bytes"], "<builtin>.str": [], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._OverlappedRecord": ["<builtin>.range", "<builtin>.str", "util.compat.as_bytes"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateFiles": ["test.TestCase.get_temp_dir", "<builtin>.open", "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._Record", "os.path.join", "<builtin>.range"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateOverlappedRecordFiles": ["test.TestCase.get_temp_dir", "<builtin>.str", "<builtin>.open", "util.compat.as_bytes", "os.path.join", "<builtin>.range"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateGzipFiles": ["kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateFiles", "kernel_tests.reader_ops_test.TFCompressionTestCase._GzipCompressFile"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateZlibFiles": ["kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateFiles", "kernel_tests.reader_ops_test.TFCompressionTestCase._ZlibCompressFile"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateGzipOverlappedRecordFiles": ["test.TestCase.get_temp_dir", "<builtin>.str", "gzip.GzipFile", "util.compat.as_bytes", "os.path.join", "<builtin>.range"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateZlibOverlappedRecordFiles": ["test.TestCase.get_temp_dir", "<builtin>.str", "<builtin>.open", "util.compat.as_bytes", "kernel_tests.reader_ops_test.TFCompressionTestCase._ZlibCompressFile", "os.path.join", "<builtin>.range"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._TestOneEpoch": ["test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "ops.io_ops.FixedLengthRecordReader", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._Record", "<builtin>.range", "util.compat.as_text"], "ops.io_ops.FixedLengthRecordReader": [], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._TestOneEpochWithHopBytes": ["test.TestCase.assertAllEqual", "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._OverlappedRecord", "ops.data_flow_ops.FIFOQueue", "ops.io_ops.FixedLengthRecordReader", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "<builtin>.range", "util.compat.as_text"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest.testOneEpoch": ["kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._TestOneEpoch", "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateFiles"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest.testGzipOneEpoch": ["kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._TestOneEpoch", "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateGzipFiles"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest.testZlibOneEpoch": ["kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._TestOneEpoch", "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateZlibFiles"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest.testOneEpochWithHopBytes": ["kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateOverlappedRecordFiles", "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._TestOneEpochWithHopBytes"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest.testGzipOneEpochWithHopBytes": ["kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateGzipOverlappedRecordFiles", "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._TestOneEpochWithHopBytes"], "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest.testZlibOneEpochWithHopBytes": ["kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._TestOneEpochWithHopBytes", "kernel_tests.reader_ops_test.FixedLengthRecordReaderTest._CreateZlibOverlappedRecordFiles"], "kernel_tests.reader_ops_test.TFRecordReaderTest.setUp": ["<builtin>.super"], "kernel_tests.reader_ops_test.TFRecordReaderTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.reader_ops_test.TFRecordReaderTest.testOneEpoch": ["test.TestCase.assertTrue", "test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "kernel_tests.reader_ops_test.TFCompressionTestCase._CreateFiles", "test.TestCase.evaluate", "kernel_tests.reader_ops_test.TFCompressionTestCase._Record", "test.TestCase.assertRaisesOpError", "ops.io_ops.TFRecordReader", "<builtin>.range", "util.compat.as_text"], "ops.io_ops.TFRecordReader": [], "test.TestCase.assertTrue": [], "kernel_tests.reader_ops_test.TFRecordReaderTest.testReadUpTo": ["ops.data_flow_ops.FIFOQueue", "<builtin>.len", "kernel_tests.reader_ops_test.TFCompressionTestCase._CreateFiles", "test.TestCase.evaluate", "test.TestCase.assertLessEqual", "test.TestCase.assertEqual", "ops.io_ops.TFRecordReader"], "<builtin>.len": [], "test.TestCase.assertLessEqual": [], "kernel_tests.reader_ops_test.TFRecordReaderTest.testReadZlibFiles": ["test.TestCase.assertTrue", "test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "kernel_tests.reader_ops_test.TFCompressionTestCase._CreateFiles", "test.TestCase.evaluate", "kernel_tests.reader_ops_test.TFCompressionTestCase._Record", "io.tf_record.TFRecordOptions", "ops.io_ops.TFRecordReader", "<builtin>.range", "util.compat.as_text"], "io.tf_record.TFRecordOptions": [], "kernel_tests.reader_ops_test.TFRecordReaderTest.testReadGzipFiles": ["test.TestCase.assertTrue", "test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "kernel_tests.reader_ops_test.TFCompressionTestCase._CreateFiles", "test.TestCase.evaluate", "kernel_tests.reader_ops_test.TFCompressionTestCase._Record", "io.tf_record.TFRecordOptions", "ops.io_ops.TFRecordReader", "<builtin>.range", "util.compat.as_text"], "kernel_tests.reader_ops_test.AsyncReaderTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.reader_ops_test.AsyncReaderTest.testNoDeadlockFromQueue": ["ops.io_ops.TextLineReader", "test.TestCase.get_temp_dir", "<builtin>.enumerate", "collections.namedtuple", "<builtin>.open", "ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "test.TestCase.session", "threading.Thread", "<builtin>.reversed", "test.TestCase.assertEqual", "os.path.join", "protobuf.config_pb2.ConfigProto", "<builtin>.range"], "protobuf.config_pb2.ConfigProto": [], "test.TestCase.session": [], "collections.namedtuple": [], "threading.Thread": [], "ops.variables.global_variables_initializer": [], "<builtin>.reversed": [], "<builtin>.enumerate": [], "kernel_tests.reader_ops_test.AsyncReaderTest._RunSessionAndSave": [], "kernel_tests.reader_ops_test.LMDBReaderTest.setUp": ["shutil.copy", "test.TestCase.get_temp_dir", "os.path.join", "<builtin>.super"], "shutil.copy": [], "kernel_tests.reader_ops_test.LMDBReaderTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.reader_ops_test.LMDBReaderTest.testReadFromFile": ["<builtin>.chr", "<builtin>.str", "test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "util.compat.as_bytes", "<builtin>.ord", "ops.io_ops.LMDBReader", "<builtin>.range"], "ops.io_ops.LMDBReader": [], "<builtin>.ord": [], "<builtin>.chr": [], "kernel_tests.reader_ops_test.LMDBReaderTest.testReadFromSameFile": ["test.TestCase.cached_session", "test.TestCase.assertAllEqual", "training.coordinator.Coordinator", "training.queue_runner_impl.start_queue_runners", "test.TestCase.evaluate", "util.compat.as_bytes", "training.input.string_input_producer", "ops.io_ops.LMDBReader", "<builtin>.range"], "test.TestCase.cached_session": [], "training.input.string_input_producer": [], "training.coordinator.Coordinator": [], "training.queue_runner_impl.start_queue_runners": [], "kernel_tests.reader_ops_test.LMDBReaderTest.testReadFromFolder": ["<builtin>.chr", "<builtin>.str", "test.TestCase.assertAllEqual", "ops.data_flow_ops.FIFOQueue", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "util.compat.as_bytes", "<builtin>.ord", "ops.io_ops.LMDBReader", "<builtin>.range"], "kernel_tests.reader_ops_test.LMDBReaderTest.testReadFromFileRepeatedly": ["<builtin>.chr", "test.TestCase.cached_session", "<builtin>.str", "test.TestCase.assertAllEqual", "training.coordinator.Coordinator", "training.queue_runner_impl.start_queue_runners", "test.TestCase.evaluate", "util.compat.as_bytes", "<builtin>.ord", "training.input.string_input_producer", "ops.io_ops.LMDBReader", "<builtin>.range"], "platform.test.main": []}