{"kernel_tests.filter_test": ["platform.test.main"], "kernel_tests.filter_test._test_combinations": ["framework.combinations.combine", "framework.combinations.NamedObject"], "kernel_tests.filter_test._test_combinations.filter_fn": [], "kernel_tests.filter_test._test_combinations.legacy_filter_fn": [], "framework.combinations.NamedObject": [], "framework.combinations.combine": [], "kernel_tests.filter_test.FilterTest": ["framework.combinations.generate", "kernel_tests.filter_test._test_combinations"], "framework.combinations.generate": [], "kernel_tests.filter_test.FilterTest.testFilterDataset": ["numpy.array", "numpy.arange", "kernel_tests.filter_test.FilterTest.testFilterDataset.do_test"], "numpy.arange": [], "numpy.array": [], "kernel_tests.filter_test.FilterTest.testFilterDataset._map_fn": ["ops.math_ops.square"], "ops.math_ops.square": [], "kernel_tests.filter_test.FilterTest.testFilterDataset.do_test": ["dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertRaises", "<builtin>.range", "<builtin>.zip", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.evaluate", "ops.dataset_ops.get_legacy_output_shapes", "test_base.DatasetTestBase.assertEqual"], "dataset_ops.Dataset.from_tensor_slices": [], "kernel_tests.filter_test.FilterTest.testFilterDataset.do_test.<lambda1>": ["ops.math_ops.mod", "ops.math_ops.equal"], "ops.math_ops.mod": [], "ops.math_ops.equal": [], "ops.dataset_ops.get_legacy_output_shapes": [], "test_base.DatasetTestBase.assertEqual": [], "test_base.DatasetTestBase.getNext": [], "<builtin>.range": [], "test_base.DatasetTestBase.evaluate": [], "<builtin>.zip": [], "test_base.DatasetTestBase.assertAllEqual": [], "test_base.DatasetTestBase.assertRaises": [], "kernel_tests.filter_test.FilterTest.testFilterRange": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "dataset_ops.Dataset.range": [], "kernel_tests.filter_test.FilterTest.testFilterRange.<lambda1>": ["ops.math_ops.mod", "ops.math_ops.not_equal"], "ops.math_ops.not_equal": [], "test_base.DatasetTestBase.assertDatasetProduces": [], "kernel_tests.filter_test.FilterTest.testFilterDict": ["<builtin>.range", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.filter_test.FilterTest.testFilterDict.<lambda1>": [], "kernel_tests.filter_test.FilterTest.testFilterDict.<lambda2>": ["ops.math_ops.equal"], "kernel_tests.filter_test.FilterTest.testFilterDict.<lambda3>": [], "kernel_tests.filter_test.FilterTest.testUseStepContainerInFilter": ["numpy.array", "dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.filter_test.FilterTest.testUseStepContainerInFilter._predicate": ["ops.math_ops.reduce_sum", "ops.math_ops.equal", "ops.map_fn.map_fn"], "kernel_tests.filter_test.FilterTest.testUseStepContainerInFilter._predicate.<lambda1>": [], "ops.map_fn.map_fn": [], "ops.math_ops.reduce_sum": [], "kernel_tests.filter_test.FilterTest.testSparse": ["<builtin>.range", "kernel_tests.filter_test.FilterTest.testSparse._map_fn", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.filter_test.FilterTest.testSparse._map_fn": ["numpy.array", "framework.sparse_tensor.SparseTensorValue"], "framework.sparse_tensor.SparseTensorValue": [], "kernel_tests.filter_test.FilterTest.testSparse._filter_fn": ["ops.math_ops.equal"], "kernel_tests.filter_test.FilterTest.testSparse.<lambda1>": [], "kernel_tests.filter_test.FilterTest.testShortCircuit": ["<builtin>.range", "dataset_ops.Dataset.from_tensors", "dataset_ops.Dataset.range", "dataset_ops.Dataset.zip", "test_base.DatasetTestBase.assertDatasetProduces"], "dataset_ops.Dataset.from_tensors": [], "dataset_ops.Dataset.zip": [], "kernel_tests.filter_test.FilterTest.testShortCircuit.<lambda1>": [], "kernel_tests.filter_test.FilterTest.testParallelFilters": ["<builtin>.range", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.evaluate", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertEqual"], "kernel_tests.filter_test.FilterTest.testParallelFilters.<lambda1>": ["ops.math_ops.equal"], "kernel_tests.filter_test.FilterCheckpointTest._build_filter_range_graph": ["dataset_ops.Dataset.range"], "kernel_tests.filter_test.FilterCheckpointTest._build_filter_range_graph.<lambda1>": ["ops.math_ops.mod", "ops.math_ops.not_equal"], "kernel_tests.test_base.default_test_combinations": [], "kernel_tests.filter_test.FilterCheckpointTest": ["framework.combinations.generate", "framework.combinations.times", "kernel_tests.test_base.default_test_combinations", "kernel_tests.checkpoint_test_base.default_test_combinations"], "kernel_tests.checkpoint_test_base.default_test_combinations": [], "framework.combinations.times": [], "kernel_tests.filter_test.FilterCheckpointTest.test": ["<builtin>.sum", "<builtin>.range"], "<builtin>.sum": [], "kernel_tests.filter_test.FilterCheckpointTest.test.<lambda1>": ["kernel_tests.filter_test.FilterCheckpointTest._build_filter_range_graph"], "kernel_tests.filter_test.FilterCheckpointTest._build_filter_dict_graph": ["dataset_ops.Dataset.range"], "kernel_tests.filter_test.FilterCheckpointTest._build_filter_dict_graph.<lambda1>": [], "kernel_tests.filter_test.FilterCheckpointTest._build_filter_dict_graph.<lambda2>": ["ops.math_ops.equal"], "kernel_tests.filter_test.FilterCheckpointTest._build_filter_dict_graph.<lambda3>": [], "kernel_tests.filter_test.FilterCheckpointTest.testDict": ["<builtin>.sum", "<builtin>.range"], "kernel_tests.filter_test.FilterCheckpointTest._build_sparse_filter": ["dataset_ops.Dataset.range"], "kernel_tests.filter_test.FilterCheckpointTest._build_sparse_filter._map_fn": ["framework.sparse_tensor.SparseTensor"], "framework.sparse_tensor.SparseTensor": [], "kernel_tests.filter_test.FilterCheckpointTest._build_sparse_filter._filter_fn": ["ops.math_ops.equal"], "kernel_tests.filter_test.FilterCheckpointTest._build_sparse_filter.<lambda1>": [], "kernel_tests.filter_test.FilterCheckpointTest.testSparse": [], "platform.test.main": []}