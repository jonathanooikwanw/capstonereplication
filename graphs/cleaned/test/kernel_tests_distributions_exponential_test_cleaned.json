{"distributions.exponential_test": ["distributions.exponential_test.try_import", "platform.test.main"], "distributions.exponential_test.try_import": ["importlib.import_module", "<builtin>.str", "platform.tf_logging.warning"], "importlib.import_module": [], "<builtin>.str": [], "platform.tf_logging.warning": [], "distributions.exponential_test.ExponentialTest.testExponentialLogPDF": ["framework.constant_op.constant", "test.TestCase.assertAllClose", "numpy.array", "numpy.exp", "test.TestCase.assertEqual", "test.TestCase.evaluate", "distributions.exponential.Exponential"], "framework.constant_op.constant": [], "numpy.array": [], "distributions.exponential.Exponential": [], "test.TestCase.assertEqual": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "numpy.exp": [], "distributions.exponential_test.ExponentialTest.testExponentialLogPDFBoundary": ["test.TestCase.assertAllClose", "numpy.array", "numpy.log", "test.TestCase.evaluate", "distributions.exponential.Exponential"], "numpy.log": [], "distributions.exponential_test.ExponentialTest.testExponentialCDF": ["framework.constant_op.constant", "test.TestCase.assertAllClose", "numpy.array", "test.TestCase.assertEqual", "test.TestCase.evaluate", "distributions.exponential.Exponential"], "distributions.exponential_test.ExponentialTest.testExponentialLogSurvival": ["framework.constant_op.constant", "test.TestCase.assertAllClose", "numpy.array", "test.TestCase.assertEqual", "test.TestCase.evaluate", "distributions.exponential.Exponential"], "distributions.exponential_test.ExponentialTest.testExponentialMean": ["test.TestCase.assertAllClose", "numpy.array", "test.TestCase.assertEqual", "test.TestCase.evaluate", "distributions.exponential.Exponential"], "distributions.exponential_test.ExponentialTest.testExponentialVariance": ["test.TestCase.assertAllClose", "numpy.array", "test.TestCase.assertEqual", "test.TestCase.evaluate", "distributions.exponential.Exponential"], "distributions.exponential_test.ExponentialTest.testExponentialEntropy": ["test.TestCase.assertAllClose", "numpy.array", "test.TestCase.assertEqual", "test.TestCase.evaluate", "distributions.exponential.Exponential"], "distributions.exponential_test.ExponentialTest.testExponentialSample": ["test.TestCase.assertFalse", "framework.constant_op.constant", "<builtin>.range", "numpy.any", "test.TestCase.assertEqual", "test.TestCase.evaluate", "test.TestCase.assertLess", "distributions.exponential.Exponential"], "numpy.any": [], "test.TestCase.assertFalse": [], "<builtin>.range": [], "test.TestCase.assertLess": [], "distributions.exponential_test.ExponentialTest.testExponentialSampleMultiDimensional": ["test.TestCase.assertFalse", "framework.constant_op.constant", "<builtin>.range", "numpy.any", "test.TestCase.assertEqual", "test.TestCase.evaluate", "test.TestCase.assertLess", "distributions.exponential.Exponential"], "distributions.exponential_test.ExponentialTest.testFullyReparameterized": ["test.TestCase.assertIsNotNone", "eager.backprop.GradientTape", "distributions.exponential.Exponential", "framework.constant_op.constant"], "eager.backprop.GradientTape": [], "test.TestCase.assertIsNotNone": [], "distributions.exponential_test.ExponentialTest.testExponentialWithSoftplusRate": ["distributions.exponential.ExponentialWithSoftplusRate", "test.TestCase.evaluate", "ops.nn_ops.softplus", "test.TestCase.assertAllClose"], "distributions.exponential.ExponentialWithSoftplusRate": [], "ops.nn_ops.softplus": [], "platform.test.main": []}