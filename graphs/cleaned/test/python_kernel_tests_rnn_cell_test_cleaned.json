{"kernel_tests.rnn_cell_test": ["platform.test.main"], "kernel_tests.rnn_cell_test.Plus1RNNCell.output_size": [], "kernel_tests.rnn_cell_test.Plus1RNNCell.state_size": [], "kernel_tests.rnn_cell_test.Plus1RNNCell.__call__": [], "kernel_tests.rnn_cell_test.DummyMultiDimensionalLSTM.__init__": ["framework.tensor_shape.TensorShape", "<builtin>.TypeError", "<builtin>.isinstance"], "<builtin>.isinstance": [], "<builtin>.TypeError": [], "framework.tensor_shape.TensorShape": [], "kernel_tests.rnn_cell_test.DummyMultiDimensionalLSTM.output_size": [], "kernel_tests.rnn_cell_test.DummyMultiDimensionalLSTM.state_size": [], "kernel_tests.rnn_cell_test.DummyMultiDimensionalLSTM.__call__": [], "kernel_tests.rnn_cell_test.NestedRNNCell.output_size": [], "kernel_tests.rnn_cell_test.NestedRNNCell.state_size": [], "kernel_tests.rnn_cell_test.NestedRNNCell.__call__": [], "kernel_tests.rnn_cell_test.TestStateSaver.__init__": [], "kernel_tests.rnn_cell_test.TestStateSaver.state": ["ops.array_ops.zeros", "<builtin>.TypeError", "<builtin>.isinstance"], "ops.array_ops.zeros": [], "kernel_tests.rnn_cell_test.TestStateSaver.save_state": ["ops.array_ops.identity"], "ops.array_ops.identity": [], "kernel_tests.rnn_cell_test.TestStateSaver.batch_size": [], "kernel_tests.rnn_cell_test.TestStateSaver.state_size": [], "framework.test_util.run_v1_only": [], "kernel_tests.rnn_cell_test.TestStateSaverWithCounters": ["framework.test_util.run_v1_only"], "kernel_tests.rnn_cell_test.TestStateSaverWithCounters.__init__": ["ops.variables.VariableV1", "<builtin>.super"], "<builtin>.super": [], "ops.variables.VariableV1": [], "kernel_tests.rnn_cell_test.TestStateSaverWithCounters.state": ["ops.state_ops.assign_add", "framework.ops.control_dependencies", "<builtin>.super"], "ops.state_ops.assign_add": [], "framework.ops.control_dependencies": [], "kernel_tests.rnn_cell_test.TestStateSaverWithCounters.save_state": ["ops.state_ops.assign_add", "framework.ops.control_dependencies", "<builtin>.super"], "kernel_tests.rnn_cell_test.TestStateSaverWithCounters.num_state_calls": [], "kernel_tests.rnn_cell_test.TestStateSaverWithCounters.num_save_state_calls": [], "kernel_tests.rnn_cell_test.RNNTest.setUp": ["numpy.random.seed"], "numpy.random.seed": [], "kernel_tests.rnn_cell_test.RNNTest": ["framework.test_util.run_v1_only"], "kernel_tests.rnn_cell_test.RNNTest.testInvalidSequenceLengthShape": ["rnn_cell.RNNCell.__init__", "ops.rnn.static_rnn", "ops.array_ops.placeholder", "test.TestCase.assertRaisesRegex"], "rnn_cell.RNNCell.__init__": [], "ops.array_ops.placeholder": [], "test.TestCase.assertRaisesRegex": [], "ops.rnn.static_rnn": [], "kernel_tests.rnn_cell_test.RNNTest.testRNN": ["numpy.random.randn", "test.TestCase.assertAllClose", "<builtin>.zip", "test.TestCase.assertEqual", "rnn_cell.RNNCell.__init__", "ops.array_ops.placeholder", "ops.rnn.static_rnn", "numpy.ones", "<builtin>.len", "test.TestCase.session"], "<builtin>.len": [], "test.TestCase.assertEqual": [], "<builtin>.zip": [], "test.TestCase.session": [], "numpy.random.randn": [], "test.TestCase.assertAllClose": [], "numpy.ones": [], "kernel_tests.rnn_cell_test.RNNTest.testDropout": ["numpy.random.randn", "numpy.ones_like", "test.TestCase.assertIs", "ops.rnn_cell.DropoutWrapper", "test.TestCase.assertAllClose", "<builtin>.zip", "test.TestCase.assertEqual", "rnn_cell.RNNCell.__init__", "ops.array_ops.placeholder", "ops.rnn.static_rnn", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "ops.rnn_cell.DropoutWrapper": [], "test.TestCase.assertIs": [], "ops.variable_scope.variable_scope": [], "numpy.ones_like": [], "kernel_tests.rnn_cell_test.RNNTest.testDynamicCalculation": ["numpy.random.randn", "test.TestCase.assertAllClose", "numpy.zeros", "test.TestCase.assertEqual", "rnn_cell.RNNCell.__init__", "ops.array_ops.placeholder", "ops.rnn.static_rnn", "numpy.ones", "numpy.zeros_like", "numpy.vstack", "test.TestCase.assertAllEqual", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "numpy.zeros": [], "numpy.vstack": [], "numpy.zeros_like": [], "test.TestCase.assertAllEqual": [], "kernel_tests.rnn_cell_test.RNNTest._testScope": ["platform.tf_logging.info", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.variables.global_variables", "test.TestCase.session", "<builtin>.len", "kernel_tests.rnn_cell_test.RNNTest.testScope.factory", "ops.variable_scope.variable_scope"], "framework.ops.Graph": [], "kernel_tests.rnn_cell_test.RNNTest.testScope.factory": ["rnn_cell.RNNCell.__init__", "ops.rnn.static_rnn", "ops.array_ops.placeholder"], "ops.variables.global_variables_initializer": [], "ops.variables.global_variables": [], "platform.tf_logging.info": [], "kernel_tests.rnn_cell_test.RNNTest.testScope": ["kernel_tests.rnn_cell_test.RNNTest._testScope"], "kernel_tests.rnn_cell_test.LSTMTest.setUp": ["numpy.random.seed"], "kernel_tests.rnn_cell_test.LSTMTest.testDType": ["test.TestCase.assertEqual", "ops.rnn_cell.LSTMCell", "ops.array_ops.ones"], "ops.rnn_cell.LSTMCell": [], "ops.array_ops.ones": [], "kernel_tests.rnn_cell_test.LSTMTest": ["framework.test_util.run_v1_only", "framework.test_util.run_in_graph_and_eager_modes"], "kernel_tests.rnn_cell_test.LSTMTest.testNoProjNoSharding": ["numpy.random.randn", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "<builtin>.len", "test.TestCase.session"], "ops.init_ops.random_uniform_initializer": [], "kernel_tests.rnn_cell_test.LSTMTest.testCellClipping": ["numpy.random.randn", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "numpy.zeros", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "test.TestCase.assertAllEqual", "<builtin>.len", "test.TestCase.session"], "kernel_tests.rnn_cell_test.LSTMTest.testNoProjNoShardingSimpleStateSaver": ["ops.rnn.static_state_saving_rnn", "numpy.random.randn", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.random_uniform_initializer", "kernel_tests.rnn_cell_test.TestStateSaver.__init__", "test.TestCase.assertAllEqual", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "ops.rnn.static_state_saving_rnn": [], "kernel_tests.rnn_cell_test.LSTMTest.testNoProjNoShardingTupleStateSaver": ["ops.rnn.static_state_saving_rnn", "numpy.random.randn", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.random_uniform_initializer", "kernel_tests.rnn_cell_test.TestStateSaver.__init__", "test.TestCase.assertAllEqual", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.LSTMTest.testNoProjNoShardingNestedTupleStateSaver": ["kernel_tests.rnn_cell_test.LSTMTest.testNoProjNoShardingNestedTupleStateSaver._cell", "test.TestCase.session", "ops.rnn.static_state_saving_rnn", "<builtin>.range", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.init_ops.random_uniform_initializer", "kernel_tests.rnn_cell_test.TestStateSaver.__init__", "<builtin>.len", "numpy.random.randn", "<builtin>.list", "util.nest.flatten", "test.TestCase.assertAllEqual", "ops.variable_scope.variable_scope", "ops.variables.global_variables_initializer", "<builtin>.zip", "ops.array_ops.placeholder", "<builtin>.dict", "ops.rnn_cell.MultiRNNCell"], "kernel_tests.rnn_cell_test.LSTMTest.testNoProjNoShardingNestedTupleStateSaver._cell": ["ops.rnn_cell.LSTMCell"], "<builtin>.range": [], "ops.rnn_cell.MultiRNNCell": [], "util.nest.flatten": [], "<builtin>.list": [], "<builtin>.dict": [], "kernel_tests.rnn_cell_test.LSTMTest.testProjNoSharding": ["numpy.random.randn", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "<builtin>.len", "test.TestCase.session"], "kernel_tests.rnn_cell_test.LSTMTest._testStateTupleWithProjAndSequenceLength": ["numpy.random.randn", "<builtin>.isinstance", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "numpy.hstack", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "test.TestCase.assertTrue", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "test.TestCase.assertAllEqual", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "test.TestCase.assertTrue": [], "numpy.hstack": [], "kernel_tests.rnn_cell_test.LSTMTest.testProjSharding": ["numpy.random.randn", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "<builtin>.len", "test.TestCase.session"], "kernel_tests.rnn_cell_test.LSTMTest.testDoubleInput": ["numpy.random.randn", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "numpy.asarray", "<builtin>.len", "test.TestCase.session"], "numpy.asarray": [], "kernel_tests.rnn_cell_test.LSTMTest.testShardNoShardEquivalentOutput": ["numpy.random.randn", "test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "<builtin>.zip", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.constant_initializer", "<builtin>.dict", "ops.rnn.static_rnn", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "ops.init_ops.constant_initializer": [], "kernel_tests.rnn_cell_test.LSTMTest.testDoubleInputWithDropoutAndDynamicCalculation": ["numpy.random.randn", "ops.rnn_cell.DropoutWrapper", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "numpy.asarray", "<builtin>.len", "test.TestCase.session"], "kernel_tests.rnn_cell_test.LSTMTest.testSharingWeightsWithReuse": ["numpy.random.randn", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "<builtin>.zip", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "test.TestCase.assertTrue", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "numpy.linalg.norm", "test.TestCase.assertAllEqual", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "numpy.linalg.norm": [], "kernel_tests.rnn_cell_test.LSTMTest.testSharingWeightsWithDifferentNamescope": ["numpy.random.randn", "framework.ops.name_scope", "ops.rnn_cell.LSTMCell", "ops.variables.global_variables_initializer", "framework.ops.Graph", "<builtin>.zip", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "test.TestCase.assertAllEqual", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "framework.ops.name_scope": [], "kernel_tests.rnn_cell_test.LSTMTest.testDynamicRNNAllowsUnknownTimeDimension": ["ops.rnn.dynamic_rnn", "ops.array_ops.placeholder", "ops.rnn_cell.GRUCell"], "ops.rnn_cell.GRUCell": [], "ops.rnn.dynamic_rnn": [], "framework.test_util.run_in_graph_and_eager_modes": [], "kernel_tests.rnn_cell_test.LSTMTest.testDynamicRNNWithTupleStates": ["test.TestCase.assertAllClose", "test.TestCase.assertTrue", "test.TestCase.session", "framework.test_util.is_xla_enabled", "<builtin>.isinstance", "test.TestCase.assertIs", "framework.ops.Graph", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "framework.constant_op.constant", "ops.rnn.dynamic_rnn", "numpy.random.randn", "ops.array_ops.stack", "numpy.hstack", "ops.rnn_cell.LSTMCell", "eager.context.executing_eagerly", "test.TestCase.assertAllEqual", "ops.variable_scope.variable_scope", "ops.variables.global_variables_initializer", "ops.array_ops.placeholder"], "eager.context.executing_eagerly": [], "framework.constant_op.constant": [], "ops.array_ops.stack": [], "framework.test_util.is_xla_enabled": [], "kernel_tests.rnn_cell_test.LSTMTest.testDynamicRNNWithNestedTupleStates": ["test.TestCase.assertAllClose", "kernel_tests.rnn_cell_test.LSTMTest.testDynamicRNNWithNestedTupleStates._cell", "test.TestCase.session", "framework.test_util.is_xla_enabled", "<builtin>.range", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "framework.constant_op.constant", "<builtin>.len", "ops.rnn.dynamic_rnn", "numpy.random.randn", "ops.array_ops.stack", "numpy.hstack", "util.nest.flatten", "eager.context.executing_eagerly", "test.TestCase.assertAllEqual", "ops.variable_scope.variable_scope", "ops.variables.global_variables_initializer", "ops.array_ops.placeholder", "ops.rnn_cell.MultiRNNCell"], "kernel_tests.rnn_cell_test.LSTMTest.testDynamicRNNWithNestedTupleStates._cell": ["ops.rnn_cell.LSTMCell"], "kernel_tests.rnn_cell_test.LSTMTest._testDynamicEquivalentToStaticRNN": ["ops.gradients_impl.gradients", "test.TestCase.assertAllClose", "test.TestCase.session", "platform.tf_logging.info", "framework.ops.Graph", "numpy.random.randint", "test.TestCase.assertEqual", "ops.init_ops.random_uniform_initializer", "ops.rnn.static_rnn", "framework.ops.get_collection", "framework.constant_op.constant", "<builtin>.len", "ops.rnn.dynamic_rnn", "numpy.random.randn", "ops.rnn_cell.LSTMCell", "util.nest.flatten", "ops.array_ops.unstack", "eager.context.executing_eagerly", "ops.variable_scope.variable_scope", "<builtin>.enumerate", "ops.variables.global_variables_initializer", "<builtin>.zip", "ops.array_ops.placeholder"], "numpy.random.randint": [], "ops.array_ops.unstack": [], "ops.gradients_impl.gradients": [], "framework.ops.get_collection": [], "<builtin>.enumerate": [], "kernel_tests.rnn_cell_test.LSTMTest.testDynamicEquivalentToStaticRNN": ["kernel_tests.rnn_cell_test.LSTMTest._testDynamicEquivalentToStaticRNN"], "kernel_tests.rnn_cell_test.LSTMTest.testDynamicEquivalentToStaticRNNWithSequenceLength": ["kernel_tests.rnn_cell_test.LSTMTest._testDynamicEquivalentToStaticRNN"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest.setUp": ["numpy.random.seed"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest._createBidirectionalRNN": ["numpy.random.randn", "ops.array_ops.stack", "ops.rnn_cell.LSTMCell", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.rnn.static_bidirectional_rnn", "ops.init_ops.random_uniform_initializer", "<builtin>.len"], "ops.rnn.static_bidirectional_rnn": [], "kernel_tests.rnn_cell_test.BidirectionalRNNTest._testBidirectionalRNN": ["test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "framework.ops.Graph", "kernel_tests.rnn_cell_test.BidirectionalRNNTest._createBidirectionalRNN", "test.TestCase.session"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest._testBidirectionalRNNWithoutSequenceLength": ["test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "<builtin>.range", "framework.ops.Graph", "kernel_tests.rnn_cell_test.BidirectionalRNNTest._createBidirectionalRNN", "test.TestCase.session"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest": ["framework.test_util.run_v1_only"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalRNN": ["kernel_tests.rnn_cell_test.BidirectionalRNNTest._testBidirectionalRNN"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalRNNWithoutSequenceLength": ["kernel_tests.rnn_cell_test.BidirectionalRNNTest._testBidirectionalRNNWithoutSequenceLength"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest._createBidirectionalDynamicRNN": ["numpy.random.randn", "ops.array_ops.stack", "ops.rnn_cell.LSTMCell", "ops.array_ops.concat", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.init_ops.random_uniform_initializer", "ops.rnn.bidirectional_dynamic_rnn", "ops.array_ops.transpose"], "ops.array_ops.transpose": [], "ops.rnn.bidirectional_dynamic_rnn": [], "ops.array_ops.concat": [], "kernel_tests.rnn_cell_test.BidirectionalRNNTest._testBidirectionalDynamicRNN": ["test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "<builtin>.range", "framework.ops.Graph", "numpy.swapaxes", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual", "test.TestCase.session", "kernel_tests.rnn_cell_test.BidirectionalRNNTest._createBidirectionalDynamicRNN"], "numpy.swapaxes": [], "kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalDynamicRNN": ["kernel_tests.rnn_cell_test.BidirectionalRNNTest._testBidirectionalDynamicRNN", "itertools.product"], "itertools.product": [], "kernel_tests.rnn_cell_test.BidirectionalRNNTest._testScope": ["kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalRNNScope.factory", "platform.tf_logging.info", "ops.variables.global_variables_initializer", "framework.ops.Graph", "kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalDynamicRNNScope.get_factory.factory", "test.TestCase.assertEqual", "ops.variables.global_variables", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalDynamicRNNScope.get_factory.factory": ["kernel_tests.rnn_cell_test.BidirectionalRNNTest._createBidirectionalDynamicRNN"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalRNNScope.factory": ["kernel_tests.rnn_cell_test.BidirectionalRNNTest._createBidirectionalRNN"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalRNNScope": ["kernel_tests.rnn_cell_test.BidirectionalRNNTest._testScope"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalDynamicRNNScope": ["kernel_tests.rnn_cell_test.BidirectionalRNNTest._testScope", "kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalDynamicRNNScope.get_factory"], "kernel_tests.rnn_cell_test.BidirectionalRNNTest.testBidirectionalDynamicRNNScope.get_factory": [], "kernel_tests.rnn_cell_test.MultiDimensionalLSTMTest.setUp": ["numpy.random.seed"], "kernel_tests.rnn_cell_test.MultiDimensionalLSTMTest": ["framework.test_util.run_v1_only"], "kernel_tests.rnn_cell_test.MultiDimensionalLSTMTest.testMultiDimensionalLSTMAllRNNContainers": ["ops.rnn.dynamic_rnn", "ops.rnn.static_state_saving_rnn", "numpy.random.randn", "ops.array_ops.stack", "ops.variables.global_variables_initializer", "numpy.hstack", "framework.ops.Graph", "<builtin>.zip", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.rnn.static_bidirectional_rnn", "numpy.concatenate", "ops.rnn.static_rnn", "kernel_tests.rnn_cell_test.TestStateSaver.__init__", "numpy.array", "test.TestCase.assertAllEqual", "kernel_tests.rnn_cell_test.DummyMultiDimensionalLSTM.__init__", "test.TestCase.session"], "numpy.array": [], "numpy.concatenate": [], "kernel_tests.rnn_cell_test.NestedLSTMTest.setUp": ["numpy.random.seed"], "kernel_tests.rnn_cell_test.NestedLSTMTest": ["framework.test_util.run_v1_only"], "kernel_tests.rnn_cell_test.NestedLSTMTest.testNestedIOLSTMAllRNNContainers": ["ops.rnn.dynamic_rnn", "ops.rnn.static_state_saving_rnn", "numpy.random.randn", "ops.array_ops.stack", "numpy.transpose", "ops.variables.global_variables_initializer", "numpy.hstack", "framework.ops.Graph", "numpy.concatenate", "ops.array_ops.placeholder", "rnn_cell.RNNCell.__init__", "ops.rnn.static_bidirectional_rnn", "ops.rnn.static_rnn", "kernel_tests.rnn_cell_test.TestStateSaver.__init__", "numpy.array", "kernel_tests.rnn_cell_test.NestedLSTMTest.testNestedIOLSTMAllRNNContainers._assert_same_shape", "test.TestCase.assertAllEqual", "test.TestCase.session"], "kernel_tests.rnn_cell_test.NestedLSTMTest.testNestedIOLSTMAllRNNContainers._assert_same_shape": ["test.TestCase.assertEqual", "util.nest.flatten", "<builtin>.zip"], "numpy.transpose": [], "kernel_tests.rnn_cell_test.StateSaverRNNTest.setUp": ["numpy.random.seed"], "kernel_tests.rnn_cell_test.StateSaverRNNTest._factory": ["ops.rnn.static_state_saving_rnn", "ops.rnn_cell.LSTMCell", "ops.array_ops.zeros", "ops.init_ops.random_uniform_initializer"], "kernel_tests.rnn_cell_test.StateSaverRNNTest._testScope": ["platform.tf_logging.info", "kernel_tests.rnn_cell_test.StateSaverRNNTest._factory", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.assertEqual", "kernel_tests.rnn_cell_test.TestStateSaver.__init__", "ops.variables.global_variables", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.StateSaverRNNTest.testStateSaverRNNScope": ["kernel_tests.rnn_cell_test.StateSaverRNNTest._testScope"], "kernel_tests.rnn_cell_test.StateSaverRNNTest.testStateSaverCallsSaveState": ["kernel_tests.rnn_cell_test.TestStateSaverWithCounters.__init__", "ops.variables.local_variables_initializer", "kernel_tests.rnn_cell_test.StateSaverRNNTest._factory", "test.TestCase.skipTest", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "test.TestCase.cached_session"], "test.TestCase.skipTest": [], "test.TestCase.cached_session": [], "ops.variables.local_variables_initializer": [], "kernel_tests.rnn_cell_test.GRUTest.setUp": ["numpy.random.seed"], "kernel_tests.rnn_cell_test.GRUTest": ["framework.test_util.run_v1_only"], "kernel_tests.rnn_cell_test.GRUTest.testDynamic": ["ops.rnn.dynamic_rnn", "numpy.random.randn", "ops.variables.global_variables_initializer", "framework.ops.Graph", "numpy.random.randint", "ops.array_ops.placeholder", "ops.rnn_cell.GRUCell", "test.TestCase.session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.GRUTest._testScope": ["platform.tf_logging.info", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.variables.global_variables", "kernel_tests.rnn_cell_test.GRUTest.testDynamicScope.factory", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.GRUTest.testDynamicScope.factory": ["ops.rnn.dynamic_rnn", "ops.array_ops.placeholder", "ops.rnn_cell.GRUCell"], "kernel_tests.rnn_cell_test.GRUTest.testDynamicScope": ["kernel_tests.rnn_cell_test.GRUTest._testScope", "numpy.random.randint"], "kernel_tests.rnn_cell_test.RawRNNTest.setUp": ["numpy.random.seed"], "kernel_tests.rnn_cell_test.RawRNNTest": ["framework.test_util.run_v1_only"], "kernel_tests.rnn_cell_test.RawRNNTest._testRawRNN": ["ops.gradients_impl.gradients", "test.TestCase.assertAllClose", "ops.tensor_array_ops.TensorArray", "ops.array_ops.shape", "test.TestCase.session", "ops.variables.trainable_variables", "<builtin>.range", "framework.ops.Graph", "numpy.random.randint", "test.TestCase.assertEqual", "ops.rnn.raw_rnn", "<builtin>.len", "ops.rnn.dynamic_rnn", "numpy.random.randn", "ops.rnn_cell.LSTMCell", "ops.variable_scope.get_variable_scope", "ops.variables.global_variables_initializer", "numpy.zeros", "ops.array_ops.placeholder"], "ops.array_ops.shape": [], "ops.tensor_array_ops.TensorArray": [], "kernel_tests.rnn_cell_test.RawRNNTest._testRawRNN.loop_fn": ["ops.math_ops.reduce_all", "ops.control_flow_ops.cond"], "ops.math_ops.reduce_all": [], "kernel_tests.rnn_cell_test.RawRNNTest._testRawRNN.loop_fn.<lambda1>": ["ops.array_ops.zeros"], "kernel_tests.rnn_cell_test.RawRNNTest._testRawRNN.loop_fn.<lambda2>": [], "ops.control_flow_ops.cond": [], "ops.variable_scope.get_variable_scope": [], "ops.rnn.raw_rnn": [], "ops.variables.trainable_variables": [], "kernel_tests.rnn_cell_test.RawRNNTest.testRawRNNZeroLength": ["kernel_tests.rnn_cell_test.RawRNNTest._testRawRNN"], "kernel_tests.rnn_cell_test.RawRNNTest.testRawRNN": ["kernel_tests.rnn_cell_test.RawRNNTest._testRawRNN"], "kernel_tests.rnn_cell_test.RawRNNTest.testLoopState": ["numpy.random.randn", "test.TestCase.evaluate", "ops.tensor_array_ops.TensorArray", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "ops.array_ops.shape", "test.TestCase.assertEqual", "ops.rnn.raw_rnn", "test.TestCase.session"], "kernel_tests.rnn_cell_test.RawRNNTest.testLoopState.loop_fn": ["ops.math_ops.reduce_all", "ops.array_ops.squeeze", "ops.array_ops.stack", "ops.control_flow_ops.cond", "ops.array_ops.tile", "framework.constant_op.constant"], "ops.array_ops.squeeze": [], "ops.array_ops.tile": [], "kernel_tests.rnn_cell_test.RawRNNTest.testLoopState.loop_fn.<lambda1>": ["ops.array_ops.zeros"], "kernel_tests.rnn_cell_test.RawRNNTest.testLoopState.loop_fn.<lambda2>": [], "test.TestCase.evaluate": [], "kernel_tests.rnn_cell_test.RawRNNTest.testLoopStateWithTensorArray": ["numpy.random.randn", "ops.tensor_array_ops.TensorArray", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "ops.array_ops.shape", "ops.rnn.raw_rnn", "test.TestCase.assertAllEqual", "test.TestCase.session"], "kernel_tests.rnn_cell_test.RawRNNTest.testLoopStateWithTensorArray.loop_fn": ["ops.math_ops.reduce_all", "ops.control_flow_ops.cond", "ops.array_ops.tile", "ops.tensor_array_ops.TensorArray"], "kernel_tests.rnn_cell_test.RawRNNTest.testLoopStateWithTensorArray.loop_fn.<lambda1>": ["ops.array_ops.zeros"], "kernel_tests.rnn_cell_test.RawRNNTest.testLoopStateWithTensorArray.loop_fn.<lambda2>": [], "kernel_tests.rnn_cell_test.RawRNNTest.testEmitDifferentStructureThanCellOutput": ["numpy.random.randn", "ops.tensor_array_ops.TensorArray", "ops.rnn_cell.LSTMCell", "framework.ops.Graph", "ops.array_ops.shape", "ops.array_ops.placeholder", "test.TestCase.assertEqual", "ops.rnn.raw_rnn", "numpy.ones", "test.TestCase.assertAllEqual", "<builtin>.len", "test.TestCase.session"], "kernel_tests.rnn_cell_test.RawRNNTest.testEmitDifferentStructureThanCellOutput.loop_fn": ["ops.math_ops.reduce_all", "ops.control_flow_ops.cond", "ops.array_ops.zeros", "ops.array_ops.tile", "ops.array_ops.ones"], "kernel_tests.rnn_cell_test.RawRNNTest.testEmitDifferentStructureThanCellOutput.loop_fn.<lambda1>": ["ops.array_ops.zeros"], "kernel_tests.rnn_cell_test.RawRNNTest.testEmitDifferentStructureThanCellOutput.loop_fn.<lambda2>": [], "kernel_tests.rnn_cell_test.RawRNNTest._testScope": ["platform.tf_logging.info", "ops.variables.global_variables_initializer", "kernel_tests.rnn_cell_test.RawRNNTest.testRawRNNScope.factory", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.variables.global_variables", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.RawRNNTest.testRawRNNScope.factory": ["ops.tensor_array_ops.TensorArray", "ops.rnn_cell.LSTMCell", "ops.array_ops.shape", "ops.array_ops.placeholder", "ops.rnn.raw_rnn"], "kernel_tests.rnn_cell_test.RawRNNTest.testRawRNNScope": ["kernel_tests.rnn_cell_test.RawRNNTest._testScope"], "kernel_tests.rnn_cell_test.RawRNNTest.testRawRNNScope.factory.loop_fn": ["ops.math_ops.reduce_all", "ops.control_flow_ops.cond"], "kernel_tests.rnn_cell_test.RawRNNTest.testRawRNNScope.factory.loop_fn.<lambda1>": ["ops.array_ops.zeros"], "kernel_tests.rnn_cell_test.RawRNNTest.testRawRNNScope.factory.loop_fn.<lambda2>": [], "kernel_tests.rnn_cell_test.DeviceWrapperCell.__init__": [], "kernel_tests.rnn_cell_test.DeviceWrapperCell.output_size": [], "kernel_tests.rnn_cell_test.DeviceWrapperCell.state_size": [], "kernel_tests.rnn_cell_test.DeviceWrapperCell.__call__": ["framework.ops.device"], "framework.ops.device": [], "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest._execute_rnn_on": ["ops.rnn.dynamic_rnn", "numpy.random.randn", "ops.variables.global_variables_initializer", "ops.rnn_cell.LSTMCell", "kernel_tests.rnn_cell_test.DeviceWrapperCell.__init__", "protobuf.config_pb2.RunOptions", "numpy.random.randint", "protobuf.config_pb2.RunMetadata", "framework.constant_op.constant", "framework.ops.device", "test.TestCase.session"], "protobuf.config_pb2.RunOptions": [], "protobuf.config_pb2.RunMetadata": [], "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest._retrieve_cpu_gpu_stats": [], "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest": ["framework.test_util.run_v1_only"], "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest.testRNNOnCPUCellOnGPU": ["kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest._execute_rnn_on", "platform.test.gpu_device_name", "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest._retrieve_cpu_gpu_stats", "platform.test.is_gpu_available", "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest.testRNNOnCPUCellOnGPU._assert_in"], "platform.test.is_gpu_available": [], "platform.test.gpu_device_name": [], "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest.testRNNOnCPUCellOnGPU._assert_in": ["test.TestCase.assertTrue", "test.TestCase.assertFalse", "<builtin>.any"], "<builtin>.any": [], "test.TestCase.assertFalse": [], "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest.testRNNOnCPUCellOnCPU": ["kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest.testRNNOnCPUCellOnCPU._assert_in", "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest._execute_rnn_on", "platform.test.gpu_device_name", "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest._retrieve_cpu_gpu_stats", "platform.test.is_gpu_available"], "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest.testRNNOnCPUCellOnCPU._assert_in": ["test.TestCase.assertTrue", "test.TestCase.assertFalse", "<builtin>.any"], "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest.testInputOnGPUCellNotDeclared": ["kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest._execute_rnn_on", "platform.test.gpu_device_name", "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest.testInputOnGPUCellNotDeclared._assert_in", "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest._retrieve_cpu_gpu_stats", "platform.test.is_gpu_available"], "kernel_tests.rnn_cell_test.TensorArrayOnCorrectDeviceTest.testInputOnGPUCellNotDeclared._assert_in": ["test.TestCase.assertTrue", "test.TestCase.assertFalse", "<builtin>.any"], "kernel_tests.rnn_cell_test.RNNCellTest": ["framework.test_util.run_v1_only", "framework.test_util.run_in_graph_and_eager_modes"], "kernel_tests.rnn_cell_test.RNNCellTest.testBasicRNNCell": ["ops.rnn_cell_impl.BasicRNNCell", "test.TestCase.assertFalse", "test.TestCase.assertEqual", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "test.TestCase.cached_session", "ops.variable_scope.variable_scope"], "ops.rnn_cell_impl.BasicRNNCell": [], "kernel_tests.rnn_cell_test.RNNCellTest.testBasicRNNCellNotTrainable": ["ops.rnn_cell_impl.BasicRNNCell", "test.TestCase.assertFalse", "test.TestCase.assertEqual", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "test.TestCase.cached_session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.RNNCellTest.testBasicRNNCellNotTrainable.not_trainable_getter": [], "kernel_tests.rnn_cell_test.RNNCellTest.testGRUCell": ["test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "ops.rnn_cell_impl.GRUCell", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "test.TestCase.cached_session", "ops.variable_scope.variable_scope"], "ops.rnn_cell_impl.GRUCell": [], "kernel_tests.rnn_cell_test.RNNCellTest.testBasicLSTMCell": ["test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertFalse", "framework.ops.Graph", "ops.rnn_cell_impl.BasicLSTMCell", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "ops.rnn_cell_impl.MultiRNNCell", "test.TestCase.assertEqual", "numpy.array", "ops.variables.global_variables", "<builtin>.len", "test.TestCase.session", "ops.variable_scope.variable_scope"], "ops.rnn_cell_impl.BasicLSTMCell": [], "ops.rnn_cell_impl.MultiRNNCell": [], "kernel_tests.rnn_cell_test.RNNCellTest.testBasicLSTMCellDimension0Error": ["ops.rnn_cell_impl.BasicLSTMCell", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "test.TestCase.assertRaises", "test.TestCase.cached_session", "ops.variable_scope.variable_scope"], "test.TestCase.assertRaises": [], "kernel_tests.rnn_cell_test.RNNCellTest.testBasicLSTMCellStateSizeError": ["ops.rnn_cell_impl.BasicLSTMCell", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "test.TestCase.assertRaises", "test.TestCase.cached_session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.RNNCellTest.testBasicLSTMCellStateTupleType": ["<builtin>.isinstance", "<builtin>.range", "ops.variable_scope.get_variable_scope", "ops.rnn_cell_impl.BasicLSTMCell", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "ops.rnn_cell_impl.MultiRNNCell", "test.TestCase.assertTrue", "test.TestCase.cached_session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.RNNCellTest.testBasicLSTMCellWithStateTuple": ["test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "<builtin>.range", "ops.rnn_cell_impl.BasicLSTMCell", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "ops.rnn_cell_impl.MultiRNNCell", "test.TestCase.assertEqual", "numpy.array", "test.TestCase.cached_session", "<builtin>.len", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.RNNCellTest.testLSTMCell": ["<builtin>.float", "<builtin>.range", "ops.rnn_cell_impl.LSTMCell", "test.TestCase.assertEqual", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "test.TestCase.assertTrue", "numpy.linalg.norm", "test.TestCase.cached_session", "<builtin>.len", "ops.variable_scope.variable_scope"], "ops.rnn_cell_impl.LSTMCell": [], "<builtin>.float": [], "kernel_tests.rnn_cell_test.RNNCellTest.testLSTMCellVariables": ["ops.rnn_cell_impl.LSTMCell", "test.TestCase.assertEqual", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "ops.variables.global_variables", "test.TestCase.cached_session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.RNNCellTest.testWrapperCheckpointing": ["tracking.util.Checkpoint", "ops.rnn_cell_impl.BasicRNNCell", "test.TestCase.evaluate", "test.TestCase.get_temp_dir", "ops.array_ops.ones", "test.TestCase.assertAllEqual", "os.path.join"], "kernel_tests.rnn_cell_test.RNNCellTest.testWrapperCheckpointing.<list1>.<lambda1>": [], "kernel_tests.rnn_cell_test.RNNCellTest.testWrapperCheckpointing.<lambda1>": ["ops.rnn_cell_impl.MultiRNNCell"], "tracking.util.Checkpoint": [], "test.TestCase.get_temp_dir": [], "os.path.join": [], "kernel_tests.rnn_cell_test.RNNCellTest.testResidualWrapper": ["test.TestCase.assertIs", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "ops.rnn_cell_impl.ResidualWrapper", "ops.rnn_cell_impl.GRUCell", "test.TestCase.assertEqual", "ops.init_ops.constant_initializer", "numpy.array", "framework.ops.convert_to_tensor"], "framework.ops.convert_to_tensor": [], "ops.rnn_cell_impl.ResidualWrapper": [], "kernel_tests.rnn_cell_test.RNNCellTest.testResidualWrapperWithSlice": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "ops.rnn_cell_impl.ResidualWrapper", "ops.rnn_cell_impl.GRUCell", "ops.init_ops.constant_initializer", "numpy.array", "framework.ops.convert_to_tensor"], "kernel_tests.rnn_cell_test.RNNCellTest.testResidualWrapperWithSlice.residual_with_slice_fn": ["ops.array_ops.slice"], "ops.array_ops.slice": [], "kernel_tests.rnn_cell_test.RNNCellTest.testDeviceWrapper": ["test.TestCase.assertIn", "test.TestCase.assertIs", "ops.rnn_cell_impl.GRUCell", "test.TestCase.assertEqual", "ops.rnn_cell_impl.DeviceWrapper", "ops.array_ops.zeros"], "ops.rnn_cell_impl.DeviceWrapper": [], "test.TestCase.assertIn": [], "kernel_tests.rnn_cell_test.RNNCellTest._retrieve_cpu_gpu_stats": [], "kernel_tests.rnn_cell_test.RNNCellTest.testDeviceWrapperDynamicExecutionNodesAreAllProperlyLocated": ["ops.rnn.dynamic_rnn", "platform.test.gpu_device_name", "kernel_tests.rnn_cell_test.RNNCellTest._retrieve_cpu_gpu_stats", "test.TestCase.assertFalse", "protobuf.config_pb2.RunOptions", "ops.rnn_cell_impl.GRUCell", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "ops.rnn_cell_impl.DeviceWrapper", "test.TestCase.assertTrue", "protobuf.config_pb2.RunMetadata", "platform.test.is_gpu_available", "framework.ops.device", "test.TestCase.session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.RNNCellTest.testMultiRNNCell": ["test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "<builtin>.range", "ops.rnn_cell_impl.GRUCell", "test.TestCase.assertEqual", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "ops.rnn_cell_impl.MultiRNNCell", "test.TestCase.assertTrue", "test.TestCase.cached_session", "<builtin>.len", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.RNNCellTest.testMultiRNNCellWithStateTuple": ["test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertRaisesRegex", "ops.rnn_cell_impl.GRUCell", "ops.init_ops.constant_initializer", "ops.array_ops.zeros", "ops.rnn_cell_impl.MultiRNNCell", "test.TestCase.cached_session", "ops.variable_scope.variable_scope"], "kernel_tests.rnn_cell_test.RNNCellTest.testDeviceWrapperSerialization": ["rnn_cell_impl.DeviceWrapper.from_config", "ops.rnn_cell_impl.LSTMCell", "ops.rnn_cell_impl.DeviceWrapper", "test.TestCase.assertDictEqual", "rnn_cell_impl.LSTMCell.from_config", "test.TestCase.assertIsInstance"], "rnn_cell_impl.LSTMCell.from_config": [], "rnn_cell_impl.DeviceWrapper.from_config": [], "test.TestCase.assertDictEqual": [], "test.TestCase.assertIsInstance": [], "kernel_tests.rnn_cell_test.RNNCellTest.testResidualWrapperSerialization": ["ops.rnn_cell_impl.ResidualWrapper", "ops.rnn_cell_impl.LSTMCell", "test.TestCase.assertEqual", "rnn_cell_impl.ResidualWrapper.from_config", "test.TestCase.assertDictEqual", "rnn_cell_impl.LSTMCell.from_config", "test.TestCase.assertIsInstance"], "rnn_cell_impl.ResidualWrapper.from_config": [], "kernel_tests.rnn_cell_test.RNNCellTest.testResidualWrapperSerialization.<lambda1>": [], "kernel_tests.rnn_cell_test.RNNCellTest.testResidualWrapperSerialization.residual_fn": [], "kernel_tests.rnn_cell_test.RNNCellTest.testDropoutWrapperSerialization": ["rnn_cell_impl.DropoutWrapper.from_config", "test.TestCase.assertFalse", "ops.rnn_cell_impl.DropoutWrapper", "ops.rnn_cell_impl.LSTMCell", "test.TestCase.assertTrue", "test.TestCase.assertDictEqual", "rnn_cell_impl.LSTMCell.from_config", "test.TestCase.assertIsInstance"], "ops.rnn_cell_impl.DropoutWrapper": [], "rnn_cell_impl.DropoutWrapper.from_config": [], "kernel_tests.rnn_cell_test.RNNCellTest.testDropoutWrapperSerialization.<lambda1>": [], "kernel_tests.rnn_cell_test.RNNCellTest.testDropoutWrapperSerialization.dropout_state_filter_visitor": [], "kernel_tests.rnn_cell_test.RNNCellTest.testSavedModel": ["framework.test_util.is_gpu_available", "os.path.join", "test.TestCase.evaluate", "test.TestCase.skipTest", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "saved_model.save.save", "tracking.tracking.AutoTrackable", "ops.rnn_cell_impl.LSTMCell", "saved_model.load.load", "ops.array_ops.zeros", "test.TestCase.get_temp_dir", "eager.def_function.function", "test.TestCase.cached_session"], "framework.test_util.is_gpu_available": [], "tracking.tracking.AutoTrackable": [], "eager.def_function.function": [], "kernel_tests.rnn_cell_test.RNNCellTest.testSavedModel.call": [], "saved_model.save.save": [], "saved_model.load.load": [], "kernel_tests.rnn_cell_test.DropoutWrapperTest._testDropoutWrapper": ["ops.rnn.dynamic_rnn", "numpy.random.randn", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "ops.rnn_cell_impl.LSTMStateTuple", "ops.rnn_cell_impl.DropoutWrapper", "ops.rnn_cell_impl.LSTMCell", "test.TestCase.assertEqual", "ops.init_ops.constant_initializer", "framework.constant_op.constant"], "ops.rnn_cell_impl.LSTMStateTuple": [], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperProperties": ["test.TestCase.assertEqual", "ops.rnn_cell_impl.DropoutWrapper", "ops.rnn_cell_impl.BasicRNNCell"], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperZeroState": ["test.TestCase.assertEqual", "rnn_cell_impl.BasicRNNCell.__init__", "ops.rnn_cell_impl.DropoutWrapper"], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperZeroState._Cell.zero_state": [], "rnn_cell_impl.BasicRNNCell.__init__": [], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperKeepAllConstantInput": ["ops.array_ops.ones", "kernel_tests.rnn_cell_test.DropoutWrapperTest._testDropoutWrapper", "numpy.array", "test.TestCase.assertAllClose"], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperKeepAll": ["ops.variable_scope.get_variable", "kernel_tests.rnn_cell_test.DropoutWrapperTest._testDropoutWrapper", "numpy.array", "test.TestCase.assertAllClose"], "ops.variable_scope.get_variable": [], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperWithSeed": ["framework.random_seed.set_random_seed", "kernel_tests.rnn_cell_test.DropoutWrapperTest._testDropoutWrapper", "test.TestCase.assertAllClose"], "framework.random_seed.set_random_seed": [], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperKeepNoOutput": ["ops.variable_scope.get_variable", "test.TestCase.assertAllClose", "numpy.zeros", "numpy.array", "kernel_tests.rnn_cell_test.DropoutWrapperTest._testDropoutWrapper"], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperKeepNoStateExceptLSTMCellMemory": ["ops.variable_scope.get_variable", "test.TestCase.assertAllClose", "numpy.zeros", "test.TestCase.assertGreater", "numpy.array", "numpy.linalg.norm", "kernel_tests.rnn_cell_test.DropoutWrapperTest._testDropoutWrapper"], "test.TestCase.assertGreater": [], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperKeepNoInput": ["ops.variable_scope.get_variable", "kernel_tests.rnn_cell_test.DropoutWrapperTest._testDropoutWrapper", "numpy.array", "numpy.linalg.norm", "test.TestCase.assertGreater"], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperRecurrentOutput": ["numpy.abs", "ops.variable_scope.get_variable", "kernel_tests.rnn_cell_test.DropoutWrapperTest._testDropoutWrapper", "test.TestCase.assertAllClose"], "numpy.abs": [], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperRecurrentStateInputAndOutput": ["numpy.abs", "kernel_tests.rnn_cell_test.DropoutWrapperTest._testDropoutWrapper", "test.TestCase.assertAllClose"], "kernel_tests.rnn_cell_test.DropoutWrapperTest.testDropoutWrapperRecurrentStateInputAndOutputWithSeed": ["test.TestCase.assertAllClose", "numpy.random.seed", "framework.random_seed.set_random_seed", "numpy.abs", "kernel_tests.rnn_cell_test.DropoutWrapperTest._testDropoutWrapper"], "platform.test.main": []}