{"distribute.distribute_lib_test": ["platform.test.main"], "distribute.distribute_lib_test._TestReplicaContext.merge_call": [], "distribute.distribute_lib_test._get_test_variable": [], "distribute.distribute_lib_test._test_input_fn": ["dataset_ops.DatasetV2.from_tensors"], "dataset_ops.DatasetV2.from_tensors": [], "distribute.distribute_lib_test._TestStrategy.__init__": ["distribute.distribute_lib_test._TestExtended.__init__", "<builtin>.super"], "distribute.distribute_lib_test._TestExtended.__init__": ["distribute.input_lib.InputWorkers", "<builtin>.super"], "<builtin>.super": [], "distribute.input_lib.InputWorkers": [], "distribute.distribute_lib_test._TestExtended._call_for_each_replica": ["distribute_lib.ReplicaContext.__init__", "distribute_lib.StrategyExtendedV1._container_strategy"], "distribute_lib.StrategyExtendedV1._container_strategy": [], "distribute_lib.ReplicaContext.__init__": [], "distribute.distribute_lib_test._TestExtended._create_variable": ["distribute.distribute_lib_test._get_test_variable"], "distribute.distribute_lib_test._TestExtended._make_input_fn_iterator": ["distribute.input_lib.InputFunctionIterator", "distribute_lib.StrategyExtendedV1._container_strategy", "distribute.distribute_lib.InputContext"], "distribute.distribute_lib.InputContext": [], "distribute.input_lib.InputFunctionIterator": [], "distribute.distribute_lib_test._TestExtended._distribute_datasets_from_function": ["distribute.distribute_lib.InputContext"], "distribute.distribute_lib_test._TestExtended._local_results": [], "distribute.distribute_lib_test._TestExtended._reduce_to": [], "distribute.distribute_lib_test._TestExtended._experimental_run_steps_on_iterator": ["<builtin>.range", "distribute.input_lib.MultiStepContext"], "distribute.input_lib.MultiStepContext": [], "<builtin>.range": [], "distribute.distribute_lib_test._TestExtended._update": ["distribute.distribute_lib_test._TestExtended._update_non_slot", "<builtin>.tuple"], "<builtin>.tuple": [], "distribute.distribute_lib_test._TestExtended._update_non_slot": ["util.nest.map_structure"], "util.nest.map_structure": [], "distribute.distribute_lib_test._TestExtended._get_local_replica_id": [], "distribute.distribute_lib_test._assert_in_default_state": ["distribute.distribution_strategy_context.get_replica_context", "distribute.distribution_strategy_context.get_strategy", "distribute.distribution_strategy_context.get_cross_replica_context", "distribute.distribution_strategy_context._get_default_strategy", "distribute.distribution_strategy_context.in_cross_replica_context", "distribute.distribution_strategy_context._get_default_replica_context", "distribute.distribution_strategy_context.has_strategy", "test.TestCase.assertIs", "test.TestCase.assertFalse"], "distribute.distribution_strategy_context._get_default_replica_context": [], "distribute.distribution_strategy_context.get_replica_context": [], "test.TestCase.assertIs": [], "distribute.distribution_strategy_context.get_cross_replica_context": [], "distribute.distribution_strategy_context.in_cross_replica_context": [], "test.TestCase.assertFalse": [], "distribute.distribution_strategy_context._get_default_strategy": [], "distribute.distribution_strategy_context.get_strategy": [], "distribute.distribution_strategy_context.has_strategy": [], "distribute.distribute_lib_test._run_in_and_out_of_scope": [], "distribute.distribute_lib_test._run_in_and_out_of_scope.wrapper": ["distribute.distribute_lib_test.TestStrategyTest.testBatchReduceTo", "distribute.distribute_lib_test._assert_in_default_state", "distribute.distribute_lib_test.TestStrategyTest.testExperimentalRunStepsOnIterator", "distribute_lib.Strategy.scope", "distribute.distribute_lib_test.TestStrategyTest.testUpdate", "distribute.distribute_lib_test.TestStrategyTest.testUpdateAutoGraph", "distribute.distribute_lib_test.TestStrategyTest.testReduceTo", "distribute.distribute_lib_test.TestStrategyTest.testMakeInputFnIterator", "distribute.distribute_lib_test.TestStrategyTest.testReduceMeanAxis", "distribute.distribute_lib_test._TestStrategy.__init__", "distribute.distribute_lib_test.TestStrategyTest.testReduceSumAxis", "distribute.distribute_lib_test.TestStrategyTest.testReduce", "distribute.distribute_lib_test.TestStrategyTest.testUpdateNonSlot", "distribute.distribute_lib_test.TestStrategyTest.testUpdateNonSlotAutoGraph"], "distribute.distribute_lib_test.TestStrategyTest.testBatchReduceTo": ["framework.constant_op.constant", "test.TestCase.assertEqual", "test.TestCase.evaluate"], "distribute.distribute_lib_test.TestStrategyTest.testExperimentalRunStepsOnIterator": ["test.TestCase.assertEqual", "ops.dataset_ops.make_one_shot_iterator", "dataset_ops.Dataset.from_tensors"], "distribute.distribute_lib_test.TestStrategyTest.testUpdate": ["ops.variables.Variable", "framework.constant_op.constant"], "distribute.distribute_lib_test.TestStrategyTest.testUpdateAutoGraph": ["ops.variables.Variable", "distribute.distribute_lib_test.TestStrategyTest.testUpdateAutoGraph.test_fn", "framework.constant_op.constant"], "distribute.distribute_lib_test.TestStrategyTest.testReduceTo": ["framework.constant_op.constant", "test.TestCase.assertEqual", "test.TestCase.evaluate"], "distribute.distribute_lib_test.TestStrategyTest.testUpdateNonSlot": ["framework.constant_op.constant", "test.TestCase.assertEqual", "<builtin>.len"], "distribute.distribute_lib_test.TestStrategyTest.testReduceMeanAxis": ["framework.constant_op.constant", "test.TestCase.assertEqual", "test.TestCase.evaluate", "test.TestCase.assertAllEqual"], "distribute.distribute_lib_test.TestStrategyTest.testReduceSumAxis": ["framework.constant_op.constant", "test.TestCase.assertEqual", "test.TestCase.evaluate", "test.TestCase.assertAllEqual"], "distribute.distribute_lib_test.TestStrategyTest.testReduce": ["framework.constant_op.constant", "test.TestCase.assertEqual", "test.TestCase.evaluate"], "distribute.distribute_lib_test.TestStrategyTest.testMakeInputFnIterator": ["test.TestCase.assertIsNotNone"], "distribute.distribute_lib_test.TestStrategyTest.testUpdateNonSlotAutoGraph": ["framework.constant_op.constant", "distribute.distribute_lib_test.TestStrategyTest.testUpdateNonSlotAutoGraph.test_fn"], "distribute_lib.Strategy.scope": [], "distribute.distribute_lib_test.TestStrategyTest.testCallForEachReplica": ["distribute_lib.Strategy.scope", "Strategy.extended.call_for_each_replica", "distribute.distribute_lib_test._assert_in_default_state", "distribute.distribute_lib_test._TestStrategy.__init__"], "distribute.distribute_lib_test.TestStrategyTest.testCallForEachReplica.run_fn": ["distribute.distribution_strategy_context.get_replica_context", "distribute.distribution_strategy_context.get_strategy", "distribute.distribution_strategy_context.get_cross_replica_context", "test.TestCase.assertEqual", "distribute.distribute_lib_test._get_test_variable", "distribute.distribution_strategy_context.in_cross_replica_context", "distribute.distribution_strategy_context.has_strategy", "test.TestCase.assertIs", "test.TestCase.assertTrue", "ops.variable_scope.variable", "test.TestCase.assertFalse", "test.TestCase.assertDictEqual", "test.TestCase.assertIsNotNone"], "test.TestCase.assertIsNotNone": [], "test.TestCase.assertTrue": [], "test.TestCase.assertEqual": [], "ops.variable_scope.variable": [], "test.TestCase.assertDictEqual": [], "Strategy.extended.call_for_each_replica": [], "distribute.distribute_lib_test.TestStrategyTest.testScope": ["distribute.distribution_strategy_context.get_replica_context", "distribute.distribution_strategy_context.get_strategy", "distribute.distribute_lib_test._assert_in_default_state", "distribute.distribution_strategy_context.get_cross_replica_context", "distribute.distribute_lib_test._get_test_variable", "distribute.distribution_strategy_context.in_cross_replica_context", "distribute.distribution_strategy_context.has_strategy", "test.TestCase.assertIs", "test.TestCase.assertTrue", "ops.variable_scope.variable", "distribute.distribute_lib_test._TestStrategy.__init__", "distribute_lib.Strategy.scope", "test.TestCase.assertDictEqual"], "distribute.distribute_lib_test.TestStrategyTest.testScopeDeviceNestingError": ["framework.ops.device", "distribute.distribution_strategy_context.get_strategy", "distribute.distribute_lib_test._assert_in_default_state", "test.TestCase.assertIs", "distribute.distribute_lib_test._TestStrategy.__init__", "test.TestCase.assertRaisesRegex", "distribute_lib.Strategy.scope"], "framework.ops.device": [], "test.TestCase.assertRaisesRegex": [], "distribute.distribute_lib_test.TestStrategyTest.testScopeVarCreatorNestingError": ["ops.variable_scope.variable_creator_scope", "distribute.distribution_strategy_context.get_strategy", "distribute.distribute_lib_test._assert_in_default_state", "test.TestCase.assertIs", "distribute.distribute_lib_test._TestStrategy.__init__", "test.TestCase.assertRaisesRegex", "distribute_lib.Strategy.scope"], "distribute.distribute_lib_test.TestStrategyTest.testScopeVarCreatorNestingError.creator": [], "ops.variable_scope.variable_creator_scope": [], "distribute.distribute_lib_test.TestStrategyTest.testScopeVarScopeNestingError": ["distribute.distribution_strategy_context.get_strategy", "distribute.distribute_lib_test._assert_in_default_state", "ops.variable_scope.variable_scope", "framework.ops.Graph", "test.TestCase.assertIs", "distribute.distribute_lib_test._TestStrategy.__init__", "test.TestCase.assertRaisesRegex", "distribute_lib.Strategy.scope"], "framework.ops.Graph": [], "ops.variable_scope.variable_scope": [], "distribute.distribute_lib_test.TestStrategyTest.testSettingSynchronizationAndAggregation": ["distribute.distribute_lib_test._get_test_variable", "distribute.distribute_lib_test._assert_in_default_state", "ops.variable_scope.variable", "distribute.distribute_lib_test._TestStrategy.__init__", "distribute_lib.Strategy.scope", "test.TestCase.assertDictEqual"], "distribute.distribute_lib_test.TestStrategyTest.testSetStrategy": ["distribute.distribution_strategy_context.get_replica_context", "distribute.distribution_strategy_context.get_strategy", "distribute.distribute_lib_test._assert_in_default_state", "distribute.distribution_strategy_context.get_cross_replica_context", "distribute.distribute_lib_test._get_test_variable", "distribute.distribution_strategy_context.experimental_set_strategy", "distribute.distribution_strategy_context.in_cross_replica_context", "distribute.distribution_strategy_context.has_strategy", "test.TestCase.assertIs", "test.TestCase.assertTrue", "ops.variable_scope.variable", "distribute.distribute_lib_test._TestStrategy.__init__", "test.TestCase.assertDictEqual"], "distribute.distribution_strategy_context.experimental_set_strategy": [], "distribute.distribute_lib_test.TestStrategyTest.testSetStrategyInScope": ["distribute.distribute_lib_test._assert_in_default_state", "distribute.distribution_strategy_context.experimental_set_strategy", "distribute.distribute_lib_test._TestStrategy.__init__", "test.TestCase.assertRaisesRegex", "distribute_lib.Strategy.scope"], "distribute.distribute_lib_test.TestStrategyTest.testSameScopeNesting": ["distribute.distribution_strategy_context.get_strategy", "distribute.distribute_lib_test._assert_in_default_state", "test.TestCase.assertIs", "distribute.distribute_lib_test._TestStrategy.__init__", "test.TestCase.assertRaisesRegex", "distribute_lib.Strategy.scope"], "distribute.distribute_lib_test.TestStrategyTest": ["distribute.distribute_lib_test._run_in_and_out_of_scope"], "framework.constant_op.constant": [], "test.TestCase.evaluate": [], "distribute.distribute_lib_test.TestStrategyTest.testReductions_acceptStringOps": ["framework.constant_op.constant", "test.TestCase.assertEqual", "distribute_lib.Strategy.reduce", "Strategy.extended.batch_reduce_to", "Strategy.extended.reduce_to", "test.TestCase.evaluate", "distribute.distribute_lib_test._TestStrategy.__init__"], "distribute_lib.Strategy.reduce": [], "Strategy.extended.reduce_to": [], "Strategy.extended.batch_reduce_to": [], "test.TestCase.assertAllEqual": [], "dataset_ops.Dataset.from_tensors": [], "distribute.distribute_lib_test.TestStrategyTest.testExperimentalRunStepsOnIterator.<lambda1>": ["test.TestCase.evaluate"], "ops.dataset_ops.make_one_shot_iterator": [], "ops.variables.Variable": [], "distribute.distribute_lib_test.TestStrategyTest.testUpdate.assign_fn": ["test.TestCase.assertIs"], "distribute.distribute_lib_test.TestStrategyTest.testUpdateAutoGraph.assign_fn": ["core.converter_testing.is_inside_generated_code", "test.TestCase.assertTrue"], "core.converter_testing.is_inside_generated_code": [], "distribute.distribute_lib_test.TestStrategyTest.testUpdateAutoGraph.test_fn": [], "distribute.distribute_lib_test.TestStrategyTest.testUpdateNonSlot.<lambda1>": [], "<builtin>.len": [], "distribute.distribute_lib_test.TestStrategyTest.testUpdateNonSlotAutoGraph.update_fn": ["core.converter_testing.is_inside_generated_code", "test.TestCase.assertTrue"], "distribute.distribute_lib_test.TestStrategyTest.testUpdateNonSlotAutoGraph.test_fn": [], "distribute.distribute_lib_test.TestStrategyTest.testClusterResolverDefaultNotImplemented": ["distribute.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertIsNone", "test.TestCase.assertIs", "distribute.distribute_lib_test._TestStrategy.__init__", "training.server_lib.ClusterSpec"], "test.TestCase.assertIsNone": [], "training.server_lib.ClusterSpec": [], "distribute.cluster_resolver.SimpleClusterResolver": [], "distribute.distribute_lib_test._TestStrategy2.__init__": ["distribute.distribute_lib_test._TestExtended.__init__", "<builtin>.super"], "distribute.distribute_lib_test._TestExtended2._create_variable": [], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testMergeCall": ["distribute.distribution_strategy_context.get_replica_context", "test.TestCase.assertEqual", "distribute.distribute_lib_test._assert_in_default_state", "distribute.distribution_strategy_context._get_default_replica_context", "test.TestCase.assertIs"], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testMergeCall.merge_fn": ["distribute.distribution_strategy_context.get_replica_context", "distribute.distribution_strategy_context.get_strategy", "distribute.distribution_strategy_context.get_cross_replica_context", "distribute.distribution_strategy_context._get_default_strategy", "distribute.distribution_strategy_context.in_cross_replica_context", "distribute.distribution_strategy_context.has_strategy", "test.TestCase.assertIs", "test.TestCase.assertTrue", "test.TestCase.assertFalse"], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testMergeCallAutoGraph": ["distribute.distribute_lib_test.DefaultDistributionStrategyTest.testMergeCallAutoGraph.test_fn", "distribute.distribute_lib_test._assert_in_default_state"], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testMergeCallAutoGraph.merge_fn": ["core.converter_testing.is_inside_generated_code", "test.TestCase.assertTrue"], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testMergeCallAutoGraph.test_fn": ["distribute.distribution_strategy_context.get_replica_context"], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testScopeMostlyNoOp": ["distribute.distribute_lib_test._assert_in_default_state", "distribute.distribution_strategy_context._get_default_strategy", "distribute.distribute_lib_test._TestStrategy2.__init__", "ops.variable_scope.variable", "test.TestCase.assertRaisesRegex", "distribute_lib.Strategy.scope"], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testExperimentalRunV2": ["<builtin>.range", "distribute.distribution_strategy_context._get_default_strategy", "dataset_ops.Dataset.range"], "dataset_ops.Dataset.range": [], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testExperimentalRunV2.train_step": [], "distribute.combinations.combine": [], "distribute.distribute_lib_test.DefaultDistributionStrategyTest": ["distribute.combinations.generate", "distribute.combinations.combine"], "distribute.combinations.generate": [], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasets": ["<builtin>.iter", "<builtin>.next", "distribute.distribution_strategy_context._get_default_strategy", "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasets.<lambda1>", "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasets.<lambda2>", "test.TestCase.evaluate", "distribute.distribute_lib.InputContext", "test.TestCase.assertAllEqual", "eager.context.executing_eagerly"], "eager.context.executing_eagerly": [], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasets.<lambda1>": ["dataset_ops.DatasetV2.range"], "dataset_ops.DatasetV2.range": [], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasets.<lambda2>": ["dataset_ops.DatasetV1.range"], "<builtin>.iter": [], "<builtin>.next": [], "dataset_ops.DatasetV1.range": [], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasetsFromFunction": ["<builtin>.iter", "<builtin>.next", "distribute.distribution_strategy_context._get_default_strategy", "test.TestCase.evaluate", "test.TestCase.assertAllEqual", "eager.context.executing_eagerly", "ops.dataset_ops.make_initializable_iterator"], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasetsFromFunction.<lambda1>": ["dataset_ops.DatasetV2.range"], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasetsFromFunction.<lambda2>": ["dataset_ops.DatasetV2.range"], "ops.dataset_ops.make_initializable_iterator": [], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testV1": ["test.TestCase.assertIsInstance", "distribute.distribution_strategy_context.get_strategy"], "test.TestCase.assertIsInstance": [], "distribute.distribute_lib_test.DefaultDistributionStrategyTest.testV2": ["test.TestCase.assertIsInstance", "distribute.distribution_strategy_context.get_strategy"], "distribute.distribute_lib_test.InputContextTest.testProperties": ["test.TestCase.assertEqual", "distribute.distribute_lib.InputContext"], "distribute.distribute_lib_test.InputContextTest.testPerReplicaBatchSize": ["test.TestCase.assertRaises", "test.TestCase.assertEqual", "distribute.distribute_lib.InputContext"], "test.TestCase.assertRaises": [], "distribute.distribute_lib_test.InputContextTest.testStr": ["test.TestCase.assertEqual", "<builtin>.str", "distribute.distribute_lib.InputContext"], "<builtin>.str": [], "platform.test.main": []}