{"kernel_tests.sparse_add_op_test": ["platform.test.main"], "kernel_tests.sparse_add_op_test._sparsify": ["framework.sparse_tensor.SparseTensor", "numpy.vstack", "<builtin>.len", "numpy.where"], "numpy.where": [], "numpy.vstack": [], "framework.sparse_tensor.SparseTensor": [], "<builtin>.len": [], "kernel_tests.sparse_add_op_test.SparseAddTest._randomTensor": ["kernel_tests.sparse_add_op_test._sparsify", "numpy.random.randn"], "numpy.random.randn": [], "kernel_tests.sparse_add_op_test.SparseAddTest._SparseTensorValue_3x3": ["numpy.array", "framework.sparse_tensor.SparseTensorValue"], "numpy.array": [], "framework.sparse_tensor.SparseTensorValue": [], "kernel_tests.sparse_add_op_test.SparseAddTest._SparseTensor_3x3": ["sparse_tensor.SparseTensor.from_value", "kernel_tests.sparse_add_op_test.SparseAddTest._SparseTensorValue_3x3"], "sparse_tensor.SparseTensor.from_value": [], "kernel_tests.sparse_add_op_test.SparseAddTest._SparseTensor_3x3_v2": ["framework.constant_op.constant", "framework.sparse_tensor.SparseTensor", "numpy.array"], "framework.constant_op.constant": [], "kernel_tests.sparse_add_op_test.SparseAddTest.testAddSelf": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "kernel_tests.sparse_add_op_test.SparseAddTest._SparseTensor_3x3", "ops.sparse_ops.sparse_add", "framework.test_util.force_cpu", "test.TestCase.evaluate", "kernel_tests.sparse_add_op_test.SparseAddTest._SparseTensorValue_3x3"], "framework.test_util.force_cpu": [], "ops.sparse_ops.sparse_add": [], "test.TestCase.assertAllEqual": [], "test.TestCase.evaluate": [], "test.TestCase.assertEqual": [], "kernel_tests.sparse_add_op_test.SparseAddTest.testAddSelfAndNegation": ["test.TestCase.assertEqual", "test.TestCase.assertAllEqual", "kernel_tests.sparse_add_op_test.SparseAddTest._SparseTensor_3x3", "ops.sparse_ops.sparse_add", "framework.test_util.force_cpu", "test.TestCase.evaluate", "numpy.empty"], "numpy.empty": [], "kernel_tests.sparse_add_op_test.SparseAddTest.testSmallValuesShouldVanish": ["test.TestCase.assertEqual", "test.TestCase.assertAllEqual", "kernel_tests.sparse_add_op_test.SparseAddTest._SparseTensor_3x3", "ops.sparse_ops.sparse_add", "framework.test_util.force_cpu", "test.TestCase.evaluate", "kernel_tests.sparse_add_op_test.SparseAddTest._SparseTensor_3x3_v2", "test.TestCase.assertAllClose"], "test.TestCase.assertAllClose": [], "kernel_tests.sparse_add_op_test.SparseAddTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "kernel_tests.sparse_add_op_test.SparseAddTest.testGradients": ["test.TestCase.assertLess", "numpy.random.seed", "ops.sparse_ops.sparse_add", "test.TestCase.evaluate", "ops.gradient_checker.compute_gradient_error", "test.TestCase.session", "kernel_tests.sparse_add_op_test.SparseAddTest._randomTensor", "<builtin>.len"], "numpy.random.seed": [], "test.TestCase.session": [], "ops.gradient_checker.compute_gradient_error": [], "test.TestCase.assertLess": [], "kernel_tests.sparse_add_op_test.SparseAddTest.testAddSparseDense": ["numpy.random.seed", "test.TestCase.assertAllEqual", "numpy.random.randn", "ops.sparse_ops.sparse_add", "framework.test_util.force_cpu", "framework.constant_op.constant", "test.TestCase.evaluate", "test.TestCase.assertTrue", "numpy.random.randint", "kernel_tests.sparse_add_op_test._sparsify"], "numpy.random.randint": [], "test.TestCase.assertTrue": [], "kernel_tests.sparse_add_op_test.SparseAddTest.testSparseTensorDenseAddGradients": ["test.TestCase.assertLess", "numpy.random.seed", "numpy.random.randn", "ops.sparse_ops.sparse_add", "framework.constant_op.constant", "test.TestCase.session", "numpy.random.randint", "kernel_tests.sparse_add_op_test._sparsify", "ops.gradient_checker.compute_gradient_error"], "kernel_tests.sparse_add_op_test.SparseAddTest.testInvalidSparseTensor": ["numpy.zeros", "ops.sparse_ops.sparse_add", "framework.test_util.force_cpu", "test.TestCase.assertRaisesRegex", "framework.constant_op.constant", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue"], "numpy.zeros": [], "test.TestCase.assertRaisesRegex": [], "kernel_tests.sparse_add_op_test._s2d_add_vs_sparse_add": ["numpy.random.seed", "ops.sparse_ops.sparse_tensor_to_dense", "numpy.random.rand", "client.session.Session", "framework.ops.Graph", "ops.sparse_ops.sparse_add", "timeit.timeit", "framework.constant_op.constant", "ops.math_ops.add", "kernel_tests.sparse_add_op_test._sparsify"], "framework.ops.Graph": [], "client.session.Session": [], "numpy.random.rand": [], "ops.sparse_ops.sparse_tensor_to_dense": [], "ops.math_ops.add": [], "kernel_tests.sparse_add_op_test._s2d_add_vs_sparse_add.<lambda1>": [], "timeit.timeit": [], "kernel_tests.sparse_add_op_test._s2d_add_vs_sparse_add.<lambda2>": [], "kernel_tests.sparse_add_op_test._s2d_add_vs_sparse_add.<lambda3>": [], "kernel_tests.sparse_add_op_test._s2d_add_vs_sparse_add.<lambda4>": [], "kernel_tests.sparse_add_op_test.SparseAddBenchmark.benchmarkSparseAddDense": ["<builtin>.print", "kernel_tests.sparse_add_op_test._s2d_add_vs_sparse_add"], "<builtin>.print": [], "platform.test.main": []}