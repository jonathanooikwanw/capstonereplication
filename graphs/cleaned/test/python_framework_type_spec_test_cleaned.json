{"framework.type_spec_test": ["framework.type_spec.register_type_spec_from_value_converter", "collections.namedtuple", "platform.googletest.main"], "framework.type_spec_test.TwoTensors.__init__": ["<builtin>.isinstance", "framework.ops.convert_to_tensor"], "<builtin>.isinstance": [], "framework.ops.convert_to_tensor": [], "framework.type_spec_test.TwoTensorsSpec.__init__": ["framework.tensor_shape.as_shape", "framework.dtypes.as_dtype"], "framework.tensor_shape.as_shape": [], "framework.dtypes.as_dtype": [], "framework.type_spec_test.TwoTensorsSpec.<lambda1>": [], "<builtin>.property": [], "framework.type_spec_test.TwoTensorsSpec": ["<builtin>.property"], "framework.type_spec_test.TwoTensorsSpec._component_specs": ["framework.tensor_spec.TensorSpec"], "framework.tensor_spec.TensorSpec": [], "framework.type_spec_test.TwoTensorsSpec._to_components": [], "framework.type_spec_test.TwoTensorsSpec._from_components": ["framework.type_spec_test.TwoTensors.__init__"], "framework.type_spec_test.TwoTensorsSpec._serialize": [], "framework.type_spec_test.TwoTensorsSpec.from_value": ["framework.type_spec_test.TwoTensorsSpec.__init__"], "framework.type_spec.register_type_spec_from_value_converter": [], "framework.type_spec_test.TwoComposites.__init__": ["framework.ops.convert_to_tensor_or_composite", "<builtin>.isinstance"], "framework.ops.convert_to_tensor_or_composite": [], "framework.type_spec_test.TwoCompositesSpec.__init__": [], "framework.type_spec_test.TwoCompositesSpec.<lambda1>": [], "framework.type_spec_test.TwoCompositesSpec": ["<builtin>.property"], "framework.type_spec_test.TwoCompositesSpec._component_specs": [], "framework.type_spec_test.TwoCompositesSpec._to_components": [], "framework.type_spec_test.TwoCompositesSpec._from_components": ["framework.type_spec_test.TwoTensors.__init__"], "framework.type_spec_test.TwoCompositesSpec._serialize": [], "framework.type_spec_test.TwoCompositesSpec.from_value": ["framework.type_spec_test.TwoCompositesSpec.__init__", "framework.type_spec.type_spec_from_value"], "framework.type_spec.type_spec_from_value": [], "framework.type_spec_test.NestOfTensors.__init__": [], "framework.type_spec_test.NestOfTensorsSpec.__init__": [], "framework.type_spec_test.NestOfTensorsSpec.<lambda1>": [], "framework.type_spec_test.NestOfTensorsSpec": ["<builtin>.property"], "framework.type_spec_test.NestOfTensorsSpec.<lambda2>": [], "framework.type_spec_test.NestOfTensorsSpec._to_components": ["util.nest.flatten"], "util.nest.flatten": [], "framework.type_spec_test.NestOfTensorsSpec._from_components": ["util.nest.pack_sequence_as"], "util.nest.pack_sequence_as": [], "framework.type_spec_test.NestOfTensorsSpec._serialize": [], "framework.type_spec_test.NestOfTensorsSpec.__repr__": ["<builtin>.hasattr", "<builtin>.super", "<builtin>.all", "<builtin>.type", "framework.type_spec_test.NestOfTensorsSpec._serialize", "<builtin>.isinstance"], "<builtin>.hasattr": [], "<builtin>.all": [], "<builtin>.type": [], "<builtin>.super": [], "framework.type_spec_test.NestOfTensorsSpec.from_value": ["framework.type_spec_test.NestOfTensorsSpec.__init__", "util.nest.map_structure"], "util.nest.map_structure": [], "framework.type_spec_test.NestOfTensorsSpec._deserialize": ["framework.type_spec_test.NestOfTensorsSpec.__init__"], "collections.namedtuple": [], "framework.type_spec_test.TypeSpecTest": ["framework.tensor_spec.TensorSpec", "testing.parameterized.named_parameters", "<builtin>.dict", "framework.type_spec_test.NestOfTensorsSpec.__init__", "framework.type_spec_test.TwoTensorsSpec.__init__", "numpy.array", "numpy.float32", "numpy.int32"], "numpy.int32": [], "numpy.float32": [], "numpy.array": [], "testing.parameterized.named_parameters": [], "framework.type_spec_test.TypeSpecTest.testEquality": ["test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertFalse", "<builtin>.hash"], "test_util.TensorFlowTestCase.assertEqual": [], "test_util.TensorFlowTestCase.assertFalse": [], "<builtin>.hash": [], "framework.type_spec_test.TypeSpecTest.testInequality": ["test_util.TensorFlowTestCase.assertNotEqual", "test_util.TensorFlowTestCase.assertFalse"], "test_util.TensorFlowTestCase.assertNotEqual": [], "framework.type_spec_test.TypeSpecTest.testIsCompatibleWith": ["test_util.TensorFlowTestCase.assertTrue"], "test_util.TensorFlowTestCase.assertTrue": [], "framework.type_spec_test.TypeSpecTest.testIsNotCompatibleWith": ["test_util.TensorFlowTestCase.assertFalse"], "framework.type_spec_test.TypeSpecTest.testMostSpecificCompatibleType": ["test_util.TensorFlowTestCase.assertEqual"], "<builtin>.dict": [], "framework.type_spec_test.TypeSpecTest.testMostSpecificCompatibleTypeException": ["test_util.TensorFlowTestCase.assertRaises"], "test_util.TensorFlowTestCase.assertRaises": [], "framework.type_spec_test.TypeSpecTest.testMostSpecificCompatibleTypeNamedTupleIsNotTuple": ["framework.type_spec_test.NestOfTensorsSpec.from_value", "<builtin>.repr", "framework.type_spec_test.NestOfTensors.__init__", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertNotEqual"], "<builtin>.repr": [], "framework.type_spec_test.TypeSpecTest.testMostSpecificCompatibleTypeForNamedTuplesException": ["test_util.TensorFlowTestCase.assertRaises"], "framework.type_spec_test.TypeSpecTest.toTensorList": ["test_util.TensorFlowTestCase.assertIs", "framework.type_spec_test.TwoTensors.__init__", "test_util.TensorFlowTestCase.assertLen", "framework.type_spec_test.TwoTensorsSpec.from_value"], "test_util.TensorFlowTestCase.assertLen": [], "test_util.TensorFlowTestCase.assertIs": [], "framework.type_spec_test.TypeSpecTest.fromTensorList": ["framework.type_spec_test.TwoTensorsSpec.__init__", "framework.ops.convert_to_tensor", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertIs", "type_spec.TypeSpec._from_tensor_list"], "type_spec.TypeSpec._from_tensor_list": [], "framework.type_spec_test.TypeSpecTest.fromIncompatibleTensorList": ["type_spec.TypeSpec._from_tensor_list", "test_util.TensorFlowTestCase.assertRaises", "framework.type_spec_test.TwoTensorsSpec.__init__", "framework.ops.convert_to_tensor"], "framework.type_spec_test.TypeSpecTest.testFlatTensorSpecs": ["test_util.TensorFlowTestCase.assertEqual", "framework.tensor_spec.TensorSpec", "framework.type_spec_test.TwoTensorsSpec.__init__"], "framework.type_spec_test.TypeSpecTest.testRepr": ["test_util.TensorFlowTestCase.assertEqual", "framework.tensor_shape.TensorShape", "<builtin>.repr", "framework.type_spec_test.TwoTensorsSpec.__init__"], "framework.tensor_shape.TensorShape": [], "framework.type_spec_test.TypeSpecTest.testFromValue": ["test_util.TensorFlowTestCase.assertEqual", "framework.type_spec_test.TwoTensorsSpec.from_value", "framework.type_spec_test.TwoTensors.__init__", "framework.type_spec.type_spec_from_value"], "framework.type_spec_test.TypeSpecTest.testNestedRagged": ["framework.type_spec_test.TwoCompositesSpec.__init__", "framework.tensor_spec.TensorSpec", "type_spec.TypeSpec.is_compatible_with", "ragged.ragged_tensor.RaggedTensorSpec", "test_util.TensorFlowTestCase.assertTrue", "test_util.TensorFlowTestCase.assertFalse"], "ragged.ragged_tensor.RaggedTensorSpec": [], "type_spec.TypeSpec.is_compatible_with": [], "framework.type_spec_test.TypeSpecTest.testRegistry": ["test_util.TensorFlowTestCase.assertEqual", "framework.type_spec.get_name", "framework.type_spec.lookup"], "framework.type_spec.get_name": [], "framework.type_spec.lookup": [], "framework.type_spec_test.TypeSpecTest.testRegistryTypeErrors": ["test_util.TensorFlowTestCase.assertRaisesRegex", "framework.type_spec.register"], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "framework.type_spec.register": [], "framework.type_spec_test.TypeSpecTest.testRegistryDuplicateErrors": ["test_util.TensorFlowTestCase.assertRaisesRegex", "framework.type_spec.register"], "framework.type_spec_test.TypeSpecTest.testRegistryNameErrors": ["framework.type_spec.register", "test_util.TensorFlowTestCase.assertRaises"], "framework.type_spec_test.TypeSpecTest.testRegistryLookupErrors": ["framework.type_spec.lookup", "test_util.TensorFlowTestCase.assertRaisesRegex", "test_util.TensorFlowTestCase.assertRaises"], "framework.type_spec_test.TypeSpecTest.testRegistryGetNameErrors": ["test_util.TensorFlowTestCase.assertRaisesRegex", "framework.type_spec.get_name", "test_util.TensorFlowTestCase.assertRaises"], "platform.googletest.main": []}