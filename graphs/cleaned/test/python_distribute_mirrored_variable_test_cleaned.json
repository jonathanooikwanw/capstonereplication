{"distribute.mirrored_variable_test": ["eager.test.main"], "distribute.mirrored_variable_test._replica_id": ["distribute.distribution_strategy_context.get_replica_context", "<builtin>.isinstance", "framework.constant_op.constant"], "distribute.distribution_strategy_context.get_replica_context": [], "<builtin>.isinstance": [], "framework.constant_op.constant": [], "distribute.mirrored_variable_test._mimic_two_cpus": ["framework.config.list_physical_devices", "framework.config.set_logical_device_configuration", "eager.context.LogicalDeviceConfiguration"], "framework.config.list_physical_devices": [], "eager.context.LogicalDeviceConfiguration": [], "framework.config.set_logical_device_configuration": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.setUpClass": ["distribute.mirrored_variable_test._mimic_two_cpus"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.assertAllDifferent": ["<builtin>.range", "<builtin>.len", "test.TestCase.assertIsNot"], "<builtin>.len": [], "<builtin>.range": [], "test.TestCase.assertIsNot": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest._test_mv_properties": ["test.TestCase.assertTrue", "distribute.distribute_utils.is_mirrored", "<builtin>.enumerate", "test.TestCase.assertIs", "test.TestCase.assertEqual"], "distribute.distribute_utils.is_mirrored": [], "test.TestCase.assertTrue": [], "test.TestCase.assertEqual": [], "test.TestCase.assertIs": [], "<builtin>.enumerate": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableInFuncGraph": ["ops.variable_scope.variable", "framework.func_graph.FuncGraph", "distribute.mirrored_variable_test.MirroredVariableCreationTest._test_mv_properties"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableInFuncGraph.model_fn": ["ops.variable_scope.variable", "distribute.distribution_strategy_context.get_replica_context"], "ops.variable_scope.variable": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableInFuncGraph.model_fn.<lambda1>": [], "framework.func_graph.FuncGraph": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableWithTensorInitialValueInFunction": ["eager.context.executing_eagerly", "test.TestCase.skipTest", "eager.def_function.function", "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableWithTensorInitialValueInFunction.make_v1", "test.TestCase.assertAllEqual"], "eager.context.executing_eagerly": [], "test.TestCase.skipTest": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableWithTensorInitialValueInFunction.model_fn": ["ops.array_ops.zeros", "distribute.distribution_strategy_context.get_replica_context", "ops.variables.Variable"], "ops.array_ops.zeros": [], "ops.variables.Variable": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableWithTensorInitialValueInFunction.model_fn.<lambda1>": [], "eager.def_function.function": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableWithTensorInitialValueInFunction.make_v1": [], "test.TestCase.assertAllEqual": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testSingleVariable": ["distribute.mirrored_variable_test.MirroredVariableCreationTest._test_mv_properties"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testSingleVariable.model_fn": ["ops.variable_scope.variable", "distribute.distribution_strategy_context.get_replica_context"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testSingleVariable.model_fn.<lambda1>": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testUnnamedVariable": ["distribute.mirrored_variable_test.MirroredVariableCreationTest._test_mv_properties"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testUnnamedVariable.model_fn": ["ops.variable_scope.variable", "distribute.distribution_strategy_context.get_replica_context"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testUnnamedVariable.model_fn.<lambda1>": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testMultipleVariables": ["distribute.mirrored_variable_test.MirroredVariableCreationTest._test_mv_properties", "<builtin>.str", "<builtin>.enumerate"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testMultipleVariables.model_fn": ["ops.variable_scope.variable", "<builtin>.range", "<builtin>.str", "distribute.distribution_strategy_context.get_replica_context"], "<builtin>.str": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testMultipleVariables.model_fn.<lambda1>": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testMultipleVariablesWithSameCanonicalName": ["<builtin>.len", "distribute.distribute_utils.is_mirrored", "test.TestCase.assertTrue", "test.TestCase.assertEqual"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testMultipleVariablesWithSameCanonicalName.model_fn": ["ops.variable_scope.variable", "distribute.distribution_strategy_context.get_replica_context"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testMultipleVariablesWithSameCanonicalName.model_fn.<lambda1>": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableWithSameCanonicalNameAcrossThreads": ["distribute.distribute_utils.is_mirrored", "test.TestCase.assertTrue", "test.TestCase.assertEqual"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableWithSameCanonicalNameAcrossThreads.model_fn": ["distribute.mirrored_variable_test._replica_id", "distribute.distribution_strategy_context.get_replica_context", "<builtin>.str", "test.TestCase.evaluate", "ops.variable_scope.variable"], "test.TestCase.evaluate": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVariableWithSameCanonicalNameAcrossThreads.model_fn.<lambda1>": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testWithVariableAndVariableScope": ["distribute.distribute_utils.is_sync_on_read", "<builtin>.len", "test.TestCase.assertTrue", "distribute.distribute_utils.is_mirrored", "ops.variable_scope.variable", "test.TestCase.assertEqual"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testWithVariableAndVariableScope.model_fn": ["ops.variable_scope.variable", "distribute.distribution_strategy_context.get_replica_context", "ops.variable_scope.variable_scope"], "ops.variable_scope.variable_scope": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testWithVariableAndVariableScope.model_fn.<lambda1>": [], "distribute.distribute_utils.is_sync_on_read": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testWithGetVariableAndVariableScope": ["distribute.distribute_utils.is_sync_on_read", "<builtin>.len", "test.TestCase.assertTrue", "ops.variable_scope.variable_scope", "distribute.distribute_utils.is_mirrored", "ops.variable_scope.get_variable", "test.TestCase.assertEqual"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testWithGetVariableAndVariableScope.model_fn": ["ops.variable_scope.get_variable", "distribute.distribution_strategy_context.get_replica_context", "ops.variable_scope.variable_scope"], "ops.variable_scope.get_variable": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testWithGetVariableAndVariableScope.model_fn.<lambda1>": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testOnlyFirstReplicaUpdatesVariables": ["test.TestCase.assertEqual", "test.TestCase.evaluate"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testOnlyFirstReplicaUpdatesVariables.create_fn": ["ops.variable_scope.variable"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testOnlyFirstReplicaUpdatesVariables.replica_id_plus_one": ["distribute.mirrored_variable_test._replica_id", "ops.math_ops.cast"], "ops.math_ops.cast": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testOnlyFirstReplicaUpdatesVariables.update_member_fn": ["distribute.mirrored_variable_test.MirroredVariableCreationTest.testOnlyFirstReplicaUpdatesVariables.replica_id_plus_one"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testOnlyFirstReplicaUpdatesVariables.update_state_ops_fn": ["ops.state_ops.assign_add", "distribute.mirrored_variable_test.MirroredVariableCreationTest.testOnlyFirstReplicaUpdatesVariables.replica_id_plus_one"], "ops.state_ops.assign_add": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testNoneSynchronizationWithGetVariable": ["ops.variable_scope.get_variable", "test.TestCase.assertRaisesRegex"], "test.TestCase.assertRaisesRegex": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testNoneSynchronizationWithVariable": ["ops.variable_scope.variable", "test.TestCase.assertRaisesRegex"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testInvalidSynchronizationWithVariable": ["ops.variable_scope.variable", "test.TestCase.assertRaisesRegex"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testInvalidAggregationWithGetVariable": ["ops.variable_scope.get_variable", "test.TestCase.assertRaisesRegex"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testInvalidAggregationWithVariable": ["ops.variable_scope.variable", "test.TestCase.assertRaisesRegex"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testNonMatchingVariableCreation": ["test.TestCase.assertRaises", "distribute.values.PerReplica"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testNonMatchingVariableCreation.model_fn": ["ops.variable_scope.variable", "distribute.distribution_strategy_context.get_replica_context"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testNonMatchingVariableCreation.model_fn.<lambda1>": [], "distribute.values.PerReplica": [], "test.TestCase.assertRaises": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testSyncOnReadVariable": ["<builtin>.len", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertIsNot", "<builtin>.enumerate", "test.TestCase.assertIs", "test.TestCase.assertEqual"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testSyncOnReadVariable.model_fn": ["distribute.distribute_utils.is_sync_on_read", "distribute.mirrored_variable_test._replica_id", "test.TestCase.assertTrue", "test.TestCase.evaluate", "test.TestCase.assertIsNot", "ops.variable_scope.variable"], "ops.variables.global_variables_initializer": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testDynamicRnnVariables": ["test.TestCase.assertIsInstance", "<builtin>.len", "eager.context.graph_mode", "test.TestCase.assertStartsWith", "test.TestCase.assertEqual"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testDynamicRnnVariables.model_fn": ["ops.rnn.bidirectional_dynamic_rnn", "ops.rnn_cell_impl.LSTMCell", "framework.constant_op.constant"], "ops.rnn_cell_impl.LSTMCell": [], "ops.rnn.bidirectional_dynamic_rnn": [], "eager.context.graph_mode": [], "test.TestCase.assertIsInstance": [], "test.TestCase.assertStartsWith": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testSyncOnReadVariableUpdate": ["test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "test.TestCase.evaluate"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testSyncOnReadVariableUpdate.model_fn": ["ops.variable_scope.variable", "distribute.distribute_utils.is_sync_on_read", "test.TestCase.assertTrue"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testSyncOnReadVariableUpdate.update": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testVarDistributeStrategy": ["ops.variable_scope.variable", "test.TestCase.assertIs"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testInitializer": ["framework.ops.get_collection", "test.TestCase.get_temp_dir", "test.TestCase.assertIsNotNone", "test.TestCase.skipTest", "saved_model.save.save", "framework.ops.Graph", "saved_model.load.load", "distribute.mirrored_variable_test.MirroredVariableCreationTest.testInitializer.Model.__init__"], "test.TestCase.get_temp_dir": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testInitializer.Model.__init__": ["ops.variables.Variable"], "saved_model.save.save": [], "framework.ops.Graph": [], "saved_model.load.load": [], "framework.ops.get_collection": [], "test.TestCase.assertIsNotNone": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testCustomGradient": ["distribute.mirrored_variable_test.MirroredVariableCreationTest.testCustomGradient.train_step", "distribute.mirrored_variable_test.MirroredVariableCreationTest.testCustomGradient.CustomModel.__init__", "test.TestCase.assertLen"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testCustomGradient.CustomModel.__init__": ["ops.variables.Variable"], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testCustomGradient.CustomModel.__call__": ["distribute.mirrored_variable_test.MirroredVariableCreationTest.testCustomGradient.CustomModel.__call__._call", "ops.custom_gradient.recompute_grad"], "ops.custom_gradient.recompute_grad": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testCustomGradient.CustomModel.__call__._call": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testCustomGradient.train_step": [], "distribute.mirrored_variable_test.MirroredVariableCreationTest.testCustomGradient.train_step.replica_step": ["eager.backprop.GradientTape", "distribute.mirrored_variable_test.MirroredVariableCreationTest.testCustomGradient.CustomModel.__init__"], "eager.backprop.GradientTape": [], "test.TestCase.assertLen": [], "eager.test.main": []}