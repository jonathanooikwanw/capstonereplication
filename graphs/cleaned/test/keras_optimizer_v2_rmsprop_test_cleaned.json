{"optimizer_v2.rmsprop_test": ["itertools.product", "platform.test.main"], "itertools.product": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest._rmsprop_update_numpy": ["numpy.sqrt"], "numpy.sqrt": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest._sparse_rmsprop_update_numpy": ["<builtin>.len", "<builtin>.range", "copy.deepcopy", "numpy.sqrt"], "copy.deepcopy": [], "<builtin>.len": [], "<builtin>.range": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testDense": ["optimizer_v2.rmsprop_test.RMSpropOptimizerTest._rmsprop_update_numpy", "<builtin>.zip", "ops.variables.Variable", "framework.constant_op.constant", "test.TestCase.assertIsNotNone", "test.TestCase.assertAllClose", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "framework.ops.get_default_graph", "optimizer_v2.rmsprop.RMSprop", "keras.testing_utils.use_gpu", "<builtin>.range", "numpy.array", "test.TestCase.evaluate"], "framework.ops.get_default_graph": [], "keras.testing_utils.use_gpu": [], "numpy.array": [], "ops.variables.Variable": [], "framework.constant_op.constant": [], "optimizer_v2.rmsprop.RMSprop": [], "<builtin>.zip": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertIsNotNone": [], "test.TestCase.assertAllClose": [], "test.TestCase.assertAllCloseAccordingToType": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testDenseWithLearningRateDecay": ["optimizer_v2.rmsprop_test.RMSpropOptimizerTest._rmsprop_update_numpy", "<builtin>.zip", "ops.variables.Variable", "framework.constant_op.constant", "test.TestCase.assertIsNotNone", "test.TestCase.assertAllClose", "test.TestCase.assertAllCloseAccordingToType", "framework.ops.Graph", "ops.variables.global_variables_initializer", "optimizer_v2.rmsprop.RMSprop", "<builtin>.range", "numpy.array", "test.TestCase.evaluate"], "framework.ops.Graph": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testDenseWithLearningRateInverseTimeDecay": ["optimizer_v2.rmsprop_test.RMSpropOptimizerTest._rmsprop_update_numpy", "<builtin>.zip", "ops.variables.Variable", "framework.constant_op.constant", "test.TestCase.assertIsNotNone", "test.TestCase.assertAllClose", "test.TestCase.assertAllCloseAccordingToType", "framework.ops.Graph", "ops.variables.global_variables_initializer", "optimizer_v2.rmsprop.RMSprop", "optimizer_v2.learning_rate_schedule.InverseTimeDecay", "<builtin>.range", "numpy.array", "test.TestCase.evaluate"], "optimizer_v2.learning_rate_schedule.InverseTimeDecay": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testMinimizeSparseResourceVariable": ["ops.variables.Variable", "framework.constant_op.constant", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "framework.ops.Graph", "optimizer_v2.rmsprop.RMSprop", "test.TestCase.evaluate"], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testMinimizeSparseResourceVariable.loss": ["ops.math_ops.matmul", "ops.embedding_ops.embedding_lookup"], "ops.embedding_ops.embedding_lookup": [], "ops.math_ops.matmul": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testMinimizeSparseResourceVariableCentered": ["ops.variables.Variable", "framework.constant_op.constant", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "framework.ops.Graph", "optimizer_v2.rmsprop.RMSprop", "test.TestCase.evaluate"], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testMinimizeSparseResourceVariableCentered.loss": ["ops.math_ops.matmul", "ops.embedding_ops.embedding_lookup"], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testSparse": ["<builtin>.zip", "framework.ops.IndexedSlices", "optimizer_v2.rmsprop_test.RMSpropOptimizerTest._sparse_rmsprop_update_numpy", "ops.variables.Variable", "framework.constant_op.constant", "test.TestCase.assertIsNotNone", "test.TestCase.assertAllClose", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "framework.ops.get_default_graph", "optimizer_v2.rmsprop.RMSprop", "keras.testing_utils.use_gpu", "<builtin>.range", "numpy.array", "test.TestCase.assertEqual", "test.TestCase.evaluate"], "framework.ops.IndexedSlices": [], "test.TestCase.assertEqual": [], "keras.combinations.combine": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest": ["keras.combinations.generate", "keras.combinations.combine"], "keras.combinations.generate": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testCallableParams": ["<builtin>.zip", "test.TestCase.assertAllClose", "ops.variables.Variable", "framework.constant_op.constant", "test.TestCase.assertAllCloseAccordingToType", "optimizer_v2.rmsprop.RMSprop", "numpy.array", "test.TestCase.evaluate"], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testCallableParams.<lambda1>": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testCallableParams.<lambda2>": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testCallableParams.<lambda3>": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testConstructRMSpropWithLR": ["test.TestCase.assertAllClose", "test.TestCase.assertIsInstance", "ops.variables.global_variables_initializer", "optimizer_v2.rmsprop.RMSprop", "test.TestCase.evaluate"], "test.TestCase.assertIsInstance": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testSlotsUniqueEager": ["test.TestCase.assertLen", "<builtin>.set", "ops.variables.Variable", "test.TestCase.evaluate", "optimizer_v2.rmsprop.RMSprop", "test.TestCase.assertEqual", "<builtin>.id"], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testSlotsUniqueEager.<lambda1>": [], "<builtin>.id": [], "<builtin>.set": [], "test.TestCase.assertLen": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testSlotsUniqueEager.<lambda2>": [], "optimizer_v2.rmsprop_test.RMSpropOptimizerTest.testSlotsUniqueEager.<lambda3>": [], "testing.parameterized.parameters": [], "optimizer_v2.rmsprop_test.SlotColocationTest": ["testing.parameterized.parameters", "framework.test_util.run_gpu_only"], "framework.test_util.run_gpu_only": [], "optimizer_v2.rmsprop_test.SlotColocationTest.testRunMinimizeOnGPUForCPUVariables": ["<builtin>.all", "ops.variables.Variable", "test.TestCase.assertAllClose", "framework.ops.device", "ops.variables.global_variables_initializer", "optimizer_v2.rmsprop.RMSprop", "test.TestCase.assertTrue", "test.TestCase.evaluate"], "framework.ops.device": [], "optimizer_v2.rmsprop_test.SlotColocationTest.testRunMinimizeOnGPUForCPUVariables.loss": [], "<builtin>.all": [], "test.TestCase.assertTrue": [], "platform.test.main": []}