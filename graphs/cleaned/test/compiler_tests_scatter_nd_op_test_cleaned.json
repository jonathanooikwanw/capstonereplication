{"tests.scatter_nd_op_test": ["platform.test.main"], "tests.scatter_nd_op_test._AsType": ["xla_test.XLATestCase.numeric_types", "<builtin>.isinstance"], "<builtin>.isinstance": [], "xla_test.XLATestCase.numeric_types": [], "tests.scatter_nd_op_test._FlatInnerDims": ["<builtin>.list"], "<builtin>.list": [], "tests.scatter_nd_op_test._FlatOuterDims": ["<builtin>.list"], "tests.scatter_nd_op_test._NumpyScatterNd": ["tests.scatter_nd_op_test._FlatOuterDims", "<builtin>.enumerate", "tests.scatter_nd_op_test._FlatInnerDims", "<builtin>.range", "<builtin>.len", "tests.scatter_nd_op_test._NumpyUpdate.<lambda1>", "<builtin>.tuple"], "<builtin>.len": [], "<builtin>.range": [], "<builtin>.enumerate": [], "<builtin>.tuple": [], "tests.scatter_nd_op_test._NumpyUpdate.<lambda1>": [], "tests.scatter_nd_op_test._NumpyUpdate": ["numpy.zeros", "tests.scatter_nd_op_test._NumpyScatterNd"], "numpy.zeros": [], "tests.scatter_nd_op_test.ScatterNdTest._VariableRankTest": ["numpy.empty", "numpy.random.randn", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd", "<builtin>.zip", "<builtin>.list", "numpy.random.randint", "numpy.random.seed", "<builtin>.range", "<builtin>.len", "numpy.append", "numpy.ndenumerate", "xla_test.XLATestCase.assertAllClose", "numpy.random.shuffle", "numpy.array", "tests.scatter_nd_op_test._AsType", "tests.scatter_nd_op_test._NumpyUpdate"], "numpy.random.seed": [], "<builtin>.zip": [], "numpy.empty": [], "numpy.ndenumerate": [], "numpy.random.shuffle": [], "numpy.array": [], "numpy.random.randint": [], "numpy.append": [], "numpy.random.randn": [], "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd": ["ops.array_ops.scatter_nd", "xla_test.XLATestCase.session", "ops.array_ops.placeholder", "xla_test.XLATestCase.test_scope"], "xla_test.XLATestCase.assertAllClose": [], "tests.scatter_nd_op_test.ScatterNdTest._VariableRankTests": ["tests.scatter_nd_op_test.ScatterNdTest._VariableRankTest", "<builtin>.set"], "<builtin>.set": [], "xla_test.XLATestCase.session": [], "ops.array_ops.placeholder": [], "xla_test.XLATestCase.test_scope": [], "ops.array_ops.scatter_nd": [], "tests.scatter_nd_op_test.ScatterNdTest.testSimple": ["xla_test.XLATestCase.assertAllEqual", "numpy.array", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "xla_test.XLATestCase.assertAllEqual": [], "tests.scatter_nd_op_test.ScatterNdTest.testRepeatedIndices": ["xla_test.XLATestCase.assertAllEqual", "numpy.array", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "tests.scatter_nd_op_test.ScatterNdTest.testSimple2": ["xla_test.XLATestCase.assertAllEqual", "numpy.array", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "tests.scatter_nd_op_test.ScatterNdTest.testSimple3": ["xla_test.XLATestCase.assertAllEqual", "numpy.array", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "tests.scatter_nd_op_test.ScatterNdTest.testVariableRankUpdate": ["tests.scatter_nd_op_test.ScatterNdTest._VariableRankTests"], "tests.scatter_nd_op_test.ScatterNdTest.testExtraIndicesDimensions": ["xla_test.XLATestCase.assertAllEqual", "numpy.zeros", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "framework.test_util.disable_mlir_bridge": [], "tests.scatter_nd_op_test.ScatterNdTest": ["framework.test_util.disable_mlir_bridge"], "tests.scatter_nd_op_test.ScatterNdTest.testRank3InvalidShape1": ["tests.scatter_nd_op_test.ScatterNdTest._runScatterNd", "numpy.zeros", "xla_test.XLATestCase.assertRaisesWithPredicateMatch"], "xla_test.XLATestCase.assertRaisesWithPredicateMatch": [], "tests.scatter_nd_op_test.ScatterNdTest.testRank3InvalidShape2": ["tests.scatter_nd_op_test.ScatterNdTest._runScatterNd", "numpy.zeros", "xla_test.XLATestCase.assertRaisesWithPredicateMatch"], "tests.scatter_nd_op_test.ScatterNdTest.testScatterOutOfRange": ["numpy.array", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "tests.scatter_nd_op_test.ScatterNdTensorTest._runScatter": ["ops.array_ops.tensor_scatter_add", "xla_test.XLATestCase.session", "ops.array_ops.placeholder", "xla_test.XLATestCase.test_scope", "ops.array_ops.tensor_scatter_sub", "numpy.array", "ops.array_ops.ones", "ops.array_ops.tensor_scatter_update"], "ops.array_ops.ones": [], "ops.array_ops.tensor_scatter_add": [], "ops.array_ops.tensor_scatter_sub": [], "ops.array_ops.tensor_scatter_update": [], "tests.scatter_nd_op_test.ScatterNdTensorTest.testAdd": ["numpy.array", "xla_test.XLATestCase.assertAllEqual", "tests.scatter_nd_op_test.ScatterNdTensorTest._runScatter"], "tests.scatter_nd_op_test.ScatterNdTensorTest.testSub": ["numpy.array", "xla_test.XLATestCase.assertAllEqual", "tests.scatter_nd_op_test.ScatterNdTensorTest._runScatter"], "tests.scatter_nd_op_test.ScatterNdTensorTest.testUpdate": ["numpy.array", "xla_test.XLATestCase.assertAllEqual", "tests.scatter_nd_op_test.ScatterNdTensorTest._runScatter"], "platform.test.main": []}