{"tests.fft_test": ["tests.fft_test.pick_10", "itertools.product", "platform.googletest.main", "numpy.arange", "<builtin>.list"], "tests.fft_test.pick_10": ["numpy.random.seed", "numpy.random.shuffle", "<builtin>.list"], "<builtin>.list": [], "numpy.random.seed": [], "numpy.random.shuffle": [], "tests.fft_test.to_32bit": [], "numpy.arange": [], "itertools.product": [], "tests.fft_test.FFTTest._VerifyFftMethod": ["tests.fft_test.FFTTest.testRFFT3DMismatchedSize._to_expected", "tests.fft_test.FFTTest.testIRFFT._tf_fn", "tests.fft_test.FFTTest.testRFFT3D._to_expected", "tests.fft_test.FFTTest.testRFFT3D._tf_fn", "framework.dtypes.as_dtype", "tests.fft_test.FFTTest.testIRFFT3D._to_input", "tests.fft_test.FFTTest.testRFFT3DMismatchedSize._tf_fn", "numpy.fft.ifft", "numpy.real", "tests.fft_test.to_32bit", "tests.fft_test.FFTTest.testIRFFT2D._tf_fn", "xla_test.XLATestCase.test_scope", "numpy.fft.fft2", "tests.fft_test.FFTTest.testRFFT2D._tf_fn", "tests.fft_test.FFTTest.testRFFT._to_expected", "numpy.arange", "numpy.fft.ifft2", "xla_test.XLATestCase.session", "signal.signal.ifft", "tests.fft_test.FFTTest.testIRFFT3DMismatchedSize._to_input", "numpy.random.shuffle", "numpy.prod", "numpy.random.seed", "ops.array_ops.placeholder", "signal.signal.fft", "xla_test.XLATestCase.assertAllClose", "tests.fft_test.FFTTest.testIRFFT3DMismatchedSize._to_expected", "tests.fft_test.FFTTest.testIRFFT3D._tf_fn", "signal.signal.fft2d", "signal.signal.ifft3d", "tests.fft_test.FFTTest.testIRFFT3D._to_expected", "signal.signal.ifft2d", "tests.fft_test.FFTTest.testRFFT._tf_fn", "numpy.reshape", "<builtin>.print", "signal.signal.fft3d", "tests.fft_test.FFTTest.testIRFFT3DMismatchedSize._tf_fn"], "<builtin>.print": [], "numpy.prod": [], "numpy.reshape": [], "tests.fft_test.FFTTest.testIRFFT3D._to_input": ["numpy.fft.rfftn", "numpy.real"], "tests.fft_test.FFTTest.testIRFFT3DMismatchedSize._to_input": ["numpy.fft.rfftn", "numpy.real"], "numpy.real": [], "tests.fft_test.FFTTest.testRFFT._to_expected": ["numpy.fft.rfft"], "tests.fft_test.FFTTest.testRFFT3DMismatchedSize._to_expected": ["numpy.fft.rfftn"], "tests.fft_test.FFTTest.testIRFFT3D._to_expected": ["numpy.fft.irfftn"], "tests.fft_test.FFTTest.testRFFT3D._to_expected": ["numpy.fft.rfftn"], "numpy.fft.ifft2": [], "numpy.fft.fft2": [], "tests.fft_test.FFTTest.testIRFFT3DMismatchedSize._to_expected": ["numpy.fft.irfftn"], "numpy.fft.ifft": [], "xla_test.XLATestCase.session": [], "xla_test.XLATestCase.test_scope": [], "framework.dtypes.as_dtype": [], "ops.array_ops.placeholder": [], "signal.signal.ifft3d": [], "tests.fft_test.FFTTest.testIRFFT._tf_fn": ["signal.signal.irfft"], "signal.signal.ifft2d": [], "signal.signal.fft": [], "tests.fft_test.FFTTest.testRFFT3D._tf_fn": ["signal.signal.rfft3d"], "tests.fft_test.FFTTest.testRFFT._tf_fn": ["signal.signal.rfft"], "tests.fft_test.FFTTest.testRFFT3DMismatchedSize._tf_fn": ["signal.signal.rfft3d"], "tests.fft_test.FFTTest.testRFFT2D._tf_fn": ["signal.signal.rfft2d"], "tests.fft_test.FFTTest.testIRFFT2D._tf_fn": ["signal.signal.irfft2d"], "signal.signal.fft3d": [], "signal.signal.ifft": [], "tests.fft_test.FFTTest.testIRFFT3D._tf_fn": ["signal.signal.irfft3d"], "tests.fft_test.FFTTest.testIRFFT3DMismatchedSize._tf_fn": ["signal.signal.irfft3d"], "signal.signal.fft2d": [], "xla_test.XLATestCase.assertAllClose": [], "tests.fft_test.FFTTest.testContribSignalSTFT": ["ops.array_ops.ones_like", "numpy.random.seed", "scipy.signal.get_window", "scipy.signal.stft", "framework.dtypes.as_dtype", "ops.array_ops.placeholder", "signal.signal.stft", "xla_test.XLATestCase.assertAllClose", "ops.gradients_impl.gradients", "numpy.arange", "numpy.reshape", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.session", "numpy.swapaxes", "numpy.random.shuffle", "numpy.prod"], "scipy.signal.get_window": [], "scipy.signal.stft": [], "numpy.swapaxes": [], "signal.signal.stft": [], "ops.array_ops.ones_like": [], "ops.gradients_impl.gradients": [], "tests.fft_test.FFTTest.testFFT": ["tests.fft_test.FFTTest._VerifyFftMethod"], "tests.fft_test.FFTTest.testFFT.<lambda1>": [], "tests.fft_test.FFTTest.testFFT2D": ["tests.fft_test.FFTTest._VerifyFftMethod"], "tests.fft_test.FFTTest.testFFT2D.<lambda1>": [], "tests.fft_test.FFTTest.testFFT3D": ["tests.fft_test.FFTTest._VerifyFftMethod"], "tests.fft_test.FFTTest.testFFT3D.<lambda1>": [], "tests.fft_test.FFTTest.testFFT3D.<lambda2>": ["numpy.fft.fftn"], "numpy.fft.fftn": [], "tests.fft_test.FFTTest.testIFFT": ["tests.fft_test.FFTTest._VerifyFftMethod"], "tests.fft_test.FFTTest.testIFFT.<lambda1>": [], "tests.fft_test.FFTTest.testIFFT2D": ["tests.fft_test.FFTTest._VerifyFftMethod"], "tests.fft_test.FFTTest.testIFFT2D.<lambda1>": [], "tests.fft_test.FFTTest.testIFFT3D": ["tests.fft_test.FFTTest._VerifyFftMethod"], "tests.fft_test.FFTTest.testIFFT3D.<lambda1>": [], "tests.fft_test.FFTTest.testIFFT3D.<lambda2>": ["numpy.fft.ifftn"], "numpy.fft.ifftn": [], "tests.fft_test.FFTTest.testRFFT": ["tests.fft_test.FFTTest._VerifyFftMethod"], "numpy.fft.rfft": [], "signal.signal.rfft": [], "tests.fft_test.FFTTest.testRFFT2D": ["tests.fft_test.FFTTest._VerifyFftMethod"], "signal.signal.rfft2d": [], "tests.fft_test.FFTTest.testRFFT2D.<lambda1>": ["numpy.fft.rfft2"], "numpy.fft.rfft2": [], "tests.fft_test.FFTTest.testRFFT3D": ["tests.fft_test.FFTTest._VerifyFftMethod"], "numpy.fft.rfftn": [], "signal.signal.rfft3d": [], "tests.fft_test.FFTTest.testRFFT3DMismatchedSize": ["tests.fft_test.FFTTest._VerifyFftMethod"], "tests.fft_test.FFTTest.testIRFFT": ["tests.fft_test.FFTTest._VerifyFftMethod"], "signal.signal.irfft": [], "tests.fft_test.FFTTest.testIRFFT.<lambda1>": ["numpy.fft.rfft", "numpy.real"], "tests.fft_test.FFTTest.testIRFFT.<lambda2>": ["numpy.fft.irfft"], "numpy.fft.irfft": [], "tests.fft_test.FFTTest.testIRFFT2D": ["tests.fft_test.FFTTest._VerifyFftMethod"], "signal.signal.irfft2d": [], "tests.fft_test.FFTTest.testIRFFT2D.<lambda1>": ["numpy.fft.rfft2", "numpy.real"], "tests.fft_test.FFTTest.testIRFFT2D.<lambda2>": ["numpy.fft.irfft2"], "numpy.fft.irfft2": [], "tests.fft_test.FFTTest.testIRFFT3D": ["tests.fft_test.FFTTest._VerifyFftMethod"], "numpy.fft.irfftn": [], "signal.signal.irfft3d": [], "tests.fft_test.FFTTest.testIRFFT3DMismatchedSize": ["tests.fft_test.FFTTest._VerifyFftMethod"], "platform.googletest.main": []}