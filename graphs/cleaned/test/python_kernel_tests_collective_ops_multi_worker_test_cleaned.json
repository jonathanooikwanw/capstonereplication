{"kernel_tests.collective_ops_multi_worker_test": ["distribute.multi_process_runner.test_main", "distribute.combinations.combine", "distribute.multi_worker_test_base.create_cluster_spec", "distribute.multi_process_runner.MultiProcessPoolRunner"], "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops": ["protobuf.tensorflow_server_pb2.ServerDef", "eager.context.context", "copy.deepcopy"], "eager.context.context": [], "copy.deepcopy": [], "protobuf.tensorflow_server_pb2.ServerDef": [], "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops_with_barrier": ["distribute.multi_process_runner.get_barrier", "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops"], "distribute.multi_process_runner.get_barrier": [], "distribute.combinations.combine": [], "kernel_tests.collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealth": ["distribute.multi_worker_test_base.create_cluster_spec", "distribute.multi_process_runner.MultiProcessRunner"], "kernel_tests.collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealth.worker_fn": ["distribute.multi_process_runner.get_barrier", "distribute.cluster_resolver.TFConfigClusterResolver", "eager.context.context", "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops"], "distribute.cluster_resolver.TFConfigClusterResolver": [], "distribute.multi_worker_test_base.create_cluster_spec": [], "distribute.multi_process_runner.MultiProcessRunner": [], "kernel_tests.collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthPeerDown": ["distribute.multi_worker_test_base.create_cluster_spec", "test.TestCase.assertRaises", "distribute.multi_process_runner.MultiProcessRunner"], "kernel_tests.collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthPeerDown.worker_fn": ["distribute.cluster_resolver.TFConfigClusterResolver", "eager.context.context", "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops"], "test.TestCase.assertRaises": [], "kernel_tests.collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthPeerRestart": ["distribute.multi_worker_test_base.create_cluster_spec", "distribute.multi_process_runner.MultiProcessRunner"], "kernel_tests.collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthPeerRestart.worker_fn": ["os._exit", "distribute.cluster_resolver.TFConfigClusterResolver", "framework.constant_op.constant", "ops.collective_ops.all_reduce", "eager.context.context", "time.sleep", "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops"], "framework.constant_op.constant": [], "ops.collective_ops.all_reduce": [], "os._exit": [], "time.sleep": [], "kernel_tests.collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthInvalidPeer": ["distribute.multi_worker_test_base.create_cluster_spec", "test.TestCase.assertRaises", "distribute.multi_process_runner.MultiProcessRunner"], "kernel_tests.collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthInvalidPeer.worker_fn": ["distribute.cluster_resolver.TFConfigClusterResolver", "eager.context.context", "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops"], "kernel_tests.collective_ops_multi_worker_test.<lambda1>": ["distribute.cluster_resolver.TFConfigClusterResolver", "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops"], "distribute.multi_process_runner.MultiProcessPoolRunner": [], "kernel_tests.collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortCommunication": ["distribute.cluster_resolver.TFConfigClusterResolver", "framework.constant_op.constant", "ops.collective_ops.all_reduce", "framework.ops.device", "threading.Thread", "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops_with_barrier", "test.TestCase.skipTest", "test.TestCase.assertRaisesRegex"], "test.TestCase.skipTest": [], "framework.ops.device": [], "kernel_tests.collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortCommunication.abort_fn": ["time.sleep", "eager.context.context"], "threading.Thread": [], "test.TestCase.assertRaisesRegex": [], "kernel_tests.collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortGroupParamsResolution": ["distribute.cluster_resolver.TFConfigClusterResolver", "framework.constant_op.constant", "ops.collective_ops.all_reduce", "framework.ops.device", "threading.Thread", "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops_with_barrier", "test.TestCase.skipTest", "test.TestCase.assertRaisesRegex"], "kernel_tests.collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortGroupParamsResolution.abort_fn": ["time.sleep", "eager.context.context"], "kernel_tests.collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortInstanceParamsResolution": ["distribute.cluster_resolver.TFConfigClusterResolver", "framework.constant_op.constant", "ops.collective_ops.all_reduce", "framework.ops.device", "ops.collective_ops.broadcast_recv", "ops.collective_ops.broadcast_send", "threading.Thread", "kernel_tests.collective_ops_multi_worker_test.enable_collective_ops_with_barrier", "test.TestCase.skipTest", "test.TestCase.assertRaisesRegex"], "kernel_tests.collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortInstanceParamsResolution.abort_fn": ["time.sleep", "eager.context.context"], "ops.collective_ops.broadcast_send": [], "ops.collective_ops.broadcast_recv": [], "distribute.multi_process_runner.test_main": []}