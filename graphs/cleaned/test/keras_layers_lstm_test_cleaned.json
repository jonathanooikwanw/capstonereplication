{"layers.lstm_test": ["platform.test.main"], "layers.lstm_test.LSTMLayerTest.test_return_sequences_LSTM": ["keras.testing_utils.layer_test"], "keras.testing_utils.layer_test": [], "platform.test.disable_with_predicate": [], "layers.lstm_test.LSTMLayerTest": ["platform.test.disable_with_predicate", "keras.testing_utils.run_v2_only", "testing.parameterized.parameters"], "keras.testing_utils.run_v2_only": [], "layers.lstm_test.LSTMLayerTest.test_float64_LSTM": ["keras.testing_utils.layer_test"], "layers.lstm_test.LSTMLayerTest.test_static_shape_inference_LSTM": ["keras_parameterized.TestCase.assertEqual", "keras.models.Sequential", "keras.layers.Dense", "keras.layers.LSTM"], "keras.models.Sequential": [], "keras.layers.Dense": [], "keras.layers.LSTM": [], "keras_parameterized.TestCase.assertEqual": [], "layers.lstm_test.LSTMLayerTest.test_dynamic_behavior_LSTM": ["keras.models.Sequential", "keras.testing_utils.should_run_eagerly", "keras.layers.LSTM", "numpy.random.random"], "keras.testing_utils.should_run_eagerly": [], "numpy.random.random": [], "layers.lstm_test.LSTMLayerTest.test_dropout_LSTM": ["keras.testing_utils.layer_test"], "layers.lstm_test.LSTMLayerTest.test_recurrent_dropout_with_implementation_restriction": ["keras_parameterized.TestCase.assertEqual", "keras.layers.LSTM"], "testing.parameterized.parameters": [], "layers.lstm_test.LSTMLayerTest.test_implementation_mode_LSTM": ["keras.testing_utils.layer_test"], "layers.lstm_test.LSTMLayerTest.test_constraints_LSTM": ["keras_parameterized.TestCase.assertEqual", "keras.layers.LSTM", "keras.constraints.max_norm"], "keras.constraints.max_norm": [], "layers.lstm_test.LSTMLayerTest.test_with_masking_layer_LSTM": ["keras.layers.LSTM", "numpy.abs", "keras.models.Sequential", "keras.layers.Masking", "keras.testing_utils.should_run_eagerly", "numpy.random.random"], "numpy.abs": [], "keras.layers.Masking": [], "layers.lstm_test.LSTMLayerTest.test_masking_with_stacking_LSTM": ["numpy.abs", "keras.models.Sequential", "keras.layers.Masking", "keras.layers.RNN", "keras.layers.LSTMCell", "keras.testing_utils.should_run_eagerly", "numpy.random.random"], "keras.layers.LSTMCell": [], "keras.layers.RNN": [], "layers.lstm_test.LSTMLayerTest.test_from_config_LSTM": ["keras.layers.LSTM", "layers.LSTM.from_config"], "layers.LSTM.from_config": [], "layers.lstm_test.LSTMLayerTest.test_deep_copy_LSTM": ["keras.layers.LSTMCell", "copy.deepcopy", "keras_parameterized.TestCase.assertEqual"], "copy.deepcopy": [], "layers.lstm_test.LSTMLayerTest.test_specify_initial_state_keras_tensor": ["keras_parameterized.TestCase.assertTrue", "keras.layers.LSTM", "<builtin>.range", "python.keras.Input", "<builtin>.len", "keras.models.Model", "keras.testing_utils.should_run_eagerly", "<builtin>.any", "training.adam.AdamOptimizer", "numpy.random.random"], "python.keras.Input": [], "<builtin>.range": [], "<builtin>.len": [], "<builtin>.any": [], "keras_parameterized.TestCase.assertTrue": [], "keras.models.Model": [], "training.adam.AdamOptimizer": [], "layers.lstm_test.LSTMLayerTest.test_specify_initial_state_non_keras_tensor": ["keras.layers.LSTM", "<builtin>.range", "python.keras.Input", "keras.models.Model", "keras.testing_utils.should_run_eagerly", "keras.backend.random_normal_variable", "training.adam.AdamOptimizer", "numpy.random.random"], "keras.backend.random_normal_variable": [], "layers.lstm_test.LSTMLayerTest.test_reset_states_with_values": ["keras_parameterized.TestCase.assertRaises", "keras.layers.LSTM", "keras.backend.int_shape", "keras_parameterized.TestCase.assertAllClose", "<builtin>.len", "keras.backend.eval", "numpy.ones", "numpy.zeros"], "keras.backend.eval": [], "keras.backend.int_shape": [], "numpy.zeros": [], "keras_parameterized.TestCase.assertAllClose": [], "numpy.ones": [], "keras_parameterized.TestCase.assertRaises": [], "layers.lstm_test.LSTMLayerTest.test_specify_state_with_masking": ["keras.layers.LSTM", "<builtin>.range", "python.keras.Input", "keras.models.Model", "keras.layers.Masking", "keras.testing_utils.should_run_eagerly", "numpy.random.random"], "layers.lstm_test.LSTMLayerTest.test_return_state": ["keras.layers.LSTM", "keras_parameterized.TestCase.assertAllClose", "python.keras.Input", "<builtin>.len", "keras.models.Model", "keras.backend.eval", "numpy.random.random"], "layers.lstm_test.LSTMLayerTest.test_state_reuse": ["python.keras.Input", "keras.layers.LSTM", "keras.models.Model", "numpy.random.random"], "layers.lstm_test.LSTMLayerTest.test_initial_states_as_other_inputs": ["keras_parameterized.TestCase.assertTrue", "keras.layers.LSTM", "<builtin>.range", "python.keras.Input", "keras.models.Model", "keras.testing_utils.should_run_eagerly", "<builtin>.any", "training.adam.AdamOptimizer", "numpy.random.random"], "layers.lstm_test.LSTMLayerTest.test_regularizers_LSTM": ["keras_parameterized.TestCase.assertEqual", "keras.layers.LSTM", "eager.context.executing_eagerly", "keras.backend.variable", "<builtin>.len", "numpy.ones", "keras.regularizers.l1"], "keras.regularizers.l1": [], "keras.backend.variable": [], "eager.context.executing_eagerly": [], "layers.lstm_test.LSTMLayerTest.test_statefulness_LSTM": ["keras.layers.LSTM", "keras_parameterized.TestCase.assertEqual", "keras_parameterized.TestCase.assertNotEqual", "keras_parameterized.TestCase.assertAllClose", "keras.models.Sequential", "training.gradient_descent.GradientDescentOptimizer", "keras.testing_utils.should_run_eagerly", "numpy.ones", "keras.layers.Embedding"], "keras.layers.Embedding": [], "training.gradient_descent.GradientDescentOptimizer": [], "keras_parameterized.TestCase.assertNotEqual": [], "platform.test.main": []}