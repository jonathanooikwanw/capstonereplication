{"python.xla_client_test": ["python.xla_client_test.InstantiateTests", "<builtin>.globals", "testing.absltest.main", "absl.flags.DEFINE_string"], "python.xla_client_test.TestFactory": [], "python.xla_client_test.TestFactory.ComputationTest.setUp": ["<builtin>.super"], "<builtin>.super": [], "python.xla_client_test.TestFactory.ComputationTest._NewComputation": ["parameterized.TestCase.id", "python.xla_client.XlaBuilder"], "parameterized.TestCase.id": [], "python.xla_client.XlaBuilder": [], "python.xla_client_test.TestFactory.ComputationTest._Execute": ["python.xla_client.execute_with_python_values"], "python.xla_client.execute_with_python_values": [], "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndAssertWith": ["numpy.testing.assert_equal", "numpy.testing.assert_allclose", "<builtin>.len", "parameterized.TestCase.assertEqual", "python.xla_client_test.TestFactory.ComputationTest._Execute", "<builtin>.zip", "numpy.asanyarray", "parameterized.TestCase.assertLen"], "<builtin>.len": [], "parameterized.TestCase.assertLen": [], "<builtin>.zip": [], "numpy.asanyarray": [], "parameterized.TestCase.assertEqual": [], "numpy.testing.assert_equal": [], "numpy.testing.assert_allclose": [], "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndAssertWith"], "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndAssertWith", "functools.partial"], "functools.partial": [], "python.xla_client_test.TestFactory.NumpyArrayF32": ["numpy.array"], "numpy.array": [], "python.xla_client_test.TestFactory.NumpyArrayF64": ["numpy.array"], "python.xla_client_test.TestFactory.NumpyArrayS32": ["numpy.array"], "python.xla_client_test.TestFactory.NumpyArrayBool": ["numpy.array"], "python.xla_client_test.TestFactory.ComputationPrinting.setUp": ["<builtin>.super"], "python.xla_client_test.TestFactory.ComputationPrinting.ExampleComputation": ["python.xla_client.shape_from_pyval", "xla_client.ops.Add", "numpy.float32", "xla_client.ops.Parameter", "xla_client.ops.Mul", "python.xla_client.XlaBuilder", "numpy.zeros"], "numpy.float32": [], "python.xla_client.shape_from_pyval": [], "xla_client.ops.Parameter": [], "numpy.zeros": [], "xla_client.ops.Mul": [], "xla_client.ops.Add": [], "unittest.skipIf": [], "python.xla_client_test.TestFactory.ComputationPrinting": ["unittest.skipIf"], "python.xla_client_test.TestFactory.ComputationPrinting.testCompiledHloModuleToHloText": ["absltest.TestCase.assertIn", "python.xla_client_test.TestFactory.ComputationPrinting.ExampleComputation", "absltest.TestCase.assertTrue", "absltest.TestCase.assertLen"], "absltest.TestCase.assertLen": [], "absltest.TestCase.assertTrue": [], "absltest.TestCase.assertIn": [], "python.xla_client_test.TestFactory.ComputationPrinting.testCompiledHloModuleAsSerializedProto": ["python.xla_client_test.TestFactory.ComputationPrinting.ExampleComputation", "python.xla_client.XlaComputation", "absltest.TestCase.assertEqual", "absltest.TestCase.assertLen"], "python.xla_client.XlaComputation": [], "absltest.TestCase.assertEqual": [], "python.xla_client_test.TestFactory.ComputationPrinting.testStableComputationSerialization": ["<builtin>.range", "python.xla_client_test.TestFactory.ComputationPrinting.ExampleComputation", "absltest.TestCase.assertEqual"], "<builtin>.range": [], "python.xla_client_test.TestFactory.ComputationPrinting.testFlopEstimate": ["python.xla_client_test.TestFactory.ComputationPrinting.ExampleComputation", "xla_client._xla.hlo_module_cost_analysis", "absltest.TestCase.assertEqual"], "xla_client._xla.hlo_module_cost_analysis": [], "python.xla_client_test.TestFactory.ComputationPrinting.testFingerprint": ["python.xla_client_test.TestFactory.ComputationPrinting.ExampleComputation", "absltest.TestCase.assertNotEmpty", "absltest.TestCase.assertIsNone", "absl.logging.info"], "absl.logging.info": [], "absltest.TestCase.assertNotEmpty": [], "absltest.TestCase.assertIsNone": [], "testing.parameterized.named_parameters": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest": ["testing.parameterized.named_parameters"], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testConstantScalarSum": ["xla_client.ops.Add", "xla_client.ops.Constant", "parameterized.TestCase.skipTest", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "parameterized.TestCase.skipTest": [], "xla_client.ops.Constant": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testConstantVectorMul": ["xla_client.ops.Mul", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testConstantVectorScalarDiv": ["xla_client.ops.Constant", "xla_client.ops.Div", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Div": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testConstantVectorScalarPow": ["xla_client.ops.Constant", "numpy.array", "xla_client.ops.Pow", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Pow": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testIota": ["python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "numpy.arange", "xla_client.ops.Iota"], "xla_client.ops.Iota": [], "numpy.arange": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testBroadcastedIota": ["xla_client.ops.Iota", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "numpy.array", "xla_client.Shape.array_shape", "python.xla_client.dtype_to_etype", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client.dtype_to_etype": [], "xla_client.Shape.array_shape": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testBooleanAnd": ["xla_client.ops.And", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayBool", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.And": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testBooleanOr": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "xla_client.ops.Or", "python.xla_client_test.TestFactory.NumpyArrayBool", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Or": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testBooleanXor": ["xla_client.ops.Xor", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayBool", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Xor": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testSum2D": ["xla_client.ops.Add", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testShiftLeft": ["xla_client.ops.ShiftLeft", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.ShiftLeft": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testShiftRightArithmetic": ["xla_client.ops.ShiftRightArithmetic", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.ShiftRightArithmetic": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testShiftRightLogical": ["xla_client.ops.ShiftRightLogical", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.ShiftRightLogical": [], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testSum2DWith1DBroadcastDim0": ["xla_client.ops.Add", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testSum2DWith1DBroadcastDim1": ["xla_client.ops.Add", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testConstantAxpy": ["xla_client.ops.Add", "xla_client.ops.Mul", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.ComputationsWithConstantsTest.testCustomCall": ["numpy.float32", "xla_client.ops.Constant", "numpy.dtype", "python.xla_client.register_custom_call_target", "parameterized.TestCase.skipTest", "xla_client.Shape.array_shape", "custom_call_for_test.cpu_custom_call_targets.items", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.CustomCallWithLayout"], "custom_call_for_test.cpu_custom_call_targets.items": [], "python.xla_client.register_custom_call_target": [], "numpy.dtype": [], "xla_client.ops.CustomCallWithLayout": [], "python.xla_client_test.TestFactory.PythonCallbackTest.testPythonCallback": ["python.xla_client.shape_from_pyval", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Parameter", "numpy.array", "parameterized.TestCase.skipTest", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.PythonCallbackTest.testPythonCallback.<lambda1>": [], "python.xla_client_test.TestFactory.PythonCallbackTest.testTokens": ["python.xla_client.shape_from_pyval", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Parameter", "numpy.array", "parameterized.TestCase.skipTest", "xla_client.Shape.token_shape", "xla_client.ops.GetTupleElement", "xla_client.ops.CreateToken", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.PythonCallbackTest.testTokens._Callback": [], "xla_client.Shape.token_shape": [], "xla_client.ops.CreateToken": [], "xla_client.ops.GetTupleElement": [], "python.xla_client_test.TestFactory.PythonCallbackTest.testStriding": ["python.xla_client.shape_from_pyval", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Parameter", "numpy.arange", "parameterized.TestCase.skipTest", "xla_client.Shape.array_shape", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.PythonCallbackTest.testStriding._Callback": ["numpy.ascontiguousarray"], "numpy.ascontiguousarray": [], "python.xla_client_test.TestFactory.ComputationFromProtoTest.setUp": ["<builtin>.super"], "python.xla_client_test.TestFactory.ComputationFromProtoTest.testExecuteFromProto": ["numpy.testing.assert_equal", "xla_client.ops.Add", "python.xla_client.execute_with_python_values", "xla_client.ops.Constant", "python.xla_client.XlaBuilder", "numpy.int32", "python.xla_client.XlaComputation"], "numpy.int32": [], "python.xla_client_test.TestFactory.ParametersTest": ["testing.parameterized.named_parameters"], "python.xla_client_test.TestFactory.ParametersTest.testScalarTimesVector": ["python.xla_client.shape_from_pyval", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Parameter", "xla_client.ops.Mul", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.ParametersTest.testScalarMinusVectorExplicitNumbering": ["python.xla_client.shape_from_pyval", "xla_client.ops.Parameter", "numpy.array", "xla_client.ops.Sub", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Sub": [], "python.xla_client_test.TestFactory.BufferTest.testConstantSum": ["xla_client.ops.Add", "numpy.float32", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.BufferTest.testOneParameterSum": ["python.xla_client.shape_from_pyval", "xla_client.ops.Add", "numpy.float32", "xla_client.ops.Parameter", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.BufferTest.testTwoParameterSum": ["python.xla_client.shape_from_pyval", "xla_client.ops.Add", "xla_client.ops.Parameter", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.BufferTest": ["unittest.skipIf"], "python.xla_client_test.TestFactory.BufferTest.testCannotCallWithDeletedBuffers": ["python.xla_client.shape_from_pyval", "xla_client.ops.Add", "numpy.float32", "xla_client.ops.Parameter", "parameterized.TestCase.assertRaises", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "parameterized.TestCase.assertRaises": [], "python.xla_client_test.TestFactory.BufferTest.testXlaShape": ["parameterized.TestCase.assertEqual", "numpy.array", "numpy.dtype"], "python.xla_client_test.TestFactory.BufferTest.testXlaShapeIndex": ["parameterized.TestCase.assertEqual", "parameterized.TestCase.assertNotEqual", "python.xla_client.ShapeIndex"], "python.xla_client.ShapeIndex": [], "parameterized.TestCase.assertNotEqual": [], "python.xla_client_test.TestFactory.BufferTest.testBlockHostUntilReadyWorks": ["numpy.array"], "python.xla_client_test.TestFactory.BufferTest.testBlockHostUntilReadyRaisesOnDeletedBuffer": ["numpy.array", "parameterized.TestCase.assertRaisesRegex", "re.escape"], "re.escape": [], "parameterized.TestCase.assertRaisesRegex": [], "python.xla_client_test.TestFactory.BufferTest.testDeviceArrayBaseSignatures": ["parameterized.TestCase.assertIs", "parameterized.TestCase.assertEqual", "parameterized.TestCase.assertRaises", "numpy.array", "<builtin>.isinstance", "<builtin>.type", "unittest.SkipTest"], "<builtin>.isinstance": [], "<builtin>.type": [], "unittest.SkipTest": [], "parameterized.TestCase.assertIs": [], "python.xla_client_test.TestFactory.BufferTest.testOnDeviceSizeInBytes": ["parameterized.TestCase.assertEqual", "numpy.array", "<builtin>.isinstance", "parameterized.TestCase.skipTest", "parameterized.TestCase.assertGreater"], "parameterized.TestCase.assertGreater": [], "python.xla_client_test.TestFactory.BufferTest.testLiveBuffers": ["parameterized.TestCase.assertIs", "parameterized.TestCase.assertEqual", "numpy.array", "<builtin>.isinstance", "parameterized.TestCase.skipTest", "parameterized.TestCase.assertLen", "parameterized.TestCase.assertEmpty"], "parameterized.TestCase.assertEmpty": [], "python.xla_client_test.TestFactory.BufferTest.testCopyToHost": ["numpy.testing.assert_equal", "numpy.array"], "python.xla_client_test.TestFactory.BufferTest.testDevice": ["parameterized.TestCase.assertEqual", "numpy.arange", "numpy.testing.assert_equal"], "python.xla_client_test.TestFactory.BufferTest.testStandardTypes": ["parameterized.TestCase.assertEqual", "numpy.array", "<builtin>.type"], "python.xla_client_test.TestFactory.BufferTest.testUnsafeBufferPointer": ["numpy.array", "<builtin>.isinstance", "parameterized.TestCase.skipTest", "parameterized.TestCase.assertGreaterEqual"], "parameterized.TestCase.assertGreaterEqual": [], "python.xla_client_test.TestFactory.BufferTest.testClone": ["parameterized.TestCase.assertNotEqual", "parameterized.TestCase.assertEqual", "numpy.testing.assert_array_equal", "<builtin>.id", "numpy.array"], "<builtin>.id": [], "numpy.testing.assert_array_equal": [], "python.xla_client_test.TestFactory.BufferTest.testJaxAttributesHaveCorrectDefaults": ["numpy.array", "parameterized.TestCase.assertIsNone"], "parameterized.TestCase.assertIsNone": [], "python.xla_client_test.TestFactory.SingleOpTest": ["itertools.permutations", "testing.parameterized.named_parameters"], "python.xla_client_test.TestFactory.SingleOpTest.testConcatenate": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "numpy.array", "xla_client.ops.ConcatInDim", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.ConcatInDim": [], "itertools.permutations": [], "python.xla_client_test.TestFactory.SingleOpTest.testConvertElementType": ["xla_client.ops.ConvertElementType", "numpy.testing.assert_equal", "parameterized.TestCase.assertEqual", "xla_client.ops.Constant", "numpy.array", "parameterized.TestCase.skipTest", "python.xla_client.dtype_to_etype", "parameterized.TestCase.assertLen", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client.execute_with_python_values"], "xla_client.ops.ConvertElementType": [], "python.xla_client_test.TestFactory.SingleOpTest.testBitcastConvertType": ["numpy.testing.assert_equal", "parameterized.TestCase.assertEqual", "xla_client.ops.BitcastConvertType", "xla_client.ops.Constant", "numpy.array", "parameterized.TestCase.skipTest", "python.xla_client.dtype_to_etype", "parameterized.TestCase.assertLen", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client.execute_with_python_values"], "xla_client.ops.BitcastConvertType": [], "python.xla_client_test.TestFactory.SingleOpTest.DISABLED_testAllToAllOneReplica": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.AllToAll"], "xla_client.ops.AllToAll": [], "python.xla_client_test.TestFactory.SingleOpTest.testCrossReplicaSumOneReplica": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "xla_client.ops.CrossReplicaSum", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.CrossReplicaSum": [], "python.xla_client_test.TestFactory.SingleOpTest.testReplicaId": ["python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.ReplicaId"], "xla_client.ops.ReplicaId": [], "python.xla_client_test.TestFactory.SingleOpTest.testCrossReplicaSumOneReplicaWithSingletonGroup": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "xla_client.ops.CrossReplicaSum", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client.make_replica_groups"], "python.xla_client.make_replica_groups": [], "python.xla_client_test.TestFactory.SingleOpTest.testDotMatrixVector": ["xla_client.ops.Constant", "numpy.array", "xla_client.ops.Dot", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "numpy.dot"], "xla_client.ops.Dot": [], "numpy.dot": [], "python.xla_client_test.TestFactory.SingleOpTest.testDotMatrixMatrix": ["xla_client.ops.Constant", "numpy.array", "xla_client.ops.Dot", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "numpy.dot"], "python.xla_client_test.TestFactory.SingleOpTest.testDotGeneral": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Constant", "numpy.random.RandomState", "python.xla_client.make_dot_dimension_numbers", "python.xla_client_test.TestFactory.NumpyArrayF32", "numpy.matmul", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.DotGeneral"], "numpy.random.RandomState": [], "python.xla_client.make_dot_dimension_numbers": [], "xla_client.ops.DotGeneral": [], "numpy.matmul": [], "python.xla_client_test.TestFactory.SingleOpTest.testDotGeneralWithDotDimensionNumbersProto": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Constant", "numpy.random.RandomState", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client.DotDimensionNumbers", "numpy.matmul", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.DotGeneral"], "python.xla_client.DotDimensionNumbers": [], "python.xla_client_test.TestFactory.SingleOpTest.testDotGeneralWithPrecisionConfig": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client.PrecisionConfig", "xla_client.ops.Constant", "numpy.random.RandomState", "python.xla_client.make_dot_dimension_numbers", "python.xla_client_test.TestFactory.NumpyArrayF32", "numpy.matmul", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.DotGeneral"], "python.xla_client.PrecisionConfig": [], "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedF32": ["xla_client.ops.Constant", "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedF32.<lambda1>", "xla_client.ops.ConvGeneralDilated", "numpy.array", "python.xla_client.make_convolution_dimension_numbers", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedF32.<lambda1>": ["numpy.arange", "numpy.prod"], "numpy.prod": [], "python.xla_client.make_convolution_dimension_numbers": [], "xla_client.ops.ConvGeneralDilated": [], "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedF32WithPrecisionConfig": ["python.xla_client.PrecisionConfig", "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedF32WithPrecisionConfig.<lambda1>", "xla_client.ops.Constant", "xla_client.ops.ConvGeneralDilated", "numpy.array", "python.xla_client.make_convolution_dimension_numbers", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedF32WithPrecisionConfig.<lambda1>": ["numpy.arange", "numpy.prod"], "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedPermutedF32": ["python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedPermutedF32.<lambda1>", "xla_client.ops.Constant", "numpy.transpose", "xla_client.ops.ConvGeneralDilated", "numpy.array", "python.xla_client.make_convolution_dimension_numbers", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedPermutedF32.<lambda1>": ["numpy.arange", "numpy.prod"], "numpy.transpose": [], "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedGroupedConvolutionF32": ["xla_client.ops.Constant", "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedGroupedConvolutionF32.<lambda1>", "xla_client.ops.ConvGeneralDilated", "numpy.array", "python.xla_client.make_convolution_dimension_numbers", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.SingleOpTest.testConvGeneralDilatedGroupedConvolutionF32.<lambda1>": ["numpy.arange", "numpy.prod"], "python.xla_client_test.TestFactory.SingleOpTest.testBooleanNot": ["xla_client.ops.Constant", "xla_client.ops.Not", "python.xla_client_test.TestFactory.NumpyArrayBool", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Not": [], "python.xla_client_test.TestFactory.SingleOpTest.testPopulationCount": ["xla_client.ops.PopulationCount", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.PopulationCount": [], "python.xla_client_test.TestFactory.SingleOpTest.testCountLeadingZeros": ["xla_client.ops.Clz", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Clz": [], "python.xla_client_test.TestFactory.SingleOpTest.testExp": ["numpy.exp", "xla_client.ops.Constant", "xla_client.ops.Exp", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Exp": [], "numpy.exp": [], "python.xla_client_test.TestFactory.SingleOpTest.testExpm1": ["numpy.expm1", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Expm1"], "xla_client.ops.Expm1": [], "numpy.expm1": [], "python.xla_client_test.TestFactory.SingleOpTest.testRound": ["numpy.round", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Round"], "xla_client.ops.Round": [], "numpy.round": [], "python.xla_client_test.TestFactory.SingleOpTest.testLog": ["numpy.log", "xla_client.ops.Log", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Log": [], "numpy.log": [], "python.xla_client_test.TestFactory.SingleOpTest.testLog1p": ["numpy.log1p", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Log1p"], "xla_client.ops.Log1p": [], "numpy.log1p": [], "python.xla_client_test.TestFactory.SingleOpTest.testNeg": ["xla_client.ops.Constant", "xla_client.ops.Neg", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Neg": [], "python.xla_client_test.TestFactory.SingleOpTest.testFloor": ["xla_client.ops.Constant", "numpy.floor", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Floor"], "xla_client.ops.Floor": [], "numpy.floor": [], "python.xla_client_test.TestFactory.SingleOpTest.testCeil": ["xla_client.ops.Constant", "numpy.ceil", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Ceil"], "xla_client.ops.Ceil": [], "numpy.ceil": [], "python.xla_client_test.TestFactory.SingleOpTest.testAbs": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "xla_client.ops.Abs", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "numpy.abs"], "xla_client.ops.Abs": [], "numpy.abs": [], "python.xla_client_test.TestFactory.SingleOpTest.testTanhF32": ["xla_client.ops.Tanh", "xla_client.ops.Constant", "numpy.tanh", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Tanh": [], "numpy.tanh": [], "python.xla_client_test.TestFactory.SingleOpTest.testTanhF64": ["xla_client.ops.Tanh", "xla_client.ops.Constant", "numpy.tanh", "parameterized.TestCase.skipTest", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client_test.TestFactory.NumpyArrayF64"], "python.xla_client_test.TestFactory.SingleOpTest.testTranspose": ["<builtin>.range", "numpy.random.RandomState", "python.xla_client_test.TestFactory.SingleOpTest.testTranspose._TransposeAndTest", "python.xla_client_test.TestFactory.NumpyArrayF32", "itertools.permutations", "numpy.asfortranarray"], "python.xla_client_test.TestFactory.SingleOpTest.testTranspose._TransposeAndTest": ["xla_client.ops.Constant", "numpy.transpose", "xla_client.ops.Transpose", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Transpose": [], "numpy.asfortranarray": [], "python.xla_client_test.TestFactory.SingleOpTest.testEq": ["xla_client.ops.Eq", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Eq": [], "python.xla_client_test.TestFactory.SingleOpTest.testNe": ["<builtin>.float", "xla_client.ops.Ne", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndAssertWith", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Ne": [], "<builtin>.float": [], "python.xla_client_test.TestFactory.SingleOpTest.testGt": ["xla_client.ops.Gt", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Gt": [], "python.xla_client_test.TestFactory.SingleOpTest.testGe": ["xla_client.ops.Ge", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Ge": [], "python.xla_client_test.TestFactory.SingleOpTest.testLt": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Lt", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Lt": [], "python.xla_client_test.TestFactory.SingleOpTest.testLe": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "xla_client.ops.Le", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Le": [], "python.xla_client_test.TestFactory.SingleOpTest.testMax": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "xla_client.ops.Max", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Max": [], "python.xla_client_test.TestFactory.SingleOpTest.testMaxExplicitBroadcastDim0": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "xla_client.ops.Max", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.SingleOpTest.testMaxExplicitBroadcastDim1": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "xla_client.ops.Max", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.SingleOpTest.testMin": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Min", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Min": [], "python.xla_client_test.TestFactory.SingleOpTest.testPad": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Constant", "xla_client.ops.Pad", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client.make_padding_config"], "python.xla_client.make_padding_config": [], "xla_client.ops.Pad": [], "python.xla_client_test.TestFactory.SingleOpTest.testPadWithPaddingConfig": ["xla_client.ops.Constant", "python.xla_client.PaddingConfigDimension", "xla_client.ops.Pad", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client.PaddingConfig"], "python.xla_client.PaddingConfig": [], "python.xla_client.PaddingConfigDimension": [], "python.xla_client_test.TestFactory.SingleOpTest.testReshape": ["xla_client.ops.Reshape", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Reshape": [], "python.xla_client_test.TestFactory.SingleOpTest.testCollapse": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.Collapse"], "xla_client.ops.Collapse": [], "python.xla_client_test.TestFactory.SingleOpTest.testRev": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "xla_client.ops.Rev", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Rev": [], "python.xla_client_test.TestFactory.SingleOpTest.testReducePrecision": ["xla_client.ops.ReducePrecision", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.ReducePrecision": [], "python.xla_client_test.TestFactory.SingleOpTest.testClampF32": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.Clamp"], "xla_client.ops.Clamp": [], "python.xla_client_test.TestFactory.SingleOpTest.testClampS32": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.Clamp"], "python.xla_client_test.TestFactory.SingleOpTest.testSelect": ["xla_client.ops.Select", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayBool", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Select": [], "python.xla_client_test.TestFactory.SingleOpTest.testSlice": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Slice", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Slice": [], "python.xla_client_test.TestFactory.SingleOpTest.testSliceInDim": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "xla_client.ops.SliceInDim", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.SliceInDim": [], "python.xla_client_test.TestFactory.SingleOpTest.testDynamicSlice": ["xla_client.ops.DynamicSlice", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.DynamicSlice": [], "python.xla_client_test.TestFactory.SingleOpTest.testDynamicUpdateSlice": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.DynamicUpdateSlice"], "xla_client.ops.DynamicUpdateSlice": [], "python.xla_client_test.TestFactory.SingleOpTest.testTuple": ["numpy.testing.assert_equal", "numpy.testing.assert_allclose", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayBool", "python.xla_client_test.TestFactory.NumpyArrayF32", "parameterized.TestCase.assertLen", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "numpy.int32", "python.xla_client.execute_with_python_values", "xla_client.ops.Tuple"], "xla_client.ops.Tuple": [], "python.xla_client_test.TestFactory.SingleOpTest.testGetTupleElement": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayBool", "python.xla_client_test.TestFactory.NumpyArrayF32", "xla_client.ops.GetTupleElement", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "numpy.int32", "xla_client.ops.Tuple"], "python.xla_client_test.TestFactory.SingleOpTest.testBroadcast": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Broadcast", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Broadcast": [], "python.xla_client_test.TestFactory.SingleOpTest.testBroadcastInDim": ["xla_client.ops.BroadcastInDim", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.BroadcastInDim": [], "python.xla_client_test.TestFactory.SingleOpTest.testRngNormal": ["xla_client.ops.RngNormal", "parameterized.TestCase.assertEqual", "numpy.unique", "xla_client.ops.Constant", "xla_client.Shape.array_shape", "python.xla_client_test.TestFactory.NumpyArrayF32", "parameterized.TestCase.assertLen", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "numpy.prod", "python.xla_client.execute_with_python_values"], "xla_client.ops.RngNormal": [], "numpy.unique": [], "python.xla_client_test.TestFactory.SingleOpTest.testRngUniformF32": ["parameterized.TestCase.assertEqual", "xla_client.ops.RngUniform", "xla_client.ops.Constant", "numpy.unique", "numpy.all", "xla_client.Shape.array_shape", "python.xla_client_test.TestFactory.NumpyArrayF32", "parameterized.TestCase.assertTrue", "parameterized.TestCase.assertLen", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "numpy.prod", "python.xla_client.execute_with_python_values"], "xla_client.ops.RngUniform": [], "numpy.all": [], "parameterized.TestCase.assertTrue": [], "python.xla_client_test.TestFactory.SingleOpTest.testRngUniformS32": ["parameterized.TestCase.assertEqual", "xla_client.ops.RngUniform", "xla_client.ops.Constant", "numpy.all", "xla_client.Shape.array_shape", "parameterized.TestCase.assertTrue", "python.xla_client_test.TestFactory.NumpyArrayS32", "parameterized.TestCase.assertLen", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client.execute_with_python_values"], "python.xla_client_test.TestFactory.SingleOpTest.testCholesky": ["xla_client.ops.Constant", "numpy.array", "numpy.tril", "xla_client.ops.Cholesky", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "numpy.dot"], "numpy.tril": [], "xla_client.ops.Cholesky": [], "python.xla_client_test.TestFactory.SingleOpTest.testSort": ["xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Sort"], "xla_client.ops.Sort": [], "python.xla_client_test.TestFactory.SingleOpTest.testSortKeyVal": ["numpy.testing.assert_allclose", "numpy.testing.assert_equal", "xla_client.ops.Constant", "numpy.array", "parameterized.TestCase.assertLen", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.Sort", "python.xla_client.execute_with_python_values"], "python.xla_client_test.TestFactory.SingleOpTest.testSortCustomComparator": ["python.xla_client.shape_from_pyval", "xla_client.ops.And", "numpy.testing.assert_allclose", "xla_client.ops.Gt", "xla_client.ops.Eq", "numpy.testing.assert_equal", "xla_client.ops.Parameter", "xla_client.ops.Lt", "xla_client.ops.Constant", "xla_client.ops.Or", "numpy.array", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.NumpyArrayS32", "parameterized.TestCase.assertLen", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.Sort", "python.xla_client.execute_with_python_values"], "python.xla_client_test.TestFactory.SingleOpTest.testQR": ["numpy.testing.assert_allclose", "xla_client.ops.Constant", "xla_client.ops.QR", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._Execute", "numpy.dot", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.Tuple"], "xla_client.ops.QR": [], "python.xla_client_test.TestFactory.SingleOpTest.testEigh": ["xla_client.ops.Constant", "xla_client.ops.Eigh", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.Tuple"], "xla_client.ops.Eigh": [], "python.xla_client_test.TestFactory.SingleOpTest.testSVD": ["xla_client.ops.SVD", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._Execute", "parameterized.TestCase.assertLess", "numpy.matmul", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "xla_client.ops.Tuple", "numpy.linalg.norm"], "xla_client.ops.SVD": [], "numpy.linalg.norm": [], "parameterized.TestCase.assertLess": [], "python.xla_client_test.TestFactory.SingleOpTest.testTriangularSolve": ["xla_client.ops.Constant", "numpy.array", "xla_client.ops.TriangularSolve", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.TriangularSolve": [], "python.xla_client_test.TestFactory.SingleOpTest.testIsConstant": ["python.xla_client.shape_from_pyval", "xla_client.ops.Parameter", "parameterized.TestCase.assertFalse", "xla_client.ops.Constant", "xla_client.ops.Mul", "xla_client.ops.Sub", "parameterized.TestCase.assertTrue", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "numpy.int32"], "parameterized.TestCase.assertFalse": [], "python.xla_client_test.TestFactory.SingleOpTest.testGather": ["numpy.testing.assert_allclose", "xla_client.ops.Gather", "python.xla_client.GatherDimensionNumbers", "xla_client.ops.Constant", "numpy.array", "numpy.arange", "python.xla_client_test.TestFactory.ComputationTest._Execute", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client.GatherDimensionNumbers": [], "xla_client.ops.Gather": [], "python.xla_client_test.TestFactory.SingleOpTest.testFft": ["xla_client.ops.Fft", "xla_client.ops.Constant", "numpy.fft.irfftn", "numpy.fft.ifftn", "numpy.random.RandomState", "parameterized.TestCase.skipTest", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "numpy.fft.rfftn", "numpy.fft.fftn"], "xla_client.ops.Fft": [], "numpy.fft.fftn": [], "numpy.fft.ifftn": [], "numpy.fft.rfftn": [], "numpy.fft.irfftn": [], "python.xla_client_test.TestFactory.SingleOpTest.testNextAfter": ["numpy.testing.assert_equal", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._Execute", "numpy.finfo", "xla_client.ops.NextAfter", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.NextAfter": [], "numpy.finfo": [], "python.xla_client_test.TestFactory.SingleOpTest.testRegularizedIncompleteBeta": ["xla_client.ops.RegularizedIncompleteBeta", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.RegularizedIncompleteBeta": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateConstantComputation": ["python.xla_client.shape_from_pyval", "numpy.float32", "xla_client.ops.Parameter", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateMulBy2Computation": ["python.xla_client.shape_from_pyval", "numpy.float32", "xla_client.ops.Parameter", "xla_client.ops.Constant", "xla_client.ops.Mul", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateMulF32ByParamComputation": ["python.xla_client.shape_from_pyval", "xla_client.ops.Parameter", "xla_client.ops.Mul", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryAddComputation": ["python.xla_client.shape_from_pyval", "xla_client.ops.Add", "xla_client.ops.Parameter", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryGeComputation": ["python.xla_client.shape_from_pyval", "xla_client.ops.Ge", "xla_client.ops.Parameter", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest._MakeSample3DArray": ["numpy.array"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest": ["<builtin>.range", "itertools.permutations", "unittest.skipIf", "testing.parameterized.named_parameters"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testCall": ["python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateMulBy2Computation", "xla_client.ops.Constant", "xla_client.ops.Call", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "xla_client.ops.Call": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testMapEachElementToConstant": ["python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateConstantComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareExact", "xla_client.ops.Map", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.Map": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testMapMulBy2": ["xla_client.ops.Map", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateMulBy2Computation", "xla_client.ops.Constant", "numpy.array", "parameterized.TestCase.skipTest", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testSimpleMapChain": ["python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateConstantComputation", "xla_client.ops.Map", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateMulBy2Computation", "xla_client.ops.Constant", "numpy.array", "parameterized.TestCase.skipTest", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testDivVectorsWithMap": ["xla_client.ops.Map", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testDivVectorsWithMap.DivComputation"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testDivVectorsWithMap.DivComputation": ["python.xla_client.shape_from_pyval", "xla_client.ops.Parameter", "xla_client.ops.Div", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testSelectAndScatter": ["python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Constant", "numpy.array", "parameterized.TestCase.skipTest", "xla_client.ops.SelectAndScatterWithGeneralPadding", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryGeComputation", "python.xla_client.window_padding_type_to_pad_values", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryAddComputation"], "python.xla_client.window_padding_type_to_pad_values": [], "xla_client.ops.SelectAndScatterWithGeneralPadding": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testReduce1DtoScalar": ["xla_client.ops.Reduce", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryAddComputation"], "xla_client.ops.Reduce": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testReduce2DTo1D": ["xla_client.ops.Reduce", "numpy.sum", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryAddComputation"], "numpy.sum": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testReduce3DAllPossibleWaysF32": ["xla_client.ops.Reduce", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._MakeSample3DArray", "numpy.sum", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryAddComputation"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testReduceWindowValidUnitStrides": ["xla_client.ops.Constant", "xla_client.ops.ReduceWindowWithGeneralPadding", "numpy.array", "parameterized.TestCase.skipTest", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client.window_padding_type_to_pad_values", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryAddComputation"], "xla_client.ops.ReduceWindowWithGeneralPadding": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testReduceWindowSameUnitStrides": ["xla_client.ops.Constant", "xla_client.ops.ReduceWindowWithGeneralPadding", "numpy.array", "parameterized.TestCase.skipTest", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client.window_padding_type_to_pad_values", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryAddComputation"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testReduceWindowValidGeneralStrides": ["xla_client.ops.Constant", "xla_client.ops.ReduceWindowWithGeneralPadding", "numpy.array", "parameterized.TestCase.skipTest", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client.window_padding_type_to_pad_values", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryAddComputation"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testReduceWindowVariadic": ["python.xla_client.shape_from_pyval", "xla_client.ops.Ge", "xla_client.ops.Select", "xla_client.ops.Parameter", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Constant", "<builtin>.range", "numpy.array", "xla_client.ops.ReduceWindowWithGeneralPadding", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "numpy.int32", "python.xla_client.window_padding_type_to_pad_values", "xla_client.ops.Tuple"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testWhile": ["python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateMulBy2Computation", "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testWhile.LessThan10Cond", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.While"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testWhile.LessThan10Cond": ["python.xla_client.shape_from_pyval", "xla_client.ops.Parameter", "xla_client.ops.Lt", "xla_client.ops.Constant", "numpy.array", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.While": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testConditionalTrue": ["python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateConstantComputation", "numpy.float32", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateMulBy2Computation", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Conditional", "numpy.bool_"], "numpy.bool_": [], "xla_client.ops.Conditional": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testConditionalFalse": ["python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateConstantComputation", "numpy.float32", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateMulBy2Computation", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.ops.Conditional", "numpy.bool_"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testInfeedS32Values": ["python.xla_client.shape_from_pyval", "parameterized.TestCase.assertEqual", "xla_client.ops.InfeedWithToken", "python.xla_client_test.TestFactory.NumpyArrayS32", "xla_client.ops.GetTupleElement", "xla_client.ops.CreateToken", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client.execute_with_python_values"], "xla_client.ops.InfeedWithToken": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testInfeedTuple": ["python.xla_client.shape_from_pyval", "numpy.testing.assert_equal", "xla_client.ops.InfeedWithToken", "python.xla_client_test.TestFactory.NumpyArrayS32", "xla_client.ops.GetTupleElement", "xla_client.ops.CreateToken", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "parameterized.TestCase.assertLen", "python.xla_client.execute_with_python_values"], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testInfeedThenOutfeedS32": ["python.xla_client.shape_from_pyval", "xla_client.ops.OutfeedWithToken", "parameterized.TestCase.assertEqual", "xla_client.ops.InfeedWithToken", "threading.Thread", "python.xla_client_test.TestFactory.NumpyArrayS32", "xla_client.ops.GetTupleElement", "xla_client.ops.CreateToken", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.OutfeedWithToken": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testInfeedThenOutfeedS32.<lambda1>": [], "threading.Thread": [], "python.xla_client_test.TestFactory.EmbeddedComputationsTest.testScatter": ["xla_client.ops.Constant", "numpy.array", "numpy.arange", "xla_client.ops.Scatter", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "python.xla_client.ScatterDimensionNumbers", "python.xla_client_test.TestFactory.EmbeddedComputationsTest._CreateBinaryAddComputation"], "python.xla_client.ScatterDimensionNumbers": [], "xla_client.ops.Scatter": [], "python.xla_client_test.TestFactory.DeviceTest.testPlatform": ["parameterized.TestCase.assertEqual"], "python.xla_client_test.TestFactory.ErrorTest.setUp": ["<builtin>.super", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.NumpyArrayS32"], "python.xla_client_test.TestFactory.ErrorTest.testCompileWithWrongElementTypeInLayout": ["python.xla_client.shape_from_pyval", "xla_client.ops.Parameter", "python.xla_client.CurrentSourceInfoMetadata", "numpy.dtype", "xla_client.Shape.array_shape", "parameterized.TestCase.assertRaisesRegex", "python.xla_client.CompileOptions", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client.CurrentSourceInfoMetadata": [], "python.xla_client.CompileOptions": [], "python.xla_client_test.TestFactory.ErrorTest.testCompileWithWrongElementTypeInLayout.TestFun": [], "python.xla_client_test.TestFactory.ErrorTest.testInvokeWithWrongElementType": ["python.xla_client.shape_from_pyval", "xla_client.ops.Parameter", "python.xla_client.CurrentSourceInfoMetadata", "parameterized.TestCase.assertRaisesRegex", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.ErrorTest.testInvokeWithWrongElementType.TestFun": ["python.xla_client.execute_with_python_values"], "python.xla_client_test.TestFactory.ComputationRootTest.testComputationRootDifferentFromLastOp": ["python.xla_client.shape_from_pyval", "numpy.testing.assert_allclose", "xla_client.ops.Add", "numpy.float32", "xla_client.ops.Parameter", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client.execute_with_python_values"], "python.xla_client_test.TestFactory.SetShardingTest.testSetSharding": ["python.xla_client.shape_from_pyval", "numpy.testing.assert_allclose", "xla_client.ops.Add", "numpy.float32", "python.xla_client.OpSharding", "xla_client.ops.Parameter", "xla_client.ops.Constant", "python.xla_client_test.TestFactory.NumpyArrayF32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client.execute_with_python_values"], "python.xla_client.OpSharding": [], "python.xla_client_test.TestFactory.FormatShapeAndDtype": ["<builtin>.map", "numpy.dtype"], "<builtin>.map": [], "python.xla_client_test.TestFactory.DLPackTest.setUp": ["parameterized.TestCase.skipTest", "<builtin>.super", "python.xla_client.make_cpu_client"], "python.xla_client.make_cpu_client": [], "python.xla_client_test.TestFactory.DLPackTest": ["testing.parameterized.named_parameters"], "python.xla_client_test.TestFactory.DLPackTest.testRoundTrip": ["xla_client._xla.buffer_to_dlpack_managed_tensor", "numpy.random.randint", "parameterized.TestCase.assertEqual", "numpy.testing.assert_array_equal", "numpy.array", "numpy.random.rand", "<builtin>.type", "unittest.SkipTest", "xla_client._xla.dlpack_managed_tensor_to_buffer"], "numpy.random.randint": [], "numpy.random.rand": [], "xla_client._xla.buffer_to_dlpack_managed_tensor": [], "xla_client._xla.dlpack_managed_tensor_to_buffer": [], "python.xla_client_test.TestFactory.DLPackTest.testTensorsCanBeConsumedOnceOnly": ["xla_client._xla.buffer_to_dlpack_managed_tensor", "numpy.array", "parameterized.TestCase.assertRaisesRegex", "numpy.random.rand", "python.xla_client_test.TestFactory.DLPackTest.testTensorsCanBeConsumedOnceOnly.ConsumeDLPackTensor"], "python.xla_client_test.TestFactory.DLPackTest.testTensorsCanBeConsumedOnceOnly.ConsumeDLPackTensor": ["xla_client._xla.dlpack_managed_tensor_to_buffer"], "python.xla_client_test.TestFactory.DLPackTest.testTensorsCanBeOwnedOnceOnly": ["xla_client._xla.buffer_to_dlpack_managed_tensor", "numpy.array", "parameterized.TestCase.assertTrue", "numpy.random.rand", "parameterized.TestCase.assertRaisesRegex"], "python.xla_client_test.TestFactory.DLPackTest.testNonOwnedDlpackCanBeViewedTwice": ["xla_client._xla.buffer_to_dlpack_managed_tensor", "numpy.testing.assert_array_equal", "numpy.array", "numpy.random.rand", "xla_client._xla.dlpack_managed_tensor_to_buffer"], "python.xla_client_test.TestFactory.BufferProtocolTest.setUp": ["parameterized.TestCase.skipTest", "<builtin>.super"], "python.xla_client_test.TestFactory.BufferProtocolTest": ["testing.parameterized.named_parameters"], "python.xla_client_test.TestFactory.BufferProtocolTest.testRoundTrip": ["parameterized.TestCase.assertNotEqual", "parameterized.TestCase.assertEqual", "numpy.testing.assert_array_equal", "numpy.array", "parameterized.TestCase.assertTrue", "numpy.random.rand"], "python.xla_client_test.TestFactory.BufferProtocolTest.testDeleteWithActiveView": ["parameterized.TestCase.assertEqual", "numpy.random.randn", "numpy.array", "numpy.testing.assert_array_equal"], "numpy.random.randn": [], "python.xla_client_test.TestFactory.TracebackTest.setUp": ["<builtin>.super"], "python.xla_client_test.TestFactory.TracebackTest.testNoTracebacksIfDisabled": ["absltest.TestCase.assertEqual", "xla_client.ops.Add", "xla_client.ops.Constant", "numpy.array", "python.xla_client.XlaBuilder", "python.xla_client.tracebacks", "numpy.int32", "xla_client.Traceback.get_traceback"], "python.xla_client.tracebacks": [], "xla_client.Traceback.get_traceback": [], "python.xla_client_test.TestFactory.TracebackTest.assertIsTracebackContaining": ["absltest.TestCase.assertIn", "absltest.TestCase.assertIsInstance", "<builtin>.str", "absltest.TestCase.assertTrue", "<builtin>.any"], "absltest.TestCase.assertIsInstance": [], "<builtin>.str": [], "<builtin>.any": [], "python.xla_client_test.TestFactory.TracebackTest.testTracebacks": ["xla_client.ops.Add", "xla_client.ops.Constant", "numpy.array", "<builtin>.isinstance", "python.xla_client.XlaBuilder", "python.xla_client.tracebacks", "python.xla_client_test.TestFactory.TracebackTest.assertIsTracebackContaining", "numpy.int32", "xla_client.Traceback.get_traceback"], "python.xla_client_test.TestFactory.TracebackTest.testNestedFunction": ["absltest.TestCase.assertEqual", "python.xla_client_test.TestFactory.TracebackTest.testNestedFunction.AFunction", "<builtin>.enumerate", "python.xla_client.tracebacks", "absltest.TestCase.assertIsInstance", "<builtin>.next"], "python.xla_client_test.TestFactory.TracebackTest.testNestedFunction.AFunction": ["python.xla_client_test.TestFactory.TracebackTest.testNestedFunction.AFunction.AnotherFunction"], "python.xla_client_test.TestFactory.TracebackTest.testNestedFunction.AFunction.AnotherFunction": ["xla_client.Traceback.get_traceback"], "<builtin>.enumerate": [], "<builtin>.next": [], "python.xla_client_test.TestFactory.ClientTest.setUp": ["<builtin>.super"], "python.xla_client_test.TestFactory.ClientTest.testPlatformVersion": ["parameterized.TestCase.assertEqual", "framework.test_util.is_gpu_available", "re.match", "parameterized.TestCase.assertTrue", "<builtin>.repr"], "framework.test_util.is_gpu_available": [], "re.match": [], "<builtin>.repr": [], "python.xla_client_test.TestFactory.ClientTest": ["unittest.skipIf"], "python.xla_client_test.TestFactory.ClientTest.testExecutableSerialization": ["xla_client.ops.Add", "xla_client.ops.Constant", "numpy.all", "parameterized.TestCase.skipTest", "parameterized.TestCase.assertTrue", "python.xla_client_test.TestFactory.NumpyArrayS32", "parameterized.TestCase.assertLen", "python.xla_client.CompileOptions", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client.execute_with_python_values"], "python.xla_client_test.TestFactory.DynamicReshapeTest._CompareToPyAndBufferProtocol": ["numpy.testing.assert_equal", "numpy.asarray", "<builtin>.len", "parameterized.TestCase.assertEqual", "parameterized.TestCase.assertRaises", "<builtin>.zip", "parameterized.TestCase.assertLen", "<builtin>.memoryview"], "<builtin>.memoryview": [], "numpy.asarray": [], "python.xla_client_test.TestFactory.DynamicReshapeTest": ["unittest.skipIf", "testing.parameterized.named_parameters", "testing.parameterized.parameters"], "testing.parameterized.parameters": [], "python.xla_client_test.TestFactory.DynamicReshapeTest.testReshape1D": ["python.xla_client.shape_from_pyval", "python.xla_client_test.TestFactory.DynamicReshapeTest._CompareToPyAndBufferProtocol", "xla_client.ops.Parameter", "xla_client.ops.Constant", "<builtin>.range", "numpy.array", "xla_client.ops.DynamicReshape", "python.xla_client_test.TestFactory.NumpyArrayS32", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "xla_client.ops.DynamicReshape": [], "python.xla_client_test.TestFactory.DynamicReshapeTest.testReshape2D": ["python.xla_client.shape_from_pyval", "python.xla_client_test.TestFactory.DynamicReshapeTest._CompareToPyAndBufferProtocol", "xla_client.ops.Parameter", "numpy.array", "xla_client.ops.DynamicReshape", "python.xla_client_test.TestFactory.ComputationTest._NewComputation"], "python.xla_client_test.TestFactory.DynamicReshapeTest.testDynamicShapeArgs": ["python.xla_client.shape_from_pyval", "xla_client.ops.Add", "xla_client.ops.Reduce", "xla_client.ops.Parameter", "xla_client.ops.Constant", "numpy.dtype", "<builtin>.range", "numpy.array", "xla_client.Shape.array_shape", "xla_client.ops.DynamicReshape", "xla_client.ops.Call", "python.xla_client_test.TestFactory.ComputationTest._NewComputation", "python.xla_client_test.TestFactory.ComputationTest._ExecuteAndCompareClose", "xla_client.Shape.scalar_shape"], "xla_client.Shape.scalar_shape": [], "python.xla_client_test.TestFactory.DeviceAssignmentTest.testSerialize": ["parameterized.TestCase.assertEqual", "parameterized.TestCase.assertIsInstance", "xla_client.DeviceAssignment.create", "numpy.arange", "numpy.prod", "parameterized.TestCase.assertNotEmpty"], "xla_client.DeviceAssignment.create": [], "parameterized.TestCase.assertIsInstance": [], "parameterized.TestCase.assertNotEmpty": [], "python.xla_client_test.InstantiateTests": ["python.xla_client_test.TestFactory", "functools.lru_cache", "<builtin>.type"], "functools.lru_cache": [], "absl.flags.DEFINE_string": [], "<builtin>.globals": [], "python.xla_client_test.<lambda1>": [], "testing.absltest.main": []}