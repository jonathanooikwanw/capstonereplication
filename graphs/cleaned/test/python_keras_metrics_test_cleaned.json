{"keras.metrics_test": ["platform.test.main"], "keras.metrics_test.KerasSumTest.test_sum": ["test.TestCase.assertEqual", "keras.metrics.Sum", "framework.ops.convert_to_tensor_v2_with_dispatch", "test.TestCase.assertTrue", "test.TestCase.assertLen", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "test.TestCase.test_session", "ops.variables.variables_initializer"], "test.TestCase.test_session": [], "keras.metrics.Sum": [], "test.TestCase.assertEqual": [], "test.TestCase.assertTrue": [], "test.TestCase.assertLen": [], "ops.variables.variables_initializer": [], "test.TestCase.evaluate": [], "framework.ops.convert_to_tensor_v2_with_dispatch": [], "test.TestCase.assertAlmostEqual": [], "keras.metrics_test.KerasSumTest.test_sum_with_sample_weight": ["test.TestCase.assertEqual", "keras.metrics.Sum", "test.TestCase.assertAlmostEqual", "numpy.round", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "numpy.round": [], "keras.metrics_test.KerasSumTest.test_sum_graph_with_placeholder": ["test.TestCase.assertEqual", "keras.metrics.Sum", "framework.ops.get_default_graph", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "test.TestCase.cached_session", "ops.array_ops.placeholder", "ops.variables.variables_initializer"], "framework.ops.get_default_graph": [], "test.TestCase.cached_session": [], "ops.array_ops.placeholder": [], "keras.metrics_test.KerasSumTest.test_save_restore": ["test.TestCase.assertEqual", "keras.metrics.Sum", "tracking.util.Checkpoint", "ops.variables.variables_initializer", "os.path.join", "test.TestCase.evaluate", "test.TestCase.test_session", "test.TestCase.get_temp_dir"], "test.TestCase.get_temp_dir": [], "os.path.join": [], "tracking.util.Checkpoint": [], "keras.metrics_test.MeanTest": ["keras.testing_utils.run_v2_only", "keras.keras_parameterized.run_all_keras_modes"], "keras.keras_parameterized.run_all_keras_modes": [], "keras.metrics_test.MeanTest.test_mean": ["keras_parameterized.TestCase.assertEqual", "<builtin>.len", "keras_parameterized.TestCase.evaluate", "keras.metrics.Mean", "keras_parameterized.TestCase.assertAlmostEqual", "keras_parameterized.TestCase.assertTrue", "ops.variables.variables_initializer", "metrics.Mean.from_config"], "keras.metrics.Mean": [], "keras_parameterized.TestCase.assertEqual": [], "keras_parameterized.TestCase.assertTrue": [], "<builtin>.len": [], "keras_parameterized.TestCase.evaluate": [], "keras_parameterized.TestCase.assertAlmostEqual": [], "metrics.Mean.from_config": [], "keras.testing_utils.run_v2_only": [], "keras.metrics_test.MeanTest.test_function_wrapped_reset_state": ["keras_parameterized.TestCase.assertEqual", "keras.metrics_test.MeanTest.test_function_wrapped_reset_state.reset_in_fn", "<builtin>.range", "keras_parameterized.TestCase.evaluate", "keras.metrics.Mean"], "keras.metrics_test.MeanTest.test_function_wrapped_reset_state.reset_in_fn": [], "<builtin>.range": [], "keras.metrics_test.MeanTest.test_mean_with_sample_weight": ["keras_parameterized.TestCase.assertEqual", "numpy.round", "keras_parameterized.TestCase.evaluate", "keras.metrics.Mean", "keras_parameterized.TestCase.assertAlmostEqual", "ops.variables.variables_initializer"], "keras.metrics_test.MeanTest.test_mean_graph_with_placeholder": ["keras_parameterized.TestCase.assertEqual", "keras_parameterized.TestCase.cached_session", "framework.ops.get_default_graph", "keras_parameterized.TestCase.evaluate", "keras.metrics.Mean", "keras_parameterized.TestCase.assertAlmostEqual", "ops.array_ops.placeholder", "ops.variables.variables_initializer"], "keras_parameterized.TestCase.cached_session": [], "keras.metrics_test.MeanTest.test_save_restore": ["keras_parameterized.TestCase.assertEqual", "tracking.util.Checkpoint", "ops.variables.variables_initializer", "os.path.join", "keras_parameterized.TestCase.evaluate", "keras.metrics.Mean", "keras_parameterized.TestCase.get_temp_dir"], "keras_parameterized.TestCase.get_temp_dir": [], "keras.metrics_test.MeanTest.test_multiple_instances": ["keras_parameterized.TestCase.assertEqual", "keras_parameterized.TestCase.evaluate", "keras.metrics.Mean", "keras.testing_utils.get_expected_metric_variable_names", "ops.variables.variables_initializer"], "keras.testing_utils.get_expected_metric_variable_names": [], "keras.metrics_test.KerasAccuracyTest.test_accuracy": ["test.TestCase.assertEqual", "keras.metrics.Accuracy", "test.TestCase.assertTrue", "test.TestCase.assertAlmostEqual", "<builtin>.len", "test.TestCase.evaluate", "ops.variables.variables_initializer", "metrics.Accuracy.from_config"], "keras.metrics.Accuracy": [], "metrics.Accuracy.from_config": [], "keras.metrics_test.KerasAccuracyTest.test_accuracy_ragged": ["ragged.ragged_factory_ops.constant", "keras.metrics.Accuracy", "test.TestCase.assertEqual", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "ragged.ragged_factory_ops.constant": [], "keras.metrics_test.KerasAccuracyTest.test_binary_accuracy": ["test.TestCase.assertEqual", "test.TestCase.assertTrue", "keras.metrics.BinaryAccuracy", "test.TestCase.assertAlmostEqual", "<builtin>.len", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics.BinaryAccuracy": [], "keras.metrics_test.KerasAccuracyTest.test_binary_accuracy_ragged": ["ragged.ragged_factory_ops.constant", "test.TestCase.assertEqual", "keras.metrics.BinaryAccuracy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "test.TestCase.assertRaises"], "test.TestCase.assertRaises": [], "keras.metrics_test.KerasAccuracyTest.test_binary_accuracy_threshold": ["ops.variables.variables_initializer", "keras.metrics.BinaryAccuracy", "test.TestCase.evaluate", "test.TestCase.assertAlmostEqual"], "keras.metrics_test.KerasAccuracyTest.test_binary_accuracy_threshold_ragged": ["ragged.ragged_factory_ops.constant", "keras.metrics.BinaryAccuracy", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.KerasAccuracyTest.test_categorical_accuracy": ["test.TestCase.assertEqual", "test.TestCase.assertTrue", "test.TestCase.assertAlmostEqual", "<builtin>.len", "test.TestCase.evaluate", "ops.variables.variables_initializer", "keras.metrics.CategoricalAccuracy"], "keras.metrics.CategoricalAccuracy": [], "keras.metrics_test.KerasAccuracyTest.test_categorical_accuracy_ragged": ["ragged.ragged_factory_ops.constant", "test.TestCase.assertEqual", "test.TestCase.evaluate", "ops.variables.variables_initializer", "test.TestCase.assertRaises", "keras.metrics.CategoricalAccuracy"], "keras.metrics_test.KerasAccuracyTest.test_sparse_categorical_accuracy": ["test.TestCase.assertEqual", "test.TestCase.assertTrue", "test.TestCase.assertAlmostEqual", "<builtin>.len", "test.TestCase.evaluate", "keras.metrics.SparseCategoricalAccuracy", "ops.variables.variables_initializer"], "keras.metrics.SparseCategoricalAccuracy": [], "keras.metrics_test.KerasAccuracyTest.test_sparse_categorical_accuracy_ragged": ["ragged.ragged_factory_ops.constant", "test.TestCase.evaluate", "keras.metrics.SparseCategoricalAccuracy", "test.TestCase.assertRaises"], "keras.metrics_test.KerasAccuracyTest.test_sparse_categorical_accuracy_mismatched_dims": ["test.TestCase.assertEqual", "test.TestCase.assertTrue", "test.TestCase.assertAlmostEqual", "<builtin>.len", "test.TestCase.evaluate", "keras.metrics.SparseCategoricalAccuracy", "ops.variables.variables_initializer"], "keras.metrics_test.KerasAccuracyTest.test_sparse_categorical_accuracy_mismatched_dims_dynamic": ["framework.ops.get_default_graph", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics.SparseCategoricalAccuracy", "test.TestCase.cached_session", "ops.array_ops.placeholder", "ops.variables.variables_initializer"], "keras.metrics_test.KerasAccuracyTest.test_get_acc": ["test.TestCase.assertEqual", "keras.metrics.get"], "keras.metrics.get": [], "keras.metrics_test.CosineSimilarityTest.l2_norm": ["numpy.sqrt", "numpy.sum", "numpy.maximum", "numpy.square", "numpy.multiply"], "numpy.square": [], "numpy.sum": [], "numpy.maximum": [], "numpy.sqrt": [], "numpy.multiply": [], "keras.metrics_test.CosineSimilarityTest.setup": ["framework.constant_op.constant", "numpy.sum", "keras.metrics_test.CosineSimilarityTest.l2_norm", "numpy.multiply", "numpy.asarray"], "numpy.asarray": [], "framework.constant_op.constant": [], "keras.metrics_test.CosineSimilarityTest.test_config": ["metrics.CosineSimilarity.from_config", "test.TestCase.assertEqual", "keras.metrics.CosineSimilarity"], "keras.metrics.CosineSimilarity": [], "metrics.CosineSimilarity.from_config": [], "keras.metrics_test.CosineSimilarityTest.test_unweighted": ["keras.metrics.CosineSimilarity", "numpy.mean", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics_test.CosineSimilarityTest.setup", "ops.variables.variables_initializer"], "numpy.mean": [], "keras.metrics_test.CosineSimilarityTest.test_weighted": ["keras.metrics.CosineSimilarity", "framework.constant_op.constant", "numpy.sum", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics_test.CosineSimilarityTest.setup", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.CosineSimilarityTest.test_axis": ["keras.metrics.CosineSimilarity", "numpy.mean", "test.TestCase.assertAlmostEqual", "test.TestCase.evaluate", "keras.metrics_test.CosineSimilarityTest.setup", "ops.variables.variables_initializer"], "keras.metrics_test.MeanAbsoluteErrorTest.test_config": ["test.TestCase.assertEqual", "metrics.MeanAbsoluteError.from_config", "keras.metrics.MeanAbsoluteError"], "keras.metrics.MeanAbsoluteError": [], "metrics.MeanAbsoluteError.from_config": [], "keras.metrics_test.MeanAbsoluteErrorTest.test_unweighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "test.TestCase.evaluate", "ops.variables.variables_initializer", "keras.metrics.MeanAbsoluteError"], "test.TestCase.assertAllClose": [], "keras.metrics_test.MeanAbsoluteErrorTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "test.TestCase.evaluate", "ops.variables.variables_initializer", "keras.metrics.MeanAbsoluteError"], "keras.metrics_test.MeanAbsolutePercentageErrorTest.test_config": ["test.TestCase.assertEqual", "metrics.MeanAbsolutePercentageError.from_config", "keras.metrics.MeanAbsolutePercentageError"], "keras.metrics.MeanAbsolutePercentageError": [], "metrics.MeanAbsolutePercentageError.from_config": [], "keras.metrics_test.MeanAbsolutePercentageErrorTest.test_unweighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.MeanAbsolutePercentageError", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.MeanAbsolutePercentageErrorTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.MeanAbsolutePercentageError", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.MeanSquaredErrorTest.test_config": ["keras.metrics.MeanSquaredError", "test.TestCase.assertEqual", "metrics.MeanSquaredError.from_config"], "keras.metrics.MeanSquaredError": [], "metrics.MeanSquaredError.from_config": [], "keras.metrics_test.MeanSquaredErrorTest.test_unweighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.MeanSquaredError", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.MeanSquaredErrorTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.MeanSquaredError", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.MeanSquaredLogarithmicErrorTest.test_config": ["keras.metrics.MeanSquaredLogarithmicError", "test.TestCase.assertEqual", "metrics.MeanSquaredLogarithmicError.from_config"], "keras.metrics.MeanSquaredLogarithmicError": [], "metrics.MeanSquaredLogarithmicError.from_config": [], "keras.metrics_test.MeanSquaredLogarithmicErrorTest.test_unweighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.MeanSquaredLogarithmicError"], "keras.metrics_test.MeanSquaredLogarithmicErrorTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.MeanSquaredLogarithmicError"], "keras.metrics_test.HingeTest.test_config": ["metrics.Hinge.from_config", "test.TestCase.assertEqual", "keras.metrics.Hinge"], "keras.metrics.Hinge": [], "metrics.Hinge.from_config": [], "keras.metrics_test.HingeTest.test_unweighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.Hinge", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.HingeTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.Hinge", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.SquaredHingeTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.SquaredHinge", "metrics.SquaredHinge.from_config"], "keras.metrics.SquaredHinge": [], "metrics.SquaredHinge.from_config": [], "keras.metrics_test.SquaredHingeTest.test_unweighted": ["test.TestCase.assertAllClose", "keras.metrics.SquaredHinge", "framework.constant_op.constant", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.SquaredHingeTest.test_weighted": ["test.TestCase.assertAllClose", "keras.metrics.SquaredHinge", "framework.constant_op.constant", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.CategoricalHingeTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.CategoricalHinge", "metrics.CategoricalHinge.from_config"], "keras.metrics.CategoricalHinge": [], "metrics.CategoricalHinge.from_config": [], "keras.metrics_test.CategoricalHingeTest.test_unweighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.CategoricalHinge", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.CategoricalHingeTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.CategoricalHinge", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.RootMeanSquaredErrorTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.RootMeanSquaredError", "metrics.RootMeanSquaredError.from_config"], "keras.metrics.RootMeanSquaredError": [], "metrics.RootMeanSquaredError.from_config": [], "keras.metrics_test.RootMeanSquaredErrorTest.test_unweighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "math.sqrt", "keras.metrics.RootMeanSquaredError", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "math.sqrt": [], "keras.metrics_test.RootMeanSquaredErrorTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "math.sqrt", "keras.metrics.RootMeanSquaredError", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.TopKCategoricalAccuracyTest.test_config": ["keras.metrics.TopKCategoricalAccuracy", "test.TestCase.assertEqual", "metrics.TopKCategoricalAccuracy.from_config"], "keras.metrics.TopKCategoricalAccuracy": [], "metrics.TopKCategoricalAccuracy.from_config": [], "keras.metrics_test.TopKCategoricalAccuracyTest.test_correctness": ["test.TestCase.assertEqual", "framework.constant_op.constant", "keras.metrics.TopKCategoricalAccuracy", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.TopKCategoricalAccuracyTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.TopKCategoricalAccuracy", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.SparseTopKCategoricalAccuracyTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.SparseTopKCategoricalAccuracy", "metrics.SparseTopKCategoricalAccuracy.from_config"], "keras.metrics.SparseTopKCategoricalAccuracy": [], "metrics.SparseTopKCategoricalAccuracy.from_config": [], "keras.metrics_test.SparseTopKCategoricalAccuracyTest.test_correctness": ["test.TestCase.assertEqual", "framework.constant_op.constant", "keras.metrics.SparseTopKCategoricalAccuracy", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.SparseTopKCategoricalAccuracyTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.SparseTopKCategoricalAccuracy", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.LogCoshErrorTest.setup": ["numpy.log", "numpy.exp", "framework.constant_op.constant", "numpy.asarray"], "numpy.exp": [], "numpy.log": [], "keras.metrics_test.LogCoshErrorTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.LogCoshError"], "keras.metrics.LogCoshError": [], "keras.metrics_test.LogCoshErrorTest.test_unweighted": ["test.TestCase.assertAllClose", "keras.metrics_test.LogCoshErrorTest.setup", "numpy.sum", "test.TestCase.evaluate", "ops.variables.variables_initializer", "keras.metrics.LogCoshError"], "keras.metrics_test.LogCoshErrorTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics_test.LogCoshErrorTest.setup", "numpy.sum", "test.TestCase.evaluate", "numpy.multiply", "ops.variables.variables_initializer", "keras.metrics.LogCoshError", "numpy.asarray"], "keras.metrics_test.PoissonTest.setup": ["numpy.log", "framework.constant_op.constant", "numpy.multiply", "numpy.asarray"], "keras.metrics_test.PoissonTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.Poisson", "metrics.Poisson.from_config"], "keras.metrics.Poisson": [], "metrics.Poisson.from_config": [], "keras.metrics_test.PoissonTest.test_unweighted": ["test.TestCase.assertAllClose", "numpy.sum", "test.TestCase.evaluate", "ops.variables.variables_initializer", "keras.metrics_test.PoissonTest.setup", "keras.metrics.Poisson"], "keras.metrics_test.PoissonTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "numpy.sum", "test.TestCase.evaluate", "numpy.multiply", "ops.variables.variables_initializer", "keras.metrics_test.PoissonTest.setup", "keras.metrics.Poisson", "numpy.asarray"], "keras.metrics_test.KLDivergenceTest.setup": ["numpy.log", "framework.constant_op.constant", "numpy.multiply", "numpy.asarray"], "keras.metrics_test.KLDivergenceTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.KLDivergence", "metrics.KLDivergence.from_config"], "keras.metrics.KLDivergence": [], "metrics.KLDivergence.from_config": [], "keras.metrics_test.KLDivergenceTest.test_unweighted": ["test.TestCase.assertAllClose", "ops.variables.variables_initializer", "numpy.sum", "test.TestCase.evaluate", "keras.metrics_test.KLDivergenceTest.setup", "keras.metrics.KLDivergence"], "keras.metrics_test.KLDivergenceTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "ops.variables.variables_initializer", "numpy.sum", "test.TestCase.evaluate", "numpy.multiply", "keras.metrics_test.KLDivergenceTest.setup", "keras.metrics.KLDivergence", "numpy.asarray"], "keras.metrics_test.MeanRelativeErrorTest.test_config": ["test.TestCase.assertEqual", "framework.constant_op.constant", "metrics.MeanRelativeError.from_config", "test.TestCase.evaluate", "test.TestCase.assertArrayNear", "keras.metrics.MeanRelativeError"], "keras.metrics.MeanRelativeError": [], "test.TestCase.assertArrayNear": [], "metrics.MeanRelativeError.from_config": [], "keras.metrics_test.MeanRelativeErrorTest.test_unweighted": ["test.TestCase.assertAllClose", "numpy.absolute", "framework.constant_op.constant", "numpy.mean", "ops.variables.variables_initializer", "test.TestCase.evaluate", "numpy.divide", "keras.metrics.MeanRelativeError", "numpy.asarray"], "numpy.absolute": [], "numpy.divide": [], "keras.metrics_test.MeanRelativeErrorTest.test_weighted": ["test.TestCase.assertAllClose", "numpy.absolute", "framework.constant_op.constant", "ops.variables.variables_initializer", "numpy.sum", "test.TestCase.evaluate", "numpy.divide", "keras.metrics.MeanRelativeError", "numpy.asarray"], "keras.metrics_test.MeanRelativeErrorTest.test_zero_normalizer": ["test.TestCase.assertEqual", "framework.constant_op.constant", "ops.array_ops.zeros_like", "test.TestCase.evaluate", "ops.variables.variables_initializer", "keras.metrics.MeanRelativeError"], "ops.array_ops.zeros_like": [], "keras.metrics_test.MeanIoUTest.test_config": ["keras.metrics.MeanIoU", "test.TestCase.assertEqual", "metrics.MeanIoU.from_config"], "keras.metrics.MeanIoU": [], "metrics.MeanIoU.from_config": [], "keras.metrics_test.MeanIoUTest.test_unweighted": ["keras.metrics.MeanIoU", "test.TestCase.evaluate", "ops.variables.variables_initializer", "test.TestCase.assertAllClose"], "keras.metrics_test.MeanIoUTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.MeanIoU"], "keras.metrics_test.MeanIoUTest.test_multi_dim_input": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.MeanIoU"], "keras.metrics_test.MeanIoUTest.test_zero_valid_entries": ["keras.metrics.MeanIoU", "test.TestCase.evaluate", "ops.variables.variables_initializer", "test.TestCase.assertAllClose"], "keras.metrics_test.MeanIoUTest.test_zero_and_non_zero_entries": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "ops.variables.variables_initializer", "test.TestCase.evaluate", "keras.metrics.MeanIoU"], "keras.combinations.combine": [], "keras.metrics_test.MeanTensorTest": ["keras.combinations.combine", "keras.combinations.generate"], "keras.combinations.generate": [], "keras.metrics_test.MeanTensorTest.test_config": ["test.TestCase.assertEqual", "test.TestCase.assertTrue", "test.TestCase.assertEmpty", "metrics.MeanTensor.from_config", "test.TestCase.evaluate", "keras.metrics.MeanTensor", "test.TestCase.test_session", "test.TestCase.assertAllEqual", "test.TestCase.assertRaisesRegex"], "keras.metrics.MeanTensor": [], "test.TestCase.assertEmpty": [], "test.TestCase.assertRaisesRegex": [], "test.TestCase.assertAllEqual": [], "metrics.MeanTensor.from_config": [], "keras.metrics_test.MeanTensorTest.test_unweighted": ["test.TestCase.assertAllClose", "framework.ops.convert_to_tensor_v2_with_dispatch", "test.TestCase.evaluate", "keras.metrics.MeanTensor", "test.TestCase.test_session"], "keras.metrics_test.MeanTensorTest.test_weighted": ["test.TestCase.assertEqual", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "keras.metrics.MeanTensor", "test.TestCase.test_session", "ops.variables.variables_initializer"], "keras.metrics_test.MeanTensorTest.test_invalid_value_shape": ["test.TestCase.assertRaisesRegex", "keras.metrics.MeanTensor"], "keras.metrics_test.MeanTensorTest.test_build_in_tf_function": ["keras.metrics_test.MeanTensorTest.test_build_in_tf_function.call_metric", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "keras.metrics.MeanTensor", "test.TestCase.test_session"], "keras.metrics_test.MeanTensorTest.test_build_in_tf_function.call_metric": [], "keras.metrics_test.MeanTensorTest.test_in_keras_model": ["test.TestCase.assertAllClose", "numpy.full", "numpy.zeros", "keras.metrics_test.MeanTensorTest.test_in_keras_model.ModelWithMetric.__init__", "numpy.ones", "keras.Model.compile", "test.TestCase.evaluate", "keras.Model.evaluate"], "keras.metrics_test.MeanTensorTest.test_in_keras_model.ModelWithMetric.__init__": ["<builtin>.super", "keras.layers.Dense", "keras.metrics.MeanTensor"], "<builtin>.super": [], "keras.layers.Dense": [], "keras.metrics_test.MeanTensorTest.test_in_keras_model.ModelWithMetric.call": [], "keras.Model.compile": [], "numpy.ones": [], "numpy.zeros": [], "keras.Model.evaluate": [], "numpy.full": [], "keras.metrics_test.BinaryCrossentropyTest.test_config": ["test.TestCase.assertEqual", "test.TestCase.assertAllClose", "metrics.BinaryCrossentropy.from_config", "test.TestCase.assertDictEqual", "keras.metrics.BinaryCrossentropy"], "keras.metrics.BinaryCrossentropy": [], "metrics.BinaryCrossentropy.from_config": [], "test.TestCase.assertDictEqual": [], "keras.metrics_test.BinaryCrossentropyTest.test_unweighted": ["test.TestCase.assertAllClose", "test.TestCase.evaluate", "keras.metrics.BinaryCrossentropy", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.BinaryCrossentropyTest.test_unweighted_with_logits": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "test.TestCase.evaluate", "keras.metrics.BinaryCrossentropy", "ops.variables.variables_initializer"], "keras.metrics_test.BinaryCrossentropyTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "test.TestCase.evaluate", "keras.metrics.BinaryCrossentropy", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.BinaryCrossentropyTest.test_weighted_from_logits": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "test.TestCase.evaluate", "keras.metrics.BinaryCrossentropy", "ops.variables.variables_initializer"], "keras.metrics_test.BinaryCrossentropyTest.test_label_smoothing": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "test.TestCase.evaluate", "keras.metrics.BinaryCrossentropy", "ops.variables.variables_initializer"], "keras.metrics_test.CategoricalCrossentropyTest.test_config": ["test.TestCase.assertEqual", "test.TestCase.assertAllClose", "metrics.CategoricalCrossentropy.from_config", "keras.metrics.CategoricalCrossentropy", "test.TestCase.assertDictEqual"], "keras.metrics.CategoricalCrossentropy": [], "metrics.CategoricalCrossentropy.from_config": [], "keras.metrics_test.CategoricalCrossentropyTest.test_unweighted": ["test.TestCase.assertAllClose", "keras.metrics.CategoricalCrossentropy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.CategoricalCrossentropyTest.test_unweighted_from_logits": ["test.TestCase.assertAllClose", "keras.metrics.CategoricalCrossentropy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.CategoricalCrossentropyTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.CategoricalCrossentropy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.CategoricalCrossentropyTest.test_weighted_from_logits": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.CategoricalCrossentropy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.CategoricalCrossentropyTest.test_label_smoothing": ["test.TestCase.assertAllClose", "keras.metrics.CategoricalCrossentropy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.SparseCategoricalCrossentropyTest.test_config": ["test.TestCase.assertEqual", "keras.metrics.SparseCategoricalCrossentropy", "metrics.SparseCategoricalCrossentropy.from_config", "test.TestCase.assertDictEqual", "json.dumps", "json.loads"], "keras.metrics.SparseCategoricalCrossentropy": [], "json.dumps": [], "json.loads": [], "metrics.SparseCategoricalCrossentropy.from_config": [], "keras.metrics_test.SparseCategoricalCrossentropyTest.test_unweighted": ["test.TestCase.assertAllClose", "keras.metrics.SparseCategoricalCrossentropy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.SparseCategoricalCrossentropyTest.test_unweighted_from_logits": ["test.TestCase.assertAllClose", "keras.metrics.SparseCategoricalCrossentropy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.SparseCategoricalCrossentropyTest.test_weighted": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.SparseCategoricalCrossentropy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.SparseCategoricalCrossentropyTest.test_weighted_from_logits": ["test.TestCase.assertAllClose", "framework.constant_op.constant", "keras.metrics.SparseCategoricalCrossentropy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.SparseCategoricalCrossentropyTest.test_axis": ["test.TestCase.assertAllClose", "keras.metrics.SparseCategoricalCrossentropy", "test.TestCase.evaluate", "ops.variables.variables_initializer", "numpy.asarray"], "keras.metrics_test.BinaryTruePositives.__init__": ["metrics.Metric.add_weight", "<builtin>.super"], "metrics.Metric.add_weight": [], "keras.metrics_test.BinaryTruePositives.update_state": ["ops.math_ops.equal", "ops.math_ops.reduce_sum", "ops.math_ops.multiply", "ops.math_ops.logical_and", "ops.math_ops.cast", "ops.weights_broadcast_ops.broadcast_weights"], "ops.math_ops.cast": [], "ops.math_ops.equal": [], "ops.math_ops.logical_and": [], "ops.weights_broadcast_ops.broadcast_weights": [], "ops.math_ops.multiply": [], "ops.math_ops.reduce_sum": [], "keras.metrics_test.BinaryTruePositives.result": [], "keras.metrics_test.BinaryTruePositivesViaControlFlow.__init__": ["metrics.Metric.add_weight", "<builtin>.super"], "keras.metrics_test.BinaryTruePositivesViaControlFlow.update_state": ["ops.math_ops.cast", "<builtin>.range", "<builtin>.len"], "keras.metrics_test.BinaryTruePositivesViaControlFlow.result": ["framework.constant_op.constant"], "keras.metrics_test.CustomMetricsTest.test_config": ["test.TestCase.assertEqual", "metrics.Metric.get_config", "metrics.Metric.from_config", "keras.metrics_test.BinaryTruePositives.__init__"], "metrics.Metric.get_config": [], "metrics.Metric.from_config": [], "keras.metrics_test.CustomMetricsTest.test_unweighted": ["test.TestCase.assertEqual", "framework.constant_op.constant", "keras.metrics_test.BinaryTruePositives.result", "test.TestCase.evaluate", "keras.metrics_test.BinaryTruePositives.__init__", "ops.variables.variables_initializer", "keras.metrics_test.BinaryTruePositives.update_state"], "keras.metrics_test.CustomMetricsTest.test_weighted": ["test.TestCase.assertEqual", "framework.constant_op.constant", "test.TestCase.evaluate", "keras.metrics_test.BinaryTruePositives.__init__", "ops.variables.variables_initializer"], "keras.metrics_test.CustomMetricsTest.test_autograph": ["test.TestCase.assertEqual", "framework.constant_op.constant", "test.TestCase.evaluate", "keras.metrics_test.BinaryTruePositivesViaControlFlow.__init__", "ops.variables.variables_initializer", "keras.metrics_test.CustomMetricsTest.test_autograph.compute_metric"], "keras.metrics_test.CustomMetricsTest.test_autograph.compute_metric": ["keras.metrics_test.BinaryTruePositivesViaControlFlow.result", "keras.metrics_test.BinaryTruePositivesViaControlFlow.__init__"], "keras.metrics_test.CustomMetricsTest.test_metric_wrappers_autograph": ["keras.metrics_test.CustomMetricsTest.test_metric_wrappers_autograph.tf_functioned_metric_fn", "framework.constant_op.constant", "test.TestCase.assertAllClose", "keras.metrics.SumOverBatchSizeMetricWrapper", "keras.metrics.MeanMetricWrapper", "test.TestCase.evaluate", "ops.variables.variables_initializer"], "keras.metrics_test.CustomMetricsTest.test_metric_wrappers_autograph.metric_fn": ["framework.constant_op.constant", "<builtin>.range", "ops.math_ops.equal", "<builtin>.len"], "keras.metrics.MeanMetricWrapper": [], "keras.metrics.SumOverBatchSizeMetricWrapper": [], "keras.metrics_test.CustomMetricsTest.test_metric_wrappers_autograph.tf_functioned_metric_fn": [], "keras.metrics_test.CustomMetricsTest.test_metric_not_tracked_as_sublayer_in_layer": ["base_layer.Layer._flatten_layers", "numpy.ones", "test.TestCase.assertLen", "keras.metrics_test.CustomMetricsTest.test_metric_not_tracked_as_sublayer_in_layer.MyLayer.__init__", "<builtin>.list"], "keras.metrics_test.CustomMetricsTest.test_metric_not_tracked_as_sublayer_in_layer.MyLayer.__init__": ["keras.metrics.Mean", "<builtin>.super"], "keras.metrics_test.CustomMetricsTest.test_metric_not_tracked_as_sublayer_in_layer.MyLayer.call": ["ops.math_ops.reduce_sum", "base_layer.Layer.add_metric"], "base_layer.Layer.add_metric": [], "base_layer.Layer._flatten_layers": [], "<builtin>.list": [], "keras.metrics_test.CustomMetricsTest.test_metric_not_tracked_as_sublayer_in_model": ["numpy.ones", "test.TestCase.assertLen", "keras.metrics_test.CustomMetricsTest.test_metric_not_tracked_as_sublayer_in_model.MyModel.__init__", "<builtin>.list", "training.Model._flatten_layers"], "keras.metrics_test.CustomMetricsTest.test_metric_not_tracked_as_sublayer_in_model.MyModel.__init__": ["keras.metrics.Mean", "<builtin>.super"], "keras.metrics_test.CustomMetricsTest.test_metric_not_tracked_as_sublayer_in_model.MyModel.call": ["training.Model.add_metric", "ops.math_ops.reduce_sum"], "training.Model.add_metric": [], "training.Model._flatten_layers": [], "keras.metrics_test.CustomMetricsTest.test_invalid_custom_metric_class_error_msg": ["keras.layers.Input", "numpy.ones", "test.TestCase.assertRaisesRegex", "engine.training.Model", "keras.layers.Dense"], "keras.layers.Input": [], "engine.training.Model": [], "keras.metrics_test.CustomMetricsTest.test_invalid_custom_metric_class_error_msg.BadMetric.update_state": [], "keras.metrics_test.CustomMetricsTest.test_invalid_custom_metric_class_error_msg.BadMetric.result": [], "keras.metrics_test.CustomMetricsTest.test_invalid_custom_metric_fn_error_msg": ["keras.layers.Input", "numpy.ones", "test.TestCase.assertRaisesRegex", "engine.training.Model", "keras.layers.Dense"], "keras.metrics_test.CustomMetricsTest.test_invalid_custom_metric_fn_error_msg.bad_metric": [], "keras.metrics_test.CustomMetricsTest.test_invalid_custom_metric_fn_error_msg.dict_metric": [], "keras.metrics_test._get_model": ["keras.layers.Dense", "keras.testing_utils.should_run_eagerly", "keras.testing_utils.get_model_from_layers"], "keras.testing_utils.get_model_from_layers": [], "keras.testing_utils.should_run_eagerly": [], "keras.metrics_test.ResetStatesTest.test_reset_state_false_positives": ["keras_parameterized.TestCase.assertEqual", "numpy.zeros", "numpy.ones", "keras.metrics.FalsePositives", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model"], "keras.metrics.FalsePositives": [], "keras.metrics_test.ResetStatesTest.test_reset_state_false_negatives": ["keras_parameterized.TestCase.assertEqual", "numpy.ones", "numpy.zeros", "keras.metrics.FalseNegatives", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model"], "keras.metrics.FalseNegatives": [], "keras.metrics_test.ResetStatesTest.test_reset_state_true_negatives": ["keras_parameterized.TestCase.assertEqual", "numpy.zeros", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model", "keras.metrics.TrueNegatives"], "keras.metrics.TrueNegatives": [], "keras.metrics_test.ResetStatesTest.test_reset_state_true_positives": ["keras_parameterized.TestCase.assertEqual", "numpy.ones", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model", "keras.metrics.TruePositives"], "keras.metrics.TruePositives": [], "keras.metrics_test.ResetStatesTest.test_reset_state_precision": ["keras_parameterized.TestCase.assertEqual", "numpy.zeros", "numpy.ones", "numpy.concatenate", "keras.metrics.Precision", "keras.metrics_test._get_model", "keras_parameterized.TestCase.evaluate"], "keras.metrics.Precision": [], "numpy.concatenate": [], "keras.metrics_test.ResetStatesTest.test_reset_state_recall": ["keras_parameterized.TestCase.assertEqual", "numpy.zeros", "numpy.ones", "numpy.concatenate", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model", "keras.metrics.Recall"], "keras.metrics.Recall": [], "keras.metrics_test.ResetStatesTest.test_reset_state_sensitivity_at_specificity": ["keras_parameterized.TestCase.assertEqual", "numpy.zeros", "numpy.ones", "numpy.concatenate", "keras.metrics.SensitivityAtSpecificity", "<builtin>.range", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model"], "keras.metrics.SensitivityAtSpecificity": [], "keras.metrics_test.ResetStatesTest.test_reset_state_specificity_at_sensitivity": ["keras.metrics.SpecificityAtSensitivity", "keras_parameterized.TestCase.assertEqual", "numpy.zeros", "numpy.ones", "numpy.concatenate", "<builtin>.range", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model"], "keras.metrics.SpecificityAtSensitivity": [], "keras.metrics_test.ResetStatesTest.test_reset_state_precision_at_recall": ["keras.metrics.PrecisionAtRecall", "keras_parameterized.TestCase.assertEqual", "numpy.zeros", "numpy.ones", "numpy.concatenate", "<builtin>.range", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model"], "keras.metrics.PrecisionAtRecall": [], "keras.metrics_test.ResetStatesTest.test_reset_state_recall_at_precision": ["keras_parameterized.TestCase.assertEqual", "numpy.zeros", "numpy.ones", "numpy.concatenate", "keras.metrics.RecallAtPrecision", "<builtin>.range", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model"], "keras.metrics.RecallAtPrecision": [], "keras.metrics_test.ResetStatesTest.test_reset_state_auc": ["keras.metrics.AUC", "keras_parameterized.TestCase.assertEqual", "numpy.zeros", "numpy.ones", "numpy.concatenate", "<builtin>.range", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model"], "keras.metrics.AUC": [], "keras.metrics_test.ResetStatesTest.test_reset_state_auc_from_logits": ["keras.metrics.AUC", "keras.testing_utils.should_run_eagerly", "keras_parameterized.TestCase.assertEqual", "numpy.ones", "numpy.zeros", "numpy.concatenate", "<builtin>.range", "keras_parameterized.TestCase.evaluate", "keras.layers.Dense", "keras.testing_utils.get_model_from_layers"], "keras.metrics_test.ResetStatesTest.test_reset_state_auc_manual_thresholds": ["keras.metrics.AUC", "keras_parameterized.TestCase.assertEqual", "numpy.zeros", "numpy.ones", "numpy.concatenate", "<builtin>.range", "keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model"], "keras.metrics_test.ResetStatesTest.test_reset_state_mean_iou": ["keras_parameterized.TestCase.evaluate", "keras.metrics_test._get_model", "keras_parameterized.TestCase.assertArrayNear", "keras.metrics.MeanIoU", "numpy.asarray"], "keras_parameterized.TestCase.assertArrayNear": [], "keras.metrics_test.ResetStatesTest.test_reset_state_recall_float64": ["keras_parameterized.TestCase.assertEqual", "numpy.zeros", "numpy.ones", "numpy.concatenate", "keras.backend.set_floatx", "keras.metrics_test._get_model", "keras.metrics.Recall", "keras_parameterized.TestCase.evaluate"], "keras.backend.set_floatx": [], "platform.test.main": []}