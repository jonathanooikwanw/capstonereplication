{"optimizer_v2.ftrl_test": ["platform.test.main"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.doTestFtrlwithoutRegularization": ["test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "<builtin>.range", "numpy.array", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.cached_session", "framework.ops.Graph", "<builtin>.zip", "ops.variables.Variable", "optimizer_v2.ftrl.Ftrl", "test.TestCase.evaluate", "framework.constant_op.constant"], "framework.ops.Graph": [], "test.TestCase.cached_session": [], "ops.variables.Variable": [], "framework.constant_op.constant": [], "optimizer_v2.ftrl.Ftrl": [], "<builtin>.zip": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "<builtin>.range": [], "numpy.array": [], "test.TestCase.assertAllCloseAccordingToType": [], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testFtrlWithoutRegularization": ["optimizer_v2.ftrl_test.FtrlOptimizerTest.doTestFtrlwithoutRegularization"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testResourceFtrlWithoutRegularization": ["optimizer_v2.ftrl_test.FtrlOptimizerTest.doTestFtrlwithoutRegularization"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testFtrlwithoutRegularization2": ["ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "numpy.array", "test.TestCase.cached_session", "framework.ops.Graph", "<builtin>.zip", "ops.variables.Variable", "optimizer_v2.ftrl.Ftrl", "test.TestCase.evaluate", "framework.constant_op.constant"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testMinimizeSparseResourceVariable": ["ops.variables.global_variables_initializer", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.cached_session", "framework.ops.Graph", "ops.variables.Variable", "optimizer_v2.ftrl.Ftrl", "test.TestCase.evaluate", "framework.constant_op.constant"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testMinimizeSparseResourceVariable.loss": ["ops.math_ops.matmul", "ops.embedding_ops.embedding_lookup"], "ops.embedding_ops.embedding_lookup": [], "ops.math_ops.matmul": [], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testFtrlWithL1": ["ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "numpy.array", "test.TestCase.cached_session", "framework.ops.Graph", "<builtin>.zip", "ops.variables.Variable", "optimizer_v2.ftrl.Ftrl", "test.TestCase.evaluate", "framework.constant_op.constant"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testFtrlWithBeta": ["ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "numpy.array", "test.TestCase.cached_session", "framework.ops.Graph", "<builtin>.zip", "ops.variables.Variable", "optimizer_v2.ftrl.Ftrl", "test.TestCase.evaluate", "framework.constant_op.constant"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testFtrlWithL2_Beta": ["ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "numpy.array", "test.TestCase.cached_session", "framework.ops.Graph", "<builtin>.zip", "ops.variables.Variable", "optimizer_v2.ftrl.Ftrl", "test.TestCase.evaluate", "framework.constant_op.constant"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testFtrlWithL1_L2": ["ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "numpy.array", "test.TestCase.cached_session", "framework.ops.Graph", "<builtin>.zip", "ops.variables.Variable", "optimizer_v2.ftrl.Ftrl", "test.TestCase.evaluate", "framework.constant_op.constant"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testFtrlWithL1_L2_L2Shrinkage": ["ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "numpy.array", "test.TestCase.cached_session", "framework.ops.Graph", "<builtin>.zip", "ops.variables.Variable", "optimizer_v2.ftrl.Ftrl", "test.TestCase.evaluate", "framework.constant_op.constant"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testFtrlWithL1_L2_L2ShrinkageSparse": ["ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.cached_session", "framework.ops.Graph", "<builtin>.zip", "ops.variables.Variable", "optimizer_v2.ftrl.Ftrl", "test.TestCase.evaluate", "framework.ops.IndexedSlices", "framework.constant_op.constant"], "framework.ops.IndexedSlices": [], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testFtrlWithL2ShrinkageDoesNotChangeLrSchedule": ["ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.assertTrue", "test.TestCase.cached_session", "framework.ops.Graph", "ops.variables.Variable", "optimizer_v2.ftrl.Ftrl", "test.TestCase.evaluate", "framework.constant_op.constant"], "test.TestCase.assertTrue": [], "optimizer_v2.ftrl_test.FtrlOptimizerTest.applyOptimizer": ["ops.variables.global_variables_initializer", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "<builtin>.zip", "ops.variables.Variable", "test.TestCase.evaluate", "framework.ops.IndexedSlices", "framework.constant_op.constant"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testEquivAdagradwithoutRegularization": ["optimizer_v2.ftrl_test.FtrlOptimizerTest.applyOptimizer", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.cached_session", "framework.ops.Graph", "optimizer_v2.ftrl.Ftrl", "training.adagrad.AdagradOptimizer"], "training.adagrad.AdagradOptimizer": [], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testEquivSparseAdagradwithoutRegularization": ["optimizer_v2.ftrl_test.FtrlOptimizerTest.applyOptimizer", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.cached_session", "framework.ops.Graph", "optimizer_v2.ftrl.Ftrl", "training.adagrad.AdagradOptimizer"], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testEquivSparseGradientDescentwithoutRegularization": ["optimizer_v2.ftrl_test.FtrlOptimizerTest.applyOptimizer", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.cached_session", "framework.ops.Graph", "training.gradient_descent.GradientDescentOptimizer", "optimizer_v2.ftrl.Ftrl"], "training.gradient_descent.GradientDescentOptimizer": [], "optimizer_v2.ftrl_test.FtrlOptimizerTest.testEquivGradientDescentwithoutRegularization": ["optimizer_v2.ftrl_test.FtrlOptimizerTest.applyOptimizer", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.cached_session", "framework.ops.Graph", "training.gradient_descent.GradientDescentOptimizer", "optimizer_v2.ftrl.Ftrl"], "platform.test.main": []}