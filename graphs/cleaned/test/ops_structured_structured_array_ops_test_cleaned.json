{"structured.structured_array_ops_test": ["platform.googletest.main"], "structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual": ["<builtin>.super", "util.nest.assert_same_structure", "structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "<builtin>.zip", "<builtin>.str", "util.nest.flatten", "test_util.TensorFlowTestCase.evaluate", "structured_tensor.StructuredTensor.from_pyval", "test_util.TensorFlowTestCase.assertIsNone", "test_util.TensorFlowTestCase.assertLen", "<builtin>.isinstance", "<builtin>.len"], "<builtin>.isinstance": [], "<builtin>.super": [], "structured_tensor.StructuredTensor.from_pyval": [], "util.nest.assert_same_structure": [], "<builtin>.str": [], "test_util.TensorFlowTestCase.assertIsNone": [], "util.nest.flatten": [], "<builtin>.len": [], "test_util.TensorFlowTestCase.assertLen": [], "test_util.TensorFlowTestCase.evaluate": [], "<builtin>.zip": [], "structured.structured_array_ops_test.StructuredArrayOpsTest._assertStructuredEqual": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertIs", "<builtin>.isinstance", "structured.structured_array_ops_test.StructuredArrayOpsTest._assertStructuredEqual", "<builtin>.repr", "<builtin>.set", "<builtin>.type"], "<builtin>.repr": [], "test_util.TensorFlowTestCase.assertEqual": [], "<builtin>.set": [], "<builtin>.type": [], "test_util.TensorFlowTestCase.assertIs": [], "testing.parameterized.named_parameters": [], "structured.structured_array_ops_test.StructuredArrayOpsTest": ["testing.parameterized.named_parameters"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testExpandDims": ["ops.array_ops.expand_dims", "structured_tensor.StructuredTensor.from_pyval", "structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual"], "ops.array_ops.expand_dims": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testExpandDimsAxisTooBig": ["ops.array_ops.expand_dims", "test_util.TensorFlowTestCase.assertRaisesRegex", "structured_tensor.StructuredTensor.from_pyval"], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testExpandDimsAxisTooSmall": ["ops.array_ops.expand_dims", "test_util.TensorFlowTestCase.assertRaisesRegex", "structured_tensor.StructuredTensor.from_pyval"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testExpandDimsScalar": ["test_util.TensorFlowTestCase.assertEqual", "framework.tensor_shape.TensorShape", "<builtin>.repr", "structured_tensor.StructuredTensor.from_pyval", "ops.array_ops.expand_dims"], "framework.tensor_shape.TensorShape": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testSizeObject": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "ops.array_ops.size", "ops.array_ops.size_v2", "row_partition.RowPartition.from_row_splits", "structured_tensor.StructuredTensor.from_fields"], "row_partition.RowPartition.from_row_splits": [], "structured_tensor.StructuredTensor.from_fields": [], "ops.array_ops.size": [], "ops.array_ops.size_v2": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testSizeAlt": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "ops.array_ops.size", "ops.array_ops.size_v2", "structured_tensor.StructuredTensor.from_pyval"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testZerosLikeObject": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "ops.array_ops.zeros_like", "row_partition.RowPartition.from_row_splits", "ops.array_ops.zeros_like_v2", "structured_tensor.StructuredTensor.from_fields"], "ops.array_ops.zeros_like": [], "ops.array_ops.zeros_like_v2": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testZerosLikeObjectAlt": ["ops.array_ops.zeros_like_v2", "structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "structured_tensor.StructuredTensor.from_pyval", "ops.array_ops.zeros_like"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testOnesLikeObject": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "ops.array_ops.ones_like", "ops.array_ops.ones_like_v2", "row_partition.RowPartition.from_row_splits", "structured_tensor.StructuredTensor.from_fields"], "ops.array_ops.ones_like": [], "ops.array_ops.ones_like_v2": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testOnesLikeObjectAlt": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "ops.array_ops.ones_like_v2", "structured_tensor.StructuredTensor.from_pyval", "ops.array_ops.ones_like"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testRank": ["structured_tensor.StructuredTensor.from_fields", "structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "row_partition.RowPartition.from_row_splits", "structured.structured_array_ops.rank"], "structured.structured_array_ops.rank": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testRankAlt": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "structured_tensor.StructuredTensor.from_pyval", "ops.array_ops.rank"], "ops.array_ops.rank": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testConcat": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "ops.array_ops.concat", "structured_tensor.StructuredTensor.from_pyval"], "ops.array_ops.concat": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testConcatTuple": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "ops.array_ops.concat", "structured_tensor.StructuredTensor.from_pyval"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testConcatError": ["test_util.TensorFlowTestCase.assertRaisesRegex", "ops.array_ops.concat", "structured_tensor.StructuredTensor.from_pyval"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testConcatWithRagged": ["ops.array_ops.constant", "ops.array_ops.concat", "structured_tensor.StructuredTensor.from_pyval", "test_util.TensorFlowTestCase.assertRaisesRegex"], "ops.array_ops.constant": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testConcatNotAList": ["structured.structured_array_ops.concat", "test_util.TensorFlowTestCase.assertRaisesRegex", "structured_tensor.StructuredTensor.from_pyval"], "structured.structured_array_ops.concat": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testConcatEmptyList": ["structured.structured_array_ops.concat", "test_util.TensorFlowTestCase.assertRaisesRegex"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testExtendOpErrorNotList": ["test_util.TensorFlowTestCase.assertRaisesRegex", "structured.structured_array_ops._extend_op", "structured_tensor.StructuredTensor.from_pyval"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testExtendOpErrorNotList.leaf_op": [], "structured.structured_array_ops._extend_op": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testExtendOpErrorEmptyList": ["test_util.TensorFlowTestCase.assertRaisesRegex", "structured.structured_array_ops._extend_op"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testExtendOpErrorEmptyList.leaf_op": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testRandomShuffle2021": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "framework.random_seed.set_seed", "structured_tensor.StructuredTensor.from_pyval", "ops.random_ops.random_shuffle"], "framework.random_seed.set_seed": [], "ops.random_ops.random_shuffle": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testRandomShuffle2022Eager": ["structured.structured_array_ops.random_shuffle", "framework.random_seed.set_seed", "structured_tensor.StructuredTensor.from_pyval", "structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual"], "structured.structured_array_ops.random_shuffle": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testRandomShuffleScalarError": ["test_util.TensorFlowTestCase.assertRaisesRegex", "structured_tensor.StructuredTensor.from_pyval", "ops.random_ops.random_shuffle"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayLikeNoRank": ["structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayLikeNoRank.my_fun", "test_util.TensorFlowTestCase.assertRaisesRegex", "ops.array_ops.constant"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayLikeNoRank.my_fun": ["structured.structured_array_ops._structured_tensor_like", "ops.math_ops.range", "ops.array_ops.zeros"], "ops.math_ops.range": [], "ops.array_ops.zeros": [], "structured.structured_array_ops._structured_tensor_like": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayRankOneKnownShape": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "structured.structured_array_ops._structured_tensor_like", "ops.array_ops.zeros"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayRankOneUnknownShape": ["structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayRankOneUnknownShape.my_fun", "ops.array_ops.constant", "structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayRankOneUnknownShape.my_fun": ["structured.structured_array_ops._structured_tensor_like", "ops.array_ops.zeros"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayRankTwoUnknownShape": ["structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayRankTwoUnknownShape.my_fun", "structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "ops.array_ops.constant"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayRankTwoUnknownShape.my_fun": ["structured.structured_array_ops._structured_tensor_like", "ops.array_ops.zeros"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayRankZero": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "structured.structured_array_ops._structured_tensor_like", "ops.array_ops.zeros"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorLikeStructuredTensor": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "structured.structured_array_ops._structured_tensor_like", "structured_tensor.StructuredTensor.from_pyval"], "structured.structured_array_ops_test.StructuredArrayOpsTest.testStructuredTensorArrayLike": ["structured.structured_array_ops._structured_tensor_like", "ragged_tensor.RaggedTensor.from_row_splits", "test_util.TensorFlowTestCase.assertEqual", "ops.array_ops.zeros"], "ragged_tensor.RaggedTensor.from_row_splits": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testGather": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "ops.array_ops.gather", "structured_tensor.StructuredTensor.from_pyval"], "ops.array_ops.gather": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testGatherRagged": ["structured.structured_array_ops_test.StructuredArrayOpsTest.assertAllEqual", "ops.array_ops.gather", "structured_tensor.StructuredTensor.from_pyval", "ragged.ragged_factory_ops.constant"], "ragged.ragged_factory_ops.constant": [], "structured.structured_array_ops_test.StructuredArrayOpsTest.testGatherError": ["test_util.TensorFlowTestCase.assertRaisesRegex", "structured_tensor.StructuredTensor.from_pyval", "structured.structured_array_ops.gather"], "structured.structured_array_ops.gather": [], "platform.googletest.main": []}