{"ops.clip_ops_test": ["platform.test.main"], "ops.clip_ops_test.ClipOpsTest.__init__": ["<builtin>.super"], "<builtin>.super": [], "ops.clip_ops_test.ClipOpsTest._testClipTensorByNorm": ["test.TestCase.evaluate", "ops.numerics.add_check_numerics_ops", "ops.clip_ops.clip_by_norm", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "framework.constant_op.constant": [], "ops.clip_ops.clip_by_norm": [], "ops.numerics.add_check_numerics_ops": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "ops.clip_ops_test.ClipOpsTest._testClipTensorByGlobalNorm": ["ops.clip_ops.clip_by_global_norm", "test.TestCase.evaluate", "test.TestCase.assertAllClose"], "ops.clip_ops.clip_by_global_norm": [], "ops.clip_ops_test.ClipOpsTest._testNonFiniteClippingByGlobalNorm": ["test.TestCase.evaluate", "ops.clip_ops.clip_by_global_norm", "numpy.isnan", "numpy.all", "test.TestCase.assertTrue"], "numpy.isnan": [], "numpy.all": [], "test.TestCase.assertTrue": [], "ops.clip_ops_test.ClipOpsTest._testClipIndexedSlicesByNorm": ["test.TestCase.evaluate", "framework.ops.convert_to_tensor", "test.TestCase.assertIsInstance", "ops.clip_ops.clip_by_norm", "framework.constant_op.constant", "test.TestCase.assertAllClose", "framework.ops.IndexedSlices"], "framework.ops.IndexedSlices": [], "test.TestCase.assertIsInstance": [], "framework.ops.convert_to_tensor": [], "ops.clip_ops_test.ClipOpsTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "ops.clip_ops_test.ClipOpsTest.testClipTensorByNorm": ["ops.clip_ops_test.ClipOpsTest._testClipTensorByNorm"], "ops.clip_ops_test.ClipOpsTest.testClipTensorByGlobalNorm": ["ops.clip_ops_test.ClipOpsTest._testClipTensorByGlobalNorm"], "ops.clip_ops_test.ClipOpsTest.testGlobalClipWithNonfinite": ["<builtin>.float", "ops.clip_ops_test.ClipOpsTest._testNonFiniteClippingByGlobalNorm"], "<builtin>.float": [], "ops.clip_ops_test.ClipOpsTest.testClipIndexedSlicesByNorm": ["ops.clip_ops_test.ClipOpsTest._testClipIndexedSlicesByNorm"], "platform.test.main": []}