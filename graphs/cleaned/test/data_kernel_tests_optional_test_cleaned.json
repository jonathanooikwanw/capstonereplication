{"kernel_tests.optional_test": ["platform.test.main"], "kernel_tests.optional_test._optional_spec_test_combinations": ["ops.optional_ops.OptionalSpec", "framework.sparse_tensor.SparseTensorSpec", "framework.tensor_spec.TensorSpec", "functools.reduce"], "kernel_tests.optional_test._optional_spec_test_combinations.<list1>.<lambda1>": [], "framework.constant_op.constant": [], "kernel_tests.optional_test._optional_spec_test_combinations.<lambda1>": ["framework.constant_op.constant"], "framework.tensor_spec.TensorSpec": [], "kernel_tests.optional_test._optional_spec_test_combinations.<list1>.<lambda2>": [], "kernel_tests.optional_test._optional_spec_test_combinations.<lambda2>": ["framework.constant_op.constant", "framework.sparse_tensor.SparseTensor"], "framework.sparse_tensor.SparseTensor": [], "framework.sparse_tensor.SparseTensorSpec": [], "kernel_tests.optional_test._optional_spec_test_combinations.<list1>.<lambda3>": [], "kernel_tests.optional_test._optional_spec_test_combinations.<lambda3>": ["framework.constant_op.constant"], "kernel_tests.optional_test._optional_spec_test_combinations.<list1>.<lambda4>": [], "optional_ops.Optional.from_value": [], "kernel_tests.optional_test._optional_spec_test_combinations.<lambda4>": ["optional_ops.Optional.from_value"], "ops.optional_ops.OptionalSpec": [], "kernel_tests.optional_test._optional_spec_test_combinations.reduce_fn": ["framework.combinations.NamedObject", "framework.combinations.combine"], "framework.combinations.NamedObject": [], "framework.combinations.combine": [], "functools.reduce": [], "kernel_tests.optional_test._get_next_as_optional_test_combinations": ["numpy.array", "functools.reduce", "framework.sparse_tensor.SparseTensorValue"], "numpy.array": [], "kernel_tests.optional_test._get_next_as_optional_test_combinations.<list1>.<lambda1>": [], "kernel_tests.optional_test._get_next_as_optional_test_combinations.<lambda1>": ["framework.constant_op.constant"], "framework.sparse_tensor.SparseTensorValue": [], "kernel_tests.optional_test._get_next_as_optional_test_combinations.<list1>.<lambda2>": [], "kernel_tests.optional_test._get_next_as_optional_test_combinations.<lambda2>": ["framework.sparse_tensor.SparseTensor"], "kernel_tests.optional_test._get_next_as_optional_test_combinations.<list1>.<lambda3>": [], "kernel_tests.optional_test._get_next_as_optional_test_combinations.<lambda3>": ["framework.constant_op.constant", "framework.sparse_tensor.SparseTensor"], "kernel_tests.optional_test._get_next_as_optional_test_combinations.reduce_fn": ["framework.combinations.NamedObject", "framework.combinations.combine"], "kernel_tests.test_base.default_test_combinations": [], "kernel_tests.optional_test.OptionalTest": ["kernel_tests.optional_test._optional_spec_test_combinations", "framework.combinations.times", "kernel_tests.optional_test._get_next_as_optional_test_combinations", "kernel_tests.test_base.default_test_combinations", "framework.combinations.generate"], "framework.combinations.generate": [], "kernel_tests.optional_test.OptionalTest.testFromValue": ["test_base.DatasetTestBase.assertEqual", "framework.constant_op.constant", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertTrue", "optional_ops.Optional.from_value"], "test_base.DatasetTestBase.evaluate": [], "test_base.DatasetTestBase.assertTrue": [], "test_base.DatasetTestBase.assertEqual": [], "kernel_tests.optional_test.OptionalTest.testFromStructuredValue": ["test_base.DatasetTestBase.assertEqual", "framework.constant_op.constant", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertTrue", "optional_ops.Optional.from_value"], "kernel_tests.optional_test.OptionalTest.testFromSparseTensor": ["framework.sparse_tensor.SparseTensorValue", "numpy.array", "test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertTrue", "optional_ops.Optional.from_value"], "test_base.DatasetTestBase.assertAllEqual": [], "kernel_tests.optional_test.OptionalTest.testFromNone": ["optional_ops.Optional.empty", "test_base.DatasetTestBase.assertRaises", "framework.tensor_spec.TensorSpec", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertTrue", "test_base.DatasetTestBase.assertFalse"], "optional_ops.Optional.empty": [], "test_base.DatasetTestBase.assertFalse": [], "test_base.DatasetTestBase.assertRaises": [], "kernel_tests.optional_test.OptionalTest.testAddN": ["optional_ops.Optional.empty", "framework.test_util.is_gpu_available", "framework.ops.device", "ops.math_ops.add_n", "test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.evaluate", "optional_ops.Optional.from_value", "ops.optional_ops._OptionalImpl", "test_base.DatasetTestBase.assertFalse"], "framework.test_util.is_gpu_available": [], "framework.ops.device": [], "ops.math_ops.add_n": [], "ops.optional_ops._OptionalImpl": [], "kernel_tests.optional_test.OptionalTest.testNestedAddN": ["test_base.DatasetTestBase.assertEqual", "framework.test_util.is_gpu_available", "framework.ops.device", "ops.math_ops.add_n", "test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.evaluate", "optional_ops.Optional.from_value", "ops.optional_ops._OptionalImpl"], "kernel_tests.optional_test.OptionalTest.testZerosLike": ["ops.array_ops.zeros_like", "optional_ops.Optional.empty", "framework.test_util.is_gpu_available", "framework.ops.device", "test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.evaluate", "optional_ops.Optional.from_value", "ops.optional_ops._OptionalImpl", "test_base.DatasetTestBase.assertFalse"], "ops.array_ops.zeros_like": [], "kernel_tests.optional_test.OptionalTest.testNestedZerosLike": ["ops.array_ops.zeros_like", "test_base.DatasetTestBase.assertEqual", "framework.test_util.is_gpu_available", "framework.ops.device", "test_base.DatasetTestBase.evaluate", "optional_ops.Optional.from_value", "ops.optional_ops._OptionalImpl"], "kernel_tests.optional_test.OptionalTest.testCopyToGPU": ["ops.array_ops.identity", "test_base.DatasetTestBase.assertEqual", "optional_ops.Optional.empty", "test_base.DatasetTestBase.assertTrue", "framework.test_util.is_gpu_available", "framework.constant_op.constant", "test_base.DatasetTestBase.skipTest", "framework.ops.device", "framework.tensor_spec.TensorSpec", "test_base.DatasetTestBase.evaluate", "optional_ops.Optional.from_value", "ops.optional_ops._OptionalImpl", "test_base.DatasetTestBase.assertFalse"], "test_base.DatasetTestBase.skipTest": [], "ops.array_ops.identity": [], "kernel_tests.optional_test.OptionalTest.testNestedCopyToGPU": ["ops.array_ops.identity", "test_base.DatasetTestBase.assertEqual", "optional_ops.Optional.empty", "test_base.DatasetTestBase.assertTrue", "framework.test_util.is_gpu_available", "framework.constant_op.constant", "test_base.DatasetTestBase.skipTest", "framework.ops.device", "framework.tensor_spec.TensorSpec", "test_base.DatasetTestBase.evaluate", "optional_ops.Optional.from_value", "ops.optional_ops._OptionalImpl", "test_base.DatasetTestBase.assertFalse"], "framework.combinations.times": [], "kernel_tests.optional_test.OptionalTest.testOptionalSpec": ["test_base.DatasetTestBase.assertEqual", "<builtin>.isinstance", "util.structure.are_compatible", "util.structure.get_flat_tensor_shapes", "util.structure.type_spec_from_value", "util.structure.get_flat_tensor_types", "framework.constant_op.constant", "framework.tensor_shape.TensorShape", "test_base.DatasetTestBase.assertValuesEqual", "test_base.DatasetTestBase.assertIsInstance", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertTrue", "optional_ops.Optional.from_value", "test_base.DatasetTestBase.assertFalse"], "util.structure.are_compatible": [], "util.structure.type_spec_from_value": [], "test_base.DatasetTestBase.assertIsInstance": [], "util.structure.get_flat_tensor_types": [], "framework.tensor_shape.TensorShape": [], "util.structure.get_flat_tensor_shapes": [], "<builtin>.isinstance": [], "test_base.DatasetTestBase.assertValuesEqual": [], "kernel_tests.optional_test.OptionalTest.testIteratorGetNextAsOptional": ["ops.dataset_ops.make_one_shot_iterator", "platform.test.is_gpu_available", "ops.iterator_ops.get_next_as_optional", "test_base.DatasetTestBase.assertFalse", "util.structure.are_compatible", "eager.context.executing_eagerly", "<builtin>.range", "util.structure.type_spec_from_value", "test_base.DatasetTestBase.assertRaises", "ops.dataset_ops.make_initializable_iterator", "test_base.DatasetTestBase.skipTest", "test_base.DatasetTestBase.assertValuesEqual", "test_base.DatasetTestBase.assertIsInstance", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertTrue", "dataset_ops.Dataset.from_tensors"], "platform.test.is_gpu_available": [], "dataset_ops.Dataset.from_tensors": [], "eager.context.executing_eagerly": [], "ops.dataset_ops.make_one_shot_iterator": [], "<builtin>.range": [], "ops.iterator_ops.get_next_as_optional": [], "ops.dataset_ops.make_initializable_iterator": [], "kernel_tests.optional_test.OptionalTest.testFunctionBoundaries": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertEqual", "kernel_tests.optional_test.OptionalTest.testFunctionBoundaries.get_optional", "kernel_tests.optional_test.OptionalTest.testFunctionBoundaries.consume_optional"], "kernel_tests.optional_test.OptionalTest.testFunctionBoundaries.get_optional": ["optional_ops.Optional.from_value", "framework.constant_op.constant"], "kernel_tests.optional_test.OptionalTest.testFunctionBoundaries.consume_optional": ["framework.tensor_spec.TensorSpec", "ops.optional_ops._OptionalImpl"], "kernel_tests.optional_test.OptionalTest.testLimitedRetracing": ["test_base.DatasetTestBase.assertEqual", "<builtin>.range", "framework.constant_op.constant", "kernel_tests.optional_test.OptionalTest.testLimitedRetracing.f", "test_base.DatasetTestBase.evaluate", "optional_ops.Optional.from_value"], "kernel_tests.optional_test.OptionalTest.testLimitedRetracing.f": [], "platform.test.main": []}