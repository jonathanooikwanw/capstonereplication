{"legacy_tf_layers.variable_scope_shim_test": ["platform.test.main"], "legacy_tf_layers.variable_scope_shim_test.run_inside_wrap_function_in_eager_mode": [], "legacy_tf_layers.variable_scope_shim_test.run_inside_wrap_function_in_eager_mode.wrap_and_execute": ["legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeDType", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testInitFromNonInitializer", "legacy_tf_layers.variable_scope_shim_test.VariableScopeMultithreadedTest.testTwoThreadsDisjointScopeEntry", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeOuterScope", "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testNonCallableGetterFails", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testNameExists", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeRegularizer", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeUniqueNamesWithJump", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeConstraint", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScope", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testTwoGraphs", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testCreatedByDefaultNameWhenAuxiliaryNameScopeIsFalse", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVar", "legacy_tf_layers.variable_scope_shim.VariableAndLossTracker", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeOuterScope", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVarWithDevice", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVariableWithInitializerWhichTakesNoArgs", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeNestedOuterScope", "legacy_tf_layers.variable_scope_shim_test.VariableScopeMultithreadedTest.testTwoThreadsNestedScopeEntry", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeUniqueNamesInterleavedSubstringScopes", "legacy_tf_layers.variable_scope_shim_test.VariableScopeMultithreadedTest.testReenterMainScope", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeReuseParam", "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testVariableCreator", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testNamelessStore", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testBasicWhenAuxiliaryNameScopeIsFalse", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeGetOrCreateReuse", "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testSynchronizationAndAggregationWithCustomGetter", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testInitFromNonTensorValue", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeReuseError", "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testVariableCreatorNestingError", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeGetVar", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeReuse", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testReenterRootScopeWhenAuxiliaryNameScopeIsFalse", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testInitializeFromValue", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testReuseScopeWithoutNameScopeCollision", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeNestedOuterScope", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testAuxiliaryNameScopeIsInvalid", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVariableWithRefDtype", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVariableWithInitializerWhichTakesOptionalArgs", "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testNoSideEffectsWithIdentityCustomGetter"], "legacy_tf_layers.variable_scope_shim.VariableAndLossTracker": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeDType": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testInitFromNonInitializer": ["test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "<builtin>.enumerate", "ops.variable_scope.get_variable", "ops.init_ops.zeros_initializer"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeOuterScope": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.cached_session", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeMultithreadedTest.testTwoThreadsDisjointScopeEntry": ["threading.Thread", "framework.ops.get_default_graph", "<builtin>.range"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testNonCallableGetterFails": ["ops.variable_scope.variable_scope", "test.TestCase.assertRaisesRegex", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testNameExists": ["test.TestCase.assertIs", "test.TestCase.assertIsNot", "ops.variable_scope._get_default_variable_store"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeRegularizer": ["ops.init_ops.constant_initializer", "ops.variables.variables_initializer", "ops.variable_scope.variable_scope", "ops.variable_scope.get_variable", "test.TestCase.evaluate"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeUniqueNamesWithJump": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.cached_session", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeConstraint": ["ops.variable_scope.variable_scope", "test.TestCase.assertIsNotNone", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScope": ["ops.variable_scope.variable_scope", "ops.variable_scope.get_variable", "framework.ops.name_scope_v2", "test.TestCase.cached_session", "test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testTwoGraphs": ["test.TestCase.assertRaisesRegex"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testCreatedByDefaultNameWhenAuxiliaryNameScopeIsFalse": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.cached_session", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVar": ["test.TestCase.assertIs", "ops.variable_scope._get_default_variable_store"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeOuterScope": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.cached_session", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVarWithDevice": ["framework.ops.Graph", "framework.ops.device", "numpy.arange", "ops.variable_scope.get_variable", "test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVariableWithInitializerWhichTakesNoArgs": ["test.TestCase.assertEqual", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeNestedOuterScope": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.cached_session", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeMultithreadedTest.testTwoThreadsNestedScopeEntry": ["threading.Thread", "framework.ops.get_default_graph", "threading.Event", "<builtin>.range"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeUniqueNamesInterleavedSubstringScopes": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.cached_session", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeMultithreadedTest.testReenterMainScope": ["ops.variable_scope.variable_scope", "framework.ops.get_default_graph", "threading.Thread"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeReuseParam": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.cached_session", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testVariableCreator": ["ops.variable_scope.variable_creator_scope", "ops.variable_scope.variable", "test.TestCase.assertTrue", "ops.variable_scope.get_variable", "test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testNamelessStore": ["<builtin>.set", "test.TestCase.assertEqual", "ops.variable_scope._get_default_variable_store"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testBasicWhenAuxiliaryNameScopeIsFalse": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.cached_session", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeGetOrCreateReuse": ["test.TestCase.cached_session", "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeGetOrCreateReuse.test_value"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testSynchronizationAndAggregationWithCustomGetter": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testInitFromNonTensorValue": ["ops.variables.variables_initializer", "test.TestCase.assertAllClose", "test.TestCase.assertRaises", "ops.variable_scope.get_variable", "eager.context.executing_eagerly", "test.TestCase.evaluate", "numpy.array"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeReuseError": ["ops.variable_scope.variable_scope", "test.TestCase.assertRaises", "ops.variable_scope.get_variable", "test.TestCase.cached_session", "test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testVariableCreatorNestingError": ["framework.ops.get_default_graph", "test.TestCase.assertRaises", "ops.variable_scope.variable_creator_scope"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeGetVar": ["ops.variable_scope.variable_scope", "<builtin>.str", "test.TestCase.assertRaises", "ops.variable_scope.get_variable", "test.TestCase.assertIs", "test.TestCase.cached_session", "test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeReuse": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.cached_session", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testReenterRootScopeWhenAuxiliaryNameScopeIsFalse": ["ops.variable_scope.variable_scope", "ops.variable_scope.get_variable_scope", "ops.variable_scope.get_variable", "test.TestCase.cached_session", "test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testInitializeFromValue": ["ops.variables.variables_initializer", "ops.variable_scope.variable_scope", "test.TestCase.assertAllClose", "ops.variable_scope.get_variable", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertRaisesRegex", "test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testReuseScopeWithoutNameScopeCollision": ["ops.variable_scope.variable_scope", "ops.variable_scope.get_variable", "framework.ops.name_scope_v2", "test.TestCase.cached_session", "test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarOpScopeNestedOuterScope": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.cached_session", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testAuxiliaryNameScopeIsInvalid": ["ops.variable_scope.variable_scope", "test.TestCase.cached_session", "test.TestCase.assertRaisesRegex"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVariableWithRefDtype": ["ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVariableWithInitializerWhichTakesOptionalArgs": ["test.TestCase.assertEqual", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testNoSideEffectsWithIdentityCustomGetter": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.assertIs", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.tearDown": ["<builtin>.len", "gc.collect", "test.TestCase.assertEqual"], "gc.collect": [], "<builtin>.len": [], "test.TestCase.assertEqual": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest": ["legacy_tf_layers.variable_scope_shim_test.run_inside_wrap_function_in_eager_mode", "framework.test_util.run_in_graph_and_eager_modes"], "framework.test_util.run_in_graph_and_eager_modes": [], "ops.variable_scope._get_default_variable_store": [], "test.TestCase.assertIs": [], "test.TestCase.assertIsNot": [], "<builtin>.set": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeInitializer": ["ops.init_ops.constant_initializer", "ops.variables.variables_initializer", "ops.variable_scope.variable_scope", "test.TestCase.assertAllClose", "ops.variable_scope.get_variable", "test.TestCase.evaluate"], "ops.init_ops.constant_initializer": [], "ops.variable_scope.variable_scope": [], "ops.variable_scope.get_variable": [], "ops.variables.variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeConstraint.<lambda1>": [], "test.TestCase.assertIsNotNone": [], "numpy.array": [], "eager.context.executing_eagerly": [], "test.TestCase.assertRaises": [], "<builtin>.enumerate": [], "ops.init_ops.zeros_initializer": [], "ops.variables.global_variables_initializer": [], "test.TestCase.assertAllEqual": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeRegularizer.regularizer1": ["ops.math_ops.reduce_mean"], "ops.math_ops.reduce_mean": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeRegularizer.regularizer2": ["ops.math_ops.reduce_mean"], "framework.constant_op.constant": [], "test.TestCase.assertRaisesRegex": [], "test.TestCase.cached_session": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testVarScopeGetOrCreateReuse.test_value": ["ops.variable_scope.variable_scope", "ops.state_ops.assign", "ops.variable_scope.get_variable", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertEqual"], "ops.state_ops.assign": [], "framework.ops.name_scope_v2": [], "<builtin>.str": [], "ops.variable_scope.get_variable_scope": [], "framework.ops.Graph": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVarWithDevice.device_func": [], "framework.ops.device": [], "numpy.arange": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVariableWithInitializerWhichTakesNoArgs.<lambda1>": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testGetVariableWithInitializerWhichTakesOptionalArgs.<lambda1>": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeTest.testTwoGraphs.f": ["ops.variable_scope.variable_scope", "framework.ops.Graph"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest": ["legacy_tf_layers.variable_scope_shim_test.run_inside_wrap_function_in_eager_mode", "framework.test_util.run_in_graph_and_eager_modes"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testNoSideEffectsWithIdentityCustomGetter.custom_getter": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testSynchronizationAndAggregationWithCustomGetter.custom_getter": ["test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testVariableCreator.creator_a": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testVariableCreator.creator_b": [], "ops.variable_scope.variable_creator_scope": [], "ops.variable_scope.variable": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testVariableCreator.creater_c": ["test.TestCase.assertEqual"], "test.TestCase.assertTrue": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeWithCustomGetterTest.testVariableCreatorNestingError.creator": [], "framework.ops.get_default_graph": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeMultithreadedTest": ["legacy_tf_layers.variable_scope_shim_test.run_inside_wrap_function_in_eager_mode", "framework.test_util.run_in_graph_and_eager_modes"], "legacy_tf_layers.variable_scope_shim_test.VariableScopeMultithreadedTest.testTwoThreadsDisjointScopeEntry.thread_fn": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.assertRaises", "ops.variable_scope.get_variable"], "threading.Thread": [], "<builtin>.range": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeMultithreadedTest.testTwoThreadsNestedScopeEntry.thread_fn": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "test.TestCase.assertRaises", "ops.variable_scope.get_variable"], "threading.Event": [], "legacy_tf_layers.variable_scope_shim_test.VariableScopeMultithreadedTest.testReenterMainScope.thread_fn": ["test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "ops.variable_scope.get_variable"], "legacy_tf_layers.variable_scope_shim_test.TF1VariableScopeWrapperLayerTest.test_get_variable": ["test.TestCase.assertAllEqual", "ops.array_ops.ones", "legacy_tf_layers.variable_scope_shim_test.TF1VariableScopeWrapperLayerTest.test_get_variable.WrappedDenseLayer.__init__", "ops.math_ops.add_n", "test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.TF1VariableScopeWrapperLayerTest.test_get_variable.WrappedDenseLayer.__init__": ["<builtin>.super"], "<builtin>.super": [], "legacy_tf_layers.variable_scope_shim_test.TF1VariableScopeWrapperLayerTest.test_get_variable.WrappedDenseLayer.forward_pass": ["ops.math_ops.matmul", "ops.variable_scope.variable_scope", "ops.nn_ops.bias_add", "keras.regularizers.L2", "ops.variable_scope.get_variable", "ops.init_ops.ones_initializer", "ops.init_ops.zeros_initializer"], "keras.regularizers.L2": [], "ops.init_ops.ones_initializer": [], "ops.math_ops.matmul": [], "ops.nn_ops.bias_add": [], "ops.array_ops.ones": [], "ops.math_ops.add_n": [], "legacy_tf_layers.variable_scope_shim_test.TF1VariableScopeWrapperLayerTest.test_compat_v1_layer": ["test.TestCase.assertAllEqual", "ops.array_ops.ones", "legacy_tf_layers.variable_scope_shim_test.TF1VariableScopeWrapperLayerTest.test_compat_v1_layer.WrappedDenseLayer.__init__", "ops.math_ops.add_n", "test.TestCase.assertEqual"], "legacy_tf_layers.variable_scope_shim_test.TF1VariableScopeWrapperLayerTest.test_compat_v1_layer.WrappedDenseLayer.__init__": ["<builtin>.super"], "legacy_tf_layers.variable_scope_shim_test.TF1VariableScopeWrapperLayerTest.test_compat_v1_layer.WrappedDenseLayer.forward_pass": ["ops.variable_scope.variable_scope", "legacy_tf_layers.core.dense", "ops.init_ops.ones_initializer"], "legacy_tf_layers.core.dense": [], "platform.test.main": []}