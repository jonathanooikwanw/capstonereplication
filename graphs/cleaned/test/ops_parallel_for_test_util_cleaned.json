{"parallel_for.test_util": [], "parallel_for.test_util.PForTestCase._run_targets": ["ops.variables.global_variables_initializer", "<builtin>.len", "test.TestCase.evaluate", "util.nest.flatten"], "util.nest.flatten": [], "<builtin>.len": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "parallel_for.test_util.PForTestCase.run_and_assert_equal": ["<builtin>.range", "parallel_for.test_util.PForTestCase._run_targets", "test.TestCase.assertAllEqual", "test.TestCase.assertAllClose", "util.nest.flatten", "<builtin>.len"], "<builtin>.range": [], "test.TestCase.assertAllClose": [], "test.TestCase.assertAllEqual": [], "parallel_for.test_util.PForTestCase._test_loop_fn": ["parallel_for.control_flow_ops.for_loop", "parallel_for.test_util.PForTestCase.run_and_assert_equal", "parallel_for.control_flow_ops.pfor", "util.nest.map_structure"], "parallel_for.control_flow_ops.pfor": [], "parallel_for.test_util.PForTestCase._test_loop_fn.<lambda1>": [], "util.nest.map_structure": [], "parallel_for.control_flow_ops.for_loop": []}