{"optimization.optimization_test": ["platform.test.main"], "optimization.optimization_test._captured_refvar_test_combinations": ["functools.reduce"], "optimization.optimization_test._captured_refvar_test_combinations.make_map_dataset": ["dataset_ops.Dataset.from_tensors"], "optimization.optimization_test._captured_refvar_test_combinations.make_map_dataset.<lambda1>": [], "dataset_ops.Dataset.from_tensors": [], "optimization.optimization_test._captured_refvar_test_combinations.make_flat_map_dataset": ["dataset_ops.Dataset.from_tensors"], "optimization.optimization_test._captured_refvar_test_combinations.make_flat_map_dataset.<lambda1>": ["dataset_ops.Dataset.from_tensors"], "optimization.optimization_test._captured_refvar_test_combinations.make_filter_dataset": ["dataset_ops.Dataset.from_tensors"], "optimization.optimization_test._captured_refvar_test_combinations.make_filter_dataset.<lambda1>": [], "optimization.optimization_test._captured_refvar_test_combinations.make_map_and_batch_dataset": ["ops.batching.map_and_batch", "dataset_ops.Dataset.from_tensors"], "optimization.optimization_test._captured_refvar_test_combinations.make_map_and_batch_dataset.map_fn": [], "ops.batching.map_and_batch": [], "optimization.optimization_test._captured_refvar_test_combinations.make_group_by_reducer_dataset": ["ops.grouping.group_by_reducer", "ops.grouping.Reducer", "dataset_ops.Dataset.range"], "optimization.optimization_test._captured_refvar_test_combinations.make_group_by_reducer_dataset.<lambda1>": [], "optimization.optimization_test._captured_refvar_test_combinations.make_group_by_reducer_dataset.<lambda2>": [], "optimization.optimization_test._captured_refvar_test_combinations.make_group_by_reducer_dataset.<lambda3>": [], "ops.grouping.Reducer": [], "optimization.optimization_test._captured_refvar_test_combinations.make_group_by_reducer_dataset.<lambda4>": [], "ops.grouping.group_by_reducer": [], "dataset_ops.Dataset.range": [], "optimization.optimization_test._captured_refvar_test_combinations.make_group_by_window_dataset": ["ops.grouping.group_by_window", "dataset_ops.Dataset.from_tensors"], "optimization.optimization_test._captured_refvar_test_combinations.make_group_by_window_dataset.reduce_fn": ["dataset_ops.Dataset.from_tensors"], "optimization.optimization_test._captured_refvar_test_combinations.make_group_by_window_dataset.<lambda1>": [], "ops.grouping.group_by_window": [], "optimization.optimization_test._captured_refvar_test_combinations.make_scan_dataset": ["ops.scan_ops.scan", "dataset_ops.Dataset.from_tensors"], "optimization.optimization_test._captured_refvar_test_combinations.make_scan_dataset.<lambda1>": [], "ops.scan_ops.scan": [], "optimization.optimization_test._captured_refvar_test_combinations.reduce_fn": ["framework.combinations.NamedObject", "framework.combinations.combine"], "framework.combinations.NamedObject": [], "framework.combinations.combine": [], "functools.reduce": [], "kernel_tests.test_base.default_test_combinations": [], "optimization.optimization_test.OptimizationTest": ["framework.combinations.generate", "framework.combinations.combine", "framework.combinations.times", "kernel_tests.test_base.graph_only_combinations", "optimization.optimization_test._captured_refvar_test_combinations", "kernel_tests.test_base.default_test_combinations"], "framework.combinations.generate": [], "optimization.optimization_test.OptimizationTest.testOptimizationStatefulFunction": ["test_base.DatasetTestBase.evaluate", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.getNext", "ops.options.Options"], "optimization.optimization_test.OptimizationTest.testOptimizationStatefulFunction.<lambda1>": ["ops.random_ops.random_uniform"], "ops.random_ops.random_uniform": [], "ops.options.Options": [], "test_base.DatasetTestBase.getNext": [], "test_base.DatasetTestBase.evaluate": [], "kernel_tests.test_base.graph_only_combinations": [], "optimization.optimization_test.OptimizationTest.testOptimizationLargeInputFromTensor": ["test_base.DatasetTestBase.evaluate", "ops.array_ops.placeholder", "dataset_ops.Dataset.from_tensors", "ops.dataset_ops.make_initializable_iterator", "ops.options.Options", "test_base.DatasetTestBase.cached_session"], "ops.array_ops.placeholder": [], "ops.dataset_ops.make_initializable_iterator": [], "test_base.DatasetTestBase.cached_session": [], "optimization.optimization_test.OptimizationTest.testOptimizationLargeInputFromTensorSlices": ["dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.evaluate", "ops.array_ops.placeholder", "ops.dataset_ops.make_initializable_iterator", "ops.options.Options", "test_base.DatasetTestBase.cached_session"], "dataset_ops.Dataset.from_tensor_slices": [], "optimization.optimization_test.OptimizationTest.testOptimizationNestedDataset": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "ops.options.Options"], "optimization.optimization_test.OptimizationTest.testOptimizationNestedDataset.flat_map_fn": ["dataset_ops.Dataset.from_tensors", "ops.testing.assert_next"], "ops.testing.assert_next": [], "test_base.DatasetTestBase.assertDatasetProduces": [], "optimization.optimization_test.OptimizationTest.testOptimizationNestedDatasetWithModifiedRetval": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "ops.options.Options"], "optimization.optimization_test.OptimizationTest.testOptimizationNestedDatasetWithModifiedRetval.flat_map_fn": ["dataset_ops.Dataset.from_tensors", "ops.testing.assert_next"], "optimization.optimization_test.OptimizationTest.testOptimizationNestedDatasetWithModifiedRetval.flat_map_fn.<lambda1>": [], "framework.combinations.times": [], "optimization.optimization_test.OptimizationTest.testOptimizationEnableGradientDescent": ["<builtin>.list", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "ops.options.Options", "<builtin>.range"], "optimization.optimization_test.OptimizationTest.testOptimizationEnableGradientDescent.<lambda1>": [], "optimization.optimization_test.OptimizationTest.testOptimizationEnableGradientDescent.<lambda2>": [], "optimization.optimization_test.OptimizationTest.testOptimizationEnableGradientDescent.<lambda3>": [], "<builtin>.range": [], "<builtin>.list": [], "optimization.optimization_test.OptimizationTest.testOptimizationMapParallelization": ["<builtin>.list", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "ops.testing.assert_next", "ops.options.Options", "<builtin>.range"], "optimization.optimization_test.OptimizationTest.testOptimizationMapParallelization.<lambda1>": [], "optimization.optimization_test.OptimizationTest.testOptimizationAutotuneBuffers": ["<builtin>.list", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "ops.options.Options", "<builtin>.range"], "optimization.optimization_test.OptimizationTest.testOptimizationAutotuneBuffers.<lambda1>": [], "optimization.optimization_test.OptimizationTest.testOptimizationWithCapturedRefVar": ["test_base.DatasetTestBase.evaluate", "framework.ops.control_dependencies", "ops.dataset_ops.make_initializable_iterator", "test_base.DatasetTestBase.assertEqual", "ops.variable_scope.get_variable", "ops.options.Options"], "ops.variable_scope.get_variable": [], "framework.ops.control_dependencies": [], "test_base.DatasetTestBase.assertEqual": [], "platform.test.main": []}