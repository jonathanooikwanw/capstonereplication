{"optimizer_v2.learning_rate_schedule_test": ["platform.test.main"], "optimizer_v2.learning_rate_schedule_test._maybe_serialized": ["optimizer_v2.learning_rate_schedule.deserialize", "optimizer_v2.learning_rate_schedule.serialize"], "optimizer_v2.learning_rate_schedule.serialize": [], "optimizer_v2.learning_rate_schedule.deserialize": [], "optimizer_v2.learning_rate_schedule_test.LRDecayTestV2.testContinuous": ["optimizer_v2.learning_rate_schedule_test._maybe_serialized", "ops.variables.global_variables_initializer", "optimizer_v2.learning_rate_schedule.ExponentialDecay", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose"], "ops.variables.global_variables_initializer": [], "test_util.TensorFlowTestCase.evaluate": [], "optimizer_v2.learning_rate_schedule.ExponentialDecay": [], "test_util.TensorFlowTestCase.assertAllClose": [], "optimizer_v2.learning_rate_schedule_test.LRDecayTestV2.testStaircase": ["ops.variables.Variable", "ops.variables.global_variables_initializer", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "optimizer_v2.learning_rate_schedule.ExponentialDecay", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "eager.context.executing_eagerly"], "eager.context.executing_eagerly": [], "ops.variables.Variable": [], "optimizer_v2.learning_rate_schedule_test.LRDecayTestV2.testVariables": ["framework.ops.Graph", "ops.variables.Variable", "ops.variables.global_variables_initializer", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "optimizer_v2.learning_rate_schedule.ExponentialDecay", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose"], "framework.ops.Graph": [], "optimizer_v2.learning_rate_schedule_test.LRDecayTestV2.testPiecewiseConstant": ["ops.variables.Variable", "ops.variables.global_variables_initializer", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "optimizer_v2.learning_rate_schedule.PiecewiseConstantDecay", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose"], "optimizer_v2.learning_rate_schedule.PiecewiseConstantDecay": [], "optimizer_v2.learning_rate_schedule_test.LRDecayTestV2.testPiecewiseFunction": ["test_util.TensorFlowTestCase.assertAllEqual", "optimizer_v2.gradient_descent.SGD", "ops.variables.Variable", "optimizer_v2.learning_rate_schedule_test.LRDecayTestV2.testPiecewiseFunction.minimize", "optimizer_v2.learning_rate_schedule.PiecewiseConstantDecay", "test_util.TensorFlowTestCase.skipTest", "eager.context.executing_eagerly"], "test_util.TensorFlowTestCase.skipTest": [], "optimizer_v2.learning_rate_schedule_test.LRDecayTestV2.testPiecewiseFunction.loss_fn": [], "optimizer_v2.gradient_descent.SGD": [], "optimizer_v2.learning_rate_schedule_test.LRDecayTestV2.testPiecewiseFunction.minimize": ["<builtin>.list", "<builtin>.zip", "optimizer_v2.learning_rate_schedule_test.LRDecayTestV2.testPiecewiseFunction.loss_fn", "eager.backprop.GradientTape"], "eager.backprop.GradientTape": [], "<builtin>.zip": [], "<builtin>.list": [], "test_util.TensorFlowTestCase.assertAllEqual": [], "optimizer_v2.learning_rate_schedule_test.LRDecayTestV2.testPiecewiseConstantEdgeCases": ["ops.variables.Variable", "ops.variables.global_variables_initializer", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "optimizer_v2.learning_rate_schedule.PiecewiseConstantDecay", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose"], "optimizer_v2.learning_rate_schedule_test.LinearDecayTestV2.testHalfWay": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule.PolynomialDecay": [], "optimizer_v2.learning_rate_schedule_test.LinearDecayTestV2.testEnd": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule_test.LinearDecayTestV2.testHalfWayWithEnd": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule_test.LinearDecayTestV2.testBeyondEnd": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule_test.LinearDecayTestV2.testBeyondEndWithCycle": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule_test.SqrtDecayTestV2.testHalfWay": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule_test.SqrtDecayTestV2.testEnd": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule_test.SqrtDecayTestV2.testHalfWayWithEnd": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule_test.SqrtDecayTestV2.testBeyondEnd": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule_test.SqrtDecayTestV2.testBeyondEndWithCycle": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule_test.PolynomialDecayTestV2.testBeginWithCycle": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.PolynomialDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized"], "optimizer_v2.learning_rate_schedule_test.InverseDecayTestV2.testDecay": ["ops.variables.Variable", "ops.variables.global_variables_initializer", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "<builtin>.range", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.InverseTimeDecay"], "optimizer_v2.learning_rate_schedule.InverseTimeDecay": [], "<builtin>.range": [], "optimizer_v2.learning_rate_schedule_test.InverseDecayTestV2.testStaircase": ["ops.variables.Variable", "ops.variables.global_variables_initializer", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "<builtin>.range", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.InverseTimeDecay"], "optimizer_v2.learning_rate_schedule_test.CosineDecayTestV2.np_cosine_decay": ["math.cos", "<builtin>.min"], "<builtin>.min": [], "math.cos": [], "optimizer_v2.learning_rate_schedule_test.CosineDecayTestV2.testDecay": ["optimizer_v2.learning_rate_schedule.CosineDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "optimizer_v2.learning_rate_schedule_test.CosineDecayTestV2.np_cosine_decay", "<builtin>.range", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose"], "optimizer_v2.learning_rate_schedule.CosineDecay": [], "optimizer_v2.learning_rate_schedule_test.CosineDecayTestV2.testAlpha": ["optimizer_v2.learning_rate_schedule.CosineDecay", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "optimizer_v2.learning_rate_schedule_test.CosineDecayTestV2.np_cosine_decay", "<builtin>.range", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose"], "optimizer_v2.learning_rate_schedule_test.CosineDecayRestartsTestV2.np_cosine_decay_restarts": ["math.cos"], "optimizer_v2.learning_rate_schedule_test.CosineDecayRestartsTestV2.testDecay": ["optimizer_v2.learning_rate_schedule_test.CosineDecayRestartsTestV2.np_cosine_decay_restarts", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "<builtin>.range", "test_util.TensorFlowTestCase.evaluate", "optimizer_v2.learning_rate_schedule.CosineDecayRestarts", "test_util.TensorFlowTestCase.assertAllClose"], "optimizer_v2.learning_rate_schedule.CosineDecayRestarts": [], "optimizer_v2.learning_rate_schedule_test.CosineDecayRestartsTestV2.testAlpha": ["optimizer_v2.learning_rate_schedule_test.CosineDecayRestartsTestV2.np_cosine_decay_restarts", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "<builtin>.range", "test_util.TensorFlowTestCase.evaluate", "optimizer_v2.learning_rate_schedule.CosineDecayRestarts", "test_util.TensorFlowTestCase.assertAllClose"], "optimizer_v2.learning_rate_schedule_test.CosineDecayRestartsTestV2.testMMul": ["optimizer_v2.learning_rate_schedule_test.CosineDecayRestartsTestV2.np_cosine_decay_restarts", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "<builtin>.range", "test_util.TensorFlowTestCase.evaluate", "optimizer_v2.learning_rate_schedule.CosineDecayRestarts", "test_util.TensorFlowTestCase.assertAllClose"], "optimizer_v2.learning_rate_schedule_test.CosineDecayRestartsTestV2.testTMul": ["optimizer_v2.learning_rate_schedule_test.CosineDecayRestartsTestV2.np_cosine_decay_restarts", "optimizer_v2.learning_rate_schedule_test._maybe_serialized", "<builtin>.range", "test_util.TensorFlowTestCase.evaluate", "optimizer_v2.learning_rate_schedule.CosineDecayRestarts", "test_util.TensorFlowTestCase.assertAllClose"], "platform.test.main": []}