{"lib.debug_data_test": ["platform.googletest.main"], "lib.debug_data_test.DeviceNamePathConversionTest.testDeviceNameToDevicePath": ["test_util.TensorFlowTestCase.assertEqual", "lib.debug_data.device_name_to_device_path"], "lib.debug_data.device_name_to_device_path": [], "test_util.TensorFlowTestCase.assertEqual": [], "lib.debug_data_test.DeviceNamePathConversionTest.testDevicePathToDeviceName": ["test_util.TensorFlowTestCase.assertEqual", "lib.debug_data.device_path_to_device_name"], "lib.debug_data.device_path_to_device_name": [], "lib.debug_data_test.HasNanOrInfTest.setUp": ["lib.debug_data.DebugTensorDatum"], "lib.debug_data.DebugTensorDatum": [], "lib.debug_data_test.HasNanOrInfTest.testNaN": ["numpy.array", "test_util.TensorFlowTestCase.assertTrue", "lib.debug_data.has_inf_or_nan"], "numpy.array": [], "lib.debug_data.has_inf_or_nan": [], "test_util.TensorFlowTestCase.assertTrue": [], "lib.debug_data_test.HasNanOrInfTest.testInf": ["numpy.array", "test_util.TensorFlowTestCase.assertTrue", "lib.debug_data.has_inf_or_nan"], "lib.debug_data_test.HasNanOrInfTest.testNanAndInf": ["numpy.array", "test_util.TensorFlowTestCase.assertTrue", "lib.debug_data.has_inf_or_nan"], "lib.debug_data_test.HasNanOrInfTest.testNoNanOrInf": ["numpy.array", "lib.debug_data.has_inf_or_nan", "test_util.TensorFlowTestCase.assertFalse"], "test_util.TensorFlowTestCase.assertFalse": [], "lib.debug_data_test.HasNanOrInfTest.testEmpty": ["numpy.array", "lib.debug_data.has_inf_or_nan", "test_util.TensorFlowTestCase.assertFalse"], "lib.debug_data_test.HasNanOrInfTest.testInconvertibleTensorProto": ["test_util.TensorFlowTestCase.assertFalse", "lib.debug_data.has_inf_or_nan", "framework.tensor_pb2.TensorProto", "lib.debug_data.InconvertibleTensorProto"], "framework.tensor_pb2.TensorProto": [], "lib.debug_data.InconvertibleTensorProto": [], "lib.debug_data_test.HasNanOrInfTest.testDTypeComplexWorks": ["numpy.array", "test_util.TensorFlowTestCase.assertTrue", "lib.debug_data.has_inf_or_nan", "test_util.TensorFlowTestCase.assertFalse"], "lib.debug_data_test.HasNanOrInfTest.testDTypeIntegerWorks": ["numpy.array", "lib.debug_data.has_inf_or_nan", "test_util.TensorFlowTestCase.assertFalse"], "lib.debug_data_test.HasNanOrInfTest.testDTypeStringGivesFalse": ["numpy.array", "lib.debug_data.has_inf_or_nan", "test_util.TensorFlowTestCase.assertFalse"], "lib.debug_data_test.HasNanOrInfTest.testDTypeObjectGivesFalse": ["numpy.array", "lib.debug_data.has_inf_or_nan", "numpy.dtype", "test_util.TensorFlowTestCase.assertFalse"], "numpy.dtype": [], "lib.debug_data_test.DebugTensorDatumTest.testDebugDatum": ["<builtin>.str", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.repr", "os.path.join", "lib.debug_data.DebugTensorDatum"], "os.path.join": [], "<builtin>.str": [], "<builtin>.repr": [], "lib.debug_data_test.DebugTensorDatumTest.testDumpSizeBytesIsNoneForNonexistentFilePath": ["test_util.TensorFlowTestCase.assertIsNone", "lib.debug_data.DebugTensorDatum"], "test_util.TensorFlowTestCase.assertIsNone": [], "lib.debug_data_test.DebugDumpDirTest.setUp": ["tempfile.mktemp", "os.mkdir"], "tempfile.mktemp": [], "os.mkdir": [], "lib.debug_data_test.DebugDumpDirTest.tearDown": ["io.file_io.delete_recursively"], "io.file_io.delete_recursively": [], "lib.debug_data_test.DebugDumpDirTest._makeDataDirWithMultipleDevicesAndDuplicateNodeNames": ["os.makedirs", "os.path.join", "<builtin>.open"], "os.makedirs": [], "<builtin>.open": [], "lib.debug_data_test.DebugDumpDirTest.testDebugDumpDir_nonexistentDumpRoot": ["test_util.TensorFlowTestCase.assertRaisesRegex", "tempfile.mktemp", "lib.debug_data.DebugDumpDir"], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "lib.debug_data.DebugDumpDir": [], "lib.debug_data_test.DebugDumpDirTest.testDebugDumpDir_invalidFileNamingPattern": ["test_util.TensorFlowTestCase.assertRaisesRegex", "os.makedirs", "lib.debug_data.DebugDumpDir", "<builtin>.open", "os.path.join"], "lib.debug_data_test.DebugDumpDirTest.testDebugDumpDir_validDuplicateNodeNamesWithMultipleDevices": ["test_util.TensorFlowTestCase.assertRaisesRegex", "lib.debug_data_test.DebugDumpDirTest._makeDataDirWithMultipleDevicesAndDuplicateNodeNames", "framework.graph_pb2.GraphDef", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertItemsEqual", "lib.debug_data.DebugDumpDir"], "framework.graph_pb2.GraphDef": [], "test_util.TensorFlowTestCase.assertItemsEqual": [], "lib.debug_data_test.DebugDumpDirTest.testDuplicateNodeNamesInGraphDefOfSingleDeviceRaisesException": ["test_util.TensorFlowTestCase.assertRaisesRegex", "lib.debug_data_test.DebugDumpDirTest._makeDataDirWithMultipleDevicesAndDuplicateNodeNames", "framework.graph_pb2.GraphDef", "lib.debug_data.DebugDumpDir"], "lib.debug_data_test.DebugDumpDirTest.testDebugDumpDir_emptyDumpDir": ["test_util.TensorFlowTestCase.assertIsNone", "lib.debug_data.DebugDumpDir", "test_util.TensorFlowTestCase.assertEqual"], "lib.debug_data_test.DebugDumpDirTest.testDebugDumpDir_usesGfileGlob": ["lib.debug_data_test.DebugDumpDirTest._makeDataDirWithMultipleDevicesAndDuplicateNodeNames", "mock.patch.object", "test.mock.call", "test_util.TensorFlowTestCase.skipTest", "platform.system", "lib.debug_data.DebugDumpDir", "os.path.join"], "platform.system": [], "test_util.TensorFlowTestCase.skipTest": [], "lib.debug_data_test.DebugDumpDirTest.testDebugDumpDir_usesGfileGlob.fake_gfile_glob": [], "mock.patch.object": [], "test.mock.call": [], "platform.googletest.main": []}