{"kernel_tests.conditional_accumulator_test": ["platform.test.main"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testConstructorWithInvalidArg": ["test.TestCase.assertRaises", "ops.data_flow_ops.ConditionalAccumulator", "framework.ops.Graph"], "framework.ops.Graph": [], "test.TestCase.assertRaises": [], "ops.data_flow_ops.ConditionalAccumulator": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest": ["framework.test_util.run_v1_only", "framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorSizeEmpty": ["test.TestCase.assertEqual", "ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.cached_session"], "test.TestCase.cached_session": [], "test.TestCase.assertEqual": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorSetGlobalStep": ["ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.cached_session", "framework.tensor_shape.TensorShape"], "framework.tensor_shape.TensorShape": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorApplyGradFloat32": ["ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.cached_session", "framework.tensor_shape.TensorShape"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testDtypes": ["ops.data_flow_ops.ConditionalAccumulator", "numpy.arange", "test.TestCase.evaluate", "<builtin>.len", "framework.tensor_shape.TensorShape", "test.TestCase.assertEqual", "test.TestCase.cached_session", "<builtin>.sum", "<builtin>.range"], "<builtin>.len": [], "<builtin>.range": [], "numpy.arange": [], "test.TestCase.evaluate": [], "<builtin>.sum": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorMultipleAccumulators": ["ops.data_flow_ops.ConditionalAccumulator", "<builtin>.len", "framework.tensor_shape.TensorShape", "test.TestCase.assertEqual", "test.TestCase.cached_session", "<builtin>.range"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorApplyAndTakeGradWithShape": ["ops.data_flow_ops.ConditionalAccumulator", "<builtin>.zip", "test.TestCase.evaluate", "<builtin>.len", "test.TestCase.assertTrue", "test.TestCase.cached_session", "<builtin>.range"], "<builtin>.zip": [], "test.TestCase.assertTrue": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorApplyGradWithWrongShape": ["test.TestCase.assertRaises", "ops.data_flow_ops.ConditionalAccumulator"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorDynamicShape": ["ops.array_ops.placeholder", "ops.data_flow_ops.ConditionalAccumulator", "<builtin>.zip", "test.TestCase.evaluate", "<builtin>.len", "test.TestCase.assertTrue", "test.TestCase.cached_session", "<builtin>.range"], "ops.array_ops.placeholder": [], "framework.test_util.run_v1_only": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorWrongDynamicShape": ["test.TestCase.assertRaises", "ops.array_ops.placeholder", "ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.cached_session"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorSizeAfterApplyGrad": ["test.TestCase.assertEqual", "ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.cached_session", "framework.tensor_shape.TensorShape"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorSizeAfterApplyGradAndTakeGrad": ["test.TestCase.assertEqual", "ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.cached_session", "framework.tensor_shape.TensorShape"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorTakeGradMean": ["ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.evaluate", "framework.tensor_shape.TensorShape", "test.TestCase.assertEqual", "framework.constant_op.constant", "test.TestCase.cached_session"], "framework.constant_op.constant": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorTakeGradSum": ["ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.evaluate", "framework.tensor_shape.TensorShape", "test.TestCase.assertEqual", "framework.constant_op.constant", "test.TestCase.cached_session"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorTakeGradInvalidReductionType": ["test.TestCase.assertRaises", "ops.data_flow_ops.ConditionalAccumulator", "framework.tensor_shape.TensorShape"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorInvalidTakeGrad": ["ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.evaluate", "framework.tensor_shape.TensorShape", "test.TestCase.assertRaises", "test.TestCase.cached_session"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorRepeatedTakeGradMean": ["ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.evaluate", "<builtin>.len", "framework.tensor_shape.TensorShape", "test.TestCase.assertEqual", "test.TestCase.cached_session", "<builtin>.sum"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorRepeatedTakeGradSum": ["ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.evaluate", "framework.tensor_shape.TensorShape", "test.TestCase.assertEqual", "test.TestCase.cached_session"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorIncrementGlobalStep": ["ops.state_ops.assign", "ops.variables.Variable", "ops.data_flow_ops.ConditionalAccumulator", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.tensor_shape.TensorShape", "ops.math_ops.add", "test.TestCase.cached_session", "<builtin>.range"], "ops.variables.Variable": [], "ops.math_ops.add": [], "ops.state_ops.assign": [], "ops.variables.global_variables_initializer": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorSetGlobalStepPreventsAccumulation": ["ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.evaluate", "framework.tensor_shape.TensorShape", "test.TestCase.assertEqual", "test.TestCase.cached_session", "<builtin>.sum", "<builtin>.range"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testParallelApplyGrad": ["ops.data_flow_ops.ConditionalAccumulator", "framework.ops.get_default_graph", "test.TestCase.evaluate", "test.TestCase.checkedThread", "framework.tensor_shape.TensorShape", "<builtin>.len", "test.TestCase.assertEqual", "test.TestCase.cached_session", "<builtin>.sum"], "framework.ops.get_default_graph": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testParallelApplyGrad.apply_grad": ["test.TestCase.evaluate"], "test.TestCase.checkedThread": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testParallelTakeGrad": ["numpy.float32", "ops.data_flow_ops.ConditionalAccumulator", "framework.ops.get_default_graph", "test.TestCase.assertItemsEqual", "test.TestCase.checkedThread", "framework.tensor_shape.TensorShape", "test.TestCase.cached_session", "<builtin>.range"], "numpy.float32": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testParallelTakeGrad.apply_grad": ["test.TestCase.evaluate", "time.sleep"], "time.sleep": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testParallelTakeGrad.take_grad": ["test.TestCase.evaluate"], "test.TestCase.assertItemsEqual": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorApplyAndBlockingTake": ["test.TestCase.cached_session", "ops.data_flow_ops.ConditionalAccumulator", "framework.ops.get_default_graph", "test.TestCase.checkedThread", "framework.tensor_shape.TensorShape", "<builtin>.len", "test.TestCase.assertEqual", "<builtin>.sum"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorApplyAndBlockingTake.apply_grad": ["test.TestCase.evaluate", "time.sleep"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorApplyAndBlockingTake.take_grad": ["test.TestCase.evaluate"], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest._blocking_takeg": ["test.TestCase.evaluate", "test.TestCase.assertRaisesOpError"], "test.TestCase.assertRaisesOpError": [], "kernel_tests.conditional_accumulator_test.ConditionalAccumulatorTest.testAccumulatorCancel": ["ops.data_flow_ops.ConditionalAccumulator", "test.TestCase.checkedThread", "framework.tensor_shape.TensorShape", "time.sleep", "test.TestCase.cached_session"], "platform.test.main": []}