{"random.random_crop_test": ["platform.test.main"], "random.random_crop_test.RandomCropTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "random.random_crop_test.RandomCropTest.testNoOp": ["test.TestCase.assertAllEqual", "numpy.arange", "numpy.prod", "ops.random_ops.random_crop", "test.TestCase.cached_session"], "numpy.prod": [], "numpy.arange": [], "test.TestCase.cached_session": [], "ops.random_ops.random_crop": [], "test.TestCase.assertAllEqual": [], "random.random_crop_test.RandomCropTest.testContains": ["numpy.random.randint", "<builtin>.set", "test.TestCase.assertAllEqual", "ops.random_ops.random_crop", "test.TestCase.cached_session", "<builtin>.range", "test.TestCase.evaluate", "<builtin>.tuple", "test.TestCase.assertTrue"], "numpy.random.randint": [], "<builtin>.tuple": [], "<builtin>.range": [], "<builtin>.set": [], "test.TestCase.evaluate": [], "test.TestCase.assertTrue": [], "random.random_crop_test.RandomCropTest.testRandomization": ["test.TestCase.assertAllEqual", "numpy.arange", "numpy.prod", "numpy.zeros", "numpy.sqrt", "ops.random_ops.random_crop", "test.TestCase.cached_session", "<builtin>.range", "numpy.repeat", "test.TestCase.assertAllClose", "test.TestCase.evaluate"], "numpy.zeros": [], "numpy.repeat": [], "numpy.sqrt": [], "test.TestCase.assertAllClose": [], "random.random_crop_test.StatelessRandomCropTest.testNoOp": ["test.TestCase.assertAllEqual", "numpy.arange", "numpy.prod", "ops.random_ops.stateless_random_crop", "test.TestCase.evaluate"], "ops.random_ops.stateless_random_crop": [], "random.random_crop_test.StatelessRandomCropTest.testContains": ["numpy.random.randint", "<builtin>.enumerate", "<builtin>.set", "test.TestCase.assertAllEqual", "ops.random_ops.stateless_random_crop", "<builtin>.map", "test.TestCase.assertIn", "<builtin>.range", "test.TestCase.evaluate", "framework.test_util.use_gpu", "<builtin>.tuple"], "framework.test_util.use_gpu": [], "random.random_crop_test.StatelessRandomCropTest.testContains.<lambda1>": [], "<builtin>.map": [], "<builtin>.enumerate": [], "test.TestCase.assertIn": [], "random.random_crop_test.StatelessRandomCropTest.testRandomization": ["<builtin>.enumerate", "test.TestCase.assertAllEqual", "numpy.arange", "numpy.prod", "ops.random_ops.stateless_random_crop", "numpy.zeros", "<builtin>.map", "<builtin>.range", "test.TestCase.evaluate", "framework.test_util.use_gpu", "<builtin>.tuple"], "random.random_crop_test.StatelessRandomCropTest.testRandomization.<lambda1>": [], "platform.test.main": []}