{"signal.dct_ops_test": ["platform.test.main", "signal.dct_ops_test.try_import"], "signal.dct_ops_test.try_import": ["importlib.import_module", "platform.tf_logging.warning", "<builtin>.str"], "importlib.import_module": [], "<builtin>.str": [], "platform.tf_logging.warning": [], "signal.dct_ops_test._modify_input_for_dct": ["numpy.array", "numpy.zeros", "<builtin>.list"], "numpy.array": [], "<builtin>.list": [], "numpy.zeros": [], "signal.dct_ops_test._np_dct1": ["signal.dct_ops_test._modify_input_for_dct", "numpy.arange", "numpy.sum", "numpy.cos", "<builtin>.range", "numpy.zeros_like"], "numpy.zeros_like": [], "<builtin>.range": [], "numpy.arange": [], "numpy.cos": [], "numpy.sum": [], "signal.dct_ops_test._np_dct2": ["signal.dct_ops_test._modify_input_for_dct", "numpy.arange", "numpy.sum", "numpy.cos", "numpy.sqrt", "<builtin>.range", "numpy.zeros_like"], "numpy.sqrt": [], "signal.dct_ops_test._np_dct3": ["numpy.array", "signal.dct_ops_test._modify_input_for_dct", "numpy.arange", "numpy.sqrt", "numpy.cos", "numpy.sum", "<builtin>.range", "numpy.zeros_like"], "signal.dct_ops_test._np_dct4": ["numpy.array", "signal.dct_ops_test._modify_input_for_dct", "numpy.arange", "numpy.sqrt", "numpy.cos", "numpy.sum", "<builtin>.range", "numpy.zeros_like"], "signal.dct_ops_test.DCTOpsTest._compare": ["parameterized.TestCase.assertAllClose", "signal.dct_ops.dct", "parameterized.TestCase.assertEqual", "signal.dct_ops.idct"], "signal.dct_ops.dct": [], "parameterized.TestCase.assertEqual": [], "parameterized.TestCase.assertAllClose": [], "signal.dct_ops.idct": [], "itertools.product": [], "signal.dct_ops_test.DCTOpsTest": ["itertools.product", "testing.parameterized.parameters"], "testing.parameterized.parameters": [], "signal.dct_ops_test.DCTOpsTest.test_random": ["signal.dct_ops_test.DCTOpsTest._compare", "numpy.random.choice", "parameterized.TestCase.session", "numpy.random.rand", "numpy.random.randint"], "parameterized.TestCase.session": [], "numpy.random.rand": [], "numpy.random.randint": [], "numpy.random.choice": [], "signal.dct_ops_test.DCTOpsTest.test_error": ["signal.dct_ops.dct", "numpy.random.rand", "parameterized.TestCase.assertRaises"], "parameterized.TestCase.assertRaises": [], "platform.test.main": []}