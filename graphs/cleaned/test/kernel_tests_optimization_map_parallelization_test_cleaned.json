{"optimization.map_parallelization_test": ["platform.test.main"], "optimization.map_parallelization_test._test_combinations": ["functools.reduce"], "optimization.map_parallelization_test._test_combinations.assert_greater": ["ops.control_flow_ops.Assert", "ops.math_ops.greater", "framework.ops.control_dependencies"], "ops.math_ops.greater": [], "ops.control_flow_ops.Assert": [], "framework.ops.control_dependencies": [], "optimization.map_parallelization_test._test_combinations.<list1>.<lambda1>": [], "optimization.map_parallelization_test._test_combinations.<list1>.<lambda2>": [], "optimization.map_parallelization_test._test_combinations.reduce_fn": ["framework.combinations.combine", "framework.combinations.NamedObject"], "framework.combinations.NamedObject": [], "framework.combinations.combine": [], "functools.reduce": [], "kernel_tests.test_base.default_test_combinations": [], "optimization.map_parallelization_test.MapParallelizationTest": ["framework.combinations.combine", "framework.combinations.generate", "framework.combinations.times", "kernel_tests.test_base.default_test_combinations", "optimization.map_parallelization_test._test_combinations"], "framework.combinations.times": [], "framework.combinations.generate": [], "optimization.map_parallelization_test.MapParallelizationTest.testMapParallelization": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "ops.options.Options", "ops.testing.assert_next", "<builtin>.range"], "ops.testing.assert_next": [], "dataset_ops.Dataset.range": [], "ops.options.Options": [], "<builtin>.range": [], "test_base.DatasetTestBase.assertDatasetProduces": [], "optimization.map_parallelization_test.MapParallelizationTest.testCapturedConstant": ["test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.range", "<builtin>.range", "ops.options.Options", "framework.constant_op.constant", "ops.testing.assert_next"], "framework.constant_op.constant": [], "optimization.map_parallelization_test.MapParallelizationTest.testCapturedConstant.fn": [], "optimization.map_parallelization_test.MapParallelizationTest.testCapturedVariable": ["ops.variables.Variable", "test_base.DatasetTestBase.assertDatasetProduces", "test_base.DatasetTestBase.evaluate", "dataset_ops.Dataset.range", "<builtin>.range", "ops.options.Options", "ops.testing.assert_next", "ops.variables.global_variables_initializer"], "ops.variables.Variable": [], "optimization.map_parallelization_test.MapParallelizationTest.testCapturedVariable.fn": [], "ops.variables.global_variables_initializer": [], "test_base.DatasetTestBase.evaluate": [], "optimization.map_parallelization_test.MapParallelizationTest.testAutotuneOption": ["ops.options.Options", "ops.testing.assert_next", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "optimization.map_parallelization_test.MapParallelizationTest.testAutotuneOption.<lambda1>": [], "optimization.map_parallelization_test.MapParallelizationTest.testNoParallelizationInsideInterleave": ["ops.options.Options", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "optimization.map_parallelization_test.MapParallelizationTest.testNoParallelizationInsideInterleave.func": ["ops.testing.assert_next", "dataset_ops.Dataset.range"], "optimization.map_parallelization_test.MapParallelizationTest.testNoParallelizationInsideInterleave.func.<lambda1>": [], "optimization.map_parallelization_test.MapParallelizationTest.testNoParallelizationInsideFlatMap": ["ops.options.Options", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "optimization.map_parallelization_test.MapParallelizationTest.testNoParallelizationInsideFlatMap.func": ["ops.testing.assert_next", "dataset_ops.Dataset.range"], "optimization.map_parallelization_test.MapParallelizationTest.testNoParallelizationInsideFlatMap.func.<lambda1>": [], "platform.test.main": []}