{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._RNNCellWithConstants.__init__": ["<builtin>.super"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._RNNCellWithConstants.build": ["tensorflow.python.keras.layers.Layer.add_weight"], "tensorflow.python.keras.layers.Layer.add_weight": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._RNNCellWithConstants.call": ["tensorflow.python.keras.backend.dot"], "tensorflow.python.keras.backend.dot": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._RNNCellWithConstants.get_config": ["<builtin>.super", "<builtin>.dict", "<builtin>.list"], "<builtin>.list": [], "<builtin>.dict": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._ResidualLSTMCell.call": ["<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._AddOneCell.state_size": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._AddOneCell.output_size": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._AddOneCell.call": ["tensorflow.python.ops.math_ops.reduce_mean", "tensorflow.python.util.nest.map_structure"], "tensorflow.python.ops.math_ops.reduce_mean": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._AddOneCell.call.<lambda1>": [], "tensorflow.python.util.nest.map_structure": [], "tensorflow.python.keras.combinations.combine": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest": ["tensorflow.python.keras.combinations.combine", "absl.testing.parameterized.named_parameters", "tensorflow.python.keras.testing_utils.generate_combinations_with_testcase_name", "tensorflow.python.keras.keras_parameterized.run_all_keras_modes", "tensorflow.python.keras.combinations.generate"], "tensorflow.python.keras.combinations.generate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_timedistributed_dense": ["tensorflow.python.training.tracking.util.list_objects", "tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.keras_parameterized.TestCase.assertIn", "tensorflow.python.keras.layers.Dense", "<builtin>.id", "tensorflow.python.keras.layers.TimeDistributed", "numpy.random.random"], "tensorflow.python.keras.models.Sequential": [], "tensorflow.python.keras.layers.Dense": [], "tensorflow.python.keras.layers.TimeDistributed": [], "numpy.random.random": [], "<builtin>.id": [], "tensorflow.python.training.tracking.util.list_objects": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertIn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_timedistributed_static_batch_size": ["tensorflow.python.keras.layers.TimeDistributed", "numpy.random.random", "tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.layers.Dense"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_timedistributed_invalid_init": ["tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex", "tensorflow.python.keras.layers.TimeDistributed", "numpy.zeros", "tensorflow.python.framework.constant_op.constant"], "numpy.zeros": [], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_timedistributed_conv2d": ["tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.keras_parameterized.TestCase.cached_session", "tensorflow.python.keras.models.model_from_json", "tensorflow.python.keras.layers.Conv2D", "tensorflow.python.keras.layers.Activation", "tensorflow.python.keras.layers.TimeDistributed", "numpy.random.random"], "tensorflow.python.keras.keras_parameterized.TestCase.cached_session": [], "tensorflow.python.keras.layers.Conv2D": [], "tensorflow.python.keras.layers.Activation": [], "tensorflow.python.keras.models.model_from_json": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_timedistributed_stacked": ["tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.keras_parameterized.TestCase.cached_session", "tensorflow.python.keras.layers.Dense", "tensorflow.python.keras.layers.Activation", "tensorflow.python.keras.layers.TimeDistributed", "numpy.random.random"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_regularizers": ["<builtin>.len", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.keras_parameterized.TestCase.cached_session", "tensorflow.python.keras.layers.Dense", "tensorflow.python.keras.layers.Activation", "tensorflow.python.keras.layers.TimeDistributed"], "<builtin>.len": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_learning_phase": ["tensorflow.python.keras.models.Model", "numpy.mean", "tensorflow.python.keras.layers.Input", "tensorflow.python.keras.layers.TimeDistributed", "tensorflow.python.keras.keras_parameterized.TestCase.cached_session", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose", "tensorflow.python.keras.layers.Dropout", "numpy.random.seed", "numpy.random.random"], "numpy.random.seed": [], "tensorflow.python.keras.layers.Input": [], "tensorflow.python.keras.layers.Dropout": [], "tensorflow.python.keras.models.Model": [], "numpy.mean": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_batchnorm": ["numpy.random.normal", "tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.keras_parameterized.TestCase.cached_session", "numpy.array", "tensorflow.python.keras.layers.BatchNormalization", "numpy.broadcast_to", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose", "numpy.array_equal", "tensorflow.python.keras.layers.TimeDistributed"], "tensorflow.python.keras.layers.BatchNormalization": [], "numpy.array": [], "numpy.array_equal": [], "numpy.random.normal": [], "numpy.broadcast_to": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_trainable": ["<builtin>.len", "tensorflow.python.keras.layers.Input", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.layers.BatchNormalization", "tensorflow.python.keras.layers.TimeDistributed"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_masked_embedding_and_unspecified_shape": ["numpy.random.randint", "<builtin>.range", "numpy.any", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.backend.function", "tensorflow.python.keras.layers.SimpleRNN", "tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.keras_parameterized.TestCase.cached_session", "tensorflow.python.keras.keras_parameterized.TestCase.assertIs", "tensorflow.python.keras.layers.Embedding", "tensorflow.python.keras.layers.TimeDistributed", "numpy.random.random"], "tensorflow.python.keras.layers.Embedding": [], "tensorflow.python.keras.layers.SimpleRNN": [], "numpy.random.randint": [], "<builtin>.range": [], "tensorflow.python.keras.backend.function": [], "numpy.any": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertIs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_masking_layer": ["numpy.random.randint", "<builtin>.range", "tensorflow.python.keras.backend.function", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.layers.Dense", "tensorflow.python.keras.layers.TimeDistributed", "numpy.random.random", "tensorflow.python.keras.layers.Masking"], "tensorflow.python.keras.layers.Masking": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_different_time_shapes": ["tensorflow.python.keras.backend.placeholder", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex", "tensorflow.python.keras.layers.Dense", "tensorflow.python.keras.layers.TimeDistributed"], "tensorflow.python.keras.backend.placeholder": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_invalid_dimensions": ["tensorflow.python.keras.layers.TimeDistributed", "tensorflow.python.keras.backend.placeholder", "tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex", "tensorflow.python.keras.layers.Dense"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_reshape": ["tensorflow.python.keras.layers.SimpleRNNCell", "tensorflow.python.keras.keras_parameterized.TestCase.assertFalse", "tensorflow.python.keras.keras_parameterized.TestCase.assertTrue", "tensorflow.python.keras.layers.Dense", "tensorflow.python.keras.layers.TimeDistributed", "tensorflow.python.keras.layers.RNN", "tensorflow.python.keras.layers.Layer.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_reshape.NoReshapeLayer.call": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertTrue": [], "tensorflow.python.keras.layers.SimpleRNNCell": [], "tensorflow.python.keras.layers.RNN": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertFalse": [], "tensorflow.python.keras.layers.Layer.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_output_shape_return_types": ["tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.layers.TimeDistributed", "tensorflow.python.keras.backend.placeholder"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_output_shape_return_types.TestLayer.call": ["tensorflow.python.ops.array_ops.concat"], "tensorflow.python.ops.array_ops.concat": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_output_shape_return_types.TestLayer.compute_output_shape": ["tensorflow.python.framework.tensor_shape.TensorShape"], "tensorflow.python.framework.tensor_shape.TensorShape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_output_shape_return_types.TestListLayer.compute_output_shape": ["<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_output_shape_return_types.TestTupleLayer.compute_output_shape": ["<builtin>.super", "<builtin>.tuple"], "<builtin>.tuple": [], "tensorflow.python.keras.keras_parameterized.run_all_keras_modes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_mask_first_implementation": ["tensorflow.python.keras.models.Model", "tensorflow.python.keras.layers.Input", "tensorflow.python.keras.testing_utils.should_run_eagerly", "numpy.array", "tensorflow.python.keras.layers.LSTM", "tensorflow.python.keras.layers.TimeDistributed", "numpy.random.seed", "tensorflow.python.keras.keras_parameterized.TestCase.assertNotAllClose", "tensorflow.python.keras.layers.Masking"], "tensorflow.python.keras.layers.LSTM": [], "tensorflow.python.keras.testing_utils.should_run_eagerly": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertNotAllClose": [], "tensorflow.python.keras.testing_utils.generate_combinations_with_testcase_name": [], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_ragged_input": ["tensorflow.python.keras.models.Model", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.testing_utils.should_run_eagerly", "tensorflow.python.keras.Input", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.convert_ragged_tensor_value", "tensorflow.python.keras.keras_parameterized.TestCase.skipTest", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.keras.layers.TimeDistributed", "numpy.random.seed", "tensorflow.python.keras.layers.Masking"], "tensorflow.python.eager.context.executing_eagerly": [], "tensorflow.python.keras.keras_parameterized.TestCase.skipTest": [], "tensorflow.python.ops.ragged.ragged_factory_ops.constant": [], "tensorflow.python.keras.Input": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.convert_ragged_tensor_value": ["tensorflow.python.framework.ops.convert_to_tensor_v2_with_dispatch", "<builtin>.isinstance", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_nested_row_splits"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_ragged_input_with_batch_size": ["tensorflow.python.keras.models.Model", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.Input", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.convert_ragged_tensor_value", "tensorflow.python.keras.layers.Dense", "tensorflow.python.keras.layers.TimeDistributed", "numpy.random.seed", "tensorflow.python.keras.layers.Masking"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_set_static_shape": ["tensorflow.python.keras.layers.TimeDistributed", "tensorflow.python.keras.keras_parameterized.TestCase.assertListEqual", "tensorflow.python.keras.layers.Conv2D", "tensorflow.python.keras.Input"], "tensorflow.python.keras.keras_parameterized.TestCase.assertListEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_mimo": ["tensorflow.python.keras.models.Model", "tensorflow.python.keras.testing_utils.should_run_eagerly", "tensorflow.python.keras.Input", "tensorflow.python.keras.layers.TimeDistributed", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose", "tensorflow.python.keras.layers.Dense", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_mimo.TestLayer.__init__", "numpy.random.seed", "tensorflow.python.ops.array_ops.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_mimo.TestLayer.__init__": ["<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_mimo.TestLayer.call": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.TimeDistributedTest.test_TimeDistributed_with_mimo.TestLayer.compute_output_shape": [], "tensorflow.python.ops.array_ops.constant": [], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest": ["tensorflow.python.keras.testing_utils.run_v2_only", "absl.testing.parameterized.parameters", "tensorflow.python.platform.test.disable_with_predicate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_bidirectional": ["tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.keras.layers.SimpleRNN", "tensorflow.python.training.tracking.util.list_objects", "tensorflow.python.keras.models.Sequential", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.keras.models.model_from_json", "<builtin>.id", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertListEqual"], "tensorflow.python.platform.test.TestCase.cached_session": [], "tensorflow.python.keras.layers.Bidirectional": [], "tensorflow.python.platform.test.TestCase.assertIn": [], "tensorflow.python.platform.test.TestCase.assertListEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_bidirectional_invalid_init": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.keras.layers.Bidirectional", "numpy.zeros", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.platform.test.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_bidirectional_weight_loading": ["tensorflow.python.keras.layers.SimpleRNN", "tensorflow.python.keras.models.Sequential", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "numpy.random.random"], "tensorflow.python.platform.test.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_bidirectional_stacked": ["tensorflow.python.keras.models.Model", "tensorflow.python.keras.layers.Input", "tensorflow.python.keras.layers.SimpleRNN", "tensorflow.python.keras.models.Sequential", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "numpy.random.random"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_bidirectional_statefulness": ["tensorflow.python.eager.context.executing_eagerly", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_bidirectional_statefulness.run_test", "tensorflow.python.framework.test_util.enable_output_all_intermediates"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_bidirectional_statefulness.run_test": ["tensorflow.python.keras.models.Model", "tensorflow.python.keras.layers.Input", "tensorflow.python.keras.layers.SimpleRNN", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "numpy.random.random"], "tensorflow.python.platform.test.TestCase.assertTrue": [], "tensorflow.python.framework.test_util.enable_output_all_intermediates": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value": ["<builtin>.len", "tensorflow.python.keras.backend.function", "tensorflow.python.keras.Input", "numpy.random.rand", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value.<lambda4>", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._to_list", "tensorflow.python.keras.backend.reverse", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.layers.LSTM", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value.<lambda2>", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value.<lambda1>", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value.<lambda3>", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value.<lambda5>"], "numpy.random.rand": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value.<lambda3>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value.<lambda4>": ["numpy.concatenate"], "numpy.concatenate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_merged_value.<lambda5>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._to_list": ["<builtin>.isinstance"], "tensorflow.python.keras.backend.reverse": [], "<builtin>.zip": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_with_time_major_input": ["numpy.array", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.keras.layers.RNN", "tensorflow.python.keras.layers.AbstractRNNCell.__init__", "tensorflow.python.ops.array_ops.transpose", "tensorflow.python.ops.array_ops.sequence_mask", "tensorflow.python.ops.math_ops.range"], "tensorflow.python.ops.array_ops.zeros": [], "tensorflow.python.ops.math_ops.range": [], "tensorflow.python.ops.array_ops.sequence_mask": [], "tensorflow.python.keras.layers.AbstractRNNCell.__init__": [], "tensorflow.python.ops.array_ops.transpose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_dropout": ["tensorflow.python.keras.Input", "numpy.random.rand", "tensorflow.python.keras.Model", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._to_list", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.layers.LSTM"], "tensorflow.python.keras.Model": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_state_reuse": ["tensorflow.python.keras.models.Model", "<builtin>.len", "tensorflow.python.keras.layers.Input", "<builtin>.isinstance", "numpy.random.rand", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.keras.layers.LSTM", "tensorflow.python.platform.test.TestCase.assertRaises"], "tensorflow.python.platform.test.TestCase.assertRaises": [], "<builtin>.isinstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_state_reuse_with_np_input": ["numpy.random.rand", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.keras.layers.LSTM"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_trainable": ["<builtin>.len", "tensorflow.python.keras.layers.Input", "tensorflow.python.keras.layers.SimpleRNN", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_updates": ["<builtin>.len", "tensorflow.python.keras.layers.Input", "tensorflow.python.keras.layers.SimpleRNN", "tensorflow.python.platform.test.TestCase.skipTest", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.keras.engine.base_layer_utils.call_context"], "tensorflow.python.platform.test.TestCase.skipTest": [], "tensorflow.python.keras.engine.base_layer_utils.call_context": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_losses": ["tensorflow.python.keras.layers.SimpleRNN", "tensorflow.python.keras.layers.Bidirectional", "<builtin>.len", "tensorflow.python.keras.layers.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_with_constants": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._RNNCellWithConstants.__init__", "tensorflow.python.keras.layers.Bidirectional.from_config", "tensorflow.python.keras.Input", "copy.deepcopy", "tensorflow.python.keras.Model", "tensorflow.python.keras.utils.generic_utils.CustomObjectScope", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "numpy.zeros", "tensorflow.python.keras.layers.RNN", "numpy.random.random"], "tensorflow.python.keras.utils.generic_utils.CustomObjectScope": [], "copy.deepcopy": [], "tensorflow.python.keras.layers.Bidirectional.from_config": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_with_constants_layer_passing_initial_state": ["numpy.mean", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._RNNCellWithConstants.__init__", "tensorflow.python.keras.layers.Bidirectional.from_config", "tensorflow.python.keras.Input", "copy.deepcopy", "tensorflow.python.keras.Model", "tensorflow.python.keras.utils.generic_utils.CustomObjectScope", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "numpy.zeros", "tensorflow.python.keras.layers.RNN", "numpy.random.random"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_output_shape": ["tensorflow.python.platform.test.TestCase.assertLen", "tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.platform.test.TestCase.assertEqual": [], "tensorflow.python.platform.test.TestCase.assertLen": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_output_shape_return_types": ["tensorflow.python.keras.backend.placeholder", "tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_output_shape_return_types.TestLayer.call": ["tensorflow.python.ops.array_ops.concat"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_output_shape_return_types.TestLayer.compute_output_shape": ["tensorflow.python.framework.tensor_shape.TensorShape"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_output_shape_return_types.TestListLayer.compute_output_shape": ["<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_output_shape_return_types.TestTupleLayer.compute_output_shape": ["<builtin>.super", "<builtin>.tuple"], "tensorflow.python.platform.test.disable_with_predicate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_last_output_with_masking": ["tensorflow.python.keras.Input", "numpy.random.rand", "tensorflow.python.platform.test.TestCase.assertLen", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.keras.Model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._to_list", "tensorflow.python.keras.layers.LSTM", "numpy.concatenate", "tensorflow.python.keras.layers.Masking"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_sequence_output_with_masking": ["tensorflow.python.keras.Input", "numpy.random.rand", "tensorflow.python.platform.test.TestCase.assertLen", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.keras.Model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._to_list", "numpy.zeros", "tensorflow.python.keras.layers.Masking"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_custom_backward_layer": ["tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.keras.layers.SimpleRNN", "tensorflow.python.training.tracking.util.list_objects", "tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.keras.models.model_from_json", "<builtin>.id", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertListEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_custom_backward_layer_error_check": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.keras.layers.LSTM"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_custom_backward_layer_serialization": ["tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.platform.test.TestCase.assertDictEqual", "tensorflow.python.keras.layers.Bidirectional.from_config", "tensorflow.python.keras.layers.LSTM"], "tensorflow.python.platform.test.TestCase.assertDictEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_rnn_layer_name": ["tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.keras.layers.Bidirectional.from_config", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.keras.layers.LSTM"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_custom_backward_rnn_layer_name": ["tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.keras.layers.Bidirectional.from_config", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.keras.layers.LSTM"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_rnn_with_customized_cell": ["tensorflow.python.keras.Input", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.Bidirectional", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._to_list", "tensorflow.python.keras.layers.LSTMCell.__init__", "tensorflow.python.keras.layers.RNN", "numpy.random.random"], "tensorflow.python.keras.layers.LSTMCell.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_rnn_with_customized_cell_stacking": ["tensorflow.python.keras.Input", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.Bidirectional", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._to_list", "tensorflow.python.keras.layers.LSTMCell.__init__", "tensorflow.python.keras.layers.RNN", "numpy.random.random"], "tensorflow.python.keras.testing_utils.run_v2_only": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_wrapped_rnn_cell": ["tensorflow.python.keras.Input", "tensorflow.python.keras.layers.rnn_cell_wrapper_v2.ResidualWrapper", "tensorflow.python.keras.layers.LSTMCell", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.Bidirectional", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test._to_list", "tensorflow.python.keras.layers.RNN", "numpy.random.random"], "tensorflow.python.keras.layers.LSTMCell": [], "tensorflow.python.keras.layers.rnn_cell_wrapper_v2.ResidualWrapper": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_ragged_input": ["<builtin>.dict", "tensorflow.python.keras.backend.function", "tensorflow.python.keras.Input", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.convert_ragged_tensor_value", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.keras.layers.Bidirectional", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_ragged_input.<lambda2>", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_ragged_input.<lambda3>", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_ragged_input.<lambda1>", "tensorflow.python.keras.layers.LSTM", "numpy.random.seed", "tensorflow.python.ops.math_ops.cast", "tensorflow.python.keras.layers.core.Lambda"], "tensorflow.python.ops.math_ops.cast": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_ragged_input.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_ragged_input.<lambda2>": ["tensorflow.python.ops.array_ops.concat"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_Bidirectional_ragged_input.<lambda3>": [], "tensorflow.python.keras.layers.core.Lambda": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.BidirectionalTest.test_full_input_spec": ["tensorflow.python.keras.layers.Input", "tensorflow.python.keras.layers.SimpleRNN", "tensorflow.python.keras.Model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.layers.Bidirectional", "tensorflow.python.platform.test.TestCase.assertNotAllClose"], "tensorflow.python.platform.test.TestCase.assertNotAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.ExampleWrapper.call": ["tensorflow.python.keras.layers.Wrapper.layer"], "tensorflow.python.keras.layers.Wrapper.layer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\wrappers_test.WrapperTest.test_wrapper_from_config_no_mutation": ["tensorflow.python.keras.layers.Wrapper.get_config", "absl.testing.parameterized.TestCase.assertEqual", "tensorflow.python.keras.layers.Wrapper.__init__", "tensorflow.python.keras.layers.Dense", "tensorflow.python.keras.layers.Wrapper.from_config"], "tensorflow.python.keras.layers.Wrapper.__init__": [], "tensorflow.python.keras.layers.Wrapper.get_config": [], "absl.testing.parameterized.TestCase.assertEqual": [], "tensorflow.python.keras.layers.Wrapper.from_config": [], "tensorflow.python.framework.ops.convert_to_tensor_v2_with_dispatch": [], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_nested_row_splits": [], "tensorflow.python.platform.test.main": []}
