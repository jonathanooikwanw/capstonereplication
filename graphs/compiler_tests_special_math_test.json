{"Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test": ["<builtin>.int", "tensorflow.python.platform.test.main", "tensorflow.python.eager.def_function.function", "absl.flags.DEFINE_bool"], "absl.flags.DEFINE_bool": [], "<builtin>.int": [], "tensorflow.python.eager.def_function.function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igamma": ["tensorflow.python.ops.math_ops.igamma"], "tensorflow.python.ops.math_ops.igamma": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igammac": ["tensorflow.python.ops.math_ops.igammac"], "tensorflow.python.ops.math_ops.igammac": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._polygamma": ["tensorflow.python.ops.math_ops.polygamma"], "tensorflow.python.ops.math_ops.polygamma": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._zeta": ["tensorflow.python.ops.math_ops.zeta"], "tensorflow.python.ops.math_ops.zeta": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.implicit_reparameterization_grad": ["tensorflow.python.ops.gen_math_ops.igamma_grad_a", "tensorflow.python.ops.math_ops.lgamma", "tensorflow.python.ops.math_ops.exp", "tensorflow.python.ops.math_ops.xlogy"], "tensorflow.python.ops.math_ops.xlogy": [], "tensorflow.python.ops.math_ops.lgamma": [], "tensorflow.python.ops.math_ops.exp": [], "tensorflow.python.ops.gen_math_ops.igamma_grad_a": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._log1p": ["tensorflow.python.ops.math_ops.log1p"], "tensorflow.python.ops.math_ops.log1p": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest.setUp": ["<builtin>.super", "<builtin>.int", "os.urandom", "numpy.random.seed"], "os.urandom": [], "numpy.random.seed": [], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest.adjust_tolerance_for_tpu": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest._test_range": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest.adjust_tolerance_for_tpu", "numpy.log1p", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._log1p", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "numpy.exp", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope"], "numpy.random.uniform": [], "numpy.exp": [], "numpy.log1p": [], "tensorflow.compiler.tests.xla_test.XLATestCase.session": [], "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose": [], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest.testSmallX": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest._test_range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest.testGreaterThanNegativeTwentyExponent": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest._test_range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest.testGreaterThanNegativeTenExponent": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest._test_range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest.testGreaterThanNegativeFiveExponent": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest._test_range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest.testXGreaterThanOneTenth": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest._test_range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest.testXGreaterThanOne": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.Log1pTest._test_range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest.setUp": ["<builtin>.super", "<builtin>.int", "os.urandom", "numpy.random.seed"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest.adjust_tolerance_for_tpu": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest.testBadValues": ["tensorflow.compiler.tests.xla_test.XLATestCase.assertTrue", "numpy.float64", "numpy.isnan", "numpy.all", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._zeta", "numpy.isinf"], "numpy.float64": [], "numpy.isinf": [], "numpy.all": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertTrue": [], "numpy.isnan": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest.testLargeXSmallQ": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._zeta", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest.adjust_tolerance_for_tpu", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "scipy.special.zeta", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.skipTest"], "tensorflow.compiler.tests.xla_test.XLATestCase.skipTest": [], "scipy.special.zeta": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest.testSmallValues": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest.adjust_tolerance_for_tpu", "numpy.finfo", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "scipy.special.zeta", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._zeta"], "numpy.finfo": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest.testMediumValues": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest.adjust_tolerance_for_tpu", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "scipy.special.zeta", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._zeta"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.ZetaTest.testLargeValues": ["tensorflow.compiler.tests.xla_test.XLATestCase.session", "scipy.special.zeta", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "<builtin>.int", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._zeta"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.PolygammaTest.setUp": ["<builtin>.super", "<builtin>.int", "os.urandom", "numpy.random.seed"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.PolygammaTest.adjust_tolerance_for_tpu": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.PolygammaTest.testBadValues": ["tensorflow.compiler.tests.xla_test.XLATestCase.assertTrue", "numpy.float64", "numpy.isnan", "numpy.all", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._polygamma", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.PolygammaTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.PolygammaTest.testRecoverDigamma": ["scipy.special.digamma", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.PolygammaTest.adjust_tolerance_for_tpu", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._polygamma", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.skipTest"], "scipy.special.digamma": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.PolygammaTest.testSmallN": ["scipy.special.polygamma", "numpy.random.randint", "numpy.finfo", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.PolygammaTest.adjust_tolerance_for_tpu", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._polygamma", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope"], "numpy.random.randint": [], "scipy.special.polygamma": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.PolygammaTest.testMediumLargeN": ["scipy.special.polygamma", "numpy.random.randint", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.PolygammaTest.adjust_tolerance_for_tpu", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._polygamma", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.setUp": ["<builtin>.super", "<builtin>.int", "os.urandom", "numpy.random.seed"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.maybe_skip_test": ["tensorflow.compiler.tests.xla_test.XLATestCase.skipTest"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.adjust_tolerance_for_tpu": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.testLargeXSmallA": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.adjust_tolerance_for_tpu", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igamma", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.maybe_skip_test", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "scipy.special.gammainc", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope"], "scipy.special.gammainc": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.testSmallValues": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.adjust_tolerance_for_tpu", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igamma", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.maybe_skip_test", "numpy.finfo", "scipy.special.gammainc", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.testMediumValues": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.adjust_tolerance_for_tpu", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igamma", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.maybe_skip_test", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "scipy.special.gammainc", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.testLargeValues": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igamma", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "scipy.special.gammainc", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "<builtin>.int", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.skipTest"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.testGradMediumValues": ["tensorflow.compiler.tests.xla_test.XLATestCase.assertLessEqual", "tensorflow.python.ops.gradient_checker_v2.max_error", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.maybe_skip_test", "tensorflow.python.ops.gradient_checker_v2.compute_gradient", "tensorflow.python.framework.constant_op.constant", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope"], "tensorflow.python.framework.constant_op.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.testGradMediumValues.<lambda1>": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igamma"], "tensorflow.python.ops.gradient_checker_v2.compute_gradient": [], "tensorflow.python.ops.gradient_checker_v2.max_error": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertLessEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.testGradLargeValues": ["tensorflow.compiler.tests.xla_test.XLATestCase.assertLessEqual", "tensorflow.python.ops.gradient_checker_v2.max_error", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.maybe_skip_test", "tensorflow.python.ops.gradient_checker_v2.compute_gradient", "tensorflow.python.framework.constant_op.constant", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "<builtin>.int", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.testGradLargeValues.<lambda1>": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igamma"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.testRandomGammaGradSmallValues": ["tensorflow.python.ops.gen_random_ops.random_gamma_grad", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.adjust_tolerance_for_tpu", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.implicit_reparameterization_grad", "numpy.logical_or", "numpy.isnan", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.maybe_skip_test", "numpy.finfo", "tensorflow.python.framework.constant_op.constant", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "numpy.isinf"], "tensorflow.python.ops.gen_random_ops.random_gamma_grad": [], "numpy.logical_or": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.testRandomGammaGradMediumValues": ["tensorflow.python.ops.gen_random_ops.random_gamma_grad", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.adjust_tolerance_for_tpu", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.implicit_reparameterization_grad", "numpy.logical_or", "numpy.isnan", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammaTest.maybe_skip_test", "tensorflow.python.framework.constant_op.constant", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "numpy.isinf"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.setUp": ["<builtin>.super", "<builtin>.int", "os.urandom", "numpy.random.seed"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.maybe_skip_test": ["tensorflow.compiler.tests.xla_test.XLATestCase.skipTest"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.adjust_tolerance_for_tpu": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.testLargeXSmallA": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "scipy.special.gammaincc", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.adjust_tolerance_for_tpu", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igammac", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.maybe_skip_test"], "scipy.special.gammaincc": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.testSmallValues": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "scipy.special.gammaincc", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.adjust_tolerance_for_tpu", "numpy.finfo", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igammac", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.maybe_skip_test"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.testMediumValues": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "scipy.special.gammaincc", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.adjust_tolerance_for_tpu", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igammac", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "numpy.random.uniform", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.maybe_skip_test"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test.IgammacTest.testLargeValues": ["scipy.special.gammaincc", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\special_math_test._igammac", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "<builtin>.int", "numpy.random.uniform", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.skipTest"], "tensorflow.python.platform.test.main": []}
