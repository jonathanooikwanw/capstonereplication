{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._overload_of": ["<builtin>.type", "tensorflow.python.autograph.core.converter.Base.ctx.user.options.uses"], "<builtin>.type": [], "tensorflow.python.autograph.core.converter.Base.ctx.user.options.uses": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._as_lambda": ["tensorflow.python.autograph.pyct.templates.replace_as_expression"], "tensorflow.python.autograph.pyct.templates.replace_as_expression": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._as_binary_function": ["tensorflow.python.autograph.pyct.templates.replace_as_expression", "tensorflow.python.autograph.pyct.parser.parse_expression"], "tensorflow.python.autograph.pyct.parser.parse_expression": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._as_binary_operation": ["tensorflow.python.autograph.pyct.templates.replace_as_expression"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._as_unary_function": ["tensorflow.python.autograph.pyct.templates.replace_as_expression", "tensorflow.python.autograph.pyct.parser.parse_expression"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer.visit_Compare": ["tensorflow.python.autograph.core.converter.Base.ctx.user.options.uses", "tensorflow.python.autograph.core.converter.Base.generic_visit", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._as_lambda", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._as_binary_function", "<builtin>.list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._as_binary_operation", "<builtin>.zip", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._overload_of"], "tensorflow.python.autograph.core.converter.Base.generic_visit": [], "<builtin>.zip": [], "<builtin>.list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer.visit_UnaryOp": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._as_unary_function", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._overload_of", "tensorflow.python.autograph.core.converter.Base.generic_visit"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer.visit_BoolOp": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._as_binary_function", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._overload_of", "tensorflow.python.autograph.core.converter.Base.generic_visit", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.LogicalExpressionTransformer._as_lambda"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\logical_expressions.transform": ["tensorflow.python.autograph.core.converter.Base.__init__", "tensorflow.python.autograph.core.converter.Base.visit"], "tensorflow.python.autograph.core.converter.Base.__init__": [], "tensorflow.python.autograph.core.converter.Base.visit": []}
