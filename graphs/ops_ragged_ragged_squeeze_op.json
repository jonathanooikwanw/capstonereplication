{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_squeeze_op": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_squeeze_op.squeeze": ["<builtin>.all", "<builtin>.isinstance", "tensorflow.python.ops.math_ops.equal", "<builtin>.ValueError", "tensorflow.python.ops.array_ops.squeeze", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor", "tensorflow.python.ops.array_ops.get_positive_axis", "<builtin>.TypeError", "<builtin>.enumerate", "tensorflow.python.ops.array_ops.size", "<builtin>.list", "<builtin>.set", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_nested_row_splits", "<builtin>.range", "tensorflow.python.ops.math_ops.reduce_all", "tensorflow.python.ops.control_flow_ops.Assert", "tensorflow.python.ops.control_flow_ops.with_dependencies", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.ops.name_scope": [], "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor": [], "<builtin>.isinstance": [], "tensorflow.python.ops.array_ops.squeeze": [], "<builtin>.ValueError": [], "<builtin>.all": [], "<builtin>.TypeError": [], "tensorflow.python.ops.array_ops.get_positive_axis": [], "<builtin>.enumerate": [], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.ops.math_ops.equal": [], "tensorflow.python.ops.math_ops.reduce_all": [], "tensorflow.python.ops.control_flow_ops.Assert": [], "tensorflow.python.ops.array_ops.size": [], "tensorflow.python.ops.control_flow_ops.with_dependencies": [], "<builtin>.list": [], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_nested_row_splits": [], "<builtin>.set": [], "<builtin>.range": []}
