{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestReplicaContext.merge_call": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._get_test_variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._test_input_fn": ["tensorflow.python.data.ops.dataset_ops.DatasetV2.from_tensors"], "tensorflow.python.data.ops.dataset_ops.DatasetV2.from_tensors": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended.__init__", "<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended.__init__": ["tensorflow.python.distribute.input_lib.InputWorkers", "<builtin>.super"], "<builtin>.super": [], "tensorflow.python.distribute.input_lib.InputWorkers": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._call_for_each_replica": ["tensorflow.python.distribute.distribute_lib.ReplicaContext.__init__", "tensorflow.python.distribute.distribute_lib.StrategyExtendedV1._container_strategy"], "tensorflow.python.distribute.distribute_lib.StrategyExtendedV1._container_strategy": [], "tensorflow.python.distribute.distribute_lib.ReplicaContext.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._create_variable": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._get_test_variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._make_input_fn_iterator": ["tensorflow.python.distribute.input_lib.InputFunctionIterator", "tensorflow.python.distribute.distribute_lib.StrategyExtendedV1._container_strategy", "tensorflow.python.distribute.distribute_lib.InputContext"], "tensorflow.python.distribute.distribute_lib.InputContext": [], "tensorflow.python.distribute.input_lib.InputFunctionIterator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._distribute_datasets_from_function": ["tensorflow.python.distribute.distribute_lib.InputContext"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._local_results": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._reduce_to": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._experimental_run_steps_on_iterator": ["<builtin>.range", "tensorflow.python.distribute.input_lib.MultiStepContext"], "tensorflow.python.distribute.input_lib.MultiStepContext": [], "<builtin>.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._update": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._update_non_slot", "<builtin>.tuple"], "<builtin>.tuple": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._update_non_slot": ["tensorflow.python.util.nest.map_structure"], "tensorflow.python.util.nest.map_structure": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended._get_local_replica_id": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context", "tensorflow.python.distribute.distribution_strategy_context.get_strategy", "tensorflow.python.distribute.distribution_strategy_context.get_cross_replica_context", "tensorflow.python.distribute.distribution_strategy_context._get_default_strategy", "tensorflow.python.distribute.distribution_strategy_context.in_cross_replica_context", "tensorflow.python.distribute.distribution_strategy_context._get_default_replica_context", "tensorflow.python.distribute.distribution_strategy_context.has_strategy", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.platform.test.TestCase.assertFalse"], "tensorflow.python.distribute.distribution_strategy_context._get_default_replica_context": [], "tensorflow.python.distribute.distribution_strategy_context.get_replica_context": [], "tensorflow.python.platform.test.TestCase.assertIs": [], "tensorflow.python.distribute.distribution_strategy_context.get_cross_replica_context": [], "tensorflow.python.distribute.distribution_strategy_context.in_cross_replica_context": [], "tensorflow.python.platform.test.TestCase.assertFalse": [], "tensorflow.python.distribute.distribution_strategy_context._get_default_strategy": [], "tensorflow.python.distribute.distribution_strategy_context.get_strategy": [], "tensorflow.python.distribute.distribution_strategy_context.has_strategy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._run_in_and_out_of_scope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._run_in_and_out_of_scope.wrapper": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testBatchReduceTo", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testExperimentalRunStepsOnIterator", "tensorflow.python.distribute.distribute_lib.Strategy.scope", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdate", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateAutoGraph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testReduceTo", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testMakeInputFnIterator", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testReduceMeanAxis", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testReduceSumAxis", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testReduce", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateNonSlot", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateNonSlotAutoGraph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testBatchReduceTo": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testExperimentalRunStepsOnIterator": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.data.ops.dataset_ops.make_one_shot_iterator", "tensorflow.python.data.ops.dataset_ops.Dataset.from_tensors"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdate": ["tensorflow.python.ops.variables.Variable", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateAutoGraph": ["tensorflow.python.ops.variables.Variable", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateAutoGraph.test_fn", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testReduceTo": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateNonSlot": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.len"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testReduceMeanAxis": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testReduceSumAxis": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testReduce": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testMakeInputFnIterator": ["tensorflow.python.platform.test.TestCase.assertIsNotNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateNonSlotAutoGraph": ["tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateNonSlotAutoGraph.test_fn"], "tensorflow.python.distribute.distribute_lib.Strategy.scope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testCallForEachReplica": ["tensorflow.python.distribute.distribute_lib.Strategy.scope", "tensorflow.python.distribute.distribute_lib.Strategy.extended.call_for_each_replica", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testCallForEachReplica.run_fn": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context", "tensorflow.python.distribute.distribution_strategy_context.get_strategy", "tensorflow.python.distribute.distribution_strategy_context.get_cross_replica_context", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._get_test_variable", "tensorflow.python.distribute.distribution_strategy_context.in_cross_replica_context", "tensorflow.python.distribute.distribution_strategy_context.has_strategy", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.variable_scope.variable", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.assertDictEqual", "tensorflow.python.platform.test.TestCase.assertIsNotNone"], "tensorflow.python.platform.test.TestCase.assertIsNotNone": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "tensorflow.python.ops.variable_scope.variable": [], "tensorflow.python.platform.test.TestCase.assertDictEqual": [], "tensorflow.python.distribute.distribute_lib.Strategy.extended.call_for_each_replica": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testScope": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context", "tensorflow.python.distribute.distribution_strategy_context.get_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "tensorflow.python.distribute.distribution_strategy_context.get_cross_replica_context", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._get_test_variable", "tensorflow.python.distribute.distribution_strategy_context.in_cross_replica_context", "tensorflow.python.distribute.distribution_strategy_context.has_strategy", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.variable_scope.variable", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__", "tensorflow.python.distribute.distribute_lib.Strategy.scope", "tensorflow.python.platform.test.TestCase.assertDictEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testScopeDeviceNestingError": ["tensorflow.python.framework.ops.device", "tensorflow.python.distribute.distribution_strategy_context.get_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "tensorflow.python.platform.test.TestCase.assertIs", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.distribute.distribute_lib.Strategy.scope"], "tensorflow.python.framework.ops.device": [], "tensorflow.python.platform.test.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testScopeVarCreatorNestingError": ["tensorflow.python.ops.variable_scope.variable_creator_scope", "tensorflow.python.distribute.distribution_strategy_context.get_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "tensorflow.python.platform.test.TestCase.assertIs", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.distribute.distribute_lib.Strategy.scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testScopeVarCreatorNestingError.creator": [], "tensorflow.python.ops.variable_scope.variable_creator_scope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testScopeVarScopeNestingError": ["tensorflow.python.distribute.distribution_strategy_context.get_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertIs", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.distribute.distribute_lib.Strategy.scope"], "tensorflow.python.framework.ops.Graph": [], "tensorflow.python.ops.variable_scope.variable_scope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testSettingSynchronizationAndAggregation": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._get_test_variable", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "tensorflow.python.ops.variable_scope.variable", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__", "tensorflow.python.distribute.distribute_lib.Strategy.scope", "tensorflow.python.platform.test.TestCase.assertDictEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testSetStrategy": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context", "tensorflow.python.distribute.distribution_strategy_context.get_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "tensorflow.python.distribute.distribution_strategy_context.get_cross_replica_context", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._get_test_variable", "tensorflow.python.distribute.distribution_strategy_context.experimental_set_strategy", "tensorflow.python.distribute.distribution_strategy_context.in_cross_replica_context", "tensorflow.python.distribute.distribution_strategy_context.has_strategy", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.variable_scope.variable", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__", "tensorflow.python.platform.test.TestCase.assertDictEqual"], "tensorflow.python.distribute.distribution_strategy_context.experimental_set_strategy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testSetStrategyInScope": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "tensorflow.python.distribute.distribution_strategy_context.experimental_set_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.distribute.distribute_lib.Strategy.scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testSameScopeNesting": ["tensorflow.python.distribute.distribution_strategy_context.get_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "tensorflow.python.platform.test.TestCase.assertIs", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.distribute.distribute_lib.Strategy.scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._run_in_and_out_of_scope"], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testReductions_acceptStringOps": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.distribute.distribute_lib.Strategy.reduce", "tensorflow.python.distribute.distribute_lib.Strategy.extended.batch_reduce_to", "tensorflow.python.distribute.distribute_lib.Strategy.extended.reduce_to", "tensorflow.python.platform.test.TestCase.evaluate", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__"], "tensorflow.python.distribute.distribute_lib.Strategy.reduce": [], "tensorflow.python.distribute.distribute_lib.Strategy.extended.reduce_to": [], "tensorflow.python.distribute.distribute_lib.Strategy.extended.batch_reduce_to": [], "tensorflow.python.platform.test.TestCase.assertAllEqual": [], "tensorflow.python.data.ops.dataset_ops.Dataset.from_tensors": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testExperimentalRunStepsOnIterator.<lambda1>": ["tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.data.ops.dataset_ops.make_one_shot_iterator": [], "tensorflow.python.ops.variables.Variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdate.assign_fn": ["tensorflow.python.platform.test.TestCase.assertIs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateAutoGraph.assign_fn": ["tensorflow.python.autograph.core.converter_testing.is_inside_generated_code", "tensorflow.python.platform.test.TestCase.assertTrue"], "tensorflow.python.autograph.core.converter_testing.is_inside_generated_code": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateAutoGraph.test_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateNonSlot.<lambda1>": [], "<builtin>.len": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateNonSlotAutoGraph.update_fn": ["tensorflow.python.autograph.core.converter_testing.is_inside_generated_code", "tensorflow.python.platform.test.TestCase.assertTrue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testUpdateNonSlotAutoGraph.test_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.TestStrategyTest.testClusterResolverDefaultNotImplemented": ["tensorflow.python.distribute.cluster_resolver.SimpleClusterResolver", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.platform.test.TestCase.assertIs", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy.__init__", "tensorflow.python.training.server_lib.ClusterSpec"], "tensorflow.python.platform.test.TestCase.assertIsNone": [], "tensorflow.python.training.server_lib.ClusterSpec": [], "tensorflow.python.distribute.cluster_resolver.SimpleClusterResolver": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy2.__init__": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended.__init__", "<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestExtended2._create_variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testMergeCall": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "tensorflow.python.distribute.distribution_strategy_context._get_default_replica_context", "tensorflow.python.platform.test.TestCase.assertIs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testMergeCall.merge_fn": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context", "tensorflow.python.distribute.distribution_strategy_context.get_strategy", "tensorflow.python.distribute.distribution_strategy_context.get_cross_replica_context", "tensorflow.python.distribute.distribution_strategy_context._get_default_strategy", "tensorflow.python.distribute.distribution_strategy_context.in_cross_replica_context", "tensorflow.python.distribute.distribution_strategy_context.has_strategy", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testMergeCallAutoGraph": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testMergeCallAutoGraph.test_fn", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testMergeCallAutoGraph.merge_fn": ["tensorflow.python.autograph.core.converter_testing.is_inside_generated_code", "tensorflow.python.platform.test.TestCase.assertTrue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testMergeCallAutoGraph.test_fn": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testScopeMostlyNoOp": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._assert_in_default_state", "tensorflow.python.distribute.distribution_strategy_context._get_default_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test._TestStrategy2.__init__", "tensorflow.python.ops.variable_scope.variable", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.distribute.distribute_lib.Strategy.scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testExperimentalRunV2": ["<builtin>.range", "tensorflow.python.distribute.distribution_strategy_context._get_default_strategy", "tensorflow.python.data.ops.dataset_ops.Dataset.range"], "tensorflow.python.data.ops.dataset_ops.Dataset.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testExperimentalRunV2.train_step": [], "tensorflow.python.distribute.combinations.combine": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest": ["tensorflow.python.distribute.combinations.generate", "tensorflow.python.distribute.combinations.combine"], "tensorflow.python.distribute.combinations.generate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasets": ["<builtin>.iter", "<builtin>.next", "tensorflow.python.distribute.distribution_strategy_context._get_default_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasets.<lambda1>", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasets.<lambda2>", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_lib.InputContext", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.eager.context.executing_eagerly"], "tensorflow.python.eager.context.executing_eagerly": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasets.<lambda1>": ["tensorflow.python.data.ops.dataset_ops.DatasetV2.range"], "tensorflow.python.data.ops.dataset_ops.DatasetV2.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasets.<lambda2>": ["tensorflow.python.data.ops.dataset_ops.DatasetV1.range"], "<builtin>.iter": [], "<builtin>.next": [], "tensorflow.python.data.ops.dataset_ops.DatasetV1.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasetsFromFunction": ["<builtin>.iter", "<builtin>.next", "tensorflow.python.distribute.distribution_strategy_context._get_default_strategy", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.data.ops.dataset_ops.make_initializable_iterator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasetsFromFunction.<lambda1>": ["tensorflow.python.data.ops.dataset_ops.DatasetV2.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testDistributedDatasetsFromFunction.<lambda2>": ["tensorflow.python.data.ops.dataset_ops.DatasetV2.range"], "tensorflow.python.data.ops.dataset_ops.make_initializable_iterator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testV1": ["tensorflow.python.platform.test.TestCase.assertIsInstance", "tensorflow.python.distribute.distribution_strategy_context.get_strategy"], "tensorflow.python.platform.test.TestCase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.DefaultDistributionStrategyTest.testV2": ["tensorflow.python.platform.test.TestCase.assertIsInstance", "tensorflow.python.distribute.distribution_strategy_context.get_strategy"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.InputContextTest.testProperties": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.distribute.distribute_lib.InputContext"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.InputContextTest.testPerReplicaBatchSize": ["tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.distribute.distribute_lib.InputContext"], "tensorflow.python.platform.test.TestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\distribute_lib_test.InputContextTest.testStr": ["tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.str", "tensorflow.python.distribute.distribute_lib.InputContext"], "<builtin>.str": [], "tensorflow.python.platform.test.main": []}
