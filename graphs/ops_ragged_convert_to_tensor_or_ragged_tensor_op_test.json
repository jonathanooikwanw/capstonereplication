{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\convert_to_tensor_or_ragged_tensor_op_test": ["tensorflow.python.platform.googletest.main"], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\convert_to_tensor_or_ragged_tensor_op_test.RaggedConvertToTensorOrRaggedTensorTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\convert_to_tensor_or_ragged_tensor_op_test.RaggedConvertToTensorOrRaggedTensorTest.testConvertRaggedTensor": ["tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIs", "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor"], "tensorflow.python.ops.ragged.ragged_factory_ops.constant": [], "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\convert_to_tensor_or_ragged_tensor_op_test.RaggedConvertToTensorOrRaggedTensorTest.testConvertRaggedTensorError": ["tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\convert_to_tensor_or_ragged_tensor_op_test.RaggedConvertToTensorOrRaggedTensorTest.testConvertRaggedTensorValue": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.dtypes.as_dtype", "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual": [], "tensorflow.python.framework.dtypes.as_dtype": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\convert_to_tensor_or_ragged_tensor_op_test.RaggedConvertToTensorOrRaggedTensorTest.testConvertRaggedTensorValueError": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\convert_to_tensor_or_ragged_tensor_op_test.RaggedConvertToTensorOrRaggedTensorTest.testConvertTensor": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIs", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor"], "tensorflow.python.framework.constant_op.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\convert_to_tensor_or_ragged_tensor_op_test.RaggedConvertToTensorOrRaggedTensorTest.testConvertTensorError": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\convert_to_tensor_or_ragged_tensor_op_test.RaggedConvertToTensorOrRaggedTensorTest.testConvertNumpyArray": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.dtypes.as_dtype", "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\convert_to_tensor_or_ragged_tensor_op_test.RaggedConvertToTensorOrRaggedTensorTest.testConvertNumpyArrayError": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor"], "tensorflow.python.platform.googletest.main": []}
