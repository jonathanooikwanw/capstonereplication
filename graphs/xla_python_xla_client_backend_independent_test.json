{"Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test": ["absl.testing.absltest.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ShapeTest.testInvalidShapes": ["tensorflow.compiler.xla.python.xla_client.Shape.array_shape", "absl.testing.absltest.TestCase.assertRaisesRegex"], "absl.testing.absltest.TestCase.assertRaisesRegex": [], "tensorflow.compiler.xla.python.xla_client.Shape.array_shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ComputationPrinting.ExampleComputation": ["tensorflow.compiler.xla.python.xla_client.ops.Add", "tensorflow.compiler.xla.python.xla_client.XlaBuilder", "tensorflow.compiler.xla.python.xla_client.shape_from_pyval", "tensorflow.compiler.xla.python.xla_client.ops.Parameter", "numpy.zeros", "tensorflow.compiler.xla.python.xla_client.ops.Mul", "numpy.float32"], "tensorflow.compiler.xla.python.xla_client.XlaBuilder": [], "numpy.float32": [], "tensorflow.compiler.xla.python.xla_client.shape_from_pyval": [], "tensorflow.compiler.xla.python.xla_client.ops.Parameter": [], "numpy.zeros": [], "tensorflow.compiler.xla.python.xla_client.ops.Mul": [], "tensorflow.compiler.xla.python.xla_client.ops.Add": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ComputationPrinting.testComputationToHloText": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ComputationPrinting.ExampleComputation", "absl.testing.absltest.TestCase.assertTrue"], "absl.testing.absltest.TestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ComputationPrinting.testComputationToHloGraph": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ComputationPrinting.ExampleComputation", "absl.testing.absltest.TestCase.assertTrue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ComputationPrinting.testHloModuleToHloText": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ComputationPrinting.ExampleComputation", "absl.testing.absltest.TestCase.assertTrue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ComputationPrinting.testHloModuleToHloGraph": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ComputationPrinting.ExampleComputation", "tensorflow.compiler.xla.python.xla_client._xla.hlo_module_to_dot_graph", "absl.testing.absltest.TestCase.assertTrue"], "tensorflow.compiler.xla.python.xla_client._xla.hlo_module_to_dot_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ComputationHashTest.testHash": ["tensorflow.compiler.xla.python.xla_client.XlaBuilder", "tensorflow.compiler.xla.python.xla_client.shape_from_pyval", "tensorflow.compiler.xla.python.xla_client.ops.Parameter", "numpy.zeros", "tensorflow.compiler.xla.python.xla_client.ops.Mul", "absl.testing.absltest.TestCase.assertEqual", "numpy.float32"], "absl.testing.absltest.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.AliasTest.testSetUpAlias": ["tensorflow.compiler.xla.python.xla_client.ops.Add", "absl.testing.absltest.TestCase.id", "tensorflow.compiler.xla.python.xla_client.XlaBuilder", "tensorflow.compiler.xla.python.xla_client.shape_from_pyval", "tensorflow.compiler.xla.python.xla_client.ops.Parameter", "numpy.array"], "absl.testing.absltest.TestCase.id": [], "numpy.array": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ProfilerTest.testTraceMe": ["<builtin>.ValueError", "tensorflow.compiler.xla.python.xla_client.profiler.TraceMe", "absl.testing.absltest.TestCase.assertRaises"], "tensorflow.compiler.xla.python.xla_client.profiler.TraceMe": [], "absl.testing.absltest.TestCase.assertRaises": [], "<builtin>.ValueError": [], "unittest.skipIf": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ProfilerTest": ["unittest.skipIf"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\xla\\python\\xla_client_backend_independent_test.ProfilerTest.testStartServer": ["portpicker.pick_unused_port", "tensorflow.compiler.xla.python.xla_client.profiler.start_server"], "portpicker.pick_unused_port": [], "tensorflow.compiler.xla.python.xla_client.profiler.start_server": [], "absl.testing.absltest.main": []}
