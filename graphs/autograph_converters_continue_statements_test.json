{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_for_loop.f", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_basic.f", "tensorflow.python.autograph.core.converter_testing.TestCase.assertEqual", "tensorflow.python.autograph.core.converter_testing.TestCase.transform", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested.f", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues.f", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_with.f", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues_in_nested_scope.f", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_guarded_continues_with_side_effects.f", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_nested_withs.f", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_statements.f", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs.f"], "tensorflow.python.autograph.core.converter_testing.TestCase.transform": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_for_loop.f": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_basic.f": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested.f": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues.f": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_with.f": ["tensorflow.python.framework.ops.name_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues_in_nested_scope.f": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_guarded_continues_with_side_effects.f": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_guarded_continues_with_side_effects.f.track"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_nested_withs.f": ["tensorflow.python.framework.ops.name_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_statements.f": ["tensorflow.python.framework.ops.name_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs.f": ["tensorflow.python.framework.ops.name_scope"], "tensorflow.python.autograph.core.converter_testing.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_basic": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_continues_in_nested_scope": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "<builtin>.ValueError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_for_loop": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_with": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "tensorflow.python.framework.ops.name_scope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_statements": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested_multiple_withs_and_nested_withs": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_nested": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_guarded_continues_with_side_effects": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.assertTransformedEquivalent"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\converters\\continue_statements_test.ContinueCanonicalizationTest.test_multiple_guarded_continues_with_side_effects.f.track": [], "tensorflow.python.platform.test.main": []}
