{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\op_selector_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\op_selector_test.SelectTest.setUp": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.ops.control_dependencies", "tensorflow.python.ops.math_ops.add", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.ops.Graph": [], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.framework.ops.name_scope": [], "tensorflow.python.ops.math_ops.add": [], "tensorflow.python.framework.ops.control_dependencies": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\op_selector_test.SelectTest.test_is_iterable": ["tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.ops.op_selector.is_iterable", "tensorflow.python.platform.test.TestCase.assertTrue"], "tensorflow.python.ops.op_selector.is_iterable": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "tensorflow.python.platform.test.TestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\op_selector_test.SelectTest.test_unique_graph": ["tensorflow.python.ops.op_selector.check_graphs", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.op_selector.get_unique_graph", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertRaises"], "tensorflow.python.ops.op_selector.check_graphs": [], "tensorflow.python.platform.test.TestCase.assertIsNone": [], "tensorflow.python.platform.test.TestCase.assertRaises": [], "tensorflow.python.ops.op_selector.get_unique_graph": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\op_selector_test.SelectTest.test_unique_graph_func_graph": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.func_graph.FuncGraph", "tensorflow.python.ops.op_selector.get_unique_graph", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.func_graph.FuncGraph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\op_selector_test.SelectTest.test_make_list_of_op": ["<builtin>.len", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.op_selector.make_list_of_op", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.ops.op_selector.make_list_of_op": [], "<builtin>.len": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\op_selector_test.SelectTest.test_make_list_of_t": ["<builtin>.len", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.op_selector.make_list_of_t", "tensorflow.python.ops.math_ops.add", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.ops.op_selector.make_list_of_t": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\op_selector_test.SelectTest.test_get_generating_consuming": ["<builtin>.len", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.op_selector.get_consuming_ops", "tensorflow.python.ops.math_ops.add", "tensorflow.python.ops.op_selector.get_generating_ops", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.ops.op_selector.get_generating_ops": [], "tensorflow.python.ops.op_selector.get_consuming_ops": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\op_selector_test.SelectTest.test_backward_walk_ops": ["<builtin>.set", "tensorflow.python.ops.op_selector.get_backward_walk_ops", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\op_selector_test.SelectTest.test_backward_walk_ops.<lambda1>": [], "tensorflow.python.ops.op_selector.get_backward_walk_ops": [], "<builtin>.set": [], "tensorflow.python.platform.test.main": []}
