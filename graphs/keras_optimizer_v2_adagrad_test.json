{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.adagrad_update_numpy": ["numpy.sqrt"], "numpy.sqrt": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.sparse_adagrad_update_numpy": ["numpy.sqrt", "copy.deepcopy", "<builtin>.range", "<builtin>.len"], "copy.deepcopy": [], "<builtin>.len": [], "<builtin>.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.doTestBasic": ["<builtin>.range", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.eager.context.executing_eagerly", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.doTestBasic.<lambda1>", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.adagrad_update_numpy", "numpy.array", "tensorflow.python.ops.variables.Variable"], "numpy.array": [], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.framework.constant_op.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.doTestBasic.<lambda1>": [], "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad": [], "tensorflow.python.eager.context.executing_eagerly": [], "<builtin>.zip": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "tensorflow.python.platform.test.TestCase.assertAllClose": [], "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType": [], "tensorflow.python.keras.combinations.combine": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest": ["tensorflow.python.keras.combinations.generate", "tensorflow.python.keras.combinations.combine"], "tensorflow.python.keras.combinations.generate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testBasic": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.doTestBasic"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testBasicCallableParams": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.doTestBasic"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testBasicWithLearningRateDecay": ["<builtin>.range", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.constant_op.constant", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.eager.context.executing_eagerly", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.adagrad_update_numpy", "numpy.array", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testBasicWithLargeEpsilon": ["<builtin>.range", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.constant_op.constant", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.eager.context.executing_eagerly", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.adagrad_update_numpy", "numpy.array", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testBasicWithLearningRateInverseTimeDecay": ["<builtin>.range", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.eager.context.executing_eagerly", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.adagrad_update_numpy", "numpy.array", "tensorflow.python.ops.variables.Variable", "tensorflow.python.keras.optimizer_v2.learning_rate_schedule.InverseTimeDecay"], "tensorflow.python.keras.optimizer_v2.learning_rate_schedule.InverseTimeDecay": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testMinimizeSparseResourceVariable": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.variables.Variable", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "tensorflow.python.ops.variables.global_variables_initializer"], "tensorflow.python.framework.ops.Graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testMinimizeSparseResourceVariable.loss": ["tensorflow.python.ops.embedding_ops.embedding_lookup", "tensorflow.python.ops.math_ops.matmul"], "tensorflow.python.ops.embedding_ops.embedding_lookup": [], "tensorflow.python.ops.math_ops.matmul": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testTensorLearningRate": ["tensorflow.python.framework.ops.Graph", "<builtin>.range", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.constant_op.constant", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.adagrad_update_numpy", "numpy.array", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testSparseBasic": ["tensorflow.python.framework.ops.Graph", "<builtin>.range", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "tensorflow.python.framework.ops.IndexedSlices", "tensorflow.python.platform.test.TestCase.evaluate", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.sparse_adagrad_update_numpy", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.constant_op.constant", "numpy.array", "tensorflow.python.ops.variables.Variable"], "tensorflow.python.framework.ops.IndexedSlices": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testSparseSingleVarDim": ["tensorflow.python.framework.ops.Graph", "<builtin>.range", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "tensorflow.python.framework.ops.IndexedSlices", "tensorflow.python.platform.test.TestCase.evaluate", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.sparse_adagrad_update_numpy", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.constant_op.constant", "numpy.array", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndices": ["tensorflow.python.framework.ops.Graph", "<builtin>.range", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "tensorflow.python.framework.ops.IndexedSlices", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.constant_op.constant", "numpy.array", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndicesByEmbeddingLookUp": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.variables.Variable", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "<builtin>.range", "tensorflow.python.ops.variables.global_variables_initializer"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndicesByEmbeddingLookUp.<lambda1>": ["tensorflow.python.ops.math_ops.reduce_sum", "tensorflow.python.ops.embedding_ops.embedding_lookup"], "tensorflow.python.ops.math_ops.reduce_sum": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndicesByEmbeddingLookUp.<lambda2>": ["tensorflow.python.ops.math_ops.reduce_sum", "tensorflow.python.ops.embedding_ops.embedding_lookup"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testSparseStability": ["tensorflow.python.framework.ops.Graph", "<builtin>.range", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "tensorflow.python.framework.ops.IndexedSlices", "tensorflow.python.platform.test.TestCase.evaluate", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.constant_op.constant", "numpy.array", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testSharing": ["tensorflow.python.framework.ops.Graph", "<builtin>.range", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.adagrad_update_numpy", "numpy.array", "tensorflow.python.ops.variables.Variable"], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adagrad_test.AdagradOptimizerTest.testConstructAdagradWithLR": ["tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.optimizer_v2.adagrad.Adagrad", "tensorflow.python.platform.test.TestCase.assertIsInstance", "tensorflow.python.ops.variables.global_variables_initializer"], "tensorflow.python.platform.test.TestCase.assertIsInstance": [], "tensorflow.python.platform.test.main": []}
