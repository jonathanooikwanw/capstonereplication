{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test._unranked_item": ["tensorflow.python.ops.array_ops.ones", "tensorflow.python.ops.array_ops.fill", "tensorflow.python.ops.random_ops.random_uniform"], "tensorflow.python.ops.random_ops.random_uniform": [], "tensorflow.python.ops.array_ops.ones": [], "tensorflow.python.ops.array_ops.fill": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test._partial_shaped_bools": ["tensorflow.python.ops.array_ops.expand_dims_v2", "tensorflow.python.ops.math_ops.range", "tensorflow.python.ops.random_ops.random_uniform"], "tensorflow.python.ops.math_ops.range": [], "tensorflow.python.ops.array_ops.expand_dims_v2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor.set_state": [], "tensorflow.python.framework.constant_op.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor.<lambda2>": [], "tensorflow.python.autograph.operators.control_flow.for_stmt": [], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.ops.math_ops.range", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor.<lambda2>": [], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_explicit_limit_delta": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.ops.math_ops.range", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_explicit_limit_delta.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_explicit_limit_delta.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_explicit_limit_delta.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_explicit_limit_delta.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_explicit_limit_negative_delta": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.ops.math_ops.range", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_explicit_limit_negative_delta.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_explicit_limit_negative_delta.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_explicit_limit_negative_delta.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_explicit_limit_negative_delta.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_random_delta": ["tensorflow.python.ops.math_ops.range", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_random_delta.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_random_delta.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_random_delta.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_random_delta.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_random_negative_delta": ["tensorflow.python.ops.math_ops.range", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_random_negative_delta.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_random_negative_delta.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_random_negative_delta.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_range_tensor_random_negative_delta.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_with_extra_test_object_vars": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_with_extra_test_object_vars.MutableObject": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_with_extra_test_object_vars.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_with_extra_test_object_vars.get_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_with_extra_test_object_vars.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_with_extra_test_object_vars.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python": ["<builtin>.range", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertNoOpsCreated", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python.set_state": [], "<builtin>.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python.<lambda2>": [], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertNoOpsCreated": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertNoOpsCreated", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test.run_loop", "<builtin>.next", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test.new_generator", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test.new_generator": ["<builtin>.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test.run_loop": ["tensorflow.python.autograph.operators.control_flow.for_stmt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test.run_loop.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test.run_loop.<lambda1>": [], "<builtin>.next": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test_no_iterations": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test_no_iterations.run_loop", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertNoOpsCreated", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test_no_iterations.new_generator", "<builtin>.next", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test_no_iterations.new_generator": ["<builtin>.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test_no_iterations.run_loop": ["tensorflow.python.autograph.operators.control_flow.for_stmt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test_no_iterations.run_loop.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_python_generator_with_extra_test_no_iterations.run_loop.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_dataset": ["tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_dataset.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_dataset.set_state": [], "tensorflow.python.data.ops.dataset_ops.Dataset.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_dataset.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test": ["tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test_collection_vars": ["tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test_collection_vars.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test_collection_vars.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test_collection_vars.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test_collection_vars.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test_iteration_limiting": ["tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test_iteration_limiting.body": ["tensorflow.python.framework.ops.control_dependencies", "tensorflow.python.ops.control_flow_ops.Assert"], "tensorflow.python.ops.control_flow_ops.Assert": [], "tensorflow.python.framework.ops.control_dependencies": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test_iteration_limiting.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test_iteration_limiting.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_dataset_with_extra_test_iteration_limiting.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_dataset_no_loop_vars": ["tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.variable", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_dataset_no_loop_vars.body": [], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_dataset_no_loop_vars.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_dataset_no_loop_vars.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator": ["tensorflow.python.autograph.operators.control_flow.for_stmt", "<builtin>.iter", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator.set_state": [], "<builtin>.iter": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator_shape_invariants": ["tensorflow.python.autograph.operators.control_flow.for_stmt", "<builtin>.iter", "tensorflow.python.framework.tensor_shape.TensorShape", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator_shape_invariants.body": ["tensorflow.python.ops.array_ops.concat"], "tensorflow.python.ops.array_ops.concat": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator_shape_invariants.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator_shape_invariants.<lambda1>": [], "tensorflow.python.framework.tensor_shape.TensorShape": [], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator_no_loop_vars": ["tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.variable", "<builtin>.iter", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator_no_loop_vars.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator_no_loop_vars.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_iterator_no_loop_vars.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor.set_state": [], "tensorflow.python.ops.ragged.ragged_factory_ops.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor_higher_dimensional": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor_higher_dimensional.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor_higher_dimensional.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor_higher_dimensional.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor_no_loop_vars": ["tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.variable", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor_no_loop_vars.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor_no_loop_vars.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tf_ragged_tensor_no_loop_vars.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest._basic_loop": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.operators.control_flow.for_stmt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest._basic_loop.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest._basic_loop.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest._basic_loop.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest._basic_loop.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_illegal_input": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest._basic_loop", "tensorflow.python.autograph.operators.variables.Undefined", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_illegal_input.<lambda1>": [], "tensorflow.python.autograph.operators.variables.Undefined": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_illegal_input.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_none_output": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest._basic_loop", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_none_output.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_dtype_change": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest._basic_loop", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_dtype_change.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_shape_change": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest._basic_loop", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.ForLoopTest.test_tensor_shape_change.<lambda1>": ["numpy.array"], "numpy.array": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor": ["tensorflow.python.autograph.operators.control_flow.while_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor.<lambda2>": [], "tensorflow.python.autograph.operators.control_flow.while_stmt": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_creating_variable": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.autograph.operators.variables.Undefined", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertGraphContains", "tensorflow.python.autograph.operators.control_flow.while_stmt", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_creating_variable.body": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_creating_variable.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_creating_variable.<lambda1>": ["tensorflow.python.ops.math_ops.equal"], "tensorflow.python.ops.math_ops.equal": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_creating_variable.<lambda2>": [], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertGraphContains": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_creating_complex_variable": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertDictEqual", "tensorflow.python.autograph.operators.variables.Undefined", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertGraphContains", "tensorflow.python.autograph.operators.control_flow.while_stmt", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_creating_complex_variable.body": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_creating_complex_variable.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_creating_complex_variable.<lambda1>": ["tensorflow.python.ops.math_ops.equal"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_creating_complex_variable.<lambda2>": [], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertDictEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_side_effecting_condition": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.variable", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.autograph.operators.control_flow.while_stmt", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_side_effecting_condition.cond": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_side_effecting_condition.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_side_effecting_condition.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_side_effecting_condition.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_python_state": ["tensorflow.python.autograph.operators.control_flow.while_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_python_state.MutableObject": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_python_state.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_python_state.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_python_state.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_with_python_state.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python": ["tensorflow.python.autograph.operators.control_flow.while_stmt", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertNoOpsCreated", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_with_tensor_state": ["tensorflow.python.autograph.operators.control_flow.while_stmt", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpsNotCreated", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_with_tensor_state.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_with_tensor_state.<lambda1>": [], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpsNotCreated": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_while_infinite": ["tensorflow.python.autograph.operators.control_flow.while_stmt", "tensorflow.python.platform.test.mock.patch.object", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.skipTest", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.skipTest": [], "tensorflow.python.platform.test.mock.patch.object": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_while_infinite.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_while_infinite.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_for_infinite": ["tensorflow.python.autograph.operators.control_flow.for_stmt", "<builtin>.range", "tensorflow.python.platform.test.mock.patch.object", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.skipTest"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_for_infinite.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_while_large_unroll_warning": ["tensorflow.python.autograph.operators.control_flow.for_stmt", "tensorflow.python.platform.test.mock.patch.object", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertTrue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_while_large_unroll_warning.custom_iterator", "six.StringIO", "re.match", "tensorflow.python.framework.ops.Graph", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.skipTest"], "tensorflow.python.framework.ops.Graph": [], "six.StringIO": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_while_large_unroll_warning.custom_iterator": ["<builtin>.range", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_while_large_unroll_warning.<lambda1>": [], "re.match": [], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_for_large_unroll_warning": ["tensorflow.python.platform.test.mock.patch.object", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertTrue", "tensorflow.python.autograph.operators.control_flow.while_stmt", "six.StringIO", "re.match", "tensorflow.python.framework.ops.Graph", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.skipTest"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_for_large_unroll_warning.body": ["tensorflow.python.ops.gen_math_ops.add"], "tensorflow.python.ops.gen_math_ops.add": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_python_for_large_unroll_warning.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._basic_loop": ["tensorflow.python.autograph.operators.control_flow.while_stmt", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._basic_loop.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._basic_loop.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._basic_loop.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._basic_loop.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_input": ["tensorflow.python.autograph.operators.variables.Undefined", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._basic_loop", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_input.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_input.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_none_output": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._basic_loop", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_none_output.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_dtype_change": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._basic_loop", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_dtype_change.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_shape_change": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._basic_loop", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_shape_change.<lambda1>": ["numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._fixed_while_loop": ["tensorflow.python.autograph.operators.control_flow.while_stmt", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._fixed_while_loop.test_": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._fixed_while_loop.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._fixed_while_loop.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._fixed_while_loop.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._assertFixedLoopResult": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._assertFixedLoopResult.test_fn", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._assertFixedLoopResult.test_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._fixed_while_loop"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_legal_cond_scalar": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._assertFixedLoopResult"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_legal_cond_scalar.<lambda1>": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_legal_cond_scalar.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_legal_cond_single_element_nd": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._assertFixedLoopResult"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_legal_cond_single_element_nd.<lambda1>": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_legal_cond_single_element_nd.<lambda2>": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test._unranked_item"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._assertCondCheckFails": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._fixed_while_loop", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_cond_not_bool": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._assertCondCheckFails"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_cond_not_bool.<lambda1>": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_cond_not_bool.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_cond_not_single_element": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._assertCondCheckFails"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_cond_not_single_element.<lambda1>": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_cond_not_single_element.<lambda2>": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_cond_not_single_element_dynamic_shape": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRuntime", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest._fixed_while_loop"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.WhileLoopTest.test_tensor_illegal_cond_not_single_element_dynamic_shape.<lambda1>": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test._partial_shaped_bools"], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRuntime": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor.test_fn", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor.test_fn": ["tensorflow.python.autograph.operators.control_flow.if_stmt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor.test_fn.body": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor.test_fn.orelse": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor.test_fn.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor.test_fn.<lambda1>": [], "tensorflow.python.autograph.operators.control_flow.if_stmt": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_no_outputs": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_no_outputs.test_fn", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_no_outputs.test_fn": ["tensorflow.python.autograph.operators.control_flow.if_stmt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_no_outputs.test_fn.body": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_no_outputs.test_fn.orelse": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_no_outputs.test_fn.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_no_outputs.test_fn.<lambda1>": [], "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_multiple_returns": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertOpCreated", "tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_multiple_returns.test_fn", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_multiple_returns.test_fn": ["tensorflow.python.autograph.operators.control_flow.if_stmt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_multiple_returns.test_fn.body": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_multiple_returns.test_fn.orelse": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_multiple_returns.test_fn.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_multiple_returns.test_fn.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_python": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertNoOpsCreated", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_python.test_fn", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_python.test_fn": ["tensorflow.python.autograph.operators.control_flow.if_stmt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_python.test_fn.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_python.test_fn.orelse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_python_multiple_returns": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertNoOpsCreated", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_python_multiple_returns.test_fn", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_python_multiple_returns.test_fn": ["tensorflow.python.autograph.operators.control_flow.if_stmt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_python_multiple_returns.test_fn.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_python_multiple_returns.test_fn.orelse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._basic_cond": ["tensorflow.python.autograph.operators.control_flow.if_stmt", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._basic_cond.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._basic_cond.orelse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._basic_cond.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._basic_cond.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_none_output": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._basic_cond", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_none_output.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_none_output.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_none_output.<lambda3>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_none_output.<lambda4>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_undefined_output": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._basic_cond", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_undefined_output.<lambda1>": ["tensorflow.python.autograph.operators.variables.Undefined"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_undefined_output.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_undefined_output.<lambda3>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_undefined_output.<lambda4>": ["tensorflow.python.autograph.operators.variables.Undefined"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_dtype_change": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._basic_cond", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_dtype_change.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_dtype_change.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._fixed_cond": ["tensorflow.python.autograph.operators.control_flow.if_stmt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._fixed_cond.body": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._fixed_cond.orelse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._fixed_cond.set_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._fixed_cond.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._assertFixedCondResult": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._assertFixedCondResult.test_fn", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._assertFixedCondResult.test_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._fixed_cond"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_legal_cond_scalar": ["tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._assertFixedCondResult"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_legal_cond_single_element_nd": ["tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test._unranked_item", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._assertFixedCondResult"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._assertCondCheckFails": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._fixed_cond", "tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_illegal_cond_not_bool": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._assertCondCheckFails", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_illegal_cond_not_single_element": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._assertCondCheckFails", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest.test_tensor_illegal_cond_not_single_element_dynamic_shape": ["tensorflow.python.autograph.utils.testing.AutoGraphTestCase.assertRaisesRuntime", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test._partial_shaped_bools", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\operators\\control_flow_test.IfStmtTest._fixed_cond"], "tensorflow.python.platform.test.main": []}
