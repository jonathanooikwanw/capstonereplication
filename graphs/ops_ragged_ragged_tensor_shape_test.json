{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test": ["tensorflow.python.platform.googletest.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.assertShapeEq": ["<builtin>.len", "<builtin>.zip", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "<builtin>.isinstance"], "<builtin>.isinstance": [], "<builtin>.len": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen": [], "<builtin>.zip": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual": [], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.testFromTensor": ["tensorflow.python.ops.ragged.ragged_tensor_shape.RaggedTensorDynamicShape.from_tensor", "tensorflow.python.ops.ragged.ragged_tensor_shape.RaggedTensorDynamicShape.from_dim_sizes", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.assertShapeEq"], "tensorflow.python.ops.ragged.ragged_tensor_shape.RaggedTensorDynamicShape.from_tensor": [], "tensorflow.python.ops.ragged.ragged_tensor_shape.RaggedTensorDynamicShape.from_dim_sizes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.testBroadcastToRank": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.ragged.ragged_tensor_shape.RaggedTensorDynamicShape.from_dim_sizes", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.assertShapeEq"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.testBroadcastDimension": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.ragged.ragged_tensor_shape.RaggedTensorDynamicShape.from_dim_sizes", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.assertShapeEq"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.testBroadcastDynamicShape": ["tensorflow.python.ops.ragged.ragged_tensor_shape.broadcast_dynamic_shape", "tensorflow.python.ops.ragged.ragged_tensor_shape.RaggedTensorDynamicShape.from_dim_sizes", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.assertShapeEq"], "tensorflow.python.ops.ragged.ragged_tensor_shape.broadcast_dynamic_shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.testRepr": ["<builtin>.repr", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRegex", "tensorflow.python.ops.ragged.ragged_tensor_shape.RaggedTensorDynamicShape.from_dim_sizes"], "<builtin>.repr": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.testRaggedBroadcastTo": ["<builtin>.getattr", "tensorflow.python.ops.ragged.ragged_tensor_shape.broadcast_to", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.ragged.ragged_tensor_shape.RaggedTensorDynamicShape.from_dim_sizes", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "tensorflow.python.ops.ragged.ragged_tensor_shape.broadcast_to": [], "<builtin>.getattr": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_shape_test.RaggedTensorShapeTest.testRaggedAddWithBroadcasting": ["<builtin>.getattr", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "<builtin>.hasattr", "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "tensorflow.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor": [], "<builtin>.hasattr": [], "tensorflow.python.platform.googletest.main": []}
