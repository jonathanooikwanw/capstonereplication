{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MiniModel.__init__": ["<builtin>.super", "tensorflow.python.keras.layers.core.Dense"], "<builtin>.super": [], "tensorflow.python.keras.layers.core.Dense": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MiniModel.call": ["tensorflow.python.ops.array_ops.ones"], "tensorflow.python.ops.array_ops.ones": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTrain": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.optimizer.get_filtered_grad_fn", "numpy.ones", "tensorflow.python.eager.backprop.implicit_grad", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.eager.def_function.function", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MiniModel.__init__", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.training.gradient_descent.GradientDescentOptimizer"], "tensorflow.python.eager.def_function.function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTrain.loss_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MiniModel.__init__", "tensorflow.python.ops.array_ops.ones"], "tensorflow.python.eager.backprop.implicit_grad": [], "tensorflow.python.training.optimizer.get_filtered_grad_fn": [], "tensorflow.python.training.gradient_descent.GradientDescentOptimizer": [], "tensorflow.python.eager.context.executing_eagerly": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "numpy.ones": [], "tensorflow.python.platform.test.TestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTrainAndServeWithKPL": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTrainAndServeWithKPL.train_step", "tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop", "tensorflow.python.platform.test.TestCase.assertGreater", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.keras.utils.kpl_test_utils.DistributeKplTestUtils", "<builtin>.iter", "<builtin>.range", "tensorflow.python.keras.metrics.Accuracy"], "tensorflow.python.keras.utils.kpl_test_utils.DistributeKplTestUtils": [], "tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop": [], "tensorflow.python.keras.metrics.Accuracy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTrainAndServeWithKPL.dataset_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTrainAndServeWithKPL.train_step": ["<builtin>.next"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTrainAndServeWithKPL.train_step.step_fn": ["<builtin>.zip", "tensorflow.python.ops.math_ops.greater", "tensorflow.python.keras.losses.binary_crossentropy", "tensorflow.python.ops.math_ops.cast", "tensorflow.python.ops.nn.compute_average_loss", "<builtin>.list", "tensorflow.python.eager.backprop.GradientTape"], "tensorflow.python.eager.backprop.GradientTape": [], "tensorflow.python.keras.losses.binary_crossentropy": [], "tensorflow.python.ops.nn.compute_average_loss": [], "<builtin>.zip": [], "<builtin>.list": [], "tensorflow.python.ops.math_ops.greater": [], "tensorflow.python.ops.math_ops.cast": [], "<builtin>.next": [], "<builtin>.iter": [], "<builtin>.range": [], "tensorflow.python.platform.test.TestCase.assertGreater": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "tensorflow.python.platform.test.main": []}
