{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._initialized_session": ["tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.client.session.Session", "tensorflow.python.ops.variables.global_variables_initializer"], "tensorflow.python.client.session.Session": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.ops.lookup_ops.tables_initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.ConcatenateContextInputTest.test_concatenate_context_input": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.ops.math_ops.cast", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.ops.convert_to_tensor", "numpy.array", "numpy.arange", "tensorflow.python.feature_column.sequence_feature_column.concatenate_context_input"], "numpy.arange": [], "tensorflow.python.framework.ops.convert_to_tensor": [], "tensorflow.python.ops.math_ops.cast": [], "tensorflow.python.feature_column.sequence_feature_column.concatenate_context_input": [], "numpy.array": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "tensorflow.python.platform.test.TestCase.assertAllEqual": [], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.ConcatenateContextInputTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.ConcatenateContextInputTest.test_sequence_input_throws_error": ["tensorflow.python.ops.math_ops.cast", "tensorflow.python.framework.ops.convert_to_tensor", "numpy.arange", "tensorflow.python.feature_column.sequence_feature_column.concatenate_context_input", "tensorflow.python.platform.test.TestCase.assertRaisesRegex"], "tensorflow.python.platform.test.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.ConcatenateContextInputTest.test_context_input_throws_error": ["tensorflow.python.ops.math_ops.cast", "tensorflow.python.framework.ops.convert_to_tensor", "numpy.arange", "tensorflow.python.feature_column.sequence_feature_column.concatenate_context_input", "tensorflow.python.platform.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.ConcatenateContextInputTest.test_integer_seq_input_throws_error": ["tensorflow.python.ops.math_ops.cast", "tensorflow.python.framework.ops.convert_to_tensor", "numpy.arange", "tensorflow.python.feature_column.sequence_feature_column.concatenate_context_input", "tensorflow.python.platform.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.ConcatenateContextInputTest.test_integer_context_input_throws_error": ["tensorflow.python.ops.math_ops.cast", "tensorflow.python.framework.ops.convert_to_tensor", "numpy.arange", "tensorflow.python.feature_column.sequence_feature_column.concatenate_context_input", "tensorflow.python.platform.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._assert_sparse_tensor_value": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._assert_sparse_tensor_indices_shape", "tensorflow.python.platform.test.TestCase.assertEqual", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._assert_sparse_tensor_indices_shape": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "numpy.array"], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor": ["tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache"], "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor_state": ["tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2._StateManagerImpl", "tensorflow.python.feature_column.feature_column_lib.DenseFeatures"], "tensorflow.python.feature_column.feature_column_lib.DenseFeatures": [], "tensorflow.python.feature_column.feature_column_v2._StateManagerImpl": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sparse_tensors": ["tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithIdentityTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithIdentityTest.test_get_sparse_tensors": ["tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._assert_sparse_tensor_value", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sparse_tensors", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "tensorflow.python.framework.sparse_tensor.SparseTensorValue": [], "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity": [], "tensorflow.python.platform.test.TestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithIdentityTest.test_serialization": ["tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.feature_column.serialization._column_name_with_class_name", "tensorflow.python.feature_column.feature_column_v2.IndicatorColumn.from_config", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.platform.test.TestCase.assertIsNot", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.feature_column.feature_column_v2.indicator_column": [], "tensorflow.python.feature_column.feature_column_v2.IndicatorColumn.from_config": [], "tensorflow.python.platform.test.TestCase.assertIsNot": [], "tensorflow.python.feature_column.serialization._column_name_with_class_name": [], "tensorflow.python.platform.test.TestCase.assertIs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithHashBucketTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithHashBucketTest.test_get_sparse_tensors": ["tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.evaluate", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sparse_tensors", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._assert_sparse_tensor_indices_shape"], "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_hash_bucket": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest._write_vocab": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "<builtin>.open", "os.path.join"], "tensorflow.python.platform.test.TestCase.get_temp_dir": [], "os.path.join": [], "<builtin>.open": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest.setUp": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest._write_vocab", "<builtin>.super"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest.test_get_sparse_tensors": ["tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._assert_sparse_tensor_value", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sparse_tensors", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_file", "tensorflow.python.ops.lookup_ops.tables_initializer"], "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_file": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyFileTest.test_get_sparse_tensors_dynamic_zero_length": ["tensorflow.python.ops.array_ops.sparse_placeholder", "<builtin>.list", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._assert_sparse_tensor_value", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sparse_tensors", "numpy.array", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_file", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._initialized_session", "numpy.zeros"], "tensorflow.python.framework.ops.Graph": [], "numpy.zeros": [], "<builtin>.list": [], "tensorflow.python.ops.array_ops.sparse_placeholder": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyListTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceCategoricalColumnWithVocabularyListTest.test_get_sparse_tensors": ["tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._assert_sparse_tensor_value", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sparse_tensors", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_list", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer"], "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceEmbeddingColumnTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceEmbeddingColumnTest.test_get_sequence_dense_tensor": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "<builtin>.tuple", "tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor_state", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceEmbeddingColumnTest.test_get_sequence_dense_tensor._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.feature_column.feature_column_v2.embedding_column": [], "<builtin>.tuple": [], "tensorflow.python.platform.test.TestCase.assertCountEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceEmbeddingColumnTest.test_sequence_length": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor_state", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceEmbeddingColumnTest.test_sequence_length_with_empty_rows": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor_state", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceSharedEmbeddingColumnTest.test_get_sequence_dense_tensor": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.Graph", "<builtin>.tuple", "tensorflow.python.platform.test.TestCase.assertItemsEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceSharedEmbeddingColumnTest.test_get_sequence_dense_tensor._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2": [], "tensorflow.python.framework.ops.get_collection": [], "tensorflow.python.platform.test.TestCase.assertItemsEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceSharedEmbeddingColumnTest.test_sequence_length": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._initialized_session", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceSharedEmbeddingColumnTest.test_sequence_length_with_empty_rows": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._initialized_session", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceIndicatorColumnTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceIndicatorColumnTest.test_get_sequence_dense_tensor": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceIndicatorColumnTest.test_sequence_length": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceIndicatorColumnTest.test_sequence_length_with_empty_rows": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_defaults": ["tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_shape_saved_as_tuple": ["tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_shape_must_be_positive_integer": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_dtype_is_convertible_to_float": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_normalizer_fn_must_be_callable": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_get_sequence_dense_tensor": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_get_sequence_dense_tensor_with_normalizer_fn": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_get_sequence_dense_tensor_with_normalizer_fn._increment_two": ["tensorflow.python.ops.sparse_ops.sparse_add", "tensorflow.python.framework.sparse_tensor.SparseTensor"], "tensorflow.python.framework.sparse_tensor.SparseTensor": [], "tensorflow.python.ops.sparse_ops.sparse_add": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_get_dense_tensor_multi_dim": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_sequence_length": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_sequence_length_with_empty_rows": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test._get_sequence_dense_tensor", "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_serialization": ["<builtin>.int", "tensorflow.python.feature_column.serialization.deserialize_feature_column", "tensorflow.python.feature_column.serialization.serialize_feature_column", "tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_serialization._custom_fn": [], "tensorflow.python.feature_column.serialization.serialize_feature_column": [], "tensorflow.python.feature_column.serialization.deserialize_feature_column": [], "<builtin>.int": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_test.SequenceNumericColumnTest.test_parents": ["tensorflow.python.feature_column.sequence_feature_column.sequence_numeric_column", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.platform.test.main": []}
