{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest.test_create_source_map": ["textwrap.dedent", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.autograph.pyct.origin_info.Location", "tensorflow.python.autograph.pyct.origin_info.create_source_map", "tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.autograph.pyct.anno.setanno", "tensorflow.python.autograph.pyct.origin_info.LineLocation", "tensorflow.python.autograph.pyct.origin_info.OriginInfo", "tensorflow.python.platform.test.TestCase.assertIn"], "textwrap.dedent": [], "tensorflow.python.autograph.pyct.parser.parse": [], "tensorflow.python.autograph.pyct.origin_info.Location": [], "tensorflow.python.autograph.pyct.origin_info.OriginInfo": [], "tensorflow.python.autograph.pyct.anno.setanno": [], "tensorflow.python.autograph.pyct.origin_info.create_source_map": [], "tensorflow.python.autograph.pyct.origin_info.LineLocation": [], "tensorflow.python.platform.test.TestCase.assertIn": [], "tensorflow.python.platform.test.TestCase.assertIs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest._create_source_map": ["tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.autograph.pyct.origin_info.resolve_entity", "tensorflow.python.autograph.pyct.origin_info.create_source_map"], "tensorflow.python.autograph.pyct.parser.parse_entity": [], "tensorflow.python.autograph.pyct.origin_info.resolve_entity": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest.test_create_source_map_identity": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest._create_source_map", "inspect.getsourcelines", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_inspect.getsourcefile", "tensorflow.python.autograph.pyct.origin_info.LineLocation", "tensorflow.python.platform.test.TestCase.assertIn"], "tensorflow.python.util.tf_inspect.getsourcefile": [], "inspect.getsourcelines": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest.test_create_source_map_multiline_call": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest._create_source_map", "inspect.getsourcelines", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_inspect.getsourcefile", "tensorflow.python.autograph.pyct.origin_info.LineLocation", "tensorflow.python.platform.test.TestCase.assertIn"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest.test_create_source_map_no_origin_info": ["tensorflow.python.autograph.pyct.inspect_utils.getfutureimports", "tensorflow.python.platform.test.TestCase.assertEmpty", "tensorflow.python.util.tf_inspect.getsourcelines", "tensorflow.python.autograph.pyct.origin_info.create_source_map", "tensorflow.python.autograph.pyct.parser.parse_entity"], "tensorflow.python.autograph.pyct.inspect_utils.getfutureimports": [], "tensorflow.python.util.tf_inspect.getsourcelines": [], "tensorflow.python.platform.test.TestCase.assertEmpty": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest.test_resolve": ["textwrap.dedent", "tensorflow.python.autograph.pyct.origin_info.resolve", "tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "tensorflow.python.autograph.pyct.origin_info.resolve": [], "tensorflow.python.autograph.pyct.anno.getanno": [], "tensorflow.python.platform.test.TestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest.test_resolve_with_trailing_garbage": ["tensorflow.python.autograph.pyct.origin_info.resolve", "tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest.test_resolve_entity": ["tensorflow.python.autograph.pyct.inspect_utils.getfutureimports", "tensorflow.python.autograph.pyct.origin_info.resolve_entity", "inspect.getsourcelines", "tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest.test_resolve_entity_nested_function": ["tensorflow.python.autograph.pyct.inspect_utils.getfutureimports", "tensorflow.python.autograph.pyct.origin_info.resolve_entity", "inspect.getsourcelines", "tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest.test_resolve_entity_indented_block": ["tensorflow.python.autograph.pyct.inspect_utils.getfutureimports", "tensorflow.python.autograph.pyct.origin_info.resolve_entity", "inspect.getsourcelines", "tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\origin_info_test.OriginInfoTest.test_resolve_entity_decorated_function": ["tensorflow.python.autograph.pyct.inspect_utils.getfutureimports", "tensorflow.python.autograph.pyct.origin_info.resolve_entity", "inspect.getsourcelines", "tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "tensorflow.python.platform.test.main": []}
