{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test": ["tensorflow.python.platform.googletest.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "<builtin>.isinstance", "<builtin>.super", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest._assertStructuredEqual"], "<builtin>.isinstance": [], "<builtin>.super": [], "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest._assertStructuredEqual": ["<builtin>.isinstance", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIs", "<builtin>.type", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "<builtin>.repr", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest._assertStructuredEqual", "<builtin>.set"], "<builtin>.repr": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual": [], "<builtin>.set": [], "<builtin>.type": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testConstructorIsPrivate": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex": [], "tensorflow.python.ops.structured.structured_tensor.StructuredTensor": [], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest": ["absl.testing.parameterized.parameters", "absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testFromFields": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "<builtin>.tuple", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_fields", "<builtin>.callable", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertCountEqual"], "<builtin>.callable": [], "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_fields": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen": [], "<builtin>.tuple": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertCountEqual": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance": [], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testFromFieldsErrors": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_fields", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "<builtin>.callable", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "tensorflow.python.eager.context.executing_eagerly": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testMergeNrowsErrors": ["tensorflow.python.framework.tensor_shape.Dimension", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.structured.structured_tensor._merge_nrows", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.framework.tensor_shape.Dimension": [], "tensorflow.python.ops.structured.structured_tensor._merge_nrows": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testNestedStructConstruction": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_fields", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "<builtin>.set"], "tensorflow.python.ops.ragged.ragged_factory_ops.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testPartitionOuterDims": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensorSpec", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensorSpec", "tensorflow.python.ops.ragged.row_partition.RowPartition.from_row_splits", "tensorflow.python.ops.ragged.row_partition.RowPartition.from_row_lengths", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "<builtin>.dict", "tensorflow.python.framework.tensor_spec.TensorSpec", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "tensorflow.python.ops.ragged.row_partition.RowPartition.from_uniform_row_length"], "<builtin>.dict": [], "tensorflow.python.ops.ragged.row_partition.RowPartition.from_row_splits": [], "tensorflow.python.ops.ragged.row_partition.RowPartition.from_row_lengths": [], "tensorflow.python.ops.ragged.row_partition.RowPartition.from_uniform_row_length": [], "tensorflow.python.framework.tensor_spec.TensorSpec": [], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensorSpec": [], "tensorflow.python.ops.structured.structured_tensor.StructuredTensorSpec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testPartitionOuterDimension3": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_fields", "tensorflow.python.ops.array_ops.constant", "tensorflow.python.ops.ragged.row_partition.RowPartition.from_row_splits", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_value_rowids"], "tensorflow.python.ops.array_ops.constant": [], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_value_rowids": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testPartitionOuterDimsErrors": ["tensorflow.python.ops.ragged.row_partition.RowPartition.from_row_splits", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_fields", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testPyvalConversion": ["<builtin>.isinstance", "tensorflow.python.eager.context.executing_eagerly", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testToPyval": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.eager.context.executing_eagerly"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testFromPyvalError": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testToPyvalRequiresEagerMode": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testRowPartitionsFromUniformShape": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.ops.structured.structured_tensor._row_partitions_for_uniform_shape", "<builtin>.range", "<builtin>.len", "tensorflow.python.framework.ops.convert_to_tensor", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "<builtin>.max", "<builtin>.enumerate"], "<builtin>.len": [], "<builtin>.range": [], "tensorflow.python.framework.ops.convert_to_tensor": [], "tensorflow.python.ops.structured.structured_tensor._row_partitions_for_uniform_shape": [], "<builtin>.max": [], "<builtin>.enumerate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testRowPartitionsForRaggedTensor": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "<builtin>.len", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.ops.structured.structured_tensor._row_partitions_for_ragged_tensor", "<builtin>.zip", "tensorflow.python.ops.ragged.ragged_factory_ops.constant"], "tensorflow.python.ops.structured.structured_tensor._row_partitions_for_ragged_tensor": [], "<builtin>.zip": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testMergeDims": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testMergeDims_0_1": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_fields", "tensorflow.python.ops.array_ops.constant", "tensorflow.python.ops.ragged.row_partition.RowPartition.from_row_splits", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_value_rowids"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testMergeDimsError": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testTupleFieldValue": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testPromote": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testPromoteDense": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_fields"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testMergeDimsGeneric": ["tensorflow.python.ops.structured.structured_tensor._merge_dims_generic", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.ops.array_ops.constant"], "tensorflow.python.ops.structured.structured_tensor._merge_dims_generic": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testMergeDimsGenericNoop": ["tensorflow.python.ops.structured.structured_tensor._merge_dims_generic", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.ops.array_ops.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testRepr": ["tensorflow.python.eager.context.executing_eagerly", "textwrap.dedent", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "<builtin>.repr"], "textwrap.dedent": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testPartitionOuterDimension2DDenseField": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_fields", "tensorflow.python.ops.array_ops.constant", "tensorflow.python.ops.ragged.row_partition.RowPartition.from_uniform_row_length"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testWithUpdatesValues": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testWithUpdatesFunctions": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.test_from_pyval_list_of_empty": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.test_from_pyval_list_of_empty_three": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEmpty"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEmpty": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.test_from_pyval_deep_list_of_empty": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEmpty"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testWithUpdatesChecks": ["tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.testWithUpdatesDelete": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNotIn", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNotIn": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.test_from_pyval_deep_row_partitions": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\structured\\structured_tensor_test.StructuredTensorTest.test_from_fields_deep_row_partitions": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_pyval", "tensorflow.python.ops.structured.structured_tensor.StructuredTensor.from_fields"], "tensorflow.python.platform.googletest.main": []}
