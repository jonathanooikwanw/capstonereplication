{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test._initialized_session": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.client.session.Session"], "tensorflow.python.client.session.Session": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.ops.lookup_ops.tables_initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test._TestStateManager.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test._TestStateManager.create_variable": ["tensorflow.python.ops.variable_scope.get_variable"], "tensorflow.python.ops.variable_scope.get_variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test._TestStateManager.get_variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.EmbeddingColumnTestV2.test_defaults": ["tensorflow.python.tpu.feature_column_v2.embedding_column_v2", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity": [], "tensorflow.python.tpu.feature_column_v2.embedding_column_v2": [], "tensorflow.python.platform.test.TestCase.assertIs": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.EmbeddingColumnTestV2.test_all_constructor_args": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.tpu.feature_column_v2.embedding_column_v2", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.EmbeddingColumnTestV2.test_all_constructor_args.<lambda1>": [], "tensorflow.python.ops.parsing_ops.VarLenFeature": [], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.EmbeddingColumnTestV2": ["absl.testing.parameterized.named_parameters", "tensorflow.python.framework.test_util.deprecated_graph_mode_only"], "tensorflow.python.framework.test_util.deprecated_graph_mode_only": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.EmbeddingColumnTestV2.test_feature_layer_cpu": ["tensorflow.python.feature_column.feature_column_lib.sequence_categorical_column_with_identity", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.feature_column_lib.SequenceFeatures", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertItemsEqual", "tensorflow.python.tpu.feature_column_v2.embedding_column_v2", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.feature_column.feature_column_lib.DenseFeatures", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.get_default_graph", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.tuple", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity"], "tensorflow.python.framework.sparse_tensor.SparseTensorValue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.EmbeddingColumnTestV2.test_feature_layer_cpu._initializer": ["tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertAllEqual"], "tensorflow.python.platform.test.TestCase.assertAllEqual": [], "tensorflow.python.platform.test.TestCase.assertIsNone": [], "tensorflow.python.feature_column.feature_column_lib.sequence_categorical_column_with_identity": [], "tensorflow.python.feature_column.feature_column_lib.DenseFeatures": [], "tensorflow.python.feature_column.feature_column_lib.SequenceFeatures": [], "tensorflow.python.framework.ops.get_collection": [], "<builtin>.tuple": [], "tensorflow.python.platform.test.TestCase.assertItemsEqual": [], "tensorflow.python.framework.ops.get_default_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.EmbeddingColumnTestV2.test_deepcopy": ["tensorflow.python.tpu.feature_column_v2.embedding_column_v2", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertEqual", "copy.deepcopy"], "copy.deepcopy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.EmbeddingColumnTestV2.test_with_scope_validation": ["tensorflow.python.tpu.tpu_function.tpu_shard_context", "tensorflow.python.tpu.feature_column_v2._TPUEmbeddingColumnV2", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test._TestStateManager.__init__", "tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.ops.init_ops.truncated_normal_initializer", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.platform.test.TestCase.assertRaisesRegex"], "tensorflow.python.ops.init_ops.truncated_normal_initializer": [], "tensorflow.python.tpu.feature_column_v2._TPUEmbeddingColumnV2": [], "tensorflow.python.tpu.tpu_function.tpu_shard_context": [], "tensorflow.python.ops.variable_scope.variable_scope": [], "tensorflow.python.platform.test.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.EmbeddingColumnTestV2.test_bypass_scope_validation": ["tensorflow.python.tpu.tpu_function.tpu_shard_context", "tensorflow.python.tpu.feature_column_v2._TPUEmbeddingColumnV2", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test._TestStateManager.__init__", "tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.ops.init_ops.truncated_normal_initializer", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.EmbeddingColumnTestV2.test_deepcopy_with_bypass_scope_validation": ["tensorflow.python.tpu.feature_column_v2._TPUEmbeddingColumnV2", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertEqual", "copy.deepcopy", "tensorflow.python.ops.init_ops.truncated_normal_initializer", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertFalse"], "tensorflow.python.platform.test.TestCase.assertTrue": [], "tensorflow.python.platform.test.TestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.SharedEmbeddingColumnTestV2": ["absl.testing.parameterized.named_parameters", "tensorflow.python.framework.test_util.deprecated_graph_mode_only"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.SharedEmbeddingColumnTestV2.test_defaults": ["tensorflow.python.platform.test.TestCase.assertIsNotNone", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.tpu.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs"], "tensorflow.python.tpu.feature_column_v2.shared_embedding_columns_v2": [], "tensorflow.python.platform.test.TestCase.assertIsNotNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.SharedEmbeddingColumnTestV2.test_all_constructor_args": ["tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.tpu.feature_column_v2.shared_embedding_columns_v2"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.SharedEmbeddingColumnTestV2.test_all_constructor_args.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.SharedEmbeddingColumnTestV2.test_feature_layer_cpu": ["tensorflow.python.feature_column.feature_column_lib.sequence_categorical_column_with_identity", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.feature_column_lib.SequenceFeatures", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertItemsEqual", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.feature_column.feature_column_lib.DenseFeatures", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.get_default_graph", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.tpu.feature_column_v2.shared_embedding_columns_v2", "<builtin>.tuple", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.SharedEmbeddingColumnTestV2.test_feature_layer_cpu._initializer": ["tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.SharedEmbeddingColumnTestV2.test_deepcopy": ["tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertEqual", "copy.deepcopy", "tensorflow.python.tpu.feature_column_v2.shared_embedding_columns_v2"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.DeviceSpecificEmbeddingColumnTestV2": ["absl.testing.parameterized.named_parameters", "tensorflow.python.framework.test_util.deprecated_graph_mode_only"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.DeviceSpecificEmbeddingColumnTestV2.test_invalid_cases": ["tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.tpu.feature_column_v2.embedding_column_v2", "tensorflow.python.feature_column.feature_column_lib.DenseFeatures", "tensorflow.python.tpu.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.tpu.tpu._TPUInferenceContext", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertRaisesRegex"], "tensorflow.python.tpu.tpu._TPUInferenceContext": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.DeviceSpecificEmbeddingColumnTestV2.test_dense_embedding_lookup": ["tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.tpu.tpu_function.tpu_shard_context", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.tpu.feature_column_v2.embedding_column_v2", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.feature_column.feature_column_lib.DenseFeatures", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.tpu.feature_column_v2.shared_embedding_columns_v2", "<builtin>.tuple", "tensorflow.python.tpu.tpu._TPUInferenceContext", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.DeviceSpecificEmbeddingColumnTestV2.test_dense_embedding_lookup._initializer": ["tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertAllEqual"], "tensorflow.python.platform.test.TestCase.assertCountEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.DeviceSpecificEmbeddingColumnTestV2.test_empty_row": ["tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.tpu.tpu_function.tpu_shard_context", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.tpu.feature_column_v2.embedding_column_v2", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.feature_column.feature_column_lib.DenseFeatures", "tensorflow.python.platform.test.TestCase.assertAllEqual", "<builtin>.tuple", "tensorflow.python.tpu.tpu._TPUInferenceContext", "tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.DeviceSpecificEmbeddingColumnTestV2.test_empty_row._initializer": ["tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\tpu\\feature_column_v2_test.DeviceSpecificEmbeddingColumnTestV2.test_error_dense_shape_invalid": ["tensorflow.python.feature_column.feature_column_lib.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.tpu.feature_column_v2.shared_embedding_columns_v2"], "tensorflow.python.platform.test.main": []}
