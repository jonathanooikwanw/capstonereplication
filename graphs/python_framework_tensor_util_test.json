{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloat": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "tensorflow.python.framework.tensor_util.make_tensor_proto": [], "tensorflow.python.platform.test.TestCase.assertProtoEquals": [], "tensorflow.python.framework.tensor_util.MakeNdarray": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "numpy.array": [], "tensorflow.python.platform.test.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloatN": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloatTyped": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloatTypeCoerce": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloatTypeCoerceNdarray": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "numpy.asarray", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "numpy.asarray": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloatSizes": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloatSizes2": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloatSizesLessValues": ["tensorflow.python.framework.tensor_util.make_tensor_proto", "tensorflow.python.platform.test.TestCase.assertProtoEquals"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloatNpArrayFloat64": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloatTypesWithImplicitRepeat": ["tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.tensor_util.make_tensor_proto", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testFloatMutateArray": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testHalf": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testBfloat16": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testInt": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testLargeInt": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto", "numpy.iinfo"], "numpy.iinfo": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testLargeNegativeInt": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto", "numpy.iinfo"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testIntNDefaultType": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testIntTypes": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testIntTypesWithImplicitRepeat": ["tensorflow.python.framework.tensor_util.make_tensor_proto", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array"], "tensorflow.python.platform.test.TestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testIntMixedWithDimension": ["tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto", "tensorflow.python.framework.tensor_shape.Dimension"], "tensorflow.python.framework.tensor_shape.Dimension": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testLong": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testLongN": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testLongNpArray": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testQuantizedTypes": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testString": ["tensorflow.python.framework.tensor_util.make_tensor_proto", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "tensorflow.python.platform.test.TestCase.assertProtoEquals"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testStringWithImplicitRepeat": ["tensorflow.python.framework.tensor_util.make_tensor_proto", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testStringN": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testStringNpArray": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testArrayMethod": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testArrayMethod.Wrapper.__array__": ["numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testArrayInterface": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testArrayInterface.Wrapper.__array_interface__": ["numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testStringTuple": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testStringNestedTuple": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testComplex64": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testComplex128": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testComplexWithImplicitRepeat": ["tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.tensor_util.make_tensor_proto", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testComplex64N": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testComplex128N": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testComplex64NpArray": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testComplex128NpArray": ["tensorflow.python.platform.test.TestCase.assertProtoEquals", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testNestedNumpyArrayWithoutDType": ["tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testNestedNumpyArrayWithDType": ["tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_util.MakeNdarray", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testUnsupportedDTypes": ["tensorflow.python.platform.test.TestCase.assertRaises", "numpy.array", "tensorflow.python.framework.tensor_util.make_tensor_proto", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.framework.tensor_shape.Dimension"], "tensorflow.python.platform.test.TestCase.assertRaises": [], "tensorflow.python.platform.test.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testTensorShapeVerification": ["tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.framework.tensor_util.make_tensor_proto", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testShapeTooLarge": ["tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.framework.tensor_util.make_tensor_proto", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testLowRankSupported": ["tensorflow.python.framework.tensor_util.make_tensor_proto", "tensorflow.python.platform.test.TestCase.assertProtoEquals", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.TensorUtilTest.testShapeEquals": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.framework.tensor_shape.as_shape", "tensorflow.python.framework.tensor_util.make_tensor_proto", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.framework.tensor_util.ShapeEquals"], "tensorflow.python.framework.tensor_util.ShapeEquals": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "tensorflow.python.framework.tensor_shape.as_shape": [], "tensorflow.python.platform.test.TestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.IsTensorTest.testConstantTensor": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.framework.tensor_util.is_tf_type", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertFalse", "numpy.random.rand"], "numpy.random.rand": [], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.framework.tensor_util.is_tf_type": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.IsTensorTest.testRaggedTensor": ["tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.framework.tensor_util.is_tf_type", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.platform.test.TestCase.assertFalse"], "tensorflow.python.ops.ragged.ragged_factory_ops.constant": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.IsTensorTest.testSparseTensor": ["tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.framework.tensor_util.is_tf_type", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertFalse"], "tensorflow.python.framework.sparse_tensor.SparseTensor": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.IsTensorTest.testIndexedSlices": ["tensorflow.python.framework.indexed_slices.IndexedSlicesValue", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.framework.indexed_slices.IndexedSlices", "tensorflow.python.framework.tensor_util.is_tf_type", "numpy.array", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertFalse"], "tensorflow.python.framework.indexed_slices.IndexedSlices": [], "tensorflow.python.framework.indexed_slices.IndexedSlicesValue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.IsTensorTest.testVariable": ["tensorflow.python.ops.variables.Variable", "tensorflow.python.framework.tensor_util.is_tf_type", "tensorflow.python.platform.test.TestCase.assertTrue"], "tensorflow.python.ops.variables.Variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testConstant": ["tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.tensor_util.constant_value", "numpy.random.rand", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.tensor_util.constant_value": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testUnknown": ["tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.ops.gen_state_ops.variable", "tensorflow.python.framework.ops.Graph"], "tensorflow.python.framework.ops.Graph": [], "tensorflow.python.ops.gen_state_ops.variable": [], "tensorflow.python.platform.test.TestCase.assertIs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testShape": ["tensorflow.python.ops.array_ops.shape", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "numpy.array"], "tensorflow.python.ops.array_ops.shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testFill": ["tensorflow.python.ops.array_ops.fill", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "numpy.array"], "tensorflow.python.ops.array_ops.fill": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testSize": ["tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.array_ops.size", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.ops.array_ops.size": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testSizeOfScalar": ["tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.ops.array_ops.size", "<builtin>.type", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant"], "<builtin>.type": [], "tensorflow.python.platform.test.TestCase.assertIn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testRank": ["tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.ops.array_ops.rank_internal", "<builtin>.type", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.array_ops.rank"], "tensorflow.python.ops.array_ops.rank": [], "tensorflow.python.ops.array_ops.rank_internal": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testCast": ["tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.cast", "numpy.random.rand"], "tensorflow.python.ops.math_ops.cast": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testConcat": ["tensorflow.python.ops.array_ops.concat", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.ops.array_ops.placeholder", "numpy.random.rand"], "tensorflow.python.ops.array_ops.concat": [], "tensorflow.python.ops.array_ops.placeholder": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testPack_Axis0": ["<builtin>.range", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertIs", "numpy.array", "tensorflow.python.ops.array_ops.placeholder", "numpy.random.rand"], "<builtin>.range": [], "tensorflow.python.ops.array_ops.stack": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testPack_Axis1": ["<builtin>.range", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.ops.array_ops.placeholder", "numpy.random.rand", "tensorflow.python.platform.test.TestCase.assertIsNone"], "tensorflow.python.platform.test.TestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testPack_Partial_Axis0": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.ops.array_ops.placeholder", "numpy.random.rand", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testPack_Partial_Axis1": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.ops.array_ops.placeholder", "numpy.random.rand", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testUnpack_Axis0": ["tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.array_ops.unstack", "numpy.random.rand"], "tensorflow.python.ops.array_ops.unstack": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testUnpack_Partial_Axis0": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.ops.array_ops.unstack", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.ops.array_ops.placeholder", "numpy.random.rand", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testSplit_Axis0": ["numpy.split", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.ops.array_ops.split", "numpy.random.rand"], "tensorflow.python.ops.array_ops.split": [], "numpy.split": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testSplit_Partial_Axis0": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.ops.array_ops.placeholder", "numpy.random.rand", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.ops.array_ops.split"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testEqual": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.equal"], "tensorflow.python.ops.math_ops.equal": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testNotEqual": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.math_ops.not_equal", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.ops.math_ops.not_equal": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testStopGradient": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.tensor_util.constant_value", "numpy.random.rand", "tensorflow.python.ops.array_ops.stop_gradient"], "tensorflow.python.ops.array_ops.stop_gradient": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testIdentity": ["tensorflow.python.ops.array_ops.identity", "tensorflow.python.framework.tensor_util.constant_value", "numpy.random.rand", "tensorflow.python.platform.test.TestCase.assertAllEqual"], "tensorflow.python.ops.array_ops.identity": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testLiteral": ["tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.framework.tensor_util.constant_value"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testNumpyNdarray": ["tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.framework.tensor_util.constant_value", "numpy.random.rand"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testVariable": ["tensorflow.python.ops.variables.Variable", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueTest.testVariableV1": ["tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.ops.variables.VariableV1"], "tensorflow.python.ops.variables.VariableV1": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueAsShapeTest": ["tensorflow.python.framework.test_util.run_in_graph_and_eager_modes"], "tensorflow.python.framework.test_util.run_in_graph_and_eager_modes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueAsShapeTest.testConstant": ["tensorflow.python.framework.tensor_util.constant_value_as_shape", "tensorflow.python.framework.tensor_shape.TensorShape", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "numpy.random.rand"], "tensorflow.python.framework.tensor_shape.TensorShape": [], "tensorflow.python.framework.tensor_util.constant_value_as_shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueAsShapeTest.testCast": ["tensorflow.python.ops.array_ops.shape", "tensorflow.python.framework.tensor_util.constant_value_as_shape", "tensorflow.python.framework.tensor_shape.TensorShape", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.cast"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueAsShapeTest.testCastWithUnknown": ["tensorflow.python.framework.tensor_util.constant_value_as_shape", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.cast"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueAsShapeTest.testShape": ["tensorflow.python.ops.array_ops.shape", "tensorflow.python.framework.tensor_util.constant_value_as_shape", "tensorflow.python.framework.tensor_shape.TensorShape", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueAsShapeTest.testMinusOneBecomesNone": ["tensorflow.python.framework.tensor_util.constant_value_as_shape", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueAsShapeTest.testPack": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.tensor_util.constant_value_as_shape", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.array_ops.placeholder"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueAsShapeTest.testConcat": ["tensorflow.python.ops.array_ops.concat", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.tensor_util.constant_value_as_shape", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.array_ops.placeholder"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ConstantValueAsShapeTest.testSlice": ["tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.tensor_util.constant_value_as_shape", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.array_ops.strided_slice", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.tensor_shape.unknown_shape"], "tensorflow.python.ops.array_ops.strided_slice": [], "tensorflow.python.framework.tensor_shape.unknown_shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.MaybeSetStaticShapeTest": ["contextlib.contextmanager"], "contextlib.contextmanager": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.MaybeSetStaticShapeTest.disableSetStaticShape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.MaybeSetStaticShapeTest.testMaybeSetStaticShape": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.MaybeSetStaticShapeTest.disableSetStaticShape", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.framework.func_graph.func_graph_from_py_func", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.MaybeSetStaticShapeTest.testMaybeSetStaticShape.reshape": ["tensorflow.python.ops.array_ops.zeros", "tensorflow.python.ops.array_ops.reshape"], "tensorflow.python.ops.array_ops.zeros": [], "tensorflow.python.ops.array_ops.reshape": [], "tensorflow.python.framework.func_graph.func_graph_from_py_func": [], "tensorflow.python.platform.test.TestCase.assertCountEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.MaybeSetStaticShapeTest.testMaybeSetStaticShapeScalarShape": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.MaybeSetStaticShapeTest.disableSetStaticShape", "tensorflow.python.framework.func_graph.func_graph_from_py_func", "tensorflow.python.platform.test.TestCase.assertCountEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.MaybeSetStaticShapeTest.testMaybeSetStaticShapeScalarShape.reshape": ["tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.reshape"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ShapeTensorTest": ["tensorflow.python.framework.test_util.run_in_graph_and_eager_modes"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\tensor_util_test.ShapeTensorTest.testConversion": ["tensorflow.python.framework.tensor_util.shape_tensor", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.tensor_shape.TensorShape", "tensorflow.python.framework.tensor_shape.Dimension"], "tensorflow.python.framework.tensor_util.shape_tensor": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual": [], "tensorflow.python.platform.test.main": []}
