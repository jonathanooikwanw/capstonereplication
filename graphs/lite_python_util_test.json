{"Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilTest.testConvertEnumToDtype": ["<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.util._convert_tflite_enum_type_to_tf_type", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "tensorflow.lite.python.util._convert_tflite_enum_type_to_tf_type": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises": [], "<builtin>.str": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilTest.testTensorName": ["tensorflow.lite.python.util.get_tensor_name", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.split", "tensorflow.python.ops.array_ops.placeholder", "six.moves.range", "<builtin>.len"], "tensorflow.python.framework.ops.Graph": [], "tensorflow.python.ops.array_ops.placeholder": [], "tensorflow.python.ops.array_ops.split": [], "<builtin>.len": [], "six.moves.range": [], "tensorflow.lite.python.util.get_tensor_name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilTest.testUint32PassThrough": ["numpy.reshape", "tensorflow.keras.layers.InputLayer", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "tensorflow.keras.layers.Reshape", "tensorflow.lite.TFLiteConverter.from_keras_model", "tensorflow.lite.Interpreter", "tensorflow.keras.Sequential"], "tensorflow.keras.layers.InputLayer": [], "tensorflow.keras.layers.Reshape": [], "tensorflow.keras.Sequential": [], "tensorflow.lite.TFLiteConverter.from_keras_model": [], "tensorflow.lite.Interpreter": [], "numpy.array": [], "numpy.reshape": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilTest": ["tensorflow.python.framework.test_util.enable_control_flow_v2"], "tensorflow.python.framework.test_util.enable_control_flow_v2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilTest.testRemoveLowerUsingSwitchMerge": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue", "tensorflow.python.ops.control_flow_ops.while_loop", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.convert_to_constants.disable_lower_using_switch_merge", "tensorflow.python.client.session.Session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilTest.testRemoveLowerUsingSwitchMerge.<lambda1>": ["tensorflow.python.ops.math_ops.less"], "tensorflow.python.ops.math_ops.less": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilTest.testRemoveLowerUsingSwitchMerge.<lambda2>": ["tensorflow.python.ops.math_ops.add"], "tensorflow.python.ops.math_ops.add": [], "tensorflow.python.ops.control_flow_ops.while_loop": [], "tensorflow.python.client.session.Session": [], "tensorflow.python.framework.convert_to_constants.disable_lower_using_switch_merge": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilTest.testConvertBytes": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.util.convert_bytes_to_c_source", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNotEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue"], "tensorflow.lite.python.util.convert_bytes_to_c_source": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNotEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.TensorFunctionsTest.testGetTensorsValid": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.util.get_tensors_from_tensor_names", "tensorflow.python.client.session.Session"], "tensorflow.lite.python.util.get_tensors_from_tensor_names": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.TensorFunctionsTest.testGetTensorsInvalid": ["<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.util.get_tensors_from_tensor_names", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.python.client.session.Session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.TensorFunctionsTest.testSetTensorShapeValid": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.util.set_tensor_shapes", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "tensorflow.lite.python.util.set_tensor_shapes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.TensorFunctionsTest.testSetTensorShapeNoneValid": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.util.set_tensor_shapes", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.TensorFunctionsTest.testSetTensorShapeArrayInvalid": ["<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.lite.python.util.set_tensor_shapes", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.TensorFunctionsTest.testSetTensorShapeDimensionInvalid": ["<builtin>.str", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn", "tensorflow.lite.python.util.set_tensor_shapes", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.TensorFunctionsTest.testSetTensorShapeEmpty": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.lite.python.util.set_tensor_shapes", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test._get_keras_model": ["numpy.random.randint", "tensorflow.keras.layers.MaxPooling2D", "tensorflow.keras.layers.Lambda", "tensorflow.keras.layers.InputLayer", "tensorflow.keras.layers.Flatten", "tensorflow.keras.layers.Dense", "tensorflow.keras.losses.SparseCategoricalCrossentropy", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.Reshape", "tensorflow.keras.Sequential"], "numpy.random.randint": [], "tensorflow.keras.layers.Conv2D": [], "tensorflow.keras.layers.MaxPooling2D": [], "tensorflow.keras.layers.Flatten": [], "tensorflow.keras.layers.Dense": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test._get_keras_model.<lambda1>": [], "tensorflow.keras.layers.Lambda": [], "tensorflow.keras.losses.SparseCategoricalCrossentropy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test._generate_integer_tflite_model": ["tensorflow.lite.TFLiteConverter.from_keras_model", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test._get_keras_model", "tensorflow.lite.TFLiteConverter.from_saved_model"], "tensorflow.lite.TFLiteConverter.from_saved_model": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test._generate_integer_tflite_model.representative_dataset_gen": ["numpy.random.uniform", "six.moves.range"], "numpy.random.uniform": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test._test_param_modify_integer_model_io_type": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilModifyIntegerQuantizedModelIOTypeTest.setUpClass": ["<builtin>.super", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test._generate_integer_tflite_model"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilModifyIntegerQuantizedModelIOTypeTest": ["absl.testing.parameterized.named_parameters", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test._test_param_modify_integer_model_io_type"], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilModifyIntegerQuantizedModelIOTypeTest.test": ["Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilModifyIntegerQuantizedModelIOTypeTest.test._run_tflite_inference", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.lite.python.util.modify_model_io_type"], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilModifyIntegerQuantizedModelIOTypeTest.test._run_tflite_inference": ["numpy.random.seed", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "numpy.random.uniform", "tensorflow.lite.Interpreter"], "numpy.random.seed": [], "tensorflow.lite.python.util.modify_model_io_type": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilModifyIntegerQuantizedModelIOTypeSignatureDefTest._generate_integer_tflite_model_from_saved_model": ["os.path.join", "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test._generate_integer_tflite_model"], "tensorflow.python.framework.test_util.TensorFlowTestCase.get_temp_dir": [], "os.path.join": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilModifyIntegerQuantizedModelIOTypeSignatureDefTest.test": ["tensorflow.lite.python.util.modify_model_io_type", "tensorflow.lite.Interpreter", "Desktop\\Work\\tensorflow-master\\tensorflow\\lite\\python\\util_test.UtilModifyIntegerQuantizedModelIOTypeSignatureDefTest._generate_integer_tflite_model_from_saved_model"], "tensorflow.python.platform.test.main": []}
