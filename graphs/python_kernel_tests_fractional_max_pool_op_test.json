{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test": ["tensorflow.python.platform.test.main"], "numpy.random.RandomState": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest": ["tensorflow.python.framework.test_util.run_deprecated_v1", "numpy.random.RandomState"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._MaxPoolAlongRows": ["numpy.zeros", "numpy.vstack", "<builtin>.min", "numpy.amax", "<builtin>.range"], "numpy.zeros": [], "<builtin>.range": [], "<builtin>.min": [], "numpy.amax": [], "numpy.vstack": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._MaxPoolAlongCols": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._MaxPoolAlongRows"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._GetExpectedFractionalMaxPoolResult": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._MaxPoolAlongRows", "numpy.zeros", "<builtin>.len", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._MaxPoolAlongCols", "<builtin>.range"], "<builtin>.len": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._ValidateFractionalMaxPoolResult": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.nn_ops.fractional_max_pool_v2", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._GetExpectedFractionalMaxPoolResult", "tensorflow.python.platform.test.TestCase.assertShapeEqual", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.platform.test.TestCase.cached_session": [], "tensorflow.python.ops.nn_ops.fractional_max_pool_v2": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "tensorflow.python.platform.test.TestCase.assertShapeEqual": [], "tensorflow.python.platform.test.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._testVisually": ["math.sqrt", "tensorflow.python.platform.test.TestCase.cached_session", "<builtin>.print", "tensorflow.python.ops.nn_ops.fractional_max_pool_v2", "<builtin>.str", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._GetExpectedFractionalMaxPoolResult", "<builtin>.len", "tensorflow.python.platform.test.TestCase.evaluate", "<builtin>.range"], "<builtin>.print": [], "math.sqrt": [], "<builtin>.str": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest.testAllInputOptions": ["math.sqrt", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._ValidateFractionalMaxPoolResult"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest.testIntegerTensorInput": ["math.sqrt", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._ValidateFractionalMaxPoolResult"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest.testDifferentTensorShapes": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._ValidateFractionalMaxPoolResult"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest.testLargePoolingRatio": ["math.sqrt", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._ValidateFractionalMaxPoolResult"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest.testDivisiblePoolingRatio": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._ValidateFractionalMaxPoolResult"], "tensorflow.python.framework.test_util.run_deprecated_v1": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest.testDifferentInputTensorShape": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.ops.nn_ops.fractional_max_pool_v2", "numpy.zeros", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolTest._GetExpectedFractionalMaxPoolResult", "tensorflow.python.platform.test.TestCase.assertSequenceEqual", "tensorflow.python.ops.array_ops.placeholder"], "tensorflow.python.ops.array_ops.placeholder": [], "tensorflow.python.platform.test.TestCase.assertSequenceEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest": ["tensorflow.python.framework.test_util.run_deprecated_v1", "numpy.random.RandomState"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest._GenerateUniqueRandomInputTensor": ["numpy.arange"], "numpy.arange": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest.testDirectNotUseOverlapping": ["tensorflow.python.platform.test.TestCase.cached_session", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertAllClose", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest._GenerateUniqueRandomInputTensor", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.nn_ops.max_pool", "tensorflow.python.platform.test.TestCase.assertShapeEqual", "tensorflow.python.ops.gen_nn_ops.fractional_max_pool_grad", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.gen_nn_ops.max_pool_grad", "<builtin>.range"], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.ops.nn_ops.max_pool": [], "tensorflow.python.ops.gen_nn_ops.max_pool_grad": [], "<builtin>.list": [], "tensorflow.python.ops.gen_nn_ops.fractional_max_pool_grad": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest.testDirectUseOverlapping": ["tensorflow.python.platform.test.TestCase.cached_session", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertAllClose", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest._GenerateUniqueRandomInputTensor", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.nn_ops.max_pool", "tensorflow.python.platform.test.TestCase.assertShapeEqual", "tensorflow.python.ops.gen_nn_ops.fractional_max_pool_grad", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.gen_nn_ops.max_pool_grad", "<builtin>.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest.testAllInputOptionsThroughGradientError": ["math.sqrt", "tensorflow.python.platform.test.TestCase.cached_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest._GenerateUniqueRandomInputTensor", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.nn_ops.fractional_max_pool_v2", "tensorflow.python.platform.test.TestCase.assertLess", "tensorflow.python.ops.gradient_checker.compute_gradient_error", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.ops.gradient_checker.compute_gradient_error": [], "tensorflow.python.platform.test.TestCase.assertLess": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest.testDifferentTensorShapesThroughGradientError": ["math.sqrt", "tensorflow.python.platform.test.TestCase.cached_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest._GenerateUniqueRandomInputTensor", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.nn_ops.fractional_max_pool_v2", "tensorflow.python.platform.test.TestCase.assertLess", "tensorflow.python.ops.gradient_checker.compute_gradient_error", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest.testLargePoolingRatioThroughGradientError": ["math.sqrt", "tensorflow.python.platform.test.TestCase.cached_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest._GenerateUniqueRandomInputTensor", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.nn_ops.fractional_max_pool_v2", "tensorflow.python.platform.test.TestCase.assertLess", "<builtin>.int", "tensorflow.python.ops.gradient_checker.compute_gradient_error", "<builtin>.zip"], "<builtin>.int": [], "<builtin>.zip": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\fractional_max_pool_op_test.FractionalMaxPoolGradTest.testWhenRepeatedMaxValueInPoolingRegion": ["tensorflow.python.platform.test.TestCase.cached_session", "numpy.reshape", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.assertShapeEqual", "tensorflow.python.ops.gen_nn_ops.fractional_max_pool_grad", "tensorflow.python.platform.test.TestCase.evaluate"], "numpy.reshape": [], "tensorflow.python.platform.test.main": []}
