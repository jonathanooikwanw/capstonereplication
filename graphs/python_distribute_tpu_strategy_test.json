{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test": ["tensorflow.python.eager.test.main", "tensorflow.python.platform.flags.DEFINE_string"], "tensorflow.python.platform.flags.DEFINE_string": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver": ["tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver.TPUClusterResolver"], "tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver.TPUClusterResolver": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2", "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.eager.remote.connect_to_cluster"], "tensorflow.python.eager.remote.connect_to_cluster": [], "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system": [], "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_multiple_initialize_system": ["tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.eager.remote.connect_to_cluster", "tensorflow.python.eager.test.mock.patch.object", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.eager.test.TestCase.assertRegex", "<builtin>.str"], "tensorflow.python.eager.test.mock.patch.object": [], "<builtin>.str": [], "tensorflow.python.eager.test.TestCase.assertRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_tf_function_same_device": ["tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.device", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_tf_function_same_device.foo", "tensorflow.python.ops.variables.Variable", "tensorflow.python.eager.def_function.function", "tensorflow.python.eager.function.defun_with_attributes"], "tensorflow.python.framework.ops.device": [], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.eager.function.defun_with_attributes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_tf_function_same_device.get_a_plus_one": [], "tensorflow.python.eager.def_function.function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_tf_function_same_device.foo": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_tf_function_same_device.get_a_plus_one", "tensorflow.python.framework.ops.device"], "tensorflow.python.eager.test.TestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_return_int32": ["tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.device", "tensorflow.python.ops.variables.Variable", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_return_int32.bar"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_return_int32.foo": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_return_int32.bar": ["tensorflow.python.framework.ops.device", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_return_int32.foo"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_output_device": ["tensorflow.python.eager.function.defun_with_attributes", "tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_tpu_output_device.foo": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUTest.test_on_demand_op_with_dynamic_output": ["tensorflow.python.ops.array_ops.where", "tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.device", "tensorflow.python.ops.array_ops.repeat", "tensorflow.python.ops.math_ops.range"], "tensorflow.python.ops.array_ops.where": [], "tensorflow.python.ops.math_ops.range": [], "tensorflow.python.ops.array_ops.repeat": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_handle_in_cross_replica_context": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_handle_in_cross_replica_context.func", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_handle_in_cross_replica_context.func": ["tensorflow.python.eager.test.TestCase.assertEndsWith"], "tensorflow.python.eager.test.TestCase.assertEndsWith": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.testStaticHashTableDatasetFnHostTrainingLoop": ["<builtin>.range", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.testStaticHashTableDatasetFnHostTrainingLoop.train_steps", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "<builtin>.list", "tensorflow.python.ops.lookup_ops.StaticHashTable", "<builtin>.iter", "tensorflow.python.eager.test.TestCase.assertEqual", "<builtin>.len", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.lookup_ops.KeyValueTensorInitializer"], "<builtin>.len": [], "<builtin>.range": [], "<builtin>.list": [], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.ops.lookup_ops.KeyValueTensorInitializer": [], "tensorflow.python.ops.lookup_ops.StaticHashTable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.testStaticHashTableDatasetFnHostTrainingLoop.dataset_fn": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.data.ops.dataset_ops.Dataset.from_tensors"], "tensorflow.python.data.ops.dataset_ops.Dataset.from_tensors": [], "<builtin>.iter": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.testStaticHashTableDatasetFnHostTrainingLoop.step_fn": ["tensorflow.python.ops.math_ops.reduce_sum"], "tensorflow.python.ops.math_ops.reduce_sum": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.testStaticHashTableDatasetFnHostTrainingLoop.train_steps": ["<builtin>.next", "tensorflow.python.ops.math_ops.range"], "<builtin>.next": [], "tensorflow.python.eager.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_function_compile_with_xla": ["tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.device", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.eager.test.TestCase.skipTest", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_function_compile_with_xla.func", "tensorflow.python.ops.variables.Variable"], "tensorflow.python.eager.test.TestCase.skipTest": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_function_compile_with_xla.func": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_sequential_runs": ["tensorflow.python.tpu.device_assignment.DeviceAssignment.build", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_sequential_runs.train_step", "tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.eager.remote.connect_to_cluster", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2"], "tensorflow.python.tpu.device_assignment.DeviceAssignment.build": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_sequential_runs.computation": ["tensorflow.python.ops.math_ops.square"], "tensorflow.python.ops.math_ops.square": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_sequential_runs.train_step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.inference_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference": ["tensorflow.python.ops.control_flow_ops.switch_case"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.do_inference": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.inference_fn", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.<dict1>.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.<lambda1>": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.do_inference"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.<dict1>.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.<lambda2>": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_device_switch_case.run_inference.do_inference"], "tensorflow.python.ops.control_flow_ops.switch_case": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.compilation_failure_run", "tensorflow.python.eager.test.TestCase.skipTest", "tensorflow.python.framework.config.set_soft_device_placement", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.good_run", "tensorflow.python.eager.test.TestCase.assertRaises"], "tensorflow.python.framework.config.set_soft_device_placement": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.compilation_failure_run": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.compilation_failure_run.computation": ["tensorflow.python.ops.random_ops.random_gamma"], "tensorflow.python.ops.random_ops.random_gamma": [], "tensorflow.python.eager.test.TestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.good_run": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_recover_from_compilation_failures.good_run.computation": ["tensorflow.python.ops.random_ops.random_normal"], "tensorflow.python.ops.random_ops.random_normal": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_dynamic_shape_with_outside_compilation_failure": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_dynamic_shape_with_outside_compilation_failure.train_fn", "tensorflow.python.platform.tf_logging.info", "tensorflow.python.data.ops.dataset_ops.Dataset.from_tensors", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.framework.config.set_soft_device_placement", "<builtin>.iter", "tensorflow.python.eager.test.TestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_dynamic_shape_with_outside_compilation_failure.train_fn": ["<builtin>.next"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_dynamic_shape_with_outside_compilation_failure.train_fn.step_fn": ["tensorflow.python.ops.array_ops.size", "tensorflow.python.ops.math_ops.reduce_sum"], "tensorflow.python.ops.array_ops.size": [], "tensorflow.python.platform.tf_logging.info": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_computation_on_subset_cores": ["tensorflow.python.tpu.device_assignment.DeviceAssignment.build", "tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.eager.remote.connect_to_cluster", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2", "tensorflow.python.ops.variables.Variable", "tensorflow.python.tpu.device_assignment.DeviceAssignment", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_computation_on_subset_cores.train_step"], "tensorflow.python.tpu.device_assignment.DeviceAssignment": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_computation_on_subset_cores.train_step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_computation_on_subset_cores.train_step.step_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_worker_devices_on_subset_cores": ["tensorflow.python.tpu.device_assignment.DeviceAssignment.build", "tensorflow.python.eager.test.TestCase.assertEndsWith", "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.eager.remote.connect_to_cluster", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2", "tensorflow.python.tpu.device_assignment.DeviceAssignment", "tensorflow.python.eager.test.TestCase.assertLen"], "tensorflow.python.eager.test.TestCase.assertLen": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_control_output_in_while_body_fn": ["tensorflow.python.eager.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_control_output_in_while_body_fn.train_step", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_control_output_in_while_body_fn.train_step": ["tensorflow.python.ops.math_ops.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_control_output_in_while_body_fn.train_step.step_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape.train_step", "tensorflow.python.eager.test.TestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape.train_step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape.train_step.shape_list": ["<builtin>.enumerate", "tensorflow.python.ops.array_ops.shape"], "<builtin>.enumerate": [], "tensorflow.python.ops.array_ops.shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape.train_step.step_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_conditional_with_dynamic_shape.train_step.shape_list", "tensorflow.python.ops.array_ops.where", "tensorflow.python.ops.array_ops.reshape", "tensorflow.python.ops.array_ops.shape"], "tensorflow.python.ops.array_ops.reshape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_in_graph_and_while_body_fn": ["tensorflow.python.eager.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_in_graph_and_while_body_fn.train_step"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_in_graph_and_while_body_fn.train_step": ["tensorflow.python.ops.math_ops.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_in_graph_and_while_body_fn.train_step.step_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_cluster_in_graph_and_while_body_fn.train_step.init_fn": ["tensorflow.python.ops.array_ops.zeros"], "tensorflow.python.ops.array_ops.zeros": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn.bar"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn.foo": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn.foo.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn.bar": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_two_clusters_with_same_fn.foo"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_variable_run_argument": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_variable_run_argument.step", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_variable_run_argument.replica_step": ["tensorflow.python.eager.test.TestCase.assertIsInstance"], "tensorflow.python.eager.test.TestCase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_variable_run_argument.step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.step", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.eager.test.TestCase.assertRaisesRegex", "tensorflow.python.ops.variables.Variable", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.DummyClass.step"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.only_star_args": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.pos_and_star_args": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.named_args": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.star_args_and_kw_only": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.step": [], "tensorflow.python.eager.test.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.DummyClass.method": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_tpu_run_arg_parsing.DummyClass.step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_using_external_variable_inside_tf_function": ["<builtin>.range", "tensorflow.python.eager.test.TestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "<builtin>.next", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.ops.variables.Variable", "<builtin>.iter", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_using_external_variable_inside_tf_function.train_step"], "tensorflow.python.data.ops.dataset_ops.Dataset.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_using_external_variable_inside_tf_function.train_step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_using_external_variable_inside_tf_function.train_step.computation": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_all_reduce_on_sync_on_read_variable": ["<builtin>.range", "tensorflow.python.eager.test.TestCase.assertAllEqual", "<builtin>.sum", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_all_reduce_on_sync_on_read_variable.run", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.ops.variables.Variable", "<builtin>.iter"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_all_reduce_on_sync_on_read_variable.run": ["<builtin>.next"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_all_reduce_on_sync_on_read_variable.run.computation": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_all_reduce_on_sync_on_read_variable.run.all_reduce": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "tensorflow.python.distribute.distribution_strategy_context.get_replica_context": [], "<builtin>.sum": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_output_on_device": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_output_on_device.train_step", "tensorflow.python.eager.test.TestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_output_on_device.computation": ["tensorflow.python.ops.math_ops.square"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_output_on_device.train_step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_nones": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_nones.train_step", "tensorflow.python.eager.test.TestCase.assertIsNone", "tensorflow.python.eager.test.TestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_nones.train_step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_nones.train_step.computation": [], "tensorflow.python.eager.test.TestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_list": ["tensorflow.python.eager.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_list.train_step"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_list.train_step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_list.train_step.computation": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_dict": ["tensorflow.python.eager.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_dict.train_step"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_dict.train_step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_run_passing_and_returning_empty_dict.train_step.computation": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_output": ["<builtin>.range", "tensorflow.python.distribute.distribute_lib.InputOptions", "tensorflow.python.eager.test.TestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_output.sparse_lookup", "tensorflow.python.eager.test.TestCase.skipTest", "tensorflow.python.ops.variables.Variable", "<builtin>.iter", "tensorflow.python.eager.test.TestCase.assertIsInstance"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_output.sparse_lookup": ["tensorflow.python.util.nest.map_structure", "<builtin>.next"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_output.sparse_lookup.tpu_function": ["tensorflow.python.ops.math_ops.unsorted_segment_sum", "tensorflow.python.ops.array_ops.gather"], "tensorflow.python.ops.array_ops.gather": [], "tensorflow.python.ops.math_ops.unsorted_segment_sum": [], "tensorflow.python.util.nest.map_structure": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_output.dataset_fn": ["tensorflow.python.data.ops.dataset_ops.Dataset.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_output.dataset_fn.make_sparse": ["tensorflow.python.ops.array_ops.constant", "tensorflow.python.framework.sparse_tensor.SparseTensor"], "tensorflow.python.ops.array_ops.constant": [], "tensorflow.python.framework.sparse_tensor.SparseTensor": [], "tensorflow.python.distribute.distribute_lib.InputOptions": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output": ["<builtin>.range", "tensorflow.python.distribute.distribute_lib.InputOptions", "tensorflow.python.eager.test.TestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.eager.test.TestCase.skipTest", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output.sparse_lookup", "tensorflow.python.ops.variables.Variable", "<builtin>.iter", "tensorflow.python.eager.test.TestCase.assertIsInstance"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output.sparse_lookup": ["tensorflow.python.util.nest.map_structure", "<builtin>.next"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output.sparse_lookup.tpu_function": ["tensorflow.python.ops.math_ops.unsorted_segment_sum", "tensorflow.python.ops.array_ops.gather"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output.dataset_fn": ["tensorflow.python.data.ops.dataset_ops.Dataset.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_non_flat_output.dataset_fn.make_sparse": ["tensorflow.python.ops.array_ops.constant", "tensorflow.python.framework.sparse_tensor.SparseTensor"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation": ["tensorflow.python.distribute.distribute_lib.InputOptions", "tensorflow.python.eager.test.TestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation.sparse_lookup", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.eager.test.TestCase.skipTest", "tensorflow.python.ops.variables.Variable", "<builtin>.iter"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation.sparse_lookup": ["<builtin>.next"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation.sparse_lookup.tpu_function": ["tensorflow.python.tpu.tpu.outside_compilation", "tensorflow.python.ops.math_ops.reduce_sum"], "tensorflow.python.tpu.tpu.outside_compilation": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation.dataset_fn": ["tensorflow.python.data.ops.dataset_ops.Dataset.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_dynamic_shapes_outside_compilation.dataset_fn.make_sparse": ["tensorflow.python.ops.array_ops.constant", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.ops.array_ops.expand_dims", "tensorflow.python.framework.sparse_tensor.SparseTensor"], "tensorflow.python.ops.array_ops.expand_dims": [], "tensorflow.python.ops.array_ops.concat": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components": ["<builtin>.range", "tensorflow.python.eager.test.TestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestComposite.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.test_fn", "tensorflow.python.ops.array_ops.constant", "tensorflow.python.eager.test.TestCase.assertIsInstance"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec.value_type": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec._to_components": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec._from_components": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestComposite.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestComposite.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec._component_specs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec._serialize": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestComposite._type_spec": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestCompositeTypeSpec.__init__", "tensorflow.python.framework.tensor_spec.TensorSpec.from_tensor"], "tensorflow.python.framework.tensor_spec.TensorSpec.from_tensor": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.TestComposite._shape_invariant_to_type_spec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.test_fn": ["tensorflow.python.util.nest.map_structure"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_composite_input_with_non_flat_components.test_fn.tpu_function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_per_device_tracing_of_mirrored_variables": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.eager.test.TestCase.assertLen", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_per_device_tracing_of_mirrored_variables.add_one": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.add"], "tensorflow.python.ops.math_ops.add": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_per_device_tracing_of_mirrored_variables.update_variable": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyTest.test_per_device_tracing_of_mirrored_variables.add_one", "<builtin>.set", "tensorflow.python.framework.ops.device"], "<builtin>.set": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_default": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "<builtin>.next", "tensorflow.python.framework.device.DeviceSpec.from_string", "tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "<builtin>.iter"], "tensorflow.python.framework.device.DeviceSpec.from_string": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_tpu": ["tensorflow.python.distribute.distribute_lib.InputOptions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "<builtin>.next", "tensorflow.python.framework.device.DeviceSpec.from_string", "tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "<builtin>.iter"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_cpu": ["tensorflow.python.distribute.distribute_lib.InputOptions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "<builtin>.next", "tensorflow.python.framework.device.DeviceSpec.from_string", "tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "<builtin>.iter"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_sparse_dataset": ["tensorflow.python.data.ops.dataset_ops.Dataset.from_tensors", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.eager.test.TestCase.assertRaisesRegex", "<builtin>.iter", "tensorflow.python.framework.sparse_tensor.SparseTensor"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_ragged_dataset": ["tensorflow.python.data.ops.dataset_ops.Dataset.from_tensors", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_splits", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.eager.test.TestCase.assertRaisesRegex", "<builtin>.iter"], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_splits": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_sparse_dataset_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "<builtin>.iter", "tensorflow.python.eager.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_sparse_dataset_fn.dataset_fn": ["tensorflow.python.data.ops.dataset_ops.Dataset.from_tensors", "tensorflow.python.framework.sparse_tensor.SparseTensor"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_ragged_dataset_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "<builtin>.iter", "tensorflow.python.eager.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDataPrefetchTest.test_prefetch_to_device_ragged_dataset_fn.dataset_fn": ["tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_splits", "tensorflow.python.data.ops.dataset_ops.Dataset.from_tensors"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_update_config_proto": ["tensorflow.core.protobuf.config_pb2.ConfigProto", "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertTrue", "tensorflow.python.eager.remote.connect_to_cluster", "tensorflow.python.eager.test.mock.patch.object", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertProtoEquals", "tensorflow.python.training.server_lib.ClusterSpec"], "tensorflow.core.protobuf.config_pb2.ConfigProto": [], "tensorflow.python.training.server_lib.ClusterSpec": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertProtoEquals": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_make_input_fn_iterable": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "<builtin>.range", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterable", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_make_input_fn_iterable.<lambda1>": ["tensorflow.python.data.ops.dataset_ops.Dataset.range"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_make_input_fn_iterator": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "<builtin>.range", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_make_input_fn_iterator.<lambda1>": ["tensorflow.python.data.ops.dataset_ops.Dataset.range"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_num_replicas_in_sync": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_call_and_merge_exceptions": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_call_and_merge_exceptions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_call_and_merge_exceptions": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_numpy_dataset": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_numpy_dataset", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_numpy_dataset": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_global_step_update": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_global_step_update"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_global_step_update": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_run": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_run"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_run": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_summary_for_replica_zero_only": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_summary_for_replica_zero_only"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_summary_for_replica_zero_only": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_sum": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_sum_gradients": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradients"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradients": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_sum_gradient_tape": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradient_tape", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradient_tape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_mean": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_mean_gradients": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradients"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradients": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_all_reduce_mean_gradient_tape": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradient_tape"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradient_tape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_reduce": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.eager.def_function.function", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.evaluate", "<builtin>.next", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_reduce.<lambda1>": ["tensorflow.python.data.ops.dataset_ops.Dataset.from_tensor_slices"], "tensorflow.python.data.ops.dataset_ops.Dataset.from_tensor_slices": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.evaluate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_constraint": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.ops.variables.Variable", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_constraint.update_variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_constraint.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_constraint.update_variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_trainable_variables": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_trainable_variable"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_trainable_variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.evaluate", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.cached_session", "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertLen", "tensorflow.python.eager.remote.connect_to_cluster", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2", "tensorflow.python.ops.variables.Variable", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.tpu.device_assignment.DeviceAssignment", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertLen": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism.f": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.cached_session": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.evaluate", "tensorflow.python.training.checkpoint_management.latest_checkpoint", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.cached_session", "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing.PartitionedModel.change_weights_op", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing.PartitionedModel.__init__", "tensorflow.python.eager.remote.connect_to_cluster", "os.path.join", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.def_function.function", "tensorflow.python.tpu.device_assignment.DeviceAssignment", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.get_temp_dir", "tensorflow.python.training.tracking.util.Checkpoint"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing.PartitionedModel.__init__": ["<builtin>.super", "tensorflow.python.distribute.distribution_strategy_context.has_strategy", "tensorflow.python.ops.variables.Variable", "tensorflow.python.distribute.distribution_strategy_context.get_strategy"], "<builtin>.super": [], "tensorflow.python.distribute.distribution_strategy_context.has_strategy": [], "tensorflow.python.distribute.distribution_strategy_context.get_strategy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing.PartitionedModel.__call__": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.TPUStrategyDistributionTest.test_model_parallelism_checkpointing.PartitionedModel.change_weights_op": ["tensorflow.python.ops.control_flow_ops.group"], "tensorflow.python.ops.control_flow_ops.group": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.get_temp_dir": [], "os.path.join": [], "tensorflow.python.training.tracking.util.Checkpoint": [], "tensorflow.python.training.checkpoint_management.latest_checkpoint": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.DeviceAssignmentTest.test_core_assignment": ["tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.eager.remote.connect_to_cluster", "tensorflow.python.eager.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.tpu.device_assignment.DeviceAssignment"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.DeviceAssignmentTest.test_device_assignment_strategy_properties": ["tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.eager.remote.connect_to_cluster", "tensorflow.python.eager.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2", "tensorflow.python.tpu.device_assignment.DeviceAssignment"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.DeviceAssignmentTest.test_device_assignment_constants": ["tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.eager.remote.connect_to_cluster", "tensorflow.python.eager.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.tpu.device_assignment.DeviceAssignment"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.DeviceAssignmentTest.test_variables_mismatched_device_assignment": ["tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.tpu.tpu_strategy_util.initialize_tpu_system", "tensorflow.python.eager.test.TestCase.cached_session", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.eager.remote.connect_to_cluster", "tensorflow.python.eager.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\tpu_strategy_test.get_tpu_cluster_resolver", "tensorflow.python.distribute.tpu_strategy.TPUStrategyV2", "tensorflow.python.ops.variables.Variable", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.tpu.device_assignment.DeviceAssignment", "tensorflow.python.eager.def_function.function"], "tensorflow.python.eager.test.TestCase.cached_session": [], "tensorflow.python.eager.test.TestCase.evaluate": [], "tensorflow.python.eager.test.main": []}
