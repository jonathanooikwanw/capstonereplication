{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test": ["tensorflow.python.util.dispatch.GlobalOpDispatcher.register", "tensorflow.python.platform.googletest.main", "tensorflow.python.ops.ragged.ragged_tensor._add_supported_value_type", "tensorflow.python.util.dispatch.GlobalOpDispatcher.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__": ["<builtin>.ValueError", "<builtin>.isinstance"], "<builtin>.isinstance": [], "<builtin>.ValueError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.dtype": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__getitem__": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor._type_spec": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorSpec.__init__", "tensorflow.python.framework.type_spec.type_spec_from_value"], "tensorflow.python.framework.type_spec.type_spec_from_value": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorSpec.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorSpec.dtype": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorSpec.value_type": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorSpec._to_components": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorSpec._from_components": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorSpec._component_specs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorSpec._serialize": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.call_op": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.handle": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.is_wrapped_tensor_arg", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.call_op", "<builtin>.dict", "<builtin>.any", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.unwrap"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.is_wrapped_tensor_arg": ["<builtin>.isinstance", "<builtin>.any"], "<builtin>.any": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.unwrap": ["<builtin>.isinstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.unwrap", "<builtin>.type"], "<builtin>.dict": [], "<builtin>.type": [], "tensorflow.python.util.dispatch.GlobalOpDispatcher.__init__": [], "tensorflow.python.util.dispatch.GlobalOpDispatcher.register": [], "tensorflow.python.ops.ragged.ragged_tensor._add_supported_value_type": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.assertAllTensorsEqual": ["<builtin>.len", "<builtin>.zip", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "<builtin>.len": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen": [], "<builtin>.zip": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.testConstruction": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_limits", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_uniform_row_length", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_starts", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_splits", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_lengths"], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_splits": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance": [], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_starts": [], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_limits": [], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_lengths": [], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_uniform_row_length": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.testWithValues": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_nested_row_splits", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance"], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_nested_row_splits": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.testWithFlatValues": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_nested_row_splits", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance"], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.testUnaryElementwiseOp": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.assertAllTensorsEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_nested_row_splits", "tensorflow.python.framework.test_util.random_seed.set_seed", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance"], "tensorflow.python.ops.ragged.ragged_factory_ops.constant": [], "tensorflow.python.framework.test_util.random_seed.set_seed": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.testBinaryElementwiseOp": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.assertAllTensorsEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_nested_row_splits", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.assertAllTensorsEqual": ["<builtin>.len", "<builtin>.zip", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testConstruction": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorSpec.__init__", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNone", "tensorflow.python.framework.tensor_spec.TensorSpec", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensorSpec"], "tensorflow.python.framework.tensor_spec.TensorSpec": [], "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensorSpec": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNone": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testSerialize": ["<builtin>.repr", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual"], "<builtin>.repr": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testComponentSpecs": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testToFromComponents": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_nested_row_splits", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.assertAllTensorsEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testIsCompatibleWith": ["tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensorSpec.__init__", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse", "tensorflow.python.framework.tensor_spec.TensorSpec", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensorSpec", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testToList": ["tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.WrappedTensor.__init__", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.framework.test_util.TensorFlowTestCase.subTest", "tensorflow.python.eager.context.eager_mode", "tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor.from_row_splits", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual"], "tensorflow.python.eager.context.eager_mode": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.subTest": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testToList.WrappedTensorWithNumpy.numpy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\ragged\\ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testToList.WrappedTensorWithToList.to_list": [], "tensorflow.python.platform.googletest.main": []}
