{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test": ["tensorflow.python.platform.googletest.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testSparseEye": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testSparseEye.test_one", "<builtin>.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testSparseEye.test_one": ["tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.sparse_ops.sparse_to_dense", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.sparse_ops.sparse_eye", "numpy.eye"], "numpy.eye": [], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.ops.sparse_ops.sparse_eye": [], "tensorflow.python.ops.sparse_ops.sparse_to_dense": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual": [], "<builtin>.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testDenseFromConstantToSparse": ["tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "numpy.reshape", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.sparse_ops.sparse_to_dense", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "numpy.arange", "tensorflow.python.ops.sparse_ops.from_dense"], "numpy.arange": [], "numpy.reshape": [], "tensorflow.python.ops.sparse_ops.from_dense": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testTransposePreservesShape": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.ops.sparse_ops.sparse_transpose", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue"], "tensorflow.python.framework.ops.Graph": [], "tensorflow.python.framework.sparse_tensor.SparseTensor": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue": [], "tensorflow.python.ops.sparse_ops.sparse_transpose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testSparseExpandDims": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "numpy.random.binomial", "tensorflow.python.ops.sparse_ops.sparse_expand_dims", "numpy.prod", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.sparse_ops.sparse_to_dense", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "<builtin>.range", "numpy.arange", "numpy.expand_dims", "numpy.where"], "numpy.prod": [], "numpy.random.binomial": [], "numpy.where": [], "numpy.array": [], "numpy.expand_dims": [], "tensorflow.python.ops.sparse_ops.sparse_expand_dims": [], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testUnarySparseDispatch": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testSparseToDenseGradient": ["tensorflow.python.ops.gradient_checker_v2.compute_gradient", "tensorflow.python.ops.gradient_checker_v2.max_error", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLess"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testSparseToDenseGradient.f": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"], "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense": [], "tensorflow.python.ops.gradient_checker_v2.compute_gradient": [], "tensorflow.python.ops.gradient_checker_v2.max_error": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLess": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testSparseTensorToDenseString": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testDenseSparseTensorMatMul": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "numpy.random.rand", "tensorflow.python.ops.sparse_ops.sparse_to_dense", "numpy.random.seed", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.sparse_ops.sparse_tensor_dense_matmul", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.array_ops.transpose"], "numpy.random.seed": [], "numpy.random.rand": [], "tensorflow.python.ops.sparse_ops.sparse_tensor_dense_matmul": [], "tensorflow.python.ops.math_ops.matmul": [], "tensorflow.python.ops.array_ops.transpose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testMapValues": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testMapValues.assert_sparse_equal", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.sparse_ops.map_values", "tensorflow.python.ops.sparse_ops.from_dense"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises": [], "tensorflow.python.ops.sparse_ops.map_values": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testMapValues.assert_sparse_equal": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testMapValues.mapping": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.SparseOpsTest.testConstantStringToSparse": ["<builtin>.list", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.sparse_ops.from_dense"], "<builtin>.list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.RawOpsTest.testSparseFillEmptyRowsGrad": ["tensorflow.python.ops.gen_sparse_ops.SparseFillEmptyRowsGrad", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "tensorflow.python.ops.gen_sparse_ops.SparseFillEmptyRowsGrad": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.RawOpsTest.testSparseFillEmptyRowsGradNegativeIndexMapValue": ["tensorflow.python.ops.gen_sparse_ops.SparseFillEmptyRowsGrad", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.RawOpsTest.testSparseFillEmptyRowsGradLargeIndexMapValue": ["tensorflow.python.ops.gen_sparse_ops.SparseFillEmptyRowsGrad", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.RawOpsTest.testSparseFillEmptyRowsGradMatrix": ["tensorflow.python.ops.gen_sparse_ops.SparseFillEmptyRowsGrad", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.eager.context.executing_eagerly"], "tensorflow.python.eager.context.executing_eagerly": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\sparse_ops_test.RawOpsTest.testSparseConcatStaticShape": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.ops.array_ops.sparse_placeholder", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.sparse_ops.sparse_concat_v2", "tensorflow.python.framework.test_util.TensorFlowTestCase.skipTest"], "tensorflow.python.framework.test_util.TensorFlowTestCase.skipTest": [], "tensorflow.python.ops.array_ops.sparse_placeholder": [], "tensorflow.python.ops.sparse_ops.sparse_concat_v2": [], "tensorflow.python.platform.googletest.main": []}
