{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test": ["tensorflow.python.distribute.test_util.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testMinimizeLoss": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_minimize_loss_eager", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_minimize_loss_graph"], "tensorflow.python.eager.context.executing_eagerly": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_minimize_loss_eager": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_minimize_loss_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testReplicaId": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_replica_id"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_replica_id": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testNumReplicasInSync": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testCallAndMergeExceptions": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_call_and_merge_exceptions"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_call_and_merge_exceptions": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testRunRegroupError": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.skipTest", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertRaises"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.skipTest": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testRunRegroupError.run_fn": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.evaluate", "<builtin>.range", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test._replica_id", "<builtin>.int", "<builtin>.list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test._replica_id": ["<builtin>.isinstance", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.array_ops.identity", "tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.evaluate": [], "<builtin>.int": [], "<builtin>.range": [], "<builtin>.list": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testReduceToCpu": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.evaluate", "<builtin>.sum", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual", "<builtin>.range", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.skipTest"], "<builtin>.sum": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testReduceToCpuNested": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.skipTest", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.evaluate", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testReduceToCpuNested.replica_fn": ["tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.constant_op.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.reduce_axis_helper": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertNear", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.evaluate", "<builtin>.range", "<builtin>.sum"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertNear": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testReduceAxisToCpu": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.skipTest", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.reduce_axis_helper"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testReduceAxisToCpu.replica_squared_fn": ["tensorflow.python.ops.math_ops.cast", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test._replica_id_as_int", "tensorflow.python.ops.array_ops.identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test._replica_id_as_int": ["<builtin>.isinstance", "tensorflow.python.framework.tensor_util.constant_value", "tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "tensorflow.python.ops.math_ops.cast": [], "tensorflow.python.ops.array_ops.identity": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.set_v2_tensorshape": ["tensorflow.python.framework.tensor_shape.enable_v2_tensorshape", "tensorflow.python.framework.tensor_shape.disable_v2_tensorshape"], "tensorflow.python.framework.tensor_shape.enable_v2_tensorshape": [], "tensorflow.python.framework.tensor_shape.disable_v2_tensorshape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testReduceAxisToCpuUnknownShape": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.set_v2_tensorshape", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.skipTest", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.reduce_axis_helper"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testReduceAxisToCpuUnknownShape.replica_squared_fn": ["tensorflow.python.ops.array_ops.placeholder_with_default", "tensorflow.python.ops.math_ops.cast", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test._replica_id_as_int"], "tensorflow.python.ops.array_ops.placeholder_with_default": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testReplicateDataset": ["<builtin>.range", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterable", "tensorflow.python.tf2.enabled", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.skipTest"], "tensorflow.python.tf2.enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testReplicateDataset.<lambda1>": ["tensorflow.python.data.ops.dataset_ops.Dataset.range"], "tensorflow.python.data.ops.dataset_ops.Dataset.range": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testMakeInputFnIteratorWithDataset": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterator", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context", "<builtin>.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testMakeInputFnIteratorWithDataset.<lambda1>": ["tensorflow.python.data.ops.dataset_ops.Dataset.range"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testMakeInputFnIteratorWithCallable": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterator", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context", "<builtin>.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testMakeInputFnIteratorWithCallable.fn": ["tensorflow.python.data.ops.dataset_ops.make_one_shot_iterator", "tensorflow.python.data.ops.dataset_ops.Dataset.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testMakeInputFnIteratorWithCallable.fn.<lambda1>": ["tensorflow.python.data.ops.dataset_ops.Dataset.range"], "tensorflow.python.data.ops.dataset_ops.make_one_shot_iterator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testNumpyDataset": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_numpy_dataset"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_numpy_dataset": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testGlobalStepUpdate": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_global_step_update"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_global_step_update": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testRun": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_run"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_run": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testAllReduceSum": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testAllReduceSumGradients": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradients"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradients": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testAllReduceSumGradientTape": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradient_tape"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradient_tape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testAllReduceMean": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testAllReduceMeanGradients": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradients"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradients": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testAllReduceMeanGradientTape": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradient_tape"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradient_tape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testSummaryForReplicaZeroOnly": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_summary_for_replica_zero_only"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_summary_for_replica_zero_only": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.testTrainableVariables": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_trainable_variable"], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_trainable_variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.test_prefetch_to_device_dataset": ["<builtin>.iter", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertAllEqual", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.eager.context.executing_eagerly", "<builtin>.isinstance", "<builtin>.next", "tensorflow.python.distribute.distribute_lib.InputOptions", "tensorflow.python.framework.device.DeviceSpec.from_string", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.skipTest"], "tensorflow.python.distribute.distribute_lib.InputOptions": [], "<builtin>.iter": [], "<builtin>.next": [], "<builtin>.isinstance": [], "tensorflow.python.framework.device.DeviceSpec.from_string": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredTwoDeviceDistributionTest.test_prefetch_to_host_dataset": ["<builtin>.iter", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertAllEqual", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.eager.context.executing_eagerly", "<builtin>.isinstance", "<builtin>.next", "tensorflow.python.distribute.distribute_lib.InputOptions", "tensorflow.python.framework.device.DeviceSpec.from_string", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.skipTest", "<builtin>.list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.one_device_combinations": ["tensorflow.python.distribute.combinations.combine"], "tensorflow.python.distribute.combinations.combine": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredOneDeviceDistributionTest.testMinimizeLoss": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_minimize_loss_eager", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_minimize_loss_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredOneDeviceDistributionTest.testReplicaId": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_replica_id"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredOneDeviceDistributionTest.testCallAndMergeExceptions": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_call_and_merge_exceptions"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredOneDeviceDistributionTest.testRun": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_run"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredOneDeviceDistributionTest.testAllReduceSum": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredOneDeviceDistributionTest.testAllReduceSumGradients": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradients"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredOneDeviceDistributionTest.testAllReduceSumGradientTape": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_sum_gradient_tape"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredOneDeviceDistributionTest.testAllReduceMean": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredOneDeviceDistributionTest.testAllReduceMeanGradients": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradients"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredOneDeviceDistributionTest.testAllReduceMeanGradientTape": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_all_reduce_mean_gradient_tape"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyVariableCreatorStackTest": ["tensorflow.python.distribute.combinations.generate", "tensorflow.python.distribute.combinations.combine"], "tensorflow.python.distribute.combinations.generate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyVariableCreatorStackTest.testCreatorStacksAreThreadLocal": ["tensorflow.python.eager.context.graph_mode", "tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.ops.variable_scope.variable_creator_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyVariableCreatorStackTest.testCreatorStacksAreThreadLocal.model_fn": ["tensorflow.python.ops.variable_scope.variable", "<builtin>.str", "tensorflow.python.ops.variable_scope.variable_creator_scope", "tensorflow.python.eager.test.TestCase.evaluate", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test._replica_id", "tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "tensorflow.python.eager.test.TestCase.evaluate": [], "<builtin>.str": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyVariableCreatorStackTest.testCreatorStacksAreThreadLocal.model_fn.thread_creator_fn": [], "tensorflow.python.ops.variable_scope.variable_creator_scope": [], "tensorflow.python.ops.variable_scope.variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyVariableCreatorStackTest.testCreatorStacksAreThreadLocal.model_fn.<lambda1>": [], "tensorflow.python.distribute.distribution_strategy_context.get_replica_context": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyVariableCreatorStackTest.testCreatorStacksAreThreadLocal.main_thread_creator": [], "tensorflow.python.eager.context.graph_mode": [], "tensorflow.python.eager.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testExecutingEagerlyOutsideFunction": ["tensorflow.python.framework.func_graph.FuncGraph", "tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.framework.ops.executing_eagerly_outside_functions"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testExecutingEagerlyOutsideFunction.model_fn": ["tensorflow.python.framework.ops.executing_eagerly_outside_functions"], "tensorflow.python.framework.ops.executing_eagerly_outside_functions": [], "tensorflow.python.framework.func_graph.FuncGraph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplica": ["tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.eager.test.TestCase.assertLen"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplica.model_fn": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "tensorflow.python.eager.test.TestCase.assertLen": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplicaInsideAnotherFunction": ["tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.eager.test.TestCase.evaluate", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplicaInsideAnotherFunction.step", "tensorflow.python.eager.test.TestCase.assertLen"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplicaInsideAnotherFunction.model_fn": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplicaInsideAnotherFunction.step": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testControlFlowFunctionInCallForEachReplicaWithMergeCall": ["tensorflow.python.eager.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testControlFlowFunctionInCallForEachReplicaWithMergeCall.merge_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testControlFlowFunctionInCallForEachReplicaWithMergeCall.model_fn": ["tensorflow.python.ops.control_flow_ops.while_loop_v2"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testControlFlowFunctionInCallForEachReplicaWithMergeCall.model_fn.body_fn": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testControlFlowFunctionInCallForEachReplicaWithMergeCall.model_fn.<lambda1>": [], "tensorflow.python.ops.control_flow_ops.while_loop_v2": [], "tensorflow.python.eager.test.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testNestedFunctionInCallForEachReplicaWithMergeCall": ["tensorflow.python.eager.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testNestedFunctionInCallForEachReplicaWithMergeCall.merge_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testNestedFunctionInCallForEachReplicaWithMergeCall.model_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testNestedFunctionInCallForEachReplicaWithMergeCall.model_fn.model_fn_nested"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testNestedFunctionInCallForEachReplicaWithMergeCall.model_fn.model_fn_nested": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplicaWithMergeCall": ["tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.eager.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplicaWithMergeCall.merge_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplicaWithMergeCall.model_fn": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplicaCached": ["tensorflow.python.eager.test.TestCase.assertEmpty", "tensorflow.python.eager.test.TestCase.assertLen", "<builtin>.range", "tensorflow.python.eager.test.TestCase.assertGreater", "<builtin>.len"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyCallForEachReplicaTest.testFunctionInCallForEachReplicaCached.model_fn": [], "tensorflow.python.eager.test.TestCase.assertEmpty": [], "<builtin>.len": [], "tensorflow.python.eager.test.TestCase.assertGreater": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testNameScope": ["<builtin>.zip", "tensorflow.python.eager.test.TestCase.assertIsInstance", "tensorflow.python.eager.context.graph_mode", "tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.framework.ops.name_scope", "<builtin>.len"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testNameScope.model_fn": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.ops.name_scope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testNameScope.model_fn.<lambda1>": [], "<builtin>.zip": [], "tensorflow.python.eager.test.TestCase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testWithDefaultName": ["<builtin>.zip", "tensorflow.python.eager.test.TestCase.assertIsInstance", "tensorflow.python.eager.context.graph_mode", "tensorflow.python.eager.test.TestCase.assertEqual", "<builtin>.len"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testWithDefaultName.model_fn": ["tensorflow.python.distribute.distribution_strategy_context.get_replica_context", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testWithDefaultName.model_fn.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testNameScopeWithVariable": ["tensorflow.python.ops.variable_scope.variable", "tensorflow.python.eager.test.TestCase.assertIsInstance", "tensorflow.python.eager.context.graph_mode", "tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.framework.ops.name_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testNameScopeWithVariable.in_cross_replica": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testNameScopeWithVariable.model_fn": ["tensorflow.python.framework.ops.name_scope", "tensorflow.python.ops.variable_scope.variable", "tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testNameScopeWithGetVariable": ["tensorflow.python.eager.test.TestCase.assertIsInstance", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.eager.context.graph_mode", "tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.framework.ops.name_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testNameScopeWithGetVariable.in_cross_replica": ["tensorflow.python.ops.variable_scope.get_variable"], "tensorflow.python.ops.variable_scope.get_variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testNameScopeWithGetVariable.model_fn": ["tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testVariableScopeWithGetVariable": ["tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.eager.test.TestCase.assertIsInstance", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.eager.context.graph_mode", "tensorflow.python.ops.variable_scope.variable_scope"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testVariableScopeWithGetVariable.in_cross_replica": ["tensorflow.python.ops.variable_scope.get_variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyNameScopeTest.testVariableScopeWithGetVariable.model_fn": ["tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "tensorflow.python.ops.variable_scope.variable_scope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredThreeDeviceDistributionTest.testThreeDevices": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertTrue", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredThreeDeviceDistributionTest.testThreeDevices.model_fn": ["tensorflow.python.ops.variable_scope.variable", "tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredThreeDeviceDistributionTest.testThreeDevices.model_fn.<lambda1>": [], "tensorflow.python.distribute.distribute_utils.is_mirrored": [], "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContextWithoutAggregationType": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContextWithoutAggregationType.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "tensorflow.python.eager.test.TestCase.assertTrue": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContextWithoutAggregationType.model_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContextWithSum": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.eager.test.TestCase.assertAllEqual", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContextWithSum.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContextWithSum.model_fn": [], "tensorflow.python.eager.test.TestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarCrossDeviceContext": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarCrossDeviceContext.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContext": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContext.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContext.model_fn": ["tensorflow.python.ops.math_ops.cast", "tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContextWithSingleValue": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContextWithSingleValue.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignMirroredVarReplicaContextWithSingleValue.model_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignAddMirroredVarCrossDeviceContext": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignAddMirroredVarCrossDeviceContext.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignAddMirroredVarReplicaContext": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignAddMirroredVarReplicaContext.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignAddMirroredVarReplicaContext.model_fn": ["tensorflow.python.ops.math_ops.cast", "tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignAddMirroredVarReplicaContextWithSingleValue": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignAddMirroredVarReplicaContextWithSingleValue.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignAddMirroredVarReplicaContextWithSingleValue.model_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignSubMirroredVarCrossDeviceContext": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignSubMirroredVarCrossDeviceContext.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignSubMirroredVarReplicaContext": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignSubMirroredVarReplicaContext.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignSubMirroredVarReplicaContext.model_fn": ["tensorflow.python.ops.math_ops.cast", "tensorflow.python.distribute.distribution_strategy_context.get_replica_context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignSubMirroredVarReplicaContextWithSingleValue": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignSubMirroredVarReplicaContextWithSingleValue.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableUpdateTest.testAssignSubMirroredVarReplicaContextWithSingleValue.model_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredAndSyncOnReadVariableInitializerTest.testAssignMirroredVarInitializer": ["tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.eager.test.TestCase.assertFalse", "tensorflow.python.distribute.distribute_utils.is_mirrored", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.context.graph_mode"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredAndSyncOnReadVariableInitializerTest.testAssignMirroredVarInitializer.var_fn": ["tensorflow.python.ops.variable_scope.variable"], "tensorflow.python.eager.test.TestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredAndSyncOnReadVariableInitializerTest.testAssignReplicaLocalVarInitializer": ["tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.eager.test.TestCase.assertFalse", "tensorflow.python.distribute.distribute_utils.is_sync_on_read", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.context.graph_mode"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredAndSyncOnReadVariableInitializerTest.testAssignReplicaLocalVarInitializer.model_fn": ["tensorflow.python.ops.variable_scope.variable", "tensorflow.python.distribute.distribute_utils.is_sync_on_read", "tensorflow.python.eager.test.TestCase.assertTrue"], "tensorflow.python.distribute.distribute_utils.is_sync_on_read": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.SyncOnReadVariableAssignTest.testAssignReplicaLocalVarSumAggregation": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_sync_on_read", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.SyncOnReadVariableAssignTest.testAssignReplicaLocalVarSumAggregation.model_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.SyncOnReadVariableAssignTest.testAssignReplicaLocalVarMeanAggregation": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.distribute.distribute_utils.is_sync_on_read", "tensorflow.python.eager.test.TestCase.assertTrue", "tensorflow.python.eager.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.SyncOnReadVariableAssignTest.testAssignReplicaLocalVarMeanAggregation.model_fn": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MockModel.__init__": ["tensorflow.python.ops.variable_scope.variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MockModel.__call__": ["<builtin>.len"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest._call_and_check": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.eager.test.TestCase.assertAllClose", "tensorflow.python.distribute.device_util.canonicalize", "tensorflow.python.eager.test.TestCase.evaluate", "<builtin>.range", "tensorflow.python.distribute.distribute_utils.select_replica", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MockModel.__init__", "<builtin>.len"], "tensorflow.python.distribute.device_util.canonicalize": [], "tensorflow.python.distribute.distribute_utils.select_replica": [], "tensorflow.python.eager.test.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testVariableInDefun": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest._call_and_check", "tensorflow.python.eager.function.defun"], "tensorflow.python.eager.function.defun": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testVariableInDefun.times_two": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testVariableInDefun.model_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testVariableInDefun.times_two"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testVariableInNestedDefun": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest._call_and_check", "tensorflow.python.eager.function.defun"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testVariableInNestedDefun.times_two": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testVariableInNestedDefun.two_x_plus_one": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testVariableInNestedDefun.times_two"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testVariableInNestedDefun.model_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testVariableInNestedDefun.two_x_plus_one"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTwoVariablesInNestedDefun": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest._call_and_check", "tensorflow.python.eager.function.defun"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTwoVariablesInNestedDefun.fn1": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTwoVariablesInNestedDefun.fn2": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTwoVariablesInNestedDefun.fn1"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTwoVariablesInNestedDefun.model_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testTwoVariablesInNestedDefun.fn2"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testGradientTapeOverNestedDefuns": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest._call_and_check", "tensorflow.python.eager.function.defun"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testGradientTapeOverNestedDefuns.fn1": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testGradientTapeOverNestedDefuns.fn2": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testGradientTapeOverNestedDefuns.fn1"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testGradientTapeOverNestedDefuns.model_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testGradientTapeOverNestedDefuns.fn2", "tensorflow.python.eager.backprop.GradientTape"], "tensorflow.python.eager.backprop.GradientTape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testPassPerReplica": ["tensorflow.python.distribute.values.PerReplica", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest._call_and_check", "tensorflow.python.eager.function.defun"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredStrategyDefunTest.testPassPerReplica.fn1": [], "tensorflow.python.distribute.values.PerReplica": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest._configure_distribution_strategy": ["tensorflow.python.training.server_lib.ClusterSpec"], "tensorflow.python.training.server_lib.ClusterSpec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest.test_num_replicas_in_sync": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest._configure_distribution_strategy", "tensorflow.python.eager.context.num_gpus", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual"], "tensorflow.python.eager.context.num_gpus": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest.testMinimizeLossGraph": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest._configure_distribution_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_minimize_loss_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest.testDeviceScope": ["tensorflow.python.framework.ops.device", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest._configure_distribution_strategy", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.ops.device": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest.testMakeInputFnIteratorWithDataset": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest._configure_distribution_strategy", "<builtin>.range", "tensorflow.python.eager.context.num_gpus", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterator", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context", "tensorflow.python.eager.context.graph_mode", "tensorflow.python.distribute.multi_worker_test_base.MultiWorkerTestBase.cached_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest.testMakeInputFnIteratorWithDataset.<lambda1>": ["tensorflow.python.data.ops.dataset_ops.Dataset.range"], "tensorflow.python.distribute.multi_worker_test_base.MultiWorkerTestBase.cached_session": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest.testMakeInputFnIteratorWithCallable": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest._configure_distribution_strategy", "<builtin>.range", "tensorflow.python.eager.context.num_gpus", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_input_fn_iterator", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._input_fn_to_test_input_context", "tensorflow.python.eager.context.graph_mode", "tensorflow.python.distribute.multi_worker_test_base.MultiWorkerTestBase.cached_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest.testMakeInputFnIteratorWithCallable.fn": ["tensorflow.python.data.ops.dataset_ops.make_one_shot_iterator", "tensorflow.python.data.ops.dataset_ops.Dataset.range"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTest.testUpdateConfigProto": ["tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertTrue", "tensorflow.core.protobuf.config_pb2.ConfigProto"], "tensorflow.core.protobuf.config_pb2.ConfigProto": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.RemoteSingleWorkerMirroredStrategyGraph._get_num_gpus": ["tensorflow.python.eager.context.num_gpus"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.RemoteSingleWorkerMirroredStrategyGraph.testNumReplicasInSync": ["tensorflow.python.distribute.multi_worker_test_base.SingleWorkerTestBaseGraph._testNumReplicasInSync"], "tensorflow.python.distribute.multi_worker_test_base.SingleWorkerTestBaseGraph._testNumReplicasInSync": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.RemoteSingleWorkerMirroredStrategyGraph.testMinimizeLoss": ["tensorflow.python.distribute.multi_worker_test_base.SingleWorkerTestBaseGraph._testMinimizeLoss"], "tensorflow.python.distribute.multi_worker_test_base.SingleWorkerTestBaseGraph._testMinimizeLoss": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.RemoteSingleWorkerMirroredStrategyGraph.testDeviceScope": ["tensorflow.python.distribute.multi_worker_test_base.SingleWorkerTestBaseGraph._testDeviceScope"], "tensorflow.python.distribute.multi_worker_test_base.SingleWorkerTestBaseGraph._testDeviceScope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.RemoteSingleWorkerMirroredStrategyGraph.testMakeInputFnIteratorWithDataset": ["tensorflow.python.distribute.multi_worker_test_base.SingleWorkerTestBaseGraph._testMakeInputFnIteratorWithDataset"], "tensorflow.python.distribute.multi_worker_test_base.SingleWorkerTestBaseGraph._testMakeInputFnIteratorWithDataset": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.RemoteSingleWorkerMirroredStrategyGraph.testMakeInputFnIteratorWithCallable": ["tensorflow.python.distribute.multi_worker_test_base.SingleWorkerTestBaseGraph._testMakeInputFnIteratorWithCallable"], "tensorflow.python.distribute.multi_worker_test_base.SingleWorkerTestBaseGraph._testMakeInputFnIteratorWithCallable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief.setUpClass": ["tensorflow.python.distribute.multi_worker_test_base.create_in_process_cluster"], "tensorflow.python.distribute.multi_worker_test_base.create_in_process_cluster": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief._make_cross_device_ops": ["tensorflow.python.distribute.cross_device_ops.ReductionToOneDevice"], "tensorflow.python.distribute.cross_device_ops.ReductionToOneDevice": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief.testMinimizeLossGraph": ["tensorflow.python.eager.context.graph_mode", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief._make_cross_device_ops", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_minimize_loss_graph", "tensorflow.python.distribute.mirrored_strategy.MirroredStrategy"], "tensorflow.python.distribute.mirrored_strategy.MirroredStrategy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief.testMinimizeLossGraphMirroredStrategy": ["tensorflow.python.distribute.mirrored_strategy.all_local_devices", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief._make_cross_device_ops", "tensorflow.python.distribute.mirrored_strategy.MirroredStrategy", "tensorflow.python.eager.context.graph_mode", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_minimize_loss_graph"], "tensorflow.python.distribute.mirrored_strategy.all_local_devices": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief.testMinimizeLossGraphMirroredStrategyWithOneNode": ["json.dumps", "tensorflow.python.eager.context.num_gpus", "tensorflow.python.distribute.multi_worker_test_base.MultiWorkerTestBase.assertIsInstance", "tensorflow.python.eager.test.mock.patch.dict", "tensorflow.python.distribute.mirrored_strategy.MirroredStrategy", "tensorflow.python.eager.context.graph_mode", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.skipTest", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_minimize_loss_graph"], "json.dumps": [], "tensorflow.python.eager.test.mock.patch.dict": [], "tensorflow.python.distribute.multi_worker_test_base.MultiWorkerTestBase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief.testInitializeFromTFConfig": ["json.dumps", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase.assertEqual", "tensorflow.python.eager.context.num_gpus", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief._make_cross_device_ops", "tensorflow.python.eager.test.mock.patch.dict", "tensorflow.python.distribute.mirrored_strategy.MirroredStrategy", "tensorflow.python.eager.context.graph_mode", "<builtin>.max"], "<builtin>.max": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief.testSummaryForReplicaZeroOnly": ["tensorflow.python.distribute.mirrored_strategy.all_local_devices", "tensorflow.python.distribute.strategy_test_lib.DistributionTestBase._test_summary_for_replica_zero_only", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MultiWorkerMirroredStrategyTestWithChief._make_cross_device_ops", "tensorflow.python.distribute.mirrored_strategy.MirroredStrategy", "tensorflow.python.eager.context.graph_mode"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableStopGradientTest": ["tensorflow.python.distribute.combinations.generate", "tensorflow.python.distribute.combinations.combine"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.MirroredVariableStopGradientTest.testMirroredVariableAsStopGradient": ["tensorflow.python.ops.gradients.gradients", "tensorflow.python.eager.test.TestCase.assertIsNone", "tensorflow.python.ops.variables.Variable", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.ops.gradients.gradients": [], "tensorflow.python.eager.test.TestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.FunctionTest.testBackwardFunctionDevicePlacement": ["tensorflow.python.eager.context.enable_run_metadata", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.FunctionTest.testBackwardFunctionDevicePlacement.step_fn", "tensorflow.python.ops.variable_scope.variable", "tensorflow.python.ops.array_ops.identity", "tensorflow.python.eager.test.TestCase.evaluate", "tensorflow.python.eager.test.TestCase.assertSetEqual", "tensorflow.python.eager.context.export_run_metadata", "<builtin>.set", "tensorflow.python.eager.test.TestCase.assertEqual", "tensorflow.python.eager.context.disable_run_metadata"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.FunctionTest.testBackwardFunctionDevicePlacement.forward": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.FunctionTest.testBackwardFunctionDevicePlacement.replica_fn": ["tensorflow.python.ops.array_ops.identity", "tensorflow.python.eager.backprop.GradientTape"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.FunctionTest.testBackwardFunctionDevicePlacement.step_fn": [], "tensorflow.python.eager.context.enable_run_metadata": [], "tensorflow.python.eager.context.export_run_metadata": [], "tensorflow.python.eager.context.disable_run_metadata": [], "<builtin>.set": [], "tensorflow.python.eager.test.TestCase.assertSetEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.FunctionTest.testFuctionPreservesAutoGraph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.FunctionTest.testFuctionPreservesAutoGraph.f": ["tensorflow.python.autograph.core.converter_testing.is_inside_generated_code", "tensorflow.python.eager.test.TestCase.assertTrue"], "tensorflow.python.autograph.core.converter_testing.is_inside_generated_code": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.FunctionTest.testFuctionPreservesAutoGraph.replica_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\mirrored_strategy_test.FunctionTest.testFuctionPreservesAutoGraph.f"], "tensorflow.python.framework.tensor_util.constant_value": [], "tensorflow.python.distribute.test_util.main": []}
