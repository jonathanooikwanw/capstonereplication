{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\packed_distributed_variable_test": ["tensorflow.python.framework.ops.enable_eager_execution", "tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\packed_distributed_variable_test.PackedDistributedVariableTest.setUp": ["tensorflow.python.framework.config.list_physical_devices", "<builtin>.super", "tensorflow.python.framework.config.set_logical_device_configuration", "tensorflow.python.eager.context.LogicalDeviceConfiguration"], "<builtin>.super": [], "tensorflow.python.framework.config.list_physical_devices": [], "tensorflow.python.eager.context.LogicalDeviceConfiguration": [], "tensorflow.python.framework.config.set_logical_device_configuration": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\packed_distributed_variable_test.PackedDistributedVariableTest.testPackedVariable": ["tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\packed_distributed_variable_test.PackedDistributedVariableTest.testPackedVariable.update_var", "tensorflow.python.distribute.packed_distributed_variable.PackedDistributedVariable", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.framework.ops.device"], "tensorflow.python.framework.ops.device": [], "tensorflow.python.ops.resource_variable_ops.ResourceVariable": [], "tensorflow.python.distribute.packed_distributed_variable.PackedDistributedVariable": [], "tensorflow.python.platform.test.TestCase.assertFalse": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "tensorflow.python.platform.test.TestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\packed_distributed_variable_test.PackedDistributedVariableTest.testPackedVariable.update_var": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\packed_distributed_variable_test.PackedDistributedVariableTest.testPackedVarAndDevice": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\packed_distributed_variable_test.PackedDistributedVariableTest.testPackedVarAndDevice.func", "tensorflow.python.distribute.device_util.canonicalize", "tensorflow.python.ops.math_ops.mul", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.distribute.packed_distributed_variable.PackedDistributedVariable", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.distribute.packed_distributed_variable.PackedVarAndDevice", "tensorflow.python.framework.ops.device"], "tensorflow.python.distribute.device_util.canonicalize": [], "tensorflow.python.distribute.packed_distributed_variable.PackedVarAndDevice": [], "tensorflow.python.ops.math_ops.mul": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\packed_distributed_variable_test.PackedDistributedVariableTest.testPackedVarAndDevice.func": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.distribute.packed_distributed_variable.PackedVarAndDevice", "tensorflow.python.ops.math_ops.add"], "tensorflow.python.ops.math_ops.add": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\packed_distributed_variable_test.PackedDistributedVariableTest": ["tensorflow.python.framework.test_util.assert_no_garbage_created"], "tensorflow.python.framework.test_util.assert_no_garbage_created": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\packed_distributed_variable_test.PackedDistributedVariableTest.testNoGarbage": ["<builtin>.hasattr", "tensorflow.python.distribute.packed_distributed_variable.PackedDistributedVariable", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.distribute.device_util.canonicalize", "tensorflow.python.framework.ops.device"], "<builtin>.hasattr": [], "tensorflow.python.framework.ops.enable_eager_execution": [], "tensorflow.python.platform.test.main": []}
