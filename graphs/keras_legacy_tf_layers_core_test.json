{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test": ["tensorflow.python.platform.test.main"], "tensorflow.python.keras.combinations.combine": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest": ["tensorflow.python.framework.test_util.run_deprecated_v1", "tensorflow.python.keras.combinations.generate", "tensorflow.python.keras.combinations.combine", "tensorflow.python.framework.test_util.assert_no_new_pyobjects_executing_eagerly"], "tensorflow.python.keras.combinations.generate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testDenseProperties": ["tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.keras.legacy_tf_layers.core.Dense": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "tensorflow.python.ops.random_ops.random_uniform": [], "tensorflow.python.framework.test_util.run_deprecated_v1": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testVariableInput": ["tensorflow.python.ops.init_ops.zeros_initializer", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.cached_session"], "tensorflow.python.platform.test.TestCase.cached_session": [], "tensorflow.python.ops.init_ops.zeros_initializer": [], "tensorflow.python.ops.variable_scope.get_variable": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "tensorflow.python.platform.test.TestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testCall": ["<builtin>.len", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.platform.test.TestCase.assertListEqual": [], "tensorflow.python.eager.context.executing_eagerly": [], "tensorflow.python.framework.ops.get_collection": [], "<builtin>.len": [], "tensorflow.python.framework.test_util.assert_no_new_pyobjects_executing_eagerly": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testNoEagerLeak": ["tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testCallTensorDot": ["tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testNoBias": ["<builtin>.len", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testNonTrainable": ["<builtin>.len", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testOutputShape": ["tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testCallOnPlaceHolder": ["tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.array_ops.placeholder"], "tensorflow.python.ops.array_ops.placeholder": [], "tensorflow.python.platform.test.TestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testActivation": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testActivityRegularizer": ["<builtin>.len", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testActivityRegularizer.<lambda1>": ["tensorflow.python.ops.math_ops.reduce_sum"], "tensorflow.python.ops.math_ops.reduce_sum": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testKernelRegularizer": ["<builtin>.len", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testKernelRegularizer.<lambda1>": ["tensorflow.python.ops.math_ops.reduce_sum"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testKernelRegularizerWithReuse": ["<builtin>.len", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.keras.legacy_tf_layers.core.dense", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testKernelRegularizerWithReuse.<lambda1>": ["tensorflow.python.ops.math_ops.reduce_sum"], "tensorflow.python.keras.legacy_tf_layers.core.dense": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testBiasRegularizer": ["<builtin>.len", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testBiasRegularizer.<lambda1>": ["tensorflow.python.ops.math_ops.reduce_sum"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testFunctionalDense": ["<builtin>.len", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.keras.legacy_tf_layers.core.dense", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.cached_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testFunctionalDenseTwice": ["<builtin>.len", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.keras.legacy_tf_layers.core.dense", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test._get_variable_dict_from_varstore", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test._get_variable_dict_from_varstore": ["collections.OrderedDict", "<builtin>.sorted", "tensorflow.python.ops.variable_scope._get_default_variable_store"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testFunctionalDenseTwiceReuse": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.keras.legacy_tf_layers.core.dense", "tensorflow.python.ops.variables.trainable_variables", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.cached_session"], "tensorflow.python.ops.variables.trainable_variables": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testFunctionalDenseTwiceReuseFromScope": ["tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.keras.legacy_tf_layers.core.dense", "tensorflow.python.ops.variables.trainable_variables", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.cached_session"], "tensorflow.python.ops.variable_scope.variable_scope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testFunctionalDenseInitializerFromScope": ["tensorflow.python.ops.variable_scope.variable_scope", "<builtin>.len", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.ops.init_ops.ones_initializer", "numpy.zeros", "tensorflow.python.keras.legacy_tf_layers.core.dense", "numpy.ones", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test._get_variable_dict_from_varstore", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.cached_session"], "tensorflow.python.ops.init_ops.ones_initializer": [], "numpy.ones": [], "tensorflow.python.platform.test.TestCase.assertAllClose": [], "numpy.zeros": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testFunctionalDenseWithCustomGetter": ["tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.keras.legacy_tf_layers.core.dense"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testFunctionalDenseWithCustomGetter.custom_getter": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testFunctionalDenseInScope": ["tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.keras.legacy_tf_layers.core.dense", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test._get_variable_dict_from_varstore", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.cached_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testComputeOutputShape": ["tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.tensor_shape.TensorShape"], "tensorflow.python.framework.tensor_shape.TensorShape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testConstraints": ["tensorflow.python.keras.legacy_tf_layers.core.Dense", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testConstraints.<lambda1>": ["tensorflow.python.ops.math_ops.reduce_sum"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DenseTest.testConstraints.<lambda2>": ["tensorflow.python.ops.math_ops.reduce_max"], "tensorflow.python.ops.math_ops.reduce_max": [], "tensorflow.python.ops.variable_scope._get_default_variable_store": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test._get_variable_dict_from_varstore.<lambda1>": [], "<builtin>.sorted": [], "collections.OrderedDict": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DropoutTest": ["tensorflow.python.framework.test_util.run_deprecated_v1", "tensorflow.python.keras.combinations.generate", "tensorflow.python.keras.combinations.combine"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DropoutTest.testDropoutProperties": ["tensorflow.python.keras.legacy_tf_layers.core.Dropout", "tensorflow.python.ops.array_ops.ones", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.keras.legacy_tf_layers.core.Dropout": [], "tensorflow.python.ops.array_ops.ones": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DropoutTest.testBooleanLearningPhase": ["tensorflow.python.keras.legacy_tf_layers.core.Dropout", "tensorflow.python.ops.array_ops.ones", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.eager.context.executing_eagerly", "numpy.ones", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.platform.test.TestCase.assertAlmostEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DropoutTest.testDynamicLearningPhase": ["tensorflow.python.keras.legacy_tf_layers.core.Dropout", "tensorflow.python.ops.array_ops.ones", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.array_ops.placeholder", "numpy.ones", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.cached_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DropoutTest.testDynamicNoiseShape": ["tensorflow.python.keras.legacy_tf_layers.core.Dropout", "tensorflow.python.ops.array_ops.ones", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DropoutTest.testCustomNoiseShape": ["tensorflow.python.keras.legacy_tf_layers.core.Dropout", "tensorflow.python.ops.array_ops.ones", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DropoutTest.testFunctionalDropout": ["tensorflow.python.ops.array_ops.ones", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.keras.legacy_tf_layers.core.dropout", "numpy.ones", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.cached_session"], "tensorflow.python.keras.legacy_tf_layers.core.dropout": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.DropoutTest.testDynamicRate": ["tensorflow.python.keras.legacy_tf_layers.core.Dropout", "tensorflow.python.ops.array_ops.ones", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.array_ops.placeholder", "numpy.ones", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.cached_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.FlattenTest": ["tensorflow.python.framework.test_util.run_deprecated_v1"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.FlattenTest.testCreateFlatten": ["tensorflow.python.keras.legacy_tf_layers.core.Flatten", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.list"], "tensorflow.python.keras.legacy_tf_layers.core.Flatten": [], "<builtin>.list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.FlattenTest.testComputeShape": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.keras.legacy_tf_layers.core.Flatten"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.FlattenTest.testDataFormat5d": ["numpy.arange", "tensorflow.python.keras.legacy_tf_layers.core.Flatten", "numpy.transpose", "tensorflow.python.platform.test.TestCase.test_session", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.ops.array_ops.placeholder"], "numpy.arange": [], "tensorflow.python.platform.test.TestCase.test_session": [], "numpy.transpose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.FlattenTest.testDataFormat4d": ["numpy.arange", "tensorflow.python.keras.legacy_tf_layers.core.Flatten", "numpy.transpose", "tensorflow.python.platform.test.TestCase.test_session", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.ops.array_ops.placeholder"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.FlattenTest.testFunctionalFlatten": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.keras.legacy_tf_layers.core.flatten"], "tensorflow.python.keras.legacy_tf_layers.core.flatten": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.FlattenTest.testFlatten0D": ["tensorflow.python.keras.legacy_tf_layers.core.Flatten", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.FlattenTest.testFlattenUnknownAxes": ["tensorflow.python.keras.legacy_tf_layers.core.Flatten", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.FlattenTest.testFlattenLargeDim": ["<builtin>.any", "tensorflow.python.keras.legacy_tf_layers.core.Flatten", "tensorflow.python.platform.test.TestCase.skipTest", "tensorflow.python.ops.array_ops.placeholder", "platform.win32_ver", "tensorflow.python.platform.test.TestCase.assertEqual"], "platform.win32_ver": [], "<builtin>.any": [], "tensorflow.python.platform.test.TestCase.skipTest": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\core_test.FlattenTest.testFlattenLargeBatchDim": ["tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.assertEqual", "numpy.iinfo", "tensorflow.python.keras.legacy_tf_layers.core.Flatten"], "numpy.iinfo": [], "tensorflow.python.platform.test.main": []}
