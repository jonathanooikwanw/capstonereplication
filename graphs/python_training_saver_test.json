{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.basicSaveRestore": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.training.saver_test_utils.CheckpointedOp", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.variables.Variable", "tensorflow.python.ops.variables.report_uninitialized_variables", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.len", "<builtin>.isinstance", "os.path.join"], "tensorflow.python.platform.test.TestCase.get_temp_dir": [], "os.path.join": [], "tensorflow.python.framework.ops.Graph": [], "tensorflow.python.platform.test.TestCase.session": [], "tensorflow.python.ops.resource_variable_ops.ResourceVariable": [], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.training.saver_test_utils.CheckpointedOp": [], "tensorflow.python.eager.context.executing_eagerly": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "tensorflow.python.training.saver.Saver": [], "<builtin>.isinstance": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "tensorflow.python.ops.variables.report_uninitialized_variables": [], "<builtin>.len": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testBasic": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.basicSaveRestore"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest": ["tensorflow.python.framework.test_util.run_in_graph_and_eager_modes", "tensorflow.python.framework.test_util.run_v1_only"], "tensorflow.python.framework.test_util.run_in_graph_and_eager_modes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testResourceBasic": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.basicSaveRestore"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testResourceColocation": ["tensorflow.python.ops.partitioned_variables.fixed_size_partitioner", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.training.saver.Saver", "tensorflow.python.framework.ops.device", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.get_default_graph"], "tensorflow.python.ops.partitioned_variables.fixed_size_partitioner": [], "tensorflow.python.framework.ops.device": [], "tensorflow.python.ops.variable_scope.get_variable": [], "tensorflow.python.framework.ops.get_default_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testResourceVariableReadOpsAddedDeterministically": ["<builtin>.range", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.training.saver.Saver", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual"], "<builtin>.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testEagerBasic": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.eager.context.eager_mode", "tensorflow.python.platform.test.TestCase.assertNear", "os.path.join"], "tensorflow.python.eager.context.eager_mode": [], "tensorflow.python.platform.test.TestCase.assertNear": [], "tensorflow.python.platform.test.TestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testEagerGraphCompatibility": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.eager.context.graph_mode", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.training.saver.Saver", "tensorflow.python.framework.ops._default_graph_stack.reset", "tensorflow.python.eager.context.eager_mode", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.ops.reset_default_graph", "os.path.join"], "tensorflow.python.eager.context.graph_mode": [], "tensorflow.python.framework.ops._default_graph_stack.reset": [], "tensorflow.python.framework.ops.reset_default_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testResourceSaveRestoreCachingDevice": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testNoAdditionalOpsAddedBySaverForResourceVariablesOutsideSaveScope": ["tensorflow.python.framework.ops.name_scope", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.training.saver.Saver", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.framework.ops.name_scope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testSaveCopyRestoreWithSaveRelativePaths": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.training.saver_test_utils.CheckpointedOp", "tensorflow.python.platform.test.TestCase.cached_session", "<builtin>.isinstance", "tensorflow.python.platform.test.TestCase.assertTrue", "os.mkdir", "tensorflow.python.ops.variables.report_uninitialized_variables", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.training.checkpoint_management.latest_checkpoint", "os.renames", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.len", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "os.mkdir": [], "tensorflow.python.ops.variables.VariableV1": [], "tensorflow.python.platform.test.TestCase.cached_session": [], "tensorflow.python.training.checkpoint_management.latest_checkpoint": [], "os.renames": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testFilenameTensor": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.variables.VariableV1"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testInvalidPath": ["tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.ops.variables.VariableV1"], "tensorflow.python.platform.test.TestCase.assertRaisesRegex": [], "tensorflow.python.framework.test_util.run_v1_only": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testInt64": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertRaisesWithPredicateMatch", "<builtin>.isinstance", "numpy.int64", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "numpy.int64": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testInt64.<lambda1>": [], "tensorflow.python.platform.test.TestCase.assertRaisesWithPredicateMatch": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testSomeErrors": ["tensorflow.python.ops.partitioned_variables.fixed_size_partitioner", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.ops.variables.Variable.SaveSliceInfo", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variables.VariableV1"], "tensorflow.python.ops.variables.Variable.SaveSliceInfo": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testSameName": ["tensorflow.python.training.saver_test_utils.CheckpointedOp", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variables.VariableV1"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testBasicsWithListOfVariables": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.training.saver_test_utils.CheckpointedOp", "tensorflow.python.platform.test.TestCase.assertTrue", "<builtin>.isinstance", "tensorflow.python.platform.test.TestCase.assertRaisesWithPredicateMatch", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.len", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testBasicsWithListOfVariables.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testBasicsWithListOfVariables.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest._SaveAndLoad": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.platform.test.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testCacheRereadsFile": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest._SaveAndLoad", "tensorflow.python.platform.test.TestCase.get_temp_dir", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testAllowEmpty": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.training.saver.Saver", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertIsNone", "os.path.join"], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.platform.test.TestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testGPU": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.gpu_device_name", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "tensorflow.python.platform.test.is_gpu_available", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.python.platform.test.is_gpu_available": [], "tensorflow.python.client.session.Session": [], "tensorflow.python.platform.test.gpu_device_name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testSharedServerOnGPU": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.gpu_device_name", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "tensorflow.python.platform.test.is_gpu_available", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testVariables": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.training.saver_test_utils.CheckpointedOp", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testVarListShouldBeEmptyInDeferredBuild": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.ops.variables.VariableV1"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testBuildShouldBeCalledBeforeSaveInCaseOfDeferBuild": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testDeferredBuild": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testReshape": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testSaveWithGlobalStep": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest._SaveAndLoad", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.ops.get_default_session", "os.path.join"], "tensorflow.python.framework.ops.get_default_session": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testSaveWithGlobalStepWithPadding": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testSaveWithGlobalStep"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testSaveToNonexistingPath": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.lib.io.file_io.write_string_to_file", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "<builtin>.str", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.python.lib.io.file_io.write_string_to_file": [], "<builtin>.str": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testSaveToURI": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.skipTest", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.python.platform.test.TestCase.skipTest": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testSaveRestoreAndValidateVariableDtype": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.framework.ops.Graph", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testRestoreLargeTensors": ["tensorflow.python.ops.variables.global_variables_initializer", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testRestoreLargeTensors._model", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.ops.Graph", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.testRestoreLargeTensors._model": ["<builtin>.range", "tensorflow.python.ops.variable_scope.get_variable"], "<builtin>.zip": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.test_metrics_save_restore": ["tensorflow.python.saved_model.pywrap_saved_model.metrics.GetTrainingTimeSaved", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.training.saver_test_utils.CheckpointedOp", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.test_metrics_save_restore._get_write_histogram_proto", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.platform.test.TestCase.evaluate", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.test_metrics_save_restore._get_read_histogram_proto", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertGreater", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.test_metrics_save_restore._get_write_histogram_proto": ["tensorflow.core.framework.summary_pb2.HistogramProto", "tensorflow.python.saved_model.pywrap_saved_model.metrics.GetCheckpointWriteDurations"], "tensorflow.python.saved_model.pywrap_saved_model.metrics.GetCheckpointWriteDurations": [], "tensorflow.core.framework.summary_pb2.HistogramProto": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaverTest.test_metrics_save_restore._get_read_histogram_proto": ["tensorflow.core.framework.summary_pb2.HistogramProto", "tensorflow.python.saved_model.pywrap_saved_model.metrics.GetCheckpointReadDurations"], "tensorflow.python.saved_model.pywrap_saved_model.metrics.GetCheckpointReadDurations": [], "tensorflow.python.saved_model.pywrap_saved_model.metrics.GetTrainingTimeSaved": [], "tensorflow.python.platform.test.TestCase.assertGreater": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest._get_test_dir": ["tensorflow.python.platform.gfile.MakeDirs", "tensorflow.python.platform.test.TestCase.get_temp_dir", "os.path.join"], "tensorflow.python.platform.gfile.MakeDirs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest.testBasics": ["tensorflow.python.training.saver_test_utils.CheckpointedOp", "tensorflow.python.training.checkpoint_management.meta_graph_filename", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.core.protobuf.config_pb2.ConfigProto", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.training.checkpoint_management.latest_checkpoint", "tensorflow.python.client.session.Session", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.core.protobuf.config_pb2.ConfigProto": [], "tensorflow.python.training.checkpoint_management.meta_graph_filename": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest.testSaverDef": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.training.saver.Saver", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variables.VariableV1"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest._testPartitionedVariables": ["tensorflow.python.ops.partitioned_variables.fixed_size_partitioner", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest._testPartitionedVariables._save", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest._get_test_dir", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest._testPartitionedVariables._restore", "tensorflow.python.platform.test.TestCase.assertAllEqual", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest._testPartitionedVariables._save": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.variables.VariableV1"], "tensorflow.python.ops.random_ops.random_uniform": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest._testPartitionedVariables._restore": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.ops.variable_scope.get_variable", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variables.VariableV1"], "tensorflow.python.ops.array_ops.zeros": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest.testPartitionedVariable": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest._testPartitionedVariables"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest.testPartitionedResourceVariable": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTest._testPartitionedVariables"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTestV2.testIterators": ["tensorflow.python.data.ops.iterator_ops._IteratorSaveable", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "glob.glob", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.core.protobuf.config_pb2.ConfigProto", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.data.ops.dataset_ops.make_initializable_iterator", "<builtin>.len", "os.path.join"], "tensorflow.python.data.ops.dataset_ops.Dataset.range": [], "tensorflow.python.data.ops.dataset_ops.make_initializable_iterator": [], "tensorflow.python.data.ops.iterator_ops._IteratorSaveable": [], "glob.glob": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreShardedTestV2.testIteratorsUnshardedRestore": ["tensorflow.python.data.ops.iterator_ops._IteratorSaveable", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "glob.glob", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.core.protobuf.config_pb2.ConfigProto", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.data.ops.dataset_ops.make_initializable_iterator", "<builtin>.len", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest._get_test_dir": ["tensorflow.python.platform.gfile.MakeDirs", "tensorflow.python.platform.test.TestCase.get_temp_dir", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest.assertCheckpointState": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.training.checkpoint_management.get_checkpoint_state"], "tensorflow.python.training.checkpoint_management.get_checkpoint_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest.testMaxToKeepEager": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.variable_scope.variable", "tensorflow.python.eager.context.eager_mode", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.ops.variables.global_variables_initializer", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest.assertCheckpointState", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest._get_test_dir", "os.path.join"], "tensorflow.python.ops.variable_scope.variable": [], "tensorflow.python.training.checkpoint_management.checkpoint_exists": [], "tensorflow.python.platform.test.TestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest.testNonSharded": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.training.checkpoint_management.meta_graph_filename", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest.assertCheckpointState", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest._get_test_dir", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest.testSharded": ["tensorflow.python.platform.gfile.Exists", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.gfile.Glob", "tensorflow.python.training.checkpoint_management.meta_graph_filename", "tensorflow.core.protobuf.config_pb2.ConfigProto", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "<builtin>.len", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest._get_test_dir", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.python.platform.gfile.Glob": [], "tensorflow.python.platform.gfile.Exists": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest.testNoMaxToKeep": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest._get_test_dir", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest.testNoMetaGraph": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.gfile.Exists", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.training.checkpoint_management.meta_graph_filename", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.ops.variables.global_variables_initializer", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MaxToKeepTest._get_test_dir", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.RecoverLastCheckpointsTest._get_test_dir": ["tensorflow.python.platform.gfile.MakeDirs", "tensorflow.python.platform.test.TestCase.get_temp_dir", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.RecoverLastCheckpointsTest.assertCheckpointState": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.training.checkpoint_management.get_checkpoint_state"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.RecoverLastCheckpointsTest.test_recover_last_checkpoints": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.RecoverLastCheckpointsTest.assertCheckpointState", "tensorflow.python.platform.gfile.Remove", "tensorflow.python.platform.gfile.Glob", "tensorflow.python.platform.test.TestCase.evaluate", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.RecoverLastCheckpointsTest._get_test_dir", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.variable_scope.variable", "tensorflow.python.eager.context.eager_mode", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join"], "tensorflow.python.platform.gfile.Remove": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.KeepCheckpointEveryNHoursTest._get_test_dir": ["tensorflow.python.platform.gfile.MakeDirs", "tensorflow.python.platform.test.TestCase.get_temp_dir", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.KeepCheckpointEveryNHoursTest": ["tensorflow.python.framework.test_util.run_in_graph_and_eager_modes", "tensorflow.python.platform.test.mock.patch.object"], "tensorflow.python.platform.test.mock.patch.object": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.KeepCheckpointEveryNHoursTest.testNonSharded": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.evaluate", "time.time", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.variable_scope.variable", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.KeepCheckpointEveryNHoursTest._get_test_dir", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join"], "time.time": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreWithVariableNameMap._testNonReshape": ["tensorflow.python.platform.test.TestCase.assertRaisesOpError", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.variables.Variable", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.isinstance", "os.path.join"], "tensorflow.python.platform.test.TestCase.assertRaisesOpError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreWithVariableNameMap": ["tensorflow.python.framework.test_util.run_in_graph_and_eager_modes"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreWithVariableNameMap.testNonReshapeResourceVariable": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreWithVariableNameMap._testNonReshape"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreWithVariableNameMap.testNonReshapeVariable": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.SaveRestoreWithVariableNameMap._testNonReshape"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir": ["tensorflow.python.platform.gfile.MakeDirs", "tensorflow.python.platform.test.TestCase.get_temp_dir", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest": ["tensorflow.python.framework.test_util.run_v1_only"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testAddCollectionDef": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir", "tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.data_flow_ops.FIFOQueue", "tensorflow.python.ops.variables.VariableV1", "tensorflow.python.platform.test.TestCase.assertNotEqual", "tensorflow.python.framework.test_util.assert_meta_graph_protos_equal", "tensorflow.python.ops.control_flow_ops.while_loop", "tensorflow.python.training.saver.import_meta_graph", "<builtin>.len", "google.protobuf.any_pb2.Any", "tensorflow.python.training.queue_runner_impl.QueueRunner", "tensorflow.python.framework.ops.add_to_collection", "tensorflow.python.framework.ops.Graph", "<builtin>.str", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.control_flow_ops.cond", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.less", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.training.queue_runner_impl.add_queue_runner", "os.path.join"], "tensorflow.python.ops.math_ops.less": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testAddCollectionDef.<lambda1>": ["tensorflow.python.ops.math_ops.add"], "tensorflow.python.ops.math_ops.add": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testAddCollectionDef.<lambda2>": ["tensorflow.python.ops.math_ops.subtract"], "tensorflow.python.ops.math_ops.subtract": [], "tensorflow.python.ops.control_flow_ops.cond": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testAddCollectionDef.<lambda3>": ["tensorflow.python.ops.math_ops.less"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testAddCollectionDef.<lambda4>": ["tensorflow.python.ops.math_ops.add"], "tensorflow.python.ops.control_flow_ops.while_loop": [], "tensorflow.python.ops.data_flow_ops.FIFOQueue": [], "tensorflow.python.training.queue_runner_impl.QueueRunner": [], "tensorflow.python.framework.ops.add_to_collection": [], "tensorflow.python.training.queue_runner_impl.add_queue_runner": [], "tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef": [], "google.protobuf.any_pb2.Any": [], "tensorflow.python.platform.test.TestCase.assertNotEqual": [], "tensorflow.python.training.saver.import_meta_graph": [], "tensorflow.python.framework.test_util.assert_meta_graph_protos_equal": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testAddCollectionDefFails": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef", "tensorflow.python.training.saver.Saver", "tensorflow.python.framework.ops.add_to_collection", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.len", "tensorflow.python.ops.variables.VariableV1"], "tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testMultiSaverCollectionSave": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.training.saver.export_meta_graph", "<builtin>.getattr", "tensorflow.python.framework.ops.add_to_collection", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.len", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.python.training.saver.export_meta_graph": [], "<builtin>.getattr": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testMultiSaverCollectionRestore": ["tensorflow.python.platform.test.TestCase.assertRaisesWithPredicateMatch", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.get_collection", "<builtin>.len", "os.path.join"], "tensorflow.python.framework.ops.get_collection": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testMultiSaverCollectionRestore.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testMultiSaverCollection": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testMultiSaverCollectionSave", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testMultiSaverCollectionRestore"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testClearExtraneousSavers": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.training.saver.export_meta_graph", "<builtin>.getattr", "tensorflow.python.framework.ops.add_to_collection", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.len", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testBinaryAndTextFormat": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir", "tensorflow.python.platform.test.TestCase.assertRaisesWithPredicateMatch", "tensorflow.python.platform.gfile.Remove", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.training.saver.export_meta_graph", "os.path.dirname", "os.path.basename", "tensorflow.python.framework.graph_io.write_graph", "tensorflow.python.framework.ops.Graph", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.platform.test.TestCase.assertIsNotNone", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.python.platform.test.TestCase.assertIsNotNone": [], "os.path.dirname": [], "os.path.basename": [], "tensorflow.python.framework.graph_io.write_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testBinaryAndTextFormat.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testBinaryAndTextFormat.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testSliceVariable": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variables.Variable.SaveSliceInfo", "tensorflow.python.framework.test_util.assert_meta_graph_protos_equal", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.platform.test.TestCase.assertIsNotNone", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGraphExtensionSave": ["tensorflow.python.ops.math_ops.matmul", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.variables.VariableV1", "math.sqrt", "tensorflow.python.ops.control_flow_ops.while_loop", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.framework.ops.add_to_collection", "tensorflow.python.ops.random_ops.truncated_normal", "random.random", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.ops.control_flow_ops.cond", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.evaluate", "<builtin>.float", "tensorflow.python.ops.math_ops.less", "tensorflow.python.ops.nn_ops.relu", "tensorflow.python.ops.variables.global_variables_initializer", "os.path.join"], "<builtin>.float": [], "math.sqrt": [], "tensorflow.python.ops.random_ops.truncated_normal": [], "random.random": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGraphExtensionSave.<lambda1>": ["tensorflow.python.ops.array_ops.ones"], "tensorflow.python.ops.array_ops.ones": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGraphExtensionSave.<lambda2>": ["tensorflow.python.ops.array_ops.zeros"], "tensorflow.python.ops.math_ops.matmul": [], "tensorflow.python.ops.nn_ops.relu": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGraphExtensionSave.loop_cond": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGraphExtensionSave.loop_body": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGraphExtensionRestore": ["tensorflow.python.ops.array_ops.stack", "tensorflow.python.ops.array_ops.expand_dims", "tensorflow.python.ops.sparse_ops.sparse_to_dense", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.training.saver.export_meta_graph", "tensorflow.python.training.gradient_descent.GradientDescentOptimizer", "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.ops.math_ops.range", "tensorflow.python.ops.math_ops.reduce_mean", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.summary.summary.scalar", "tensorflow.python.ops.array_ops.size", "tensorflow.python.framework.ops.add_to_collection", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.platform.test.TestCase.evaluate", "os.path.join"], "tensorflow.python.ops.array_ops.size": [], "tensorflow.python.ops.array_ops.expand_dims": [], "tensorflow.python.ops.math_ops.range": [], "tensorflow.python.ops.array_ops.concat": [], "tensorflow.python.ops.array_ops.stack": [], "tensorflow.python.ops.sparse_ops.sparse_to_dense": [], "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits": [], "tensorflow.python.ops.math_ops.reduce_mean": [], "tensorflow.python.summary.summary.scalar": [], "tensorflow.python.training.gradient_descent.GradientDescentOptimizer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testRestoreFromTrainGraphWithControlContext": ["tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.framework.ops.get_collection", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testGraphExtension": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGraphExtensionRestore", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testRestoreFromTrainGraphWithControlContext", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGraphExtensionSave", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGradientSerDes": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.gradients_impl.gradients", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.core.protobuf.config_pb2.ConfigProto", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.get_default_graph", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.python.ops.gradients_impl.gradients": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testWhileLoopAndGradientSerDes": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGradientSerDes"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testWhileLoopAndGradientSerDes.<lambda1>": ["tensorflow.python.ops.control_flow_ops.while_loop"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testWhileLoopAndGradientSerDes.<lambda1>.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedWhileLoopsSerDes": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testWhileLoopAndGradientSerDes"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedWhileLoopsSerDes.body": ["tensorflow.python.ops.control_flow_ops.while_loop"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedWhileLoopsSerDes.body.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedWhileLoopsSerDes.body.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedControlFlowSerDes": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testWhileLoopAndGradientSerDes"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedControlFlowSerDes.body": ["tensorflow.python.ops.control_flow_ops.cond"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedControlFlowSerDes.body.<lambda1>": ["tensorflow.python.ops.control_flow_ops.while_loop"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedControlFlowSerDes.body.<lambda1>.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedControlFlowSerDes.body.<lambda1>.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedControlFlowSerDes.body.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedCondsSerDes": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._testGradientSerDes"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>": ["tensorflow.python.ops.control_flow_ops.cond"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda1>": ["tensorflow.python.ops.control_flow_ops.cond"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda1>.<lambda1>": ["tensorflow.python.ops.array_ops.identity"], "tensorflow.python.ops.array_ops.identity": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda1>.<lambda2>": ["tensorflow.python.ops.math_ops.multiply"], "tensorflow.python.ops.math_ops.multiply": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda2>": ["tensorflow.python.ops.control_flow_ops.cond"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda2>.<lambda1>": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testNestedCondsSerDes.<lambda1>.<lambda2>.<lambda2>": ["tensorflow.python.ops.math_ops.multiply"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testStrippedOpListDef": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.ops.array_ops.identity", "tensorflow.python.framework.meta_graph.stripped_op_list_for_graph", "tensorflow.python.training.saver.Saver", "tensorflow.python.framework.function.Defun", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.math_ops.add", "tensorflow.python.ops.variables.VariableV1", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testStrippedOpListDef.minus_one"], "tensorflow.python.framework.function.Defun": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testStrippedOpListDef.minus_one": [], "tensorflow.python.framework.meta_graph.stripped_op_list_for_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testStripDefaultValuedAttrs": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.platform.test.TestCase.assertNotIn", "tensorflow.python.ops.math_ops.complex", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.framework.test_util.get_node_def_from_graph", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variables.VariableV1"], "tensorflow.python.ops.math_ops.complex": [], "tensorflow.python.framework.test_util.get_node_def_from_graph": [], "tensorflow.python.platform.test.TestCase.assertNotIn": [], "tensorflow.python.platform.test.TestCase.assertIn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testImportIntoNamescope": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits", "tensorflow.python.ops.nn_ops.softmax", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.client.session.Session", "tensorflow.python.training.adam.AdamOptimizer", "tensorflow.python.ops.nn_ops.relu", "tensorflow.python.framework.ops.Graph", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.python.ops.array_ops.placeholder": [], "tensorflow.python.ops.nn_ops.softmax": [], "tensorflow.python.training.adam.AdamOptimizer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testImportIntoNamescopeWithoutVariables": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.platform.test.TestCase.assertIsInstance", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.client.session.Session", "tensorflow.python.framework.ops.Graph", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.python.platform.test.TestCase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testImportIntoImplicitNamescope": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest._get_test_dir", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.ops.nn_ops.softmax", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.client.session.Session", "tensorflow.python.training.adam.AdamOptimizer", "tensorflow.python.ops.nn_ops.relu", "tensorflow.python.framework.ops.Graph", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testClearDevicesOnImport": ["tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.training.saver.export_meta_graph", "tensorflow.python.client.session.Session", "tensorflow.python.training.adam.AdamOptimizer", "tensorflow.python.ops.nn_ops.relu", "tensorflow.python.framework.ops.device", "tensorflow.python.framework.ops.Graph", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.ops.variables.VariableV1", "tensorflow.python.ops.nn_ops.softmax"], "tensorflow.python.platform.test.TestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testClearDevicesOnExport": ["tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.ops.nn_ops.softmax_cross_entropy_with_logits", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.training.saver.export_meta_graph", "tensorflow.python.client.session.Session", "tensorflow.python.training.adam.AdamOptimizer", "tensorflow.python.ops.nn_ops.relu", "tensorflow.python.framework.ops.device", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.graph_io.write_graph", "tensorflow.python.ops.variables.VariableV1", "tensorflow.python.ops.nn_ops.softmax"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testPreserveDatasetAndFunctions": ["<builtin>.range", "tensorflow.python.data.ops.dataset_ops.Dataset.range", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.array_ops.identity", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.export_meta_graph", "tensorflow.python.client.session.Session", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.framework.ops.Graph", "tensorflow.python.training.saver.import_meta_graph", "tensorflow.python.data.ops.dataset_ops.make_one_shot_iterator", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.MetaGraphTest.testPreserveDatasetAndFunctions.<lambda1>": [], "tensorflow.python.data.ops.dataset_ops.make_one_shot_iterator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.CheckpointReaderTest.testDebugString": ["os.path.join", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.util.compat.as_bytes", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.training.py_checkpoint_reader.NewCheckpointReader", "tensorflow.python.platform.test.TestCase.assertAllEqual", "<builtin>.str", "tensorflow.python.ops.variables.VariableV1"], "tensorflow.python.training.py_checkpoint_reader.NewCheckpointReader": [], "tensorflow.python.util.compat.as_bytes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.CheckpointReaderTest.testNonexistentPath": ["tensorflow.python.training.py_checkpoint_reader.NewCheckpointReader", "tensorflow.python.platform.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.WriteGraphTest._get_test_dir": ["tensorflow.python.platform.gfile.MakeDirs", "tensorflow.python.platform.test.TestCase.get_temp_dir", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.WriteGraphTest.testWriteGraph": ["tensorflow.python.platform.test.TestCase.assertTrue", "os.path.exists", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.WriteGraphTest._get_test_dir", "tensorflow.python.framework.graph_io.write_graph", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.get_default_graph", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "os.path.exists": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.WriteGraphTest.testRecursiveCreate": ["tensorflow.python.platform.test.TestCase.assertTrue", "os.path.exists", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.WriteGraphTest._get_test_dir", "tensorflow.python.framework.graph_io.write_graph", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.get_default_graph", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._get_test_dir": ["tensorflow.python.platform.gfile.MakeDirs", "tensorflow.python.platform.test.TestCase.get_temp_dir", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._testScopedSave": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.ops.variables.VariableV1", "math.sqrt", "tensorflow.python.ops.control_flow_ops.while_loop", "google.protobuf.any_pb2.Any", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.framework.meta_graph.export_scoped_meta_graph", "tensorflow.python.framework.ops.add_to_collection", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.random_ops.truncated_normal", "random.random", "<builtin>.str", "<builtin>.sorted", "tensorflow.python.ops.control_flow_ops.cond", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.evaluate", "<builtin>.float", "tensorflow.python.ops.math_ops.less", "tensorflow.python.ops.nn_ops.relu", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.get_default_graph", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._testScopedSave.<lambda1>": ["tensorflow.python.ops.array_ops.ones"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._testScopedSave.<lambda2>": ["tensorflow.python.ops.array_ops.zeros"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._testScopedSave.loop_cond": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._testScopedSave.loop_body": ["tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.meta_graph.export_scoped_meta_graph": [], "<builtin>.sorted": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._testScopedRestore": ["tensorflow.python.ops.variables.variables_initializer", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.ops.variables.VariableV1", "math.sqrt", "tensorflow.python.framework.meta_graph.import_scoped_meta_graph", "tensorflow.python.ops.control_flow_ops.while_loop", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.framework.ops.add_to_collection", "<builtin>.set", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.random_ops.truncated_normal", "tensorflow.python.ops.variables.global_variables", "<builtin>.sorted", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.evaluate", "<builtin>.float", "tensorflow.python.ops.nn_ops.relu", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.list", "os.path.join"], "tensorflow.python.framework.meta_graph.import_scoped_meta_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._testScopedRestore.loop_cond": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._testScopedRestore.loop_body": ["tensorflow.python.framework.constant_op.constant"], "tensorflow.python.ops.variables.global_variables": [], "<builtin>.set": [], "<builtin>.list": [], "tensorflow.python.ops.variables.variables_initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest.testScopedSaveAndRestore": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._testScopedSave", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._get_test_dir", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._testScopedRestore"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest.testCopyScopedGraph": ["numpy.reshape", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertRaisesWithPredicateMatch", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.meta_graph.copy_scoped_meta_graph", "tensorflow.python.framework.meta_graph.export_scoped_meta_graph", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._get_test_dir", "tensorflow.python.ops.nn_ops.relu", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "numpy.reshape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest.testCopyScopedGraph.<lambda1>": ["<builtin>.str"], "tensorflow.python.framework.meta_graph.copy_scoped_meta_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest.testExportGraphDefWithScope": ["numpy.reshape", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.meta_graph.copy_scoped_meta_graph", "tensorflow.python.framework.meta_graph.export_scoped_meta_graph", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._get_test_dir", "tensorflow.python.ops.nn_ops.relu", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest.testSerializeSaverWithScope": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.name_scope", "tensorflow.python.framework.meta_graph.copy_scoped_meta_graph", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.ScopedGraphTest._get_test_dir", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.len", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._OwnsAVariableSimple.__init__": ["tensorflow.python.ops.variable_scope.get_variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._OwnsAVariableSimple._gather_saveables_for_checkpoint": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._OwnsAVariableSimple.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._MirroringSaveable.__init__": ["<builtin>.super"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._MirroringSaveable.restore": ["tensorflow.python.ops.control_flow_ops.group"], "tensorflow.python.ops.control_flow_ops.group": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._OwnsMirroredVariables.__init__": ["tensorflow.python.ops.variable_scope.get_variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._OwnsMirroredVariables._gather_saveables_for_checkpoint": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._OwnsMirroredVariables._gather_saveables_for_checkpoint._saveable_factory": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._MirroringSaveable.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._OwnsMirroredVariables.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.TrackableCompatibilityTests": ["tensorflow.python.framework.test_util.run_in_graph_and_eager_modes", "tensorflow.python.framework.test_util.run_v1_only"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.TrackableCompatibilityTests.testNotSaveableButIsTrackable": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._OwnsAVariableSimple.__init__", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.TrackableCompatibilityTests.testMoreComplexSaveableReturned": ["tensorflow.python.platform.test.TestCase.cached_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test._OwnsMirroredVariables.__init__", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.TrackableCompatibilityTests.testSingleTensorEvaluation": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.training.saver.Saver", "tensorflow.python.eager.context.eager_mode", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.TrackableCompatibilityTests.testSingleTensorEvaluation._CountingSaveable.__init__", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.TrackableCompatibilityTests.testSingleTensorEvaluation._CountingSaveable.__init__": ["tensorflow.python.framework.constant_op.constant", "<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.TrackableCompatibilityTests.testSingleTensorEvaluation._CountingSaveable.__init__._tensor": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.TrackableCompatibilityTests.testSingleTensorEvaluation._CountingSaveable.restore": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.TrackableCompatibilityTests.testVariableNotFoundErrorRaised": ["tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertNotIn", "tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.platform.test.TestCase.assertRaises", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\saver_test.TrackableCompatibilityTests.testGraphChangedForRestoreErrorRaised": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variables.VariableV1", "os.path.join"], "tensorflow.python.platform.test.main": []}
