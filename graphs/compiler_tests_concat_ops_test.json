{"Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test": ["tensorflow.python.platform.googletest.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testHStack": ["tensorflow.compiler.tests.xla_test.XLATestCase.assertEqual", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "numpy.random.rand", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.concat"], "tensorflow.compiler.tests.xla_test.XLATestCase.session": [], "tensorflow.python.ops.array_ops.placeholder": [], "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope": [], "tensorflow.python.ops.array_ops.concat": [], "numpy.random.rand": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertEqual": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testVStack": ["tensorflow.compiler.tests.xla_test.XLATestCase.assertEqual", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "numpy.random.rand", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.concat"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testInt32": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "numpy.random.rand", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest._testRandom": ["tensorflow.compiler.tests.xla_test.XLATestCase.assertEqual", "tensorflow.python.ops.math_ops.cast", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "<builtin>.slice", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "numpy.random.rand", "numpy.arange", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "numpy.random.randint", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "tensorflow.python.ops.array_ops.concat"], "numpy.random.randint": [], "numpy.arange": [], "tensorflow.python.ops.math_ops.cast": [], "<builtin>.slice": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testRandom": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest._testRandom"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest._testGradientsSimple": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "<builtin>.float", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "numpy.random.rand", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.gradients_impl.gradients"], "<builtin>.float": [], "tensorflow.python.ops.gradients_impl.gradients": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testGradientsSimpleAll": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest._testGradientsSimple"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest._testGradientsFirstDim": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "<builtin>.float", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "numpy.random.rand", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.gradients_impl.gradients"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testGradientsFirstDimAll": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest._testGradientsFirstDim"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest._testGradientsLastDim": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "<builtin>.float", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "numpy.random.rand", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.gradients_impl.gradients"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testGradientsLastDimAll": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest._testGradientsLastDim"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest._RunAndVerifyGradientsRandom": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "<builtin>.float", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "numpy.random.rand", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "numpy.random.randint", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.gradients_impl.gradients"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testGradientsRandom": ["<builtin>.range", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest._RunAndVerifyGradientsRandom"], "<builtin>.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.DISABLED_testZeroSize": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "numpy.concatenate", "<builtin>.list", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "<builtin>.map", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.concat", "numpy.random.seed", "numpy.random.randn", "<builtin>.len", "tensorflow.python.ops.gradients_impl.gradients"], "numpy.random.seed": [], "<builtin>.len": [], "numpy.random.randn": [], "numpy.concatenate": [], "<builtin>.map": [], "<builtin>.list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testConcatTuple": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "numpy.random.rand", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.concat"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testConcatNoScalars": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.assertRaisesRegex", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.framework.constant_op.constant"], "tensorflow.compiler.tests.xla_test.XLATestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatTest.testConcatLargeNumberOfTensors": ["tensorflow.compiler.tests.xla_test.XLATestCase.skipTest", "tensorflow.compiler.tests.xla_test.XLATestCase.assertEqual", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "numpy.array", "<builtin>.slice", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "<builtin>.range", "numpy.arange", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "numpy.random.rand", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.concat"], "tensorflow.compiler.tests.xla_test.XLATestCase.skipTest": [], "numpy.array": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.ConcatOffsetTest.testBasic": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "tensorflow.python.ops.gen_array_ops.concat_offset", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.ops.gen_array_ops.concat_offset": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.PackTest.testBasic": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.ops.array_ops.stack": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.PackTest.testScalars": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\concat_ops_test.PackTest.testEmpty": ["tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.python.ops.array_ops.stack", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.platform.googletest.main": []}
