{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase.setUp": ["<builtin>.super"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._Record": ["tensorflow.python.util.compat.as_bytes"], "tensorflow.python.util.compat.as_bytes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._CreateFiles": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._Record", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.range"], "<builtin>.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile": ["os.path.join", "tensorflow.python.lib.io.tf_record.TFRecordWriter", "tensorflow.python.platform.test.TestCase.get_temp_dir"], "tensorflow.python.platform.test.TestCase.get_temp_dir": [], "os.path.join": [], "tensorflow.python.lib.io.tf_record.TFRecordWriter": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._ZlibCompressFile": ["os.path.join", "<builtin>.open", "tensorflow.python.platform.test.TestCase.get_temp_dir", "zlib.compress"], "<builtin>.open": [], "zlib.compress": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._GzipCompressFile": ["os.path.join", "<builtin>.open", "gzip.GzipFile", "tensorflow.python.platform.test.TestCase.get_temp_dir"], "gzip.GzipFile": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._ZlibDecompressFile": ["os.path.join", "<builtin>.open", "zlib.decompress", "tensorflow.python.platform.test.TestCase.get_temp_dir"], "zlib.decompress": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._GzipDecompressFile": ["os.path.join", "<builtin>.open", "gzip.GzipFile", "tensorflow.python.platform.test.TestCase.get_temp_dir"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterTest._AssertFilesEqual": ["<builtin>.zip", "<builtin>.open", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertNotEqual"], "<builtin>.zip": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "tensorflow.python.platform.test.TestCase.assertNotEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterTest._CompressionSizeDelta": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.list", "os.path.getsize", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.tf_record_iterator"], "tensorflow.python.lib.io.tf_record.tf_record_iterator": [], "<builtin>.list": [], "os.path.getsize": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterTest.testWriteReadZLibFiles": ["<builtin>.enumerate", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._ZlibCompressFile", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterTest._AssertFilesEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._CreateFiles", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._ZlibDecompressFile", "tensorflow.python.lib.io.tf_record.TFRecordOptions"], "tensorflow.python.lib.io.tf_record.TFRecordOptions": [], "<builtin>.enumerate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterTest.testWriteReadGzipFiles": ["<builtin>.enumerate", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterTest._AssertFilesEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._CreateFiles", "tensorflow.python.lib.io.tf_record.TFRecordOptions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._GzipCompressFile", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._GzipDecompressFile"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterTest.testNoCompressionType": ["tensorflow.python.lib.io.tf_record.TFRecordOptions", "tensorflow.python.lib.io.tf_record.TFRecordOptions.get_compression_type_string", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertRaises"], "tensorflow.python.lib.io.tf_record.TFRecordOptions.get_compression_type_string": [], "tensorflow.python.platform.test.TestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterTest.testZlibCompressionType": ["tensorflow.python.lib.io.tf_record.TFRecordOptions", "tensorflow.python.lib.io.tf_record.TFRecordOptions.get_compression_type_string", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterTest.testCompressionOptions": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterTest._CompressionSizeDelta", "<builtin>.range", "random.Random", "tensorflow.python.platform.test.TestCase.assertTrue", "<builtin>.len", "tensorflow.python.util.compat.as_bytes", "tensorflow.python.lib.io.tf_record.TFRecordOptions"], "random.Random": [], "<builtin>.len": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterZlibTest.testZLibFlushRecord": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.list", "<builtin>.open", "zlib.compressobj", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.isinstance", "six.int2byte", "tensorflow.python.lib.io.tf_record.tf_record_iterator", "tensorflow.python.lib.io.tf_record.TFRecordOptions"], "zlib.compressobj": [], "<builtin>.isinstance": [], "six.int2byte": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterZlibTest.testZlibReadWrite": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._ZlibCompressFile", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.tf_record_iterator", "tensorflow.python.lib.io.tf_record.TFRecordOptions"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterZlibTest.testZlibReadWriteLarge": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._ZlibCompressFile", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.tf_record_iterator", "tensorflow.python.lib.io.tf_record.TFRecordOptions"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterZlibTest.testGzipReadWrite": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.tf_record_iterator", "tensorflow.python.lib.io.tf_record.TFRecordOptions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._GzipCompressFile"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordIteratorTest.setUp": ["<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordIteratorTest.testIterator": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._Record", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.range", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.tf_record_iterator", "tensorflow.python.lib.io.tf_record.TFRecordOptions", "<builtin>.next"], "<builtin>.next": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordIteratorTest.testWriteZlibRead": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._ZlibDecompressFile", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.tf_record_iterator", "tensorflow.python.lib.io.tf_record.TFRecordOptions"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordIteratorTest.testWriteZlibReadLarge": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._ZlibDecompressFile", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.tf_record_iterator", "tensorflow.python.lib.io.tf_record.TFRecordOptions"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordIteratorTest.testWriteGzipRead": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.tf_record_iterator", "tensorflow.python.lib.io.tf_record.TFRecordOptions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._GzipDecompressFile"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordIteratorTest.testReadGrowingFile_preservesReadOffset": ["os.path.join", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.TFRecordWriter", "tensorflow.python.lib.io.tf_record.tf_record_iterator", "<builtin>.next", "tensorflow.python.platform.test.TestCase.get_temp_dir"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordIteratorTest.testReadTruncatedFile_preservesReadOffset": ["os.path.join", "<builtin>.open", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.TFRecordWriter", "tensorflow.python.lib.io.tf_record.tf_record_iterator", "<builtin>.next", "tensorflow.python.platform.test.TestCase.get_temp_dir"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordRandomReaderTest.testRandomReaderReadingWorks": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._Record", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.range", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.tf_record.tf_record_random_reader"], "tensorflow.python.lib.io.tf_record.tf_record_random_reader": [], "tensorflow.python.platform.test.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordRandomReaderTest.testRandomReaderThrowsErrorForInvalidOffset": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._Record", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.range", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.lib.io.tf_record.tf_record_random_reader"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordRandomReaderTest.testClosingRandomReaderCausesErrorsForFurtherReading": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._Record", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFCompressionTestCase._WriteRecordsToFile", "<builtin>.range", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.lib.io.tf_record.tf_record_random_reader"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests.setUp": ["os.path.join", "<builtin>.super", "tensorflow.python.lib.io.tf_record.TFRecordWriter", "tensorflow.python.lib.io.tf_record.TFRecordOptions", "tensorflow.python.platform.test.TestCase.get_temp_dir"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests._Record": ["tensorflow.python.util.compat.as_bytes"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests.testWriteAndLeaveOpen": ["<builtin>.map", "<builtin>.list", "<builtin>.range"], "<builtin>.map": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests.testWriteAndRead": ["<builtin>.list", "<builtin>.range", "tensorflow.python.platform.test.TestCase.assertListEqual", "<builtin>.map", "tensorflow.python.lib.io.tf_record.tf_record_iterator"], "tensorflow.python.platform.test.TestCase.assertListEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests.testFlushAndRead": ["<builtin>.list", "<builtin>.range", "tensorflow.python.platform.test.TestCase.assertListEqual", "<builtin>.map", "tensorflow.python.lib.io.tf_record.tf_record_iterator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests.testDoubleClose": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests._Record"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests.testFlushAfterCloseIsError": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests._Record", "tensorflow.python.platform.test.TestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests.testWriteAfterCloseIsError": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushTests._Record", "tensorflow.python.platform.test.TestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushGzipTests.setUp": ["<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\tf_record_test.TFRecordWriterCloseAndFlushZlibTests.setUp": ["<builtin>.super"], "tensorflow.python.platform.test.main": []}
