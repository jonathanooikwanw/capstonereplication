{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.LatestCheckpointWithRelativePaths": ["contextlib.contextmanager", "tensorflow.python.framework.test_util.run_deprecated_v1"], "contextlib.contextmanager": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.LatestCheckpointWithRelativePaths.tempWorkingDir": ["os.chdir", "os.getcwd"], "os.getcwd": [], "os.chdir": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.LatestCheckpointWithRelativePaths.tempDir": ["tempfile.mkdtemp", "shutil.rmtree"], "tempfile.mkdtemp": [], "shutil.rmtree": [], "tensorflow.python.framework.test_util.run_deprecated_v1": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.LatestCheckpointWithRelativePaths.testNameCollision": ["tensorflow.python.training.checkpoint_management.latest_checkpoint", "tensorflow.python.ops.variables.Variable", "os.path.join", "tensorflow.python.platform.test.TestCase.cached_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.LatestCheckpointWithRelativePaths.tempDir", "tensorflow.python.ops.variables.global_variables_initializer", "os.mkdir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertIsNotNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.LatestCheckpointWithRelativePaths.tempWorkingDir", "tensorflow.python.training.saver.Saver", "tensorflow.python.platform.test.TestCase.assertRaisesRegex"], "os.mkdir": [], "os.path.join": [], "tensorflow.python.platform.test.TestCase.cached_session": [], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "tensorflow.python.training.saver.Saver": [], "tensorflow.python.platform.test.TestCase.assertRaisesRegex": [], "tensorflow.python.training.checkpoint_management.latest_checkpoint": [], "tensorflow.python.platform.test.TestCase.assertIsNotNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.LatestCheckpointWithRelativePaths.testRelativePath": ["tensorflow.python.training.checkpoint_management.latest_checkpoint", "tensorflow.python.ops.variables.Variable", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join", "tensorflow.python.platform.test.TestCase.cached_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.LatestCheckpointWithRelativePaths.tempDir", "tensorflow.python.ops.variables.global_variables_initializer", "os.mkdir", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertIsNotNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.LatestCheckpointWithRelativePaths.tempWorkingDir", "tensorflow.python.training.saver.Saver"], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest._get_test_dir": ["tensorflow.python.platform.gfile.MakeDirs", "tensorflow.python.platform.test.TestCase.get_temp_dir", "os.path.join"], "tensorflow.python.platform.test.TestCase.get_temp_dir": [], "tensorflow.python.platform.gfile.MakeDirs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest.testAbsPath": ["tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest._get_test_dir", "os.path.join", "tensorflow.python.training.checkpoint_management.generate_checkpoint_state_proto", "tensorflow.python.platform.test.TestCase.assertTrue", "<builtin>.len", "os.path.isabs"], "tensorflow.python.training.checkpoint_management.generate_checkpoint_state_proto": [], "os.path.isabs": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "<builtin>.len": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest.testRelPath": ["tensorflow.python.training.checkpoint_management.generate_checkpoint_state_proto", "<builtin>.len", "os.path.join", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest.testAllModelCheckpointPaths": ["tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest._get_test_dir", "os.path.join", "tensorflow.python.training.checkpoint_management.generate_checkpoint_state_proto", "tensorflow.python.platform.test.TestCase.assertTrue", "<builtin>.len", "os.path.isabs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest.testUpdateCheckpointState": ["tensorflow.python.training.checkpoint_management.update_checkpoint_state", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest._get_test_dir", "os.chdir", "os.path.join", "tensorflow.python.training.checkpoint_management.get_checkpoint_state", "os.mkdir", "<builtin>.len"], "tensorflow.python.training.checkpoint_management.update_checkpoint_state": [], "tensorflow.python.training.checkpoint_management.get_checkpoint_state": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest.testUpdateCheckpointStateSaveRelativePaths": ["tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest._get_test_dir", "os.chdir", "tensorflow.python.training.checkpoint_management.update_checkpoint_state_internal", "os.path.join", "google.protobuf.text_format.Merge", "tensorflow.python.training.checkpoint_state_pb2.CheckpointState", "tensorflow.python.training.checkpoint_management.get_checkpoint_state", "<builtin>.len", "tensorflow.python.lib.io.file_io.read_file_to_string"], "tensorflow.python.training.checkpoint_management.update_checkpoint_state_internal": [], "tensorflow.python.lib.io.file_io.read_file_to_string": [], "tensorflow.python.training.checkpoint_state_pb2.CheckpointState": [], "google.protobuf.text_format.Merge": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest.testCheckPointStateFailsWhenIncomplete": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest._get_test_dir", "os.chdir", "os.path.join", "tensorflow.python.training.checkpoint_management.get_checkpoint_state", "tensorflow.python.platform.test.TestCase.assertRaises", "<builtin>.open"], "<builtin>.open": [], "tensorflow.python.platform.test.TestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest.testCheckPointCompletesRelativePaths": ["tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointStateTest._get_test_dir", "os.chdir", "os.path.join", "tensorflow.python.training.checkpoint_management.get_checkpoint_state", "<builtin>.open"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.SaverUtilsTest.setUp": ["tensorflow.python.platform.gfile.MakeDirs", "tensorflow.python.platform.test.TestCase.get_temp_dir", "os.path.join"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.SaverUtilsTest.tearDown": ["tensorflow.python.platform.gfile.DeleteRecursively"], "tensorflow.python.platform.gfile.DeleteRecursively": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.SaverUtilsTest": ["tensorflow.python.framework.test_util.run_deprecated_v1"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.SaverUtilsTest.testCheckpointExists": ["tensorflow.python.training.checkpoint_management.latest_checkpoint", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.ops.variables.Variable", "os.path.join", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.training.saver.Saver"], "tensorflow.python.framework.ops.Graph": [], "tensorflow.python.platform.test.TestCase.session": [], "tensorflow.python.training.checkpoint_management.checkpoint_exists": [], "tensorflow.python.platform.test.TestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.SaverUtilsTest.testGetCheckpointMtimes": ["tensorflow.python.ops.variables.Variable", "<builtin>.str", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join", "tensorflow.python.framework.ops.Graph", "tensorflow.python.training.checkpoint_management.get_checkpoint_mtimes", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.platform.test.TestCase.evaluate", "<builtin>.len", "tensorflow.python.training.saver.Saver"], "<builtin>.str": [], "tensorflow.python.training.checkpoint_management.get_checkpoint_mtimes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.SaverUtilsTest.testRemoveCheckpoint": ["tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.ops.variables.Variable", "tensorflow.python.platform.test.TestCase.assertFalse", "os.path.join", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.checkpoint_management.remove_checkpoint", "tensorflow.python.training.saver.Saver"], "tensorflow.python.training.checkpoint_management.remove_checkpoint": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest": ["tensorflow.python.platform.test.mock.patch.object", "tensorflow.python.framework.test_util.run_in_graph_and_eager_modes"], "tensorflow.python.framework.test_util.run_in_graph_and_eager_modes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testDeletion": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.training.checkpoint_management.CheckpointManager", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.training.tracking.util.Checkpoint"], "tensorflow.python.training.tracking.util.Checkpoint": [], "tensorflow.python.training.checkpoint_management.CheckpointManager": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testKeepAll": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.eager.context.executing_eagerly", "os.path.join", "tensorflow.python.training.checkpoint_management.CheckpointManager", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.training.tracking.util.Checkpoint", "<builtin>.str"], "tensorflow.python.eager.context.executing_eagerly": [], "tensorflow.python.platform.test.mock.patch.object": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testSaveRestoreState": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join", "tensorflow.python.training.checkpoint_management.CheckpointManager", "tensorflow.python.training.checkpoint_management.get_checkpoint_state", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.training.tracking.util.Checkpoint"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testContinueFromUnmanaged": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.training.checkpoint_management.CheckpointManager", "tensorflow.python.training.tracking.util.Checkpoint"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testClockReset": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.training.checkpoint_management.CheckpointManager", "tensorflow.python.platform.test.mock.patch.object", "tensorflow.python.training.checkpoint_management.get_checkpoint_state", "tensorflow.python.platform.test.TestCase.assertRegex", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.training.tracking.util.Checkpoint", "<builtin>.str"], "tensorflow.python.platform.test.TestCase.assertRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testCustomNumbering": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.training.checkpoint_management.latest_checkpoint", "tensorflow.python.ops.variables.Variable", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.training.checkpoint_management.CheckpointManager", "tensorflow.python.training.checkpoint_management.get_checkpoint_state", "tensorflow.python.platform.test.TestCase.evaluate", "<builtin>.range", "tensorflow.python.training.tracking.util.Checkpoint", "tensorflow.python.platform.test.TestCase.fail"], "<builtin>.range": [], "tensorflow.python.platform.test.TestCase.fail": [], "tensorflow.python.platform.test.TestCase.assertIn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testCustomCheckpointPrefix": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.training.checkpoint_management.CheckpointManager", "os.path.basename", "tensorflow.python.training.tracking.util.Checkpoint"], "os.path.basename": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testRestoreOrInitialize": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.ops.variables.Variable", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.platform.test.TestCase.assertEqual", "os.path.join", "tensorflow.python.training.checkpoint_management.CheckpointManager", "tensorflow.python.platform.test.TestCase.assertIsNotNone", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.tracking.util.Checkpoint"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testRestoreOrInitialize.<lambda1>": [], "tensorflow.python.platform.test.TestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testCheckpointInterval": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.training.checkpoint_management.checkpoint_exists", "tensorflow.python.ops.variables.Variable", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.training.checkpoint_management.CheckpointManager", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.tracking.util.Checkpoint"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\training\\checkpoint_management_test.CheckpointManagerTest.testCheckpointIntervalWithRestore": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "tensorflow.python.ops.variables.Variable", "tensorflow.python.platform.test.TestCase.assertIsNone", "os.path.join", "tensorflow.python.training.checkpoint_management.CheckpointManager", "tensorflow.python.platform.test.TestCase.assertIsNotNone", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.training.tracking.util.Checkpoint"], "tensorflow.python.platform.test.main": []}
