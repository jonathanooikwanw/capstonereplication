{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test._test_function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.GetQualifiedNameTest.test_method": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.decorator_utils.get_qualified_name"], "tensorflow.python.util.decorator_utils.get_qualified_name": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.GetQualifiedNameTest.test_function": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.decorator_utils.get_qualified_name"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.AddNoticeToDocstringTest._check": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.decorator_utils.add_notice_to_docstring"], "tensorflow.python.util.decorator_utils.add_notice_to_docstring": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.AddNoticeToDocstringTest.test_regular": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.AddNoticeToDocstringTest._check"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.AddNoticeToDocstringTest.test_brief_only": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.AddNoticeToDocstringTest._check"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.AddNoticeToDocstringTest.test_no_docstring": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.AddNoticeToDocstringTest._check"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.AddNoticeToDocstringTest.test_no_empty_line": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.AddNoticeToDocstringTest._check"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.ValidateCallableTest.test_function": ["tensorflow.python.util.decorator_utils.validate_callable"], "tensorflow.python.util.decorator_utils.validate_callable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.ValidateCallableTest.test_method": ["tensorflow.python.util.decorator_utils.validate_callable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.ValidateCallableTest.test_callable": ["tensorflow.python.util.decorator_utils.validate_callable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.ValidateCallableTest.test_callable.TestClass.__call__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.ValidateCallableTest.test_partial": ["functools.partial", "tensorflow.python.util.decorator_utils.validate_callable"], "functools.partial": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.ValidateCallableTest.test_fail_non_callable": ["tensorflow.python.platform.test.TestCase.assertRaises"], "tensorflow.python.platform.test.TestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.CachedClassPropertyTest.testCachedClassProperty": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.platform.test.TestCase.assertLen"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.CachedClassPropertyTest.testCachedClassProperty.MyClass": ["tensorflow.python.util.decorator_utils.cached_classproperty"], "tensorflow.python.util.decorator_utils.cached_classproperty": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\decorator_utils_test.CachedClassPropertyTest.testCachedClassProperty.MyClass.value": [], "tensorflow.python.platform.test.TestCase.assertLen": [], "tensorflow.python.platform.test.main": []}
