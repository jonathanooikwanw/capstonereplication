{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test": ["tensorflow.python.distribute.multi_process_runner.test_main", "tensorflow.python.distribute.combinations.combine", "tensorflow.python.distribute.multi_worker_test_base.create_cluster_spec", "tensorflow.python.distribute.multi_process_runner.MultiProcessPoolRunner"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops": ["tensorflow.core.protobuf.tensorflow_server_pb2.ServerDef", "tensorflow.python.eager.context.context", "copy.deepcopy"], "tensorflow.python.eager.context.context": [], "copy.deepcopy": [], "tensorflow.core.protobuf.tensorflow_server_pb2.ServerDef": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops_with_barrier": ["tensorflow.python.distribute.multi_process_runner.get_barrier", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops"], "tensorflow.python.distribute.multi_process_runner.get_barrier": [], "tensorflow.python.distribute.combinations.combine": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealth": ["tensorflow.python.distribute.multi_worker_test_base.create_cluster_spec", "tensorflow.python.distribute.multi_process_runner.MultiProcessRunner"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealth.worker_fn": ["tensorflow.python.distribute.multi_process_runner.get_barrier", "tensorflow.python.distribute.cluster_resolver.TFConfigClusterResolver", "tensorflow.python.eager.context.context", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops"], "tensorflow.python.distribute.cluster_resolver.TFConfigClusterResolver": [], "tensorflow.python.distribute.multi_worker_test_base.create_cluster_spec": [], "tensorflow.python.distribute.multi_process_runner.MultiProcessRunner": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthPeerDown": ["tensorflow.python.distribute.multi_worker_test_base.create_cluster_spec", "tensorflow.python.eager.test.TestCase.assertRaises", "tensorflow.python.distribute.multi_process_runner.MultiProcessRunner"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthPeerDown.worker_fn": ["tensorflow.python.distribute.cluster_resolver.TFConfigClusterResolver", "tensorflow.python.eager.context.context", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops"], "tensorflow.python.eager.test.TestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthPeerRestart": ["tensorflow.python.distribute.multi_worker_test_base.create_cluster_spec", "tensorflow.python.distribute.multi_process_runner.MultiProcessRunner"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthPeerRestart.worker_fn": ["os._exit", "tensorflow.python.distribute.cluster_resolver.TFConfigClusterResolver", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.collective_ops.all_reduce", "tensorflow.python.eager.context.context", "time.sleep", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops"], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.ops.collective_ops.all_reduce": [], "os._exit": [], "time.sleep": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthInvalidPeer": ["tensorflow.python.distribute.multi_worker_test_base.create_cluster_spec", "tensorflow.python.eager.test.TestCase.assertRaises", "tensorflow.python.distribute.multi_process_runner.MultiProcessRunner"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.CollectiveOpTest.testCheckHealthInvalidPeer.worker_fn": ["tensorflow.python.distribute.cluster_resolver.TFConfigClusterResolver", "tensorflow.python.eager.context.context", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.<lambda1>": ["tensorflow.python.distribute.cluster_resolver.TFConfigClusterResolver", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops"], "tensorflow.python.distribute.multi_process_runner.MultiProcessPoolRunner": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortCommunication": ["tensorflow.python.distribute.cluster_resolver.TFConfigClusterResolver", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.collective_ops.all_reduce", "tensorflow.python.framework.ops.device", "threading.Thread", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops_with_barrier", "tensorflow.python.eager.test.TestCase.skipTest", "tensorflow.python.eager.test.TestCase.assertRaisesRegex"], "tensorflow.python.eager.test.TestCase.skipTest": [], "tensorflow.python.framework.ops.device": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortCommunication.abort_fn": ["time.sleep", "tensorflow.python.eager.context.context"], "threading.Thread": [], "tensorflow.python.eager.test.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortGroupParamsResolution": ["tensorflow.python.distribute.cluster_resolver.TFConfigClusterResolver", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.collective_ops.all_reduce", "tensorflow.python.framework.ops.device", "threading.Thread", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops_with_barrier", "tensorflow.python.eager.test.TestCase.skipTest", "tensorflow.python.eager.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortGroupParamsResolution.abort_fn": ["time.sleep", "tensorflow.python.eager.context.context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortInstanceParamsResolution": ["tensorflow.python.distribute.cluster_resolver.TFConfigClusterResolver", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.collective_ops.all_reduce", "tensorflow.python.framework.ops.device", "tensorflow.python.ops.collective_ops.broadcast_recv", "tensorflow.python.ops.collective_ops.broadcast_send", "threading.Thread", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.enable_collective_ops_with_barrier", "tensorflow.python.eager.test.TestCase.skipTest", "tensorflow.python.eager.test.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\kernel_tests\\collective_ops_multi_worker_test.AbortCollectiveOpsTest.testAbortInstanceParamsResolution.abort_fn": ["time.sleep", "tensorflow.python.eager.context.context"], "tensorflow.python.ops.collective_ops.broadcast_send": [], "tensorflow.python.ops.collective_ops.broadcast_recv": [], "tensorflow.python.distribute.multi_process_runner.test_main": []}
