{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_decorator_increment_first_int_arg", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_tfdecorator", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_injectable_decorator_square", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_injectable_decorator_increment", "tensorflow.python.platform.test.main", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_tfdecorator.make_tf_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_tfdecorator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_tfdecorator.make_tf_decorator": ["tensorflow.python.util.tf_decorator.TFDecorator"], "tensorflow.python.util.tf_decorator.TFDecorator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_decorator_increment_first_int_arg": ["tensorflow.python.util.tf_decorator.make_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_decorator_increment_first_int_arg.wrapper": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.return_params", "<builtin>.isinstance"], "<builtin>.isinstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.return_params": [], "tensorflow.python.util.tf_decorator.make_decorator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_injectable_decorator_square": ["tensorflow.python.util.tf_decorator.make_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_injectable_decorator_square.wrapper": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_injectable_decorator_increment": ["tensorflow.python.util.tf_decorator.make_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_injectable_decorator_increment.wrapper": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_decorated_function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_rewrappable_decorated": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.two_prop": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.two_func": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_decorator_increment_first_int_arg"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testInitCapturesTarget": ["tensorflow.python.util.tf_decorator.TFDecorator", "tensorflow.python.platform.test.TestCase.assertIs"], "tensorflow.python.platform.test.TestCase.assertIs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testInitCapturesDecoratorName": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.TFDecorator"], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testInitCapturesDecoratorDoc": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.TFDecorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testInitCapturesNonNoneArgspec": ["tensorflow.python.util.tf_inspect.ArgSpec", "tensorflow.python.util.tf_decorator.TFDecorator", "tensorflow.python.platform.test.TestCase.assertIs"], "tensorflow.python.util.tf_inspect.ArgSpec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testInitSetsDecoratorNameToTargetName": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.TFDecorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testInitSetsDecoratorQualNameToTargetQualName": ["<builtin>.hasattr", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.TFDecorator"], "<builtin>.hasattr": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testInitSetsDecoratorDocToTargetDoc": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.TFDecorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testCallingATFDecoratorCallsTheTarget": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.TFDecorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testCallingADecoratedFunctionCallsTheTarget": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_decorated_function", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testInitializingDecoratedClassWithInitParamsDoesntRaise": ["tensorflow.python.platform.test.TestCase.assertFail", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.__init__"], "tensorflow.python.platform.test.TestCase.assertFail": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testReadingClassAttributeOnDecoratedClass": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.__init__", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testCallingClassMethodOnDecoratedClass": ["tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.two_func"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testReadingClassPropertyOnDecoratedClass": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.__init__", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testNameOnBoundProperty": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.__init__", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testQualNameOnBoundProperty": ["<builtin>.hasattr", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.__init__", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testDocstringOnBoundProperty": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.__init__", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testTarget__get__IsProxied": ["tensorflow.python.platform.test.TestCase.assertIsInstance"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testTarget__get__IsProxied.Descr.__get__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorTest.testTarget__get__IsProxied.Foo": ["tensorflow.python.util.tf_decorator.TFDecorator"], "tensorflow.python.platform.test.TestCase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_wrapper": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_function"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testAttachesATFDecoratorAttr": ["<builtin>.getattr", "tensorflow.python.platform.test.TestCase.assertIsInstance", "tensorflow.python.util.tf_decorator.make_decorator"], "<builtin>.getattr": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testAttachesWrappedAttr": ["<builtin>.getattr", "tensorflow.python.util.tf_decorator.make_decorator", "tensorflow.python.platform.test.TestCase.assertIs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testSetsTFDecoratorNameToDecoratorNameArg": ["<builtin>.getattr", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.make_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testSetsTFDecoratorDocToDecoratorDocArg": ["<builtin>.getattr", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.make_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testUpdatesDictWithMissingEntries": ["tensorflow.python.util.tf_decorator.make_decorator", "tensorflow.python.platform.test.TestCase.assertTrue"], "tensorflow.python.platform.test.TestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testUpdatesDict_doesNotOverridePresentEntries": ["tensorflow.python.util.tf_decorator.make_decorator", "tensorflow.python.platform.test.TestCase.assertFalse"], "tensorflow.python.platform.test.TestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testSetsTFDecoratorArgSpec": ["<builtin>.getattr", "tensorflow.python.util.tf_inspect.ArgSpec", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.make_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testSetsDecoratorNameToFunctionThatCallsMakeDecoratorIfAbsent": ["<builtin>.getattr", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testSetsDecoratorNameToFunctionThatCallsMakeDecoratorIfAbsent.test_decorator_name"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testSetsDecoratorNameToFunctionThatCallsMakeDecoratorIfAbsent.test_decorator_name": ["tensorflow.python.util.tf_decorator.make_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testCompatibleWithNamelessCallables": ["functools.partial", "tensorflow.python.util.tf_decorator.make_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfMakeDecoratorTest.testCompatibleWithNamelessCallables.Callable.__call__": [], "functools.partial": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorRewrapTest.testRewrapMutatesAffectedFunction": ["tensorflow.python.util.tf_decorator.rewrap", "tensorflow.python.util.tf_decorator.unwrap", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_rewrappable_decorated"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorRewrapTest.testRewrapMutatesAffectedFunction.new_target": [], "tensorflow.python.util.tf_decorator.unwrap": [], "tensorflow.python.util.tf_decorator.rewrap": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorRewrapTest.testRewrapOfDecoratorFunction": ["tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_rewrappable_decorated", "tensorflow.python.util.tf_decorator.rewrap"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorRewrapTest.testRewrapOfDecoratorFunction.new_target": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapReturnsEmptyArrayForUndecoratedFunction": ["<builtin>.len", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.unwrap"], "<builtin>.len": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapReturnsUndecoratedFunctionAsTarget": ["tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.util.tf_decorator.unwrap"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapReturnsFinalFunctionAsTarget": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.util.tf_decorator.unwrap", "tensorflow.python.util.tf_inspect.isfunction", "tensorflow.python.platform.test.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.test_decorated_function"], "tensorflow.python.util.tf_inspect.isfunction": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapReturnsListOfUniqueTFDecorators": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.util.tf_decorator.unwrap", "<builtin>.isinstance", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNot", "<builtin>.len"], "tensorflow.python.platform.test.TestCase.assertIsNot": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapReturnsDecoratorListFromOutermostToInnermost": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.util.tf_decorator.unwrap"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TfDecoratorUnwrapTest.testUnwrapBoundMethods": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.return_params", "tensorflow.python.util.tf_decorator.unwrap", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\util\\tf_decorator_test.TestDecoratedClass.__init__", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.platform.test.main": []}
