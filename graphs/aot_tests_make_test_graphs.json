{"Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs": ["absl.app.run", "argparse.ArgumentParser"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfadd": ["tensorflow.python.ops.math_ops.add", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.ops.math_ops.add": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfadd_with_ckpt": ["tensorflow.python.ops.variables.VariableV1", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.add", "tensorflow.python.ops.array_ops.placeholder", "os.path.join", "tensorflow.python.client.session.Session"], "tensorflow.python.ops.array_ops.placeholder": [], "tensorflow.python.ops.variables.VariableV1": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.training.saver.Saver": [], "tensorflow.python.client.session.Session": [], "os.path.join": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfadd_with_ckpt_saver": ["six.ensure_binary", "tensorflow.python.ops.variables.VariableV1", "tensorflow.python.training.saver.Saver", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.add", "tensorflow.python.ops.array_ops.placeholder", "os.path.join", "tensorflow.python.client.session.Session", "<builtin>.open"], "<builtin>.open": [], "six.ensure_binary": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfassert_eq": ["tensorflow.python.ops.math_ops.add", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.control_flow_ops.Assert", "tensorflow.python.ops.math_ops.equal", "tensorflow.python.ops.math_ops.negative"], "tensorflow.python.ops.math_ops.equal": [], "tensorflow.python.ops.control_flow_ops.Assert": [], "tensorflow.python.ops.math_ops.negative": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfcond": ["tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.control_flow_ops.cond", "tensorflow.python.ops.array_ops.identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfcond.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfcond.<lambda2>": [], "tensorflow.python.ops.control_flow_ops.cond": [], "tensorflow.python.ops.array_ops.identity": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfgather": ["tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.gather"], "tensorflow.python.ops.array_ops.gather": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfmatmul": ["tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.matmul"], "tensorflow.python.ops.math_ops.matmul": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfmatmulandadd": ["tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.math_ops.add"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tffunction": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tffunction.test_func", "tensorflow.python.framework.function.Defun", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.function.Defun": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tffunction.test_func": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfsplits": ["six.moves.range", "tensorflow.python.ops.math_ops.add", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.array_ops.identity", "tensorflow.python.ops.array_ops.concat", "tensorflow.python.ops.array_ops.split"], "six.moves.range": [], "tensorflow.python.ops.array_ops.split": [], "tensorflow.python.ops.array_ops.concat": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tftop_k": ["tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.array_ops.identity", "tensorflow.python.ops.nn_ops.top_k"], "tensorflow.python.ops.nn_ops.top_k": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfvariable_readonly": ["tensorflow.python.ops.array_ops.identity", "tensorflow.python.ops.variables.Variable", "tensorflow.python.ops.math_ops.add", "tensorflow.python.framework.ops.control_dependencies"], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.framework.ops.control_dependencies": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfvariable": ["tensorflow.python.ops.array_ops.stack", "tensorflow.python.ops.variables.Variable", "tensorflow.python.framework.ops.control_dependencies"], "tensorflow.python.ops.array_ops.stack": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfvariable_sequential_updates": ["tensorflow.python.ops.control_flow_ops.no_op", "six.moves.range", "tensorflow.python.ops.variables.Variable", "tensorflow.python.framework.ops.control_dependencies", "tensorflow.python.ops.array_ops.identity"], "tensorflow.python.ops.control_flow_ops.no_op": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.export_debug_info": ["tensorflow.python.framework.error_interpolation.create_graph_debug_info_def"], "tensorflow.python.framework.error_interpolation.create_graph_debug_info_def": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.write_graph": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfadd_with_ckpt_saver", "six.ensure_binary", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfmatmulandadd", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.export_debug_info", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfvariable", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tftop_k", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfsplits", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfcond", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfassert_eq", "os.path.join", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfadd_with_ckpt", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfvariable_readonly", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tffunction", "<builtin>.open", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfgather", "tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfmatmul", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfvariable_sequential_updates", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.tfadd"], "tensorflow.python.framework.ops.Graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.main": ["tensorflow.python.ops.control_flow_util.enable_control_flow_v2", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.write_graph"], "tensorflow.python.ops.control_flow_util.enable_control_flow_v2": [], "argparse.ArgumentParser": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\aot\\tests\\make_test_graphs.<lambda1>": [], "absl.app.run": []}
