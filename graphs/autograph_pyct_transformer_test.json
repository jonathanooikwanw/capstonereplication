{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest._simple_context": ["tensorflow.python.autograph.pyct.transformer.EntityInfo", "tensorflow.python.autograph.pyct.transformer.Context"], "tensorflow.python.autograph.pyct.transformer.EntityInfo": [], "tensorflow.python.autograph.pyct.transformer.Context": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.assertSameAnno": ["tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.platform.test.TestCase.assertIs"], "tensorflow.python.autograph.pyct.anno.getanno": [], "tensorflow.python.platform.test.TestCase.assertIs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.assertDifferentAnno": ["tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.platform.test.TestCase.assertIsNot"], "tensorflow.python.platform.test.TestCase.assertIsNot": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest._simple_context", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.assertDifferentAnno", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking.TestTransformer.visit", "tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.autograph.pyct.transformer.Base.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.assertSameAnno"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking.TestTransformer.visit": ["<builtin>.super", "tensorflow.python.autograph.pyct.anno.setanno"], "tensorflow.python.autograph.pyct.anno.setanno": [], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking.TestTransformer.visit_While": ["tensorflow.python.autograph.pyct.transformer.Base.generic_visit"], "tensorflow.python.autograph.pyct.transformer.Base.generic_visit": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking.TestTransformer.visit_If": ["tensorflow.python.autograph.pyct.transformer.Base.generic_visit"], "tensorflow.python.autograph.pyct.transformer.Base.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking.test_function": [], "tensorflow.python.autograph.pyct.parser.parse_entity": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking_context_manager": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest._simple_context", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.assertDifferentAnno", "tensorflow.python.autograph.pyct.parser.parse_entity", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking_context_manager.TestTransformer.visit", "tensorflow.python.autograph.pyct.transformer.Base.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.assertSameAnno"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking_context_manager.TestTransformer.visit": ["<builtin>.super", "tensorflow.python.autograph.pyct.anno.setanno"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking_context_manager.TestTransformer.visit_If": ["tensorflow.python.autograph.pyct.transformer.Base.generic_visit"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_state_tracking_context_manager.test_function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_visit_block_postprocessing": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest._simple_context", "tensorflow.python.autograph.pyct.transformer.Base.visit", "tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.platform.test.TestCase.assertIsInstance", "<builtin>.len", "tensorflow.python.autograph.pyct.transformer.Base.__init__", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_visit_block_postprocessing.TestTransformer._process_body_item": ["<builtin>.isinstance", "gast.If", "gast.Load", "gast.Name"], "<builtin>.isinstance": [], "gast.Load": [], "gast.Name": [], "gast.If": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_visit_block_postprocessing.TestTransformer.visit_FunctionDef": ["tensorflow.python.autograph.pyct.transformer.Base.visit_block"], "tensorflow.python.autograph.pyct.transformer.Base.visit_block": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_visit_block_postprocessing.test_function": [], "tensorflow.python.autograph.pyct.transformer.Base.visit": [], "<builtin>.len": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "tensorflow.python.platform.test.TestCase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_robust_error_on_list_visit": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest._simple_context", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.autograph.pyct.transformer.Base.visit", "<builtin>.str", "tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.platform.test.TestCase.assertRegex", "tensorflow.python.autograph.pyct.transformer.Base.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_robust_error_on_list_visit.BrokenTransformer.visit_If": ["tensorflow.python.autograph.pyct.transformer.Base.visit"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_robust_error_on_list_visit.test_function": [], "tensorflow.python.platform.test.TestCase.assertRaises": [], "<builtin>.str": [], "tensorflow.python.platform.test.TestCase.assertRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_robust_error_on_ast_corruption": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest._simple_context", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.autograph.pyct.transformer.Base.visit", "<builtin>.str", "tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.autograph.pyct.transformer.Base.__init__", "tensorflow.python.platform.test.TestCase.assertIn"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_robust_error_on_ast_corruption.BrokenTransformer.visit_If": ["<builtin>.ValueError"], "<builtin>.ValueError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_robust_error_on_ast_corruption.test_function": [], "tensorflow.python.platform.test.TestCase.assertIn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_origin_info_propagated_to_new_nodes": ["tensorflow.python.autograph.pyct.origin_info.resolve", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest._simple_context", "tensorflow.python.autograph.pyct.transformer.Base.visit", "tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.autograph.pyct.transformer.Base.__init__", "tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_origin_info_propagated_to_new_nodes.TestTransformer.visit_If": ["gast.Pass"], "gast.Pass": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_origin_info_propagated_to_new_nodes.test_fn": [], "tensorflow.python.autograph.pyct.origin_info.resolve": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_origin_info_preserved_in_moved_nodes": ["tensorflow.python.autograph.pyct.origin_info.resolve", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest._simple_context", "tensorflow.python.autograph.pyct.transformer.Base.visit", "tensorflow.python.autograph.pyct.parser.parse_entity", "tensorflow.python.autograph.pyct.transformer.Base.__init__", "tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_origin_info_preserved_in_moved_nodes.TestTransformer.visit_If": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.TransformerTest.test_origin_info_preserved_in_moved_nodes.test_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.CodeGeneratorTest._simple_context": ["tensorflow.python.autograph.pyct.transformer.EntityInfo", "tensorflow.python.autograph.pyct.transformer.Context"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.CodeGeneratorTest.test_basic_codegen": ["tensorflow.python.autograph.pyct.origin_info.resolve", "tensorflow.python.autograph.pyct.transformer.CodeGenerator.visit", "re.compile", "tensorflow.python.autograph.pyct.parser.parse_entity", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.CodeGeneratorTest._simple_context", "tensorflow.python.platform.test.TestCase.assertRegex", "tensorflow.python.autograph.pyct.transformer.CodeGenerator.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.CodeGeneratorTest.test_basic_codegen.TestCodegen.visit_Assign": ["tensorflow.python.autograph.pyct.parser.unparse", "tensorflow.python.autograph.pyct.transformer.CodeGenerator.emit"], "tensorflow.python.autograph.pyct.parser.unparse": [], "tensorflow.python.autograph.pyct.transformer.CodeGenerator.emit": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.CodeGeneratorTest.test_basic_codegen.TestCodegen.visit_Return": ["tensorflow.python.autograph.pyct.parser.unparse", "tensorflow.python.autograph.pyct.transformer.CodeGenerator.emit"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.CodeGeneratorTest.test_basic_codegen.TestCodegen.visit_If": ["tensorflow.python.autograph.pyct.transformer.CodeGenerator.visit_block", "tensorflow.python.autograph.pyct.parser.unparse", "tensorflow.python.autograph.pyct.transformer.CodeGenerator.emit"], "tensorflow.python.autograph.pyct.transformer.CodeGenerator.visit_block": [], "tensorflow.python.autograph.pyct.transformer.CodeGenerator.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\transformer_test.CodeGeneratorTest.test_basic_codegen.test_fn": [], "tensorflow.python.autograph.pyct.transformer.CodeGenerator.visit": [], "re.compile": [], "tensorflow.python.platform.test.main": []}
