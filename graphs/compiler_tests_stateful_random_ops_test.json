{"Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test": ["tensorflow.python.framework.config.set_soft_device_placement", "tensorflow.python.platform.test.main", "tensorflow.python.framework.ops.enable_eager_execution"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device": ["tensorflow.python.client.device_lib.list_local_devices", "<builtin>.ValueError", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device.find_type"], "tensorflow.python.client.device_lib.list_local_devices": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device.find_type": [], "<builtin>.ValueError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device", "<builtin>.str"], "<builtin>.str": [], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest": ["tensorflow.python.framework.test_util.disable_mlir_bridge", "<builtin>.list", "itertools.product", "absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testSimple": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "tensorflow.python.framework.ops.device"], "tensorflow.python.framework.ops.device": [], "tensorflow.python.ops.stateful_random_ops.Generator.from_seed": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testDefun": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testDefun.f", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testDefun.f": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest._compareToKnownOutputs": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest._compareToKnownOutputs.uint32s_to_uint64s", "<builtin>.len", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest._compareToKnownOutputs.uint32s_to_uint64": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest._compareToKnownOutputs.uint32s_to_uint64s": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest._compareToKnownOutputs.uint32s_to_uint64", "<builtin>.range", "<builtin>.len"], "<builtin>.len": [], "<builtin>.range": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testThreefry2x32": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest._compareToKnownOutputs", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testPhilox4x32": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest._compareToKnownOutputs", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testXLAEqualsCPU": ["tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "<builtin>.range", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testXLAEqualsCPUAroundCounterOverflow": ["tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllEqual", "<builtin>.range", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest._testRngIsNotConstant": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testNormalIsNotConstant.rng", "tensorflow.compiler.tests.xla_test.XLATestCase.assertFalse", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testUniformIsNotConstant.rng", "numpy.array_equal"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testNormalIsNotConstant.rng": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testUniformIsNotConstant.rng": [], "numpy.array_equal": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.check_dtype": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device", "tensorflow.compiler.tests.xla_test.XLATestCase.skipTest"], "tensorflow.compiler.tests.xla_test.XLATestCase.skipTest": [], "itertools.product": [], "<builtin>.list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testUniformIsNotConstant": ["tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.check_dtype", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest._testRngIsNotConstant", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testNormalIsNotConstant": ["tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.check_dtype", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest._testRngIsNotConstant", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testUniformIsInRange": ["numpy.all", "tensorflow.compiler.tests.xla_test.XLATestCase.assertTrue", "tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.check_dtype", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.python.framework.ops.device"], "numpy.all": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testNormalIsFinite": ["numpy.all", "tensorflow.compiler.tests.xla_test.XLATestCase.assertTrue", "tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.check_dtype", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.python.framework.ops.device", "numpy.isfinite"], "numpy.isfinite": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testDistributionOfUniform": ["tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.check_dtype", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.compiler.tests.xla_test.XLATestCase.assertLess", "tensorflow.python.kernel_tests.random.util.chi_squared", "tensorflow.python.framework.ops.device"], "tensorflow.python.kernel_tests.random.util.chi_squared": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertLess": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testDistributionOfNormal": ["tensorflow.python.kernel_tests.random.util.anderson_darling", "tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.check_dtype", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.compiler.tests.xla_test.XLATestCase.assertLess", "tensorflow.python.framework.ops.device"], "tensorflow.python.kernel_tests.random.util.anderson_darling": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testTruncatedNormal": ["tensorflow.python.kernel_tests.random.util.test_truncated_normal", "tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.check_dtype", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.python.framework.ops.device"], "tensorflow.python.kernel_tests.random.util.test_truncated_normal": [], "tensorflow.python.framework.test_util.disable_mlir_bridge": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.StatefulRandomOpsTest.testErrors": ["tensorflow.python.ops.stateful_random_ops.Generator.from_seed", "tensorflow.python.ops.gen_stateful_random_ops.stateful_standard_normal_v2", "tensorflow.compiler.tests.xla_test.XLATestCase.assertRaisesWithPredicateMatch", "tensorflow.python.ops.variables.Variable", "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\stateful_random_ops_test.xla_device_name", "tensorflow.python.framework.ops.device"], "tensorflow.compiler.tests.xla_test.XLATestCase.assertRaisesWithPredicateMatch": [], "tensorflow.python.ops.gen_stateful_random_ops.stateful_standard_normal_v2": [], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.framework.ops.enable_eager_execution": [], "tensorflow.python.framework.config.set_soft_device_placement": [], "tensorflow.python.platform.test.main": []}
