{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test._run_layernorm_correctness_test": ["tensorflow.python.keras.testing_utils.should_run_eagerly", "numpy.random.normal", "tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.layers.normalization.layer_normalization.LayerNormalization", "tensorflow.python.keras.backend.eval", "tensorflow.python.keras.layers.Lambda", "tensorflow.python.training.gradient_descent.GradientDescentOptimizer", "numpy.testing.assert_allclose"], "tensorflow.python.keras.models.Sequential": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test._run_layernorm_correctness_test.<lambda1>": ["tensorflow.python.ops.math_ops.cast"], "tensorflow.python.ops.math_ops.cast": [], "tensorflow.python.keras.layers.Lambda": [], "tensorflow.python.keras.layers.normalization.layer_normalization.LayerNormalization": [], "tensorflow.python.training.gradient_descent.GradientDescentOptimizer": [], "tensorflow.python.keras.testing_utils.should_run_eagerly": [], "numpy.random.normal": [], "tensorflow.python.keras.backend.eval": [], "numpy.testing.assert_allclose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest": ["tensorflow.python.keras.keras_parameterized.run_all_keras_modes", "tensorflow.python.keras.combinations.generate", "tensorflow.python.keras.combinations.combine"], "tensorflow.python.keras.keras_parameterized.run_all_keras_modes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.test_basic_layernorm": ["tensorflow.python.keras.regularizers.l2", "tensorflow.python.keras.testing_utils.layer_test"], "tensorflow.python.keras.regularizers.l2": [], "tensorflow.python.keras.testing_utils.layer_test": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.test_non_fused_layernorm": ["tensorflow.python.keras.testing_utils.layer_test"], "tensorflow.python.keras.combinations.combine": [], "tensorflow.python.keras.combinations.generate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.test_layernorm_weights": ["<builtin>.len", "tensorflow.python.keras.layers.LayerNormalization", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual"], "tensorflow.python.keras.layers.LayerNormalization": [], "<builtin>.len": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.test_layernorm_regularization": ["<builtin>.len", "tensorflow.python.keras.layers.LayerNormalization", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.test_layernorm_convnet_channel_last": ["tensorflow.python.keras.testing_utils.should_run_eagerly", "numpy.testing.assert_allclose", "numpy.std", "numpy.random.normal", "tensorflow.python.keras.models.Sequential", "tensorflow.python.keras.backend.eval", "numpy.mean", "tensorflow.python.training.gradient_descent.GradientDescentOptimizer", "tensorflow.python.keras.layers.LayerNormalization", "numpy.reshape"], "numpy.reshape": [], "numpy.mean": [], "numpy.std": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.test_layernorm_correctness": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test._run_layernorm_correctness_test"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.test_layernorm_mixed_precision": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test._run_layernorm_correctness_test"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.testIncorrectAxisType": ["tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex", "tensorflow.python.keras.layers.normalization.layer_normalization.LayerNormalization"], "tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.testInvalidAxis": ["tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex", "tensorflow.python.keras.layers.normalization.layer_normalization.LayerNormalization"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.testDuplicateAxis": ["tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex", "tensorflow.python.keras.layers.normalization.layer_normalization.LayerNormalization"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationTest.testFusedAttr": ["tensorflow.python.keras.layers.normalization.layer_normalization.LayerNormalization", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationNumericsTest._expected_layer_norm": ["numpy.var", "<builtin>.range", "<builtin>.len", "numpy.sqrt", "numpy.mean", "numpy.reshape"], "<builtin>.range": [], "numpy.var": [], "numpy.sqrt": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationNumericsTest._test_forward_pass": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationNumericsTest._expected_layer_norm", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose", "numpy.random.normal", "tensorflow.python.keras.layers.normalization.layer_normalization.LayerNormalization", "tensorflow.python.keras.backend.eval", "numpy.arange", "tensorflow.python.keras.initializers.constant", "tensorflow.python.keras.backend.cast"], "numpy.arange": [], "tensorflow.python.keras.initializers.constant": [], "tensorflow.python.keras.backend.cast": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationNumericsTest": ["tensorflow.python.keras.combinations.generate", "tensorflow.python.keras.combinations.combine", "tensorflow.python.keras.testing_utils.run_v2_only"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationNumericsTest.test_forward": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationNumericsTest._test_forward_pass"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationNumericsTest._test_backward_pass": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose", "tensorflow.python.ops.gradient_checker_v2.compute_gradient", "numpy.random.normal", "tensorflow.python.keras.layers.normalization.layer_normalization.LayerNormalization", "numpy.arange", "tensorflow.python.keras.initializers.constant", "tensorflow.python.keras.backend.cast"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationNumericsTest._test_backward_pass.forward_fn": ["tensorflow.python.platform.test.mock.patch.object"], "tensorflow.python.platform.test.mock.patch.object": [], "tensorflow.python.ops.gradient_checker_v2.compute_gradient": [], "tensorflow.python.keras.testing_utils.run_v2_only": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationNumericsTest.test_backward": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\normalization\\layer_normalization_test.LayerNormalizationNumericsTest._test_backward_pass"], "tensorflow.python.platform.test.main": []}
