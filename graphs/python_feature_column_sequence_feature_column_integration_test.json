{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test.SequenceExampleParsingTest.test_seq_ex_in_sequence_categorical_column_with_identity": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test.SequenceExampleParsingTest._test_parsed_sequence_example"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test.SequenceExampleParsingTest._test_parsed_sequence_example": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_list", "tensorflow.python.ops.parsing_ops.parse_single_sequence_example", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_file", "<builtin>.list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test._make_sequence_example", "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test.SequenceExampleParsingTest.test_seq_ex_in_sequence_categorical_column_with_hash_bucket": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test.SequenceExampleParsingTest._test_parsed_sequence_example", "tensorflow.python.util.compat.as_bytes"], "tensorflow.python.util.compat.as_bytes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test.SequenceExampleParsingTest.test_seq_ex_in_sequence_categorical_column_with_vocabulary_list": ["<builtin>.list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test.SequenceExampleParsingTest._test_parsed_sequence_example", "tensorflow.python.util.compat.as_bytes"], "<builtin>.list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test.SequenceExampleParsingTest.test_seq_ex_in_sequence_categorical_column_with_vocabulary_file": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test.SequenceExampleParsingTest._test_parsed_sequence_example", "tempfile.mkstemp", "tensorflow.python.util.compat.as_bytes", "<builtin>.open"], "tempfile.mkstemp": [], "<builtin>.open": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\sequence_feature_column_integration_test._make_sequence_example": ["google.protobuf.text_format.Parse", "tensorflow.core.example.example_pb2.SequenceExample"], "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity": [], "tensorflow.python.feature_column.feature_column_v2.numeric_column": [], "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_file": [], "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity": [], "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_hash_bucket": [], "tensorflow.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_list": [], "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2": [], "tensorflow.python.ops.parsing_ops.parse_single_sequence_example": [], "tensorflow.python.platform.test.TestCase.cached_session": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "tensorflow.python.platform.test.TestCase.assertAlmostEqual": [], "tensorflow.core.example.example_pb2.SequenceExample": [], "google.protobuf.text_format.Parse": [], "tensorflow.python.platform.test.main": []}
