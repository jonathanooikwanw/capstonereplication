{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_dense_input_sparse_output": ["tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.keras.Input": [], "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding": [], "tensorflow.python.keras.Model": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual": [], "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_sparse_input": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.ops.sparse_ops.from_dense", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "numpy.array": [], "tensorflow.python.ops.sparse_ops.from_dense": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_sparse_input_with_weights": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.ops.sparse_ops.from_dense", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose"], "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_sparse_input_sparse_output": ["tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.Model", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "tensorflow.python.framework.sparse_tensor.SparseTensor": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_sparse_input_sparse_output_with_weights": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.Model", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_ragged_input": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.Model", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "tensorflow.python.ops.ragged.ragged_factory_ops.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_ragged_input_sparse_output": ["tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.Model", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_sparse_output_and_dense_layer": ["tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.layers.Dense", "tensorflow.python.keras.Input", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.keras.layers.Dense": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_dense_oov_input": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex", "tensorflow.python.keras.Input", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_dense_negative": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex", "tensorflow.python.keras.Input", "tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingInputTest.test_legacy_max_tokens_arg": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingOutputTest.test_one_hot_output": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingOutputTest.test_one_hot_output_rank_one_input": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingOutputTest.test_one_hot_output_rank_zero_input": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingOutputTest.test_one_hot_rank_3_output_fails": ["tensorflow.python.keras.Input", "numpy.array", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingOutputTest.test_multi_hot_output": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingOutputTest.test_multi_hot_output_rank_one_input": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingOutputTest.test_multi_hot_output_rank_zero_input": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingOutputTest.test_multi_hot_rank_3_output_fails": ["tensorflow.python.keras.Input", "numpy.array", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.keras_parameterized.TestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingOutputTest.test_count_output": ["tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input"], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingModelBuildingTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\preprocessing\\category_encoding_test.CategoryEncodingModelBuildingTest.test_end_to_end_bagged_modeling": ["numpy.array", "tensorflow.python.keras.Model", "tensorflow.python.keras.backend.cast", "tensorflow.python.keras.layers.preprocessing.category_encoding.CategoryEncoding", "tensorflow.python.keras.Input", "tensorflow.python.keras.layers.core.Dense"], "tensorflow.python.keras.backend.cast": [], "tensorflow.python.keras.layers.core.Dense": [], "tensorflow.python.platform.test.main": []}
