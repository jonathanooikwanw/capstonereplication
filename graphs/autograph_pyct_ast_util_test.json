{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.assertAstMatches": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.autograph.pyct.pretty_printer.fmt", "tensorflow.python.autograph.pyct.ast_util.matches", "gast.parse"], "gast.parse": [], "tensorflow.python.autograph.pyct.pretty_printer.fmt": [], "tensorflow.python.autograph.pyct.ast_util.matches": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.setUp": ["collections.defaultdict", "<builtin>.super"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.setUp.<lambda1>": [], "collections.defaultdict": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_rename_symbols_basic": ["tensorflow.python.autograph.pyct.parser.unparse", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.assertAstMatches", "tensorflow.python.autograph.pyct.ast_util.rename_symbols", "tensorflow.python.autograph.pyct.qual_names.resolve", "tensorflow.python.platform.test.TestCase.assertIsInstance", "tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.autograph.pyct.qual_names.QN"], "tensorflow.python.autograph.pyct.parser.parse": [], "tensorflow.python.autograph.pyct.qual_names.resolve": [], "tensorflow.python.autograph.pyct.qual_names.QN": [], "tensorflow.python.autograph.pyct.ast_util.rename_symbols": [], "tensorflow.python.autograph.pyct.parser.unparse": [], "tensorflow.python.platform.test.TestCase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_rename_symbols_attributes": ["tensorflow.python.autograph.pyct.parser.unparse", "tensorflow.python.autograph.pyct.ast_util.rename_symbols", "tensorflow.python.autograph.pyct.qual_names.resolve", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.autograph.pyct.qual_names.from_str", "tensorflow.python.autograph.pyct.qual_names.QN"], "tensorflow.python.autograph.pyct.qual_names.from_str": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_rename_symbols_nonlocal": ["tensorflow.python.autograph.pyct.parser.unparse", "tensorflow.python.autograph.pyct.ast_util.rename_symbols", "tensorflow.python.autograph.pyct.qual_names.resolve", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.autograph.pyct.qual_names.from_str", "tensorflow.python.autograph.pyct.qual_names.QN"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_rename_symbols_global": ["tensorflow.python.autograph.pyct.parser.unparse", "tensorflow.python.autograph.pyct.ast_util.rename_symbols", "tensorflow.python.autograph.pyct.qual_names.resolve", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.autograph.pyct.qual_names.from_str", "tensorflow.python.autograph.pyct.qual_names.QN"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_rename_symbols_annotations": ["tensorflow.python.autograph.pyct.ast_util.rename_symbols", "tensorflow.python.autograph.pyct.qual_names.resolve", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.autograph.pyct.anno.setanno", "tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.autograph.pyct.anno.getanno", "tensorflow.python.autograph.pyct.qual_names.QN"], "tensorflow.python.autograph.pyct.anno.setanno": [], "tensorflow.python.autograph.pyct.anno.getanno": [], "tensorflow.python.platform.test.TestCase.assertIs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_rename_symbols_function": ["tensorflow.python.autograph.pyct.parser.unparse", "tensorflow.python.autograph.pyct.ast_util.rename_symbols", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.autograph.pyct.qual_names.QN"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_copy_clean": ["tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.assertIsNot", "tensorflow.python.autograph.pyct.ast_util.copy_clean", "<builtin>.setattr", "tensorflow.python.autograph.pyct.parser.parse", "<builtin>.hasattr", "textwrap.dedent"], "textwrap.dedent": [], "<builtin>.setattr": [], "tensorflow.python.autograph.pyct.ast_util.copy_clean": [], "tensorflow.python.platform.test.TestCase.assertIsNot": [], "<builtin>.hasattr": [], "tensorflow.python.platform.test.TestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_copy_clean_preserves_annotations": ["tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.autograph.pyct.anno.hasanno", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.autograph.pyct.ast_util.copy_clean", "tensorflow.python.autograph.pyct.anno.setanno", "tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.autograph.pyct.anno.getanno", "textwrap.dedent"], "tensorflow.python.autograph.pyct.anno.hasanno": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_keywords_to_dict": ["tensorflow.python.autograph.pyct.loader.load_ast", "tensorflow.python.platform.test.TestCase.assertDictEqual", "tensorflow.python.autograph.pyct.ast_util.keywords_to_dict", "tensorflow.python.autograph.pyct.parser.parse", "ast.Return", "tensorflow.python.autograph.pyct.parser.parse_expression"], "tensorflow.python.autograph.pyct.parser.parse_expression": [], "tensorflow.python.autograph.pyct.ast_util.keywords_to_dict": [], "ast.Return": [], "tensorflow.python.autograph.pyct.loader.load_ast": [], "tensorflow.python.platform.test.TestCase.assertDictEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.assertMatch": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.autograph.pyct.ast_util.matches", "tensorflow.python.autograph.pyct.parser.parse_expression"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.assertNoMatch": ["tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.autograph.pyct.ast_util.matches", "tensorflow.python.autograph.pyct.parser.parse_expression"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_matches_symbols": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.assertMatch", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.assertNoMatch"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_matches_function_args": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.assertMatch", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.assertNoMatch"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest._mock_apply_fn": ["tensorflow.python.autograph.pyct.parser.unparse"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_apply_to_single_assignments_dynamic_unpack": ["tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.platform.test.TestCase.assertDictEqual", "tensorflow.python.autograph.pyct.ast_util.apply_to_single_assignments"], "tensorflow.python.autograph.pyct.ast_util.apply_to_single_assignments": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_apply_to_single_assignments_static_unpack": ["tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.platform.test.TestCase.assertDictEqual", "tensorflow.python.autograph.pyct.ast_util.apply_to_single_assignments"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_parallel_walk": ["tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.autograph.pyct.ast_util.parallel_walk", "textwrap.dedent"], "tensorflow.python.autograph.pyct.ast_util.parallel_walk": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_parallel_walk_string_leaves": ["tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.autograph.pyct.ast_util.parallel_walk", "textwrap.dedent"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.test_parallel_walk_inconsistent_trees": ["tensorflow.python.autograph.pyct.parser.parse", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.autograph.pyct.ast_util.parallel_walk", "textwrap.dedent"], "tensorflow.python.platform.test.TestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\autograph\\pyct\\ast_util_test.AstUtilTest.assertLambdaNodes": ["tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.len", "tensorflow.python.platform.test.TestCase.assertIsInstance", "tensorflow.python.autograph.pyct.parser.unparse", "tensorflow.python.platform.test.TestCase.assertIn"], "<builtin>.len": [], "tensorflow.python.platform.test.TestCase.assertIn": [], "tensorflow.python.platform.test.main": []}
