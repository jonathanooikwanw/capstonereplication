{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test": ["tensorflow.python.platform.test.main"], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.MultiHeadAttentionTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.MultiHeadAttentionTest.test_non_masked_attention": ["tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention", "tensorflow.python.keras.Input"], "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention": [], "tensorflow.python.keras.Input": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.MultiHeadAttentionTest.test_non_masked_self_attention": ["tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.MultiHeadAttentionTest.test_attention_scores": ["tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.MultiHeadAttentionTest.test_attention_scores_with_values": ["tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention", "tensorflow.python.keras.Input"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.MultiHeadAttentionTest.test_masked_attention": ["tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention", "tensorflow.python.keras.Model", "tensorflow.python.keras.Input", "numpy.ones", "numpy.random.randint", "tensorflow.python.keras.keras_parameterized.TestCase.assertLen", "numpy.random.random_sample", "tensorflow.python.keras.keras_parameterized.TestCase.assertNotAllClose"], "tensorflow.python.keras.Model": [], "numpy.random.random_sample": [], "numpy.random.randint": [], "numpy.ones": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertNotAllClose": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertLen": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.MultiHeadAttentionTest.test_initializer": ["tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.initializers.TruncatedNormal", "tensorflow.python.keras.Input"], "tensorflow.python.keras.initializers.TruncatedNormal": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.MultiHeadAttentionTest.test_masked_attention_with_scores": ["tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention", "tensorflow.python.keras.Model", "tensorflow.python.keras.Input", "numpy.ones", "numpy.random.randint", "numpy.random.random_sample", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose", "tensorflow.python.keras.keras_parameterized.TestCase.assertNotAllClose"], "tensorflow.python.keras.keras_parameterized.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.MultiHeadAttentionTest.test_high_dim_attention": ["tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention", "tensorflow.python.keras.Input", "tensorflow.python.keras.Model", "numpy.ones", "numpy.random.randint", "numpy.random.random_sample", "tensorflow.python.keras.keras_parameterized.TestCase.assertNotAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.MultiHeadAttentionTest.test_dropout": ["tensorflow.python.keras.backend.ones", "tensorflow.python.keras.keras_parameterized.TestCase.assertNotAllClose", "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention", "tensorflow.python.keras.backend.eval"], "tensorflow.python.keras.backend.ones": [], "tensorflow.python.keras.backend.eval": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.SubclassAttention._build_attention": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.SubclassAttention._compute_attention": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.AttentionSubclassTest.test_initializer": ["tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention.__init__", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual", "tensorflow.python.keras.Input"], "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.TestModel.__init__": ["<builtin>.super", "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.TestModel.from_config": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.TestModel.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.TestModel.get_config": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.TestModel.call": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.KerasModelSavingTest.test_keras_saving_subclass": ["tensorflow.python.keras.keras_parameterized.TestCase.get_temp_dir", "tensorflow.python.keras.Input", "<builtin>.len", "tensorflow.python.keras.models.save_model", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.TestModel.__init__", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.models.load_model", "<builtin>.zip", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual"], "tensorflow.python.keras.keras_parameterized.TestCase.get_temp_dir": [], "tensorflow.python.keras.models.save_model": [], "tensorflow.python.keras.models.load_model": [], "<builtin>.len": [], "<builtin>.zip": [], "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual": [], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.KerasModelSavingTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.KerasModelSavingTest.test_keras_saving_functional": ["tensorflow.python.keras.keras_parameterized.TestCase.get_temp_dir", "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention", "tensorflow.python.keras.Input", "tensorflow.python.keras.Model", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.TestModel.__init__", "tensorflow.python.keras.models.save_model", "<builtin>.len", "tensorflow.python.keras.keras_parameterized.TestCase.assertAllEqual", "tensorflow.python.keras.models.load_model", "<builtin>.zip", "tensorflow.python.keras.keras_parameterized.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\layers\\multi_head_attention_test.KerasModelSavingTest.test_create_without_build": ["tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention.from_config", "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention"], "tensorflow.python.keras.layers.multi_head_attention.MultiHeadAttention.from_config": [], "tensorflow.python.platform.test.main": []}
