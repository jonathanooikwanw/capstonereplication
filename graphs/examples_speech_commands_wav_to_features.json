{"Desktop\\Work\\tensorflow-master\\tensorflow\\examples\\speech_commands\\wav_to_features": ["argparse.ArgumentParser", "tensorflow.compat.v1.app.run"], "Desktop\\Work\\tensorflow-master\\tensorflow\\examples\\speech_commands\\wav_to_features.wav_to_features": ["tensorflow.python.platform.gfile.GFile", "tensorflow.compat.v1.InteractiveSession", "models.prepare_model_settings", "<builtin>.round", "<builtin>.int", "input_data.AudioProcessor.get_features_for_wav", "input_data.get_features_range", "input_data.AudioProcessor.__init__"], "tensorflow.compat.v1.InteractiveSession": [], "models.prepare_model_settings": ["math.ceil", "models._next_power_of_two", "<builtin>.int", "math.floor", "<builtin>.ValueError"], "input_data.AudioProcessor.__init__": ["input_data.AudioProcessor.prepare_background_data", "input_data.AudioProcessor.prepare_processing_graph", "input_data.AudioProcessor.prepare_data_index", "input_data.AudioProcessor.maybe_download_and_extract_dataset"], "input_data.AudioProcessor.get_features_for_wav": ["numpy.zeros"], "tensorflow.python.platform.gfile.GFile": [], "input_data.get_features_range": ["<builtin>.Exception"], "<builtin>.round": [], "<builtin>.int": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\examples\\speech_commands\\wav_to_features.main": ["tensorflow.compat.v1.logging.set_verbosity", "tensorflow.compat.v1.logging.info", "Desktop\\Work\\tensorflow-master\\tensorflow\\examples\\speech_commands\\wav_to_features.wav_to_features"], "tensorflow.compat.v1.logging.set_verbosity": [], "tensorflow.compat.v1.logging.info": [], "argparse.ArgumentParser": [], "tensorflow.compat.v1.app.run": [], "models": [], "models._next_power_of_two": ["<builtin>.int"], "math.floor": [], "math.ceil": [], "<builtin>.ValueError": [], "models.create_model": ["models.create_single_fc_model", "<builtin>.Exception", "models.create_tiny_embedding_conv_model", "models.create_conv_model", "models.create_tiny_conv_model", "models.create_low_latency_svdf_model", "models.create_low_latency_conv_model"], "models.create_single_fc_model": ["tensorflow.matmul", "tensorflow.compat.v1.get_variable", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.compat.v1.placeholder"], "models.create_conv_model": ["tensorflow.compat.v1.get_variable", "tensorflow.matmul", "tensorflow.nn.conv2d", "tensorflow.reshape", "tensorflow.compat.v1.truncated_normal_initializer", "<builtin>.int", "tensorflow.nn.max_pool2d", "tensorflow.nn.dropout", "tensorflow.compat.v1.placeholder", "tensorflow.nn.relu"], "models.create_low_latency_conv_model": ["tensorflow.compat.v1.get_variable", "tensorflow.matmul", "tensorflow.nn.conv2d", "tensorflow.reshape", "tensorflow.compat.v1.truncated_normal_initializer", "<builtin>.int", "tensorflow.nn.dropout", "math.floor", "tensorflow.compat.v1.placeholder", "tensorflow.nn.relu"], "models.create_low_latency_svdf_model": ["<builtin>.len", "tensorflow.concat", "tensorflow.expand_dims", "tensorflow.transpose", "<builtin>.int", "tensorflow.compat.v1.placeholder", "tensorflow.nn.relu", "tensorflow.equal", "tensorflow.compat.v1.get_variable", "tensorflow.matmul", "tensorflow.compat.v1.assign", "tensorflow.nn.conv1d", "tensorflow.cond", "tensorflow.reshape", "tensorflow.compat.v1.truncated_normal_initializer", "tensorflow.nn.bias_add", "tensorflow.reduce_sum", "tensorflow.nn.dropout", "<builtin>.ValueError"], "models.create_tiny_conv_model": ["tensorflow.compat.v1.get_variable", "tensorflow.matmul", "tensorflow.nn.conv2d", "tensorflow.reshape", "tensorflow.compat.v1.truncated_normal_initializer", "<builtin>.int", "tensorflow.nn.dropout", "tensorflow.compat.v1.placeholder", "tensorflow.nn.relu"], "models.create_tiny_embedding_conv_model": ["tensorflow.compat.v1.get_variable", "tensorflow.matmul", "tensorflow.nn.conv2d", "tensorflow.reshape", "tensorflow.compat.v1.truncated_normal_initializer", "<builtin>.int", "tensorflow.nn.dropout", "tensorflow.compat.v1.placeholder", "tensorflow.nn.relu"], "<builtin>.Exception": [], "models.load_variables_from_checkpoint": ["tensorflow.compat.v1.train.Saver", "tensorflow.compat.v1.global_variables"], "tensorflow.compat.v1.global_variables": [], "tensorflow.compat.v1.train.Saver": [], "tensorflow.compat.v1.placeholder": [], "tensorflow.compat.v1.truncated_normal_initializer": [], "tensorflow.compat.v1.get_variable": [], "tensorflow.matmul": [], "tensorflow.reshape": [], "tensorflow.nn.conv2d": [], "tensorflow.nn.relu": [], "tensorflow.nn.dropout": [], "tensorflow.nn.max_pool2d": [], "<builtin>.len": [], "tensorflow.equal": [], "models.create_low_latency_svdf_model.<lambda1>": [], "models.create_low_latency_svdf_model.<lambda2>": ["<builtin>.int"], "tensorflow.cond": [], "tensorflow.expand_dims": [], "tensorflow.nn.conv1d": [], "tensorflow.transpose": [], "tensorflow.concat": [], "tensorflow.compat.v1.assign": [], "tensorflow.reduce_sum": [], "tensorflow.nn.bias_add": [], "input_data": ["tensorflow.compat.v1.disable_eager_execution"], "tensorflow.compat.v1.disable_eager_execution": [], "input_data.prepare_words_list": [], "input_data.which_set": ["re.sub", "hashlib.sha1", "tensorflow.python.util.compat.as_bytes", "<builtin>.int"], "re.sub": [], "tensorflow.python.util.compat.as_bytes": [], "hashlib.sha1": [], "input_data.load_wav_file": ["tensorflow.Graph", "tensorflow.python.ops.io_ops.read_file", "tensorflow.audio.decode_wav", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.placeholder"], "tensorflow.Graph": [], "tensorflow.compat.v1.Session": [], "tensorflow.python.ops.io_ops.read_file": [], "tensorflow.audio.decode_wav": [], "input_data.save_wav_file": ["tensorflow.Graph", "tensorflow.audio.encode_wav", "tensorflow.python.ops.io_ops.write_file", "tensorflow.compat.v1.Session", "tensorflow.compat.v1.placeholder"], "tensorflow.audio.encode_wav": [], "tensorflow.python.ops.io_ops.write_file": [], "input_data.AudioProcessor.maybe_download_and_extract_dataset": ["tensorflow.compat.v1.logging.error", "tensorflow.compat.v1.logging.info", "tarfile.open", "<builtin>.print", "tensorflow.python.platform.gfile.Exists", "six.moves.urllib.request.urlretrieve"], "input_data.AudioProcessor.prepare_data_index": ["tensorflow.python.platform.gfile.Glob", "<builtin>.Exception", "math.ceil", "random.seed", "<builtin>.len", "input_data.prepare_words_list", "<builtin>.range", "<builtin>.int", "random.shuffle", "input_data.which_set", "<builtin>.enumerate"], "input_data.AudioProcessor.prepare_background_data": ["tensorflow.python.platform.gfile.Glob", "<builtin>.Exception", "tensorflow.Graph", "tensorflow.python.ops.io_ops.read_file", "tensorflow.audio.decode_wav", "tensorflow.compat.v1.Session", "tensorflow.python.platform.gfile.Exists", "tensorflow.compat.v1.placeholder"], "input_data.AudioProcessor.prepare_processing_graph": ["tensorflow.cast", "<builtin>.Exception", "tensorflow.audio.decode_wav", "tensorflow.compat.v1.summary.merge_all", "tensorflow.add", "tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op.audio_microfrontend", "tensorflow.python.ops.gen_audio_ops.mfcc", "tensorflow.expand_dims", "tensorflow.nn.pool", "tensorflow.clip_by_value", "tensorflow.compat.v1.summary.FileWriter", "tensorflow.compat.v1.placeholder", "tensorflow.python.ops.gen_audio_ops.audio_spectrogram", "tensorflow.compat.v1.summary.image", "tensorflow.slice", "tensorflow.multiply", "tensorflow.compat.v1.get_default_graph", "tensorflow.python.ops.io_ops.read_file", "tensorflow.pad", "<builtin>.ValueError"], "tensorflow.python.platform.gfile.Exists": [], "input_data.AudioProcessor.maybe_download_and_extract_dataset._progress": ["<builtin>.float", "sys.stdout.flush", "sys.stdout.write"], "<builtin>.float": [], "sys.stdout.write": [], "sys.stdout.flush": [], "six.moves.urllib.request.urlretrieve": [], "tensorflow.compat.v1.logging.error": [], "<builtin>.print": [], "tarfile.open": [], "random.seed": [], "<builtin>.enumerate": [], "tensorflow.python.platform.gfile.Glob": [], "<builtin>.range": [], "random.shuffle": [], "tensorflow.compat.v1.get_default_graph": [], "tensorflow.multiply": [], "tensorflow.pad": [], "tensorflow.slice": [], "tensorflow.add": [], "tensorflow.clip_by_value": [], "tensorflow.python.ops.gen_audio_ops.audio_spectrogram": [], "tensorflow.compat.v1.summary.image": [], "tensorflow.nn.pool": [], "tensorflow.python.ops.gen_audio_ops.mfcc": [], "tensorflow.cast": [], "tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op.audio_microfrontend": [], "tensorflow.compat.v1.summary.merge_all": [], "tensorflow.compat.v1.summary.FileWriter": [], "input_data.AudioProcessor.set_size": ["<builtin>.len"], "input_data.AudioProcessor.get_data": ["numpy.random.randint", "<builtin>.min", "<builtin>.ValueError", "<builtin>.len", "<builtin>.max", "six.moves.xrange", "numpy.random.uniform", "numpy.zeros"], "<builtin>.min": [], "<builtin>.max": [], "numpy.zeros": [], "six.moves.xrange": [], "numpy.random.randint": [], "numpy.random.uniform": [], "input_data.AudioProcessor.get_unprocessed_data": ["numpy.random.randint", "tensorflow.Graph", "<builtin>.len", "tensorflow.python.ops.io_ops.read_file", "tensorflow.audio.decode_wav", "<builtin>.range", "tensorflow.compat.v1.Session", "tensorflow.multiply", "tensorflow.compat.v1.placeholder", "numpy.zeros"]}
