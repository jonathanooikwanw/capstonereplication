{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.doTestBasic": ["tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.ops.variables.Variable", "tensorflow.python.keras.optimizer_v2.adadelta.Adadelta", "numpy.sqrt", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.array", "<builtin>.zip", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.range"], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.framework.constant_op.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.doTestBasic.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.doTestBasic.<lambda2>": [], "tensorflow.python.keras.optimizer_v2.adadelta.Adadelta": [], "tensorflow.python.eager.context.executing_eagerly": [], "<builtin>.zip": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "tensorflow.python.platform.test.TestCase.assertAllClose": [], "<builtin>.range": [], "numpy.sqrt": [], "numpy.array": [], "tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType": [], "tensorflow.python.keras.combinations.combine": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest": ["tensorflow.python.keras.combinations.generate", "tensorflow.python.keras.combinations.combine"], "tensorflow.python.keras.combinations.generate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.testResourceBasic": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.doTestBasic"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.testBasicCallableParams": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.doTestBasic"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.testMinimizeSparseResourceVariable": ["tensorflow.python.platform.test.TestCase.assertAllCloseAccordingToType", "tensorflow.python.ops.variables.Variable", "tensorflow.python.keras.optimizer_v2.adadelta.Adadelta", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph"], "tensorflow.python.framework.ops.Graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.testMinimizeSparseResourceVariable.loss": ["tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.embedding_ops.embedding_lookup"], "tensorflow.python.ops.embedding_ops.embedding_lookup": [], "tensorflow.python.ops.math_ops.matmul": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.testConstructAdadeltaWithLR": ["tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.optimizer_v2.adadelta.Adadelta", "tensorflow.python.platform.test.TestCase.assertIsInstance", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.variables.global_variables_initializer"], "tensorflow.python.platform.test.TestCase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\optimizer_v2\\adadelta_test.AdadeltaOptimizerTest.testConstructAdadeltaWithEpsilonValues": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.keras.optimizer_v2.adadelta.Adadelta"], "tensorflow.python.platform.test.main": []}
