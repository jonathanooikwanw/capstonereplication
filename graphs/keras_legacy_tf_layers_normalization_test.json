{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._simple_model": ["tensorflow.python.training.gradient_descent.GradientDescentOptimizer", "tensorflow.python.framework.ops.control_dependencies", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.training.saver.Saver", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.math_ops.reduce_sum", "tensorflow.python.ops.math_ops.abs", "tensorflow.python.ops.init_ops.ones_initializer", "tensorflow.python.keras.legacy_tf_layers.convolutional.conv2d"], "tensorflow.python.ops.init_ops.ones_initializer": [], "tensorflow.python.keras.legacy_tf_layers.convolutional.conv2d": [], "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization": [], "tensorflow.python.ops.math_ops.abs": [], "tensorflow.python.ops.math_ops.reduce_sum": [], "tensorflow.python.training.gradient_descent.GradientDescentOptimizer": [], "tensorflow.python.framework.ops.get_collection": [], "tensorflow.python.framework.ops.control_dependencies": [], "tensorflow.python.training.saver.Saver": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._train": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.ops.get_default_graph", "tensorflow.python.framework.ops.reset_default_graph", "tensorflow.python.framework.ops.get_collection", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._simple_model", "numpy.random.rand", "numpy.random.seed", "tensorflow.python.platform.test.TestCase.session", "<builtin>.range"], "tensorflow.python.framework.ops.reset_default_graph": [], "tensorflow.python.framework.ops.get_default_graph": [], "tensorflow.python.platform.test.TestCase.session": [], "tensorflow.python.ops.array_ops.placeholder": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "numpy.random.seed": [], "<builtin>.range": [], "numpy.random.rand": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._infer": ["tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.ops.get_default_graph", "tensorflow.python.framework.ops.reset_default_graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._simple_model", "tensorflow.python.platform.test.TestCase.session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._trainEvalSequence": ["tensorflow.python.platform.test.TestCase.get_temp_dir", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._train", "os.path.join", "numpy.random.rand", "numpy.random.seed", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._infer"], "tensorflow.python.platform.test.TestCase.get_temp_dir": [], "os.path.join": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testHalfPrecision": ["<builtin>.len", "tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.zip", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._trainEvalSequence", "tensorflow.python.platform.test.TestCase.assertAllClose"], "<builtin>.len": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "<builtin>.zip": [], "tensorflow.python.platform.test.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpoint": ["<builtin>.len", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.get_temp_dir", "<builtin>.zip", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._train", "os.path.join", "numpy.random.rand", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._infer", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpointCrossDevice": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpoint"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCheckpointFusedCPUAndFusedGPU": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpointCrossDevice"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCheckpointFusedCPUAndFusedCPU": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpointCrossDevice"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCheckpointFusedGPUAndFusedGPU": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpointCrossDevice"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCheckpointNonFusedCPUAndNonFusedGPU": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpointCrossDevice"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCheckpointNonFusedCPUAndNonFusedCPU": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpointCrossDevice"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCheckpointNonFusedGPUAndNonFusedGPU": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpointCrossDevice"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCheckpointNonFusedGPUAndFusedGPU": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpointCrossDevice"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCheckpointNonFusedGPUAndFusedCPU": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpointCrossDevice"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCheckpointNonFusedCPUAndFusedCPU": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest._testCheckpointCrossDevice"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCreateBN": ["<builtin>.len", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization"], "tensorflow.python.ops.random_ops.random_uniform": [], "tensorflow.python.platform.test.TestCase.assertListEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testCreateFusedBNFloat16": ["<builtin>.len", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.platform.test.TestCase.assertTrue"], "tensorflow.python.platform.test.TestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.test3DInputAxis1": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.reshape", "numpy.std"], "numpy.random.random": [], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.platform.test.TestCase.cached_session": [], "numpy.reshape": [], "numpy.mean": [], "tensorflow.python.platform.test.TestCase.assertAlmostEqual": [], "numpy.std": [], "numpy.square": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.test3DInputAxis2": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.reshape", "numpy.std"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.test4DInputAxis1": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.platform.test.is_gpu_available", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "tensorflow.python.platform.test.TestCase.session", "<builtin>.range", "numpy.reshape", "numpy.std"], "tensorflow.python.platform.test.is_gpu_available": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.test4DInputAxis2": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.reshape", "numpy.std"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.test4DInputAxis3": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.reshape", "numpy.std"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.test4DInputAxis3Fused": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.reshape", "numpy.std"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.test4DInputAxis1Fused": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.platform.test.is_gpu_available", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.reshape", "numpy.std"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testNegativeAxis": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.reshape", "numpy.std"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testBooleanLearningPhase": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.reshape", "numpy.std"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testFunctionalNoReuse": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "<builtin>.dict", "tensorflow.python.keras.legacy_tf_layers.normalization.batch_norm", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.variables.global_variables", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.reshape", "numpy.std"], "tensorflow.python.keras.legacy_tf_layers.normalization.batch_norm": [], "tensorflow.python.ops.variables.global_variables": [], "<builtin>.dict": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testFunctionalReuse": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "<builtin>.dict", "tensorflow.python.keras.legacy_tf_layers.normalization.batch_norm", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.variables.global_variables", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.reshape", "numpy.std"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testFunctionalReuseFromScope": ["<builtin>.len", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.keras.legacy_tf_layers.normalization.batch_norm", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.ops.variables.global_variables", "tensorflow.python.ops.variables.Variable"], "tensorflow.python.ops.variable_scope.variable_scope": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testNoCenter": ["<builtin>.len", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testNoScale": ["<builtin>.len", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testRegularizers": ["<builtin>.len", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testRegularizers.<lambda1>": ["tensorflow.python.ops.math_ops.reduce_sum"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testConstraints": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testConstraints.<lambda1>": ["tensorflow.python.ops.math_ops.reduce_sum"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testConstraints.<lambda2>": ["tensorflow.python.ops.math_ops.reduce_max"], "tensorflow.python.ops.math_ops.reduce_max": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testRenorm": ["tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.init_ops.constant_initializer", "numpy.sqrt", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.platform.test.TestCase.session", "<builtin>.range", "tensorflow.python.platform.test.TestCase.assertAllClose"], "tensorflow.python.ops.init_ops.constant_initializer": [], "numpy.sqrt": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testRenormNoClippingSameMomentumGivesSameTestTrain": ["tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.init_ops.constant_initializer", "numpy.sqrt", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.platform.test.TestCase.session", "<builtin>.range", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testAdjustment": ["tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.init_ops.constant_initializer", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.platform.test.TestCase.session", "<builtin>.range", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testAdjustment.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testRenormWithAdjustment": ["tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.ops.init_ops.constant_initializer", "numpy.sqrt", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.platform.test.TestCase.session", "<builtin>.range", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testRenormWithAdjustment.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testGhostBNNegativeVirtualBatch": ["tensorflow.python.keras.legacy_tf_layers.normalization.batch_normalization", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertRaises"], "tensorflow.python.platform.test.TestCase.assertRaises": [], "tensorflow.python.keras.legacy_tf_layers.normalization.batch_normalization": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testGhostBNVirtualBatchFull": ["tensorflow.python.keras.legacy_tf_layers.normalization.batch_normalization", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.session", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testGhostBNInputOutputShapesMatch": ["tensorflow.python.keras.legacy_tf_layers.normalization.batch_normalization", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertListEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testGhostBNUnknownBatchSize": ["tensorflow.python.keras.legacy_tf_layers.normalization.batch_normalization", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertListEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.session"], "<builtin>.list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testGhostBN2Dims": ["tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "numpy.zeros", "numpy.ones", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.ops.init_ops.constant_initializer", "numpy.var", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.platform.test.TestCase.session", "<builtin>.range", "numpy.reshape", "tensorflow.python.platform.test.TestCase.assertAllClose"], "numpy.zeros": [], "numpy.ones": [], "numpy.var": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testGhostBN4DimsAxis3": ["tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "numpy.zeros", "numpy.ones", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.ops.init_ops.constant_initializer", "numpy.var", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.platform.test.TestCase.session", "<builtin>.range", "numpy.reshape", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testGhostBN4DimsAxis1": ["tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "numpy.zeros", "numpy.ones", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.ops.init_ops.constant_initializer", "numpy.var", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.platform.test.TestCase.session", "<builtin>.range", "numpy.reshape", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testMultiAxisInvalid": ["tensorflow.python.keras.legacy_tf_layers.normalization.batch_normalization", "tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.platform.test.TestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.test3DInputMultiAxis12": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.std"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.test5DInputMultiAxis123": ["numpy.square", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "tensorflow.python.platform.test.TestCase.assertAlmostEqual", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.platform.test.TestCase.cached_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.ops.variables.Variable", "<builtin>.range", "numpy.std"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\keras\\legacy_tf_layers\\normalization_test.BNTest.testGhostBN5DimsMultiAxis14": ["tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.random", "numpy.zeros", "numpy.ones", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.mean", "tensorflow.python.ops.init_ops.constant_initializer", "numpy.var", "tensorflow.python.keras.legacy_tf_layers.normalization.BatchNormalization", "tensorflow.python.platform.test.TestCase.session", "<builtin>.range", "numpy.reshape", "tensorflow.python.platform.test.TestCase.assertAllClose"], "tensorflow.python.platform.test.main": []}
