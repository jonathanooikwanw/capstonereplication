{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test": ["tensorflow.python.distribute.multi_process_runner.test_main", "tensorflow.python.compat.v2_compat.enable_v2_behavior"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.__init__": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.build"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.build": ["tensorflow.python.ops.random_ops.random_uniform", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.rebuild_iterators", "tensorflow.python.ops.variables.Variable"], "tensorflow.python.ops.random_ops.random_uniform": [], "tensorflow.python.ops.variables.Variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.rebuild_iterators": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.data.ops.dataset_ops.DatasetV2.from_tensors", "<builtin>.iter"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.rebuild_iterators.dataset_fn": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.data.ops.dataset_ops.DatasetV2.from_tensors"], "tensorflow.python.data.ops.dataset_ops.DatasetV2.from_tensors": [], "<builtin>.iter": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model._train_fn_internal": ["tensorflow.python.ops.math_ops.matmul", "<builtin>.next", "tensorflow.python.ops.array_ops.squeeze", "tensorflow.python.ops.random_ops.random_uniform"], "<builtin>.next": [], "tensorflow.python.ops.array_ops.squeeze": [], "tensorflow.python.ops.math_ops.matmul": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.train_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model._train_fn_internal"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.schedule_training_functions": ["<builtin>.range"], "<builtin>.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.join_training_functions": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.setUp": ["tensorflow.python.distribute.parameter_server_strategy_v2.ParameterServerStrategyV2", "tensorflow.python.distribute.cluster_resolver.SimpleClusterResolver", "tensorflow.python.distribute.multi_worker_test_base.create_multi_process_cluster", "tensorflow.python.distribute.multi_worker_test_base.pick_unused_port", "tensorflow.python.training.server_lib.ClusterSpec", "<builtin>.super", "tensorflow.python.training.coordinator.Coordinator", "tensorflow.python.distribute.coordinator.cluster_coordinator.ClusterCoordinator"], "<builtin>.super": [], "tensorflow.python.distribute.multi_worker_test_base.create_multi_process_cluster": [], "tensorflow.python.distribute.multi_worker_test_base.pick_unused_port": [], "tensorflow.python.training.server_lib.ClusterSpec": [], "tensorflow.python.distribute.cluster_resolver.SimpleClusterResolver": [], "tensorflow.python.distribute.parameter_server_strategy_v2.ParameterServerStrategyV2": [], "tensorflow.python.distribute.coordinator.cluster_coordinator.ClusterCoordinator": [], "tensorflow.python.training.coordinator.Coordinator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.tearDown": ["<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart": ["tensorflow.python.eager.context.check_alive", "time.sleep"], "time.sleep": [], "tensorflow.python.eager.context.check_alive": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart_in_thread": ["threading.Thread"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart_in_thread._restart_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart"], "threading.Thread": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._ensure_threads_closed": ["tensorflow.python.distribute.test_util.has_thread", "time.sleep", "tensorflow.python.distribute.test_util.get_running_threads", "sys.getrefcount", "gc.collect", "tensorflow.python.distribute.test_util.show_backref"], "tensorflow.python.distribute.test_util.get_running_threads": [], "tensorflow.python.distribute.test_util.has_thread": [], "sys.getrefcount": [], "tensorflow.python.distribute.test_util.show_backref": [], "gc.collect": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._create_model_and_run_indefinitely": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.__init__", "time.sleep", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.schedule_training_functions"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testClusterCoordinatorDestroyed": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._ensure_threads_closed"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionBetweenFunctions": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.join_training_functions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.schedule_training_functions"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionMidstFunction": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.schedule_training_functions", "time.sleep", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.join_training_functions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testOneWorkerPreemptionWithCancellation": ["<builtin>.range", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart", "time.sleep"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testOneWorkerPreemptionWithCancellation.normal_function": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.math_ops.reduce_mean"], "tensorflow.python.ops.math_ops.reduce_mean": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testOneWorkerPreemptionWithCancellation.error_function": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.check_ops.assert_non_positive_v2", "tensorflow.python.ops.math_ops.reduce_sum"], "tensorflow.python.ops.math_ops.reduce_sum": [], "tensorflow.python.ops.check_ops.assert_non_positive_v2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testOneWorkerPreemptionWithCancellation.long_function": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.ops.math_ops.range", "tensorflow.python.ops.math_ops.matmul"], "tensorflow.python.ops.math_ops.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testHandleDatasetCreationFailureWithDatasetFn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.schedule_training_functions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.join_training_functions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.rebuild_iterators", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart_in_thread"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testHandleDatasetCreationFailureWithDataset": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.schedule_training_functions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.join_training_functions", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.rebuild_iterators", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart_in_thread"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionErrorType": ["<builtin>.str", "time.sleep", "threading.Thread", "tensorflow.python.platform.tf_logging.info", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionErrorType.worker_train_fn": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.math_ops.reduce_mean"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionErrorType.run_fn": ["<builtin>.range", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionErrorType.worker_train_fn", "time.sleep", "tensorflow.python.framework.ops.device"], "tensorflow.python.framework.ops.device": [], "tensorflow.python.platform.tf_logging.info": [], "<builtin>.str": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionErrorTypeWithPythonFunction": ["<builtin>.str", "time.sleep", "threading.Thread", "tensorflow.python.platform.tf_logging.info", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionErrorTypeWithPythonFunction.worker_train_fn": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.math_ops.reduce_mean"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionErrorTypeWithPythonFunction.run_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionErrorTypeWithPythonFunction.worker_train_fn", "<builtin>.range", "time.sleep", "tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testPSPreemptionErrorType": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.framework.ops.device", "<builtin>.isinstance", "<builtin>.str", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._ensure_threads_closed", "time.sleep", "tensorflow.python.ops.variables.Variable", "threading.Thread", "tensorflow.python.platform.tf_logging.info", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._restart"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testPSPreemptionErrorType.worker_train_fn": ["tensorflow.python.ops.random_ops.random_uniform", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.math_ops.reduce_mean"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testPSPreemptionErrorType.run_fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testPSPreemptionErrorType.worker_train_fn", "<builtin>.range", "time.sleep", "tensorflow.python.framework.ops.device"], "<builtin>.isinstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testTwoWorkersPreempted": ["tensorflow.python.eager.context.check_alive", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._create_model_and_run_indefinitely", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.join_training_functions", "time.sleep"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerContinuousFailure": ["tensorflow.python.eager.context.check_alive", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._create_model_and_run_indefinitely", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.join_training_functions", "time.sleep"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testPSFailureWhileRecoveryFromWokerFailure": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._create_model_and_run_indefinitely", "threading.Thread", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.Model.join_training_functions", "time.sleep"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testPSFailureWhileRecoveryFromWokerFailure.kill": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testNumpyFetchedAfterWorkerFailure": ["tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testNumpyFetchedAfterWorkerFailure.worker_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testTensorGotAfterWorkerFailure": ["<builtin>.range", "time.sleep", "tensorflow.python.ops.variables.Variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testTensorGotAfterWorkerFailure.worker_fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testClusterStateNotDisrupted": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionMidstFunction", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerPreemptionErrorType", "tensorflow.python.training.coordinator.Coordinator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testJoinRaisesUnavailableErrorAtPsFailure": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._create_model_and_run_indefinitely", "time.sleep"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testScheduleRaisesUnavailableErrorAtPsFailure": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._create_model_and_run_indefinitely", "tensorflow.python.eager.def_function.function", "time.sleep"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testScheduleRaisesUnavailableErrorAtPsFailure.<lambda1>": [], "tensorflow.python.eager.def_function.function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerExecutionAfterPsFailureRaisesExpectedError": ["tensorflow.python.framework.ops.device", "tensorflow.python.distribute.coordinator.cluster_coordinator._is_ps_failure", "time.sleep", "<builtin>.range", "<builtin>.AssertionError", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerExecutionAfterPsFailureRaisesExpectedError.trivial_function", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest._create_model_and_run_indefinitely"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.BaseFaultToleranceTest.testWorkerExecutionAfterPsFailureRaisesExpectedError.trivial_function": [], "tensorflow.python.distribute.coordinator.cluster_coordinator._is_ps_failure": [], "<builtin>.AssertionError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.MultiWorkerFaultToleranceTest.setUp": ["<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\distribute\\coordinator\\fault_tolerance_test.SingleWorkerFaultToleranceTest.setUp": ["<builtin>.super"], "tensorflow.python.compat.v2_compat.enable_v2_behavior": [], "tensorflow.python.distribute.multi_process_runner.test_main": []}
