{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\grappler\\cost_analyzer_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\grappler\\cost_analyzer_test.CostAnalysisTest": ["tensorflow.python.framework.test_util.run_deprecated_v1"], "tensorflow.python.framework.test_util.run_deprecated_v1": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\grappler\\cost_analyzer_test.CostAnalysisTest.testBasicCost": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.grappler.cost_analyzer.GenerateCostReport", "tensorflow.python.ops.math_ops.add_n", "tensorflow.python.framework.ops.get_collection_ref", "tensorflow.python.framework.meta_graph.create_meta_graph_def", "<builtin>.print", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.ops.get_default_graph"], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.ops.math_ops.add_n": [], "tensorflow.python.framework.ops.get_collection_ref": [], "tensorflow.python.framework.ops.get_default_graph": [], "tensorflow.python.framework.meta_graph.create_meta_graph_def": [], "tensorflow.python.grappler.cost_analyzer.GenerateCostReport": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "<builtin>.print": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\grappler\\cost_analyzer_test.CostAnalysisTest.testVerbose": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.grappler.cost_analyzer.GenerateCostReport", "tensorflow.python.ops.math_ops.add_n", "tensorflow.python.framework.ops.get_collection_ref", "tensorflow.python.framework.meta_graph.create_meta_graph_def", "<builtin>.print", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.ops.get_default_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\grappler\\cost_analyzer_test.CostAnalysisTest.testSmallNetworkCost": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.random_ops.truncated_normal", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.nn_ops.softmax", "tensorflow.python.ops.nn_ops.conv2d", "tensorflow.python.framework.meta_graph.create_meta_graph_def", "<builtin>.int", "tensorflow.python.grappler.cost_analyzer.GenerateCostReport", "tensorflow.python.training.adam.AdamOptimizer", "tensorflow.python.ops.math_ops.reduce_sum", "tensorflow.python.ops.variables.Variable", "re.compile", "tensorflow.python.ops.math_ops.log", "tensorflow.python.ops.array_ops.reshape", "tensorflow.python.ops.nn_ops.relu", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.ops.math_ops.reduce_mean", "<builtin>.print", "tensorflow.python.framework.ops.get_default_graph"], "tensorflow.python.ops.array_ops.placeholder": [], "tensorflow.python.ops.random_ops.truncated_normal": [], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.ops.nn_ops.conv2d": [], "tensorflow.python.ops.nn_ops.relu": [], "tensorflow.python.ops.array_ops.reshape": [], "tensorflow.python.ops.math_ops.matmul": [], "tensorflow.python.ops.nn_ops.softmax": [], "tensorflow.python.ops.math_ops.log": [], "tensorflow.python.ops.math_ops.reduce_sum": [], "tensorflow.python.ops.math_ops.reduce_mean": [], "tensorflow.python.training.adam.AdamOptimizer": [], "re.compile": [], "<builtin>.int": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\grappler\\cost_analyzer_test.CostAnalysisTest.testBasicMemory": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.grappler.cost_analyzer.GenerateMemoryReport", "tensorflow.python.ops.math_ops.add_n", "tensorflow.python.framework.ops.get_collection_ref", "tensorflow.python.framework.meta_graph.create_meta_graph_def", "<builtin>.print", "tensorflow.python.framework.test_util.device", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.ops.get_default_graph"], "tensorflow.python.framework.test_util.device": [], "tensorflow.python.grappler.cost_analyzer.GenerateMemoryReport": [], "tensorflow.python.platform.test.main": []}
