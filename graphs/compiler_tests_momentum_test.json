{"Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\momentum_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\momentum_test.MomentumOptimizerTest._update_nesterov_momentum_numpy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\momentum_test.MomentumOptimizerTest.testBasic": ["tensorflow.python.ops.variables.trainable_variables", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.training.momentum.MomentumOptimizer", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllCloseAccordingToType", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.compiler.tests.xla_test.XLATestCase.assertEqual", "tensorflow.compiler.tests.xla_test.XLATestCase.assertFalse", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "numpy.array", "<builtin>.zip"], "tensorflow.compiler.tests.xla_test.XLATestCase.session": [], "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope": [], "tensorflow.python.ops.resource_variable_ops.ResourceVariable": [], "tensorflow.python.framework.constant_op.constant": [], "tensorflow.python.training.momentum.MomentumOptimizer": [], "<builtin>.zip": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertEqual": [], "tensorflow.python.ops.variables.trainable_variables": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertFalse": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose": [], "numpy.array": [], "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllCloseAccordingToType": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\momentum_test.MomentumOptimizerTest.testNesterovMomentum": ["Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\momentum_test.MomentumOptimizerTest._update_nesterov_momentum_numpy", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "<builtin>.range", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "numpy.array", "tensorflow.python.training.momentum.MomentumOptimizer", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllCloseAccordingToType", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "tensorflow.python.ops.array_ops.zeros"], "tensorflow.python.ops.array_ops.zeros": [], "<builtin>.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\compiler\\tests\\momentum_test.MomentumOptimizerTest.testTensorLearningRateAndMomentum": ["tensorflow.python.ops.variables.trainable_variables", "tensorflow.compiler.tests.xla_test.XLATestCase.session", "tensorflow.compiler.tests.xla_test.XLATestCase.test_scope", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.training.momentum.MomentumOptimizer", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllCloseAccordingToType", "tensorflow.compiler.tests.xla_test.XLATestCase.assertAllClose", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.compiler.tests.xla_test.XLATestCase.assertEqual", "tensorflow.compiler.tests.xla_test.XLATestCase.assertFalse", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.compiler.tests.xla_test.XLATestCase.evaluate", "numpy.array", "<builtin>.zip"], "tensorflow.python.platform.test.main": []}
