{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test": ["absl.testing.parameterized.named_parameters", "tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.PathLike.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.PathLike.__fspath__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.PathLike.__str__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.<lambda1>": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.PathLike.__init__"], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.setUp": ["tensorflow.python.lib.io.file_io.create_dir", "tensorflow.python.platform.test.TestCase.get_temp_dir", "absl.testing.parameterized.TestCase.get_temp_dir"], "tensorflow.python.platform.test.TestCase.get_temp_dir": [], "absl.testing.parameterized.TestCase.get_temp_dir": [], "tensorflow.python.lib.io.file_io.create_dir": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.tearDown": ["tensorflow.python.lib.io.file_io.delete_recursively"], "tensorflow.python.lib.io.file_io.delete_recursively": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testEmptyFilename": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertRaises"], "tensorflow.python.lib.io.file_io.FileIO": [], "tensorflow.python.platform.test.TestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.run_all_path_types"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.run_all_path_types": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFileDoesntExist": ["tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.read_file_to_string", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.assertRaises"], "tensorflow.python.lib.io.file_io.file_exists": [], "tensorflow.python.platform.test.TestCase.assertFalse": [], "tensorflow.python.lib.io.file_io.read_file_to_string": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testWriteToString": ["tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.read_file_to_string", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.lib.io.file_io.write_string_to_file", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.lib.io.file_io.write_string_to_file": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testAtomicWriteStringToFile": ["tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.read_file_to_string", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.file_io.atomic_write_string_to_file"], "tensorflow.python.lib.io.file_io.atomic_write_string_to_file": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testAtomicWriteStringToFileOverwriteFalse": ["tensorflow.python.lib.io.file_io.delete_file", "tensorflow.python.lib.io.file_io.read_file_to_string", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.file_io.atomic_write_string_to_file"], "tensorflow.python.lib.io.file_io.delete_file": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testReadBinaryMode": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.file_io.write_string_to_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testWriteBinaryMode": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testAppend": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testMultipleFiles": ["tensorflow.python.platform.test.TestCase.assertEqual", "<builtin>.range", "<builtin>.str", "tensorflow.python.lib.io.file_io.FileIO"], "<builtin>.range": [], "<builtin>.str": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testMultipleWrites": ["tensorflow.python.lib.io.file_io.read_file_to_string", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFileWriteBadMode": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFileReadBadMode": ["tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.platform.test.TestCase.assertTrue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFileDelete": ["tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.delete_file", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.lib.io.file_io.FileIO"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFileDeleteFail": ["tensorflow.python.lib.io.file_io.delete_file", "tensorflow.python.platform.test.TestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testGetMatchingFiles": ["tensorflow.python.lib.io.file_io.create_dir", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.assertItemsEqual", "tensorflow.python.lib.io.file_io.delete_recursively", "tensorflow.python.lib.io.file_io.file_exists", "<builtin>.tuple", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.lib.io.file_io.get_matching_files"], "tensorflow.python.lib.io.file_io.get_matching_files": [], "tensorflow.python.platform.test.TestCase.assertItemsEqual": [], "<builtin>.tuple": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testGetMatchingFilesWhenParentDirContainsParantheses": ["tensorflow.python.lib.io.file_io.create_dir", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertItemsEqual", "tensorflow.python.lib.io.file_io.get_matching_files"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testCreateRecursiveDir": ["tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.lib.io.file_io.delete_recursively", "tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.lib.io.file_io.recursive_create_dir", "<builtin>.str"], "tensorflow.python.lib.io.file_io.recursive_create_dir": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testCopy": ["tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.copy", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.lib.io.file_io.copy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testCopyOverwrite": ["tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.copy", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testCopyOverwriteFalse": ["tensorflow.python.lib.io.file_io.copy", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testRename": ["tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.lib.io.file_io.rename"], "tensorflow.python.lib.io.file_io.rename": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testRenameOverwrite": ["tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.lib.io.file_io.rename"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testRenameOverwriteFalse": ["tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.lib.io.file_io.rename"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testDeleteRecursivelyFail": ["tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.lib.io.file_io.delete_recursively"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testIsDirectory": ["tensorflow.python.lib.io.file_io.create_dir", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.lib.io.file_io.stat", "tensorflow.python.lib.io.file_io.is_directory", "<builtin>.str"], "tensorflow.python.lib.io.file_io.is_directory": [], "tensorflow.python.lib.io.file_io.stat": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testListDirectory": ["tensorflow.python.lib.io.file_io.create_dir", "tensorflow.python.platform.test.TestCase.assertItemsEqual", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.lib.io.file_io.list_directory", "<builtin>.str"], "tensorflow.python.lib.io.file_io.list_directory": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testListDirectoryFailure": ["tensorflow.python.lib.io.file_io.list_directory", "tensorflow.python.platform.test.TestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest._setupWalkDirectories": ["tensorflow.python.lib.io.file_io.create_dir", "tensorflow.python.lib.io.file_io.FileIO"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testWalkInOrder": ["tensorflow.python.platform.test.TestCase.assertLess", "tensorflow.python.platform.test.TestCase.assertItemsEqual", "tensorflow.python.lib.io.file_io.walk", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest._setupWalkDirectories", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.lib.io.file_io.walk": [], "tensorflow.python.platform.test.TestCase.assertLess": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testWalkPostOrder": ["tensorflow.python.platform.test.TestCase.assertLess", "tensorflow.python.platform.test.TestCase.assertItemsEqual", "tensorflow.python.lib.io.file_io.walk", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest._setupWalkDirectories", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testWalkFailure": ["tensorflow.python.platform.test.TestCase.assertItemsEqual", "tensorflow.python.lib.io.file_io.walk"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testStat": ["tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.lib.io.file_io.FileIO", "<builtin>.int", "tensorflow.python.lib.io.file_io.stat", "<builtin>.str", "tensorflow.python.platform.test.TestCase.assertEqual"], "<builtin>.int": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testReadLine": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testRead": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testReadErrorReacquiresGil": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertRaises"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testTell": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testSeek": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testSeekFromWhat": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertRaises", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testReadingIterator": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertSequenceEqual"], "tensorflow.python.platform.test.TestCase.assertSequenceEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testReadlines": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertSequenceEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testUTF8StringPath": ["tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.file_io.write_string_to_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testEof": ["tensorflow.python.lib.io.file_io.FileIO", "<builtin>.len", "tensorflow.python.platform.test.TestCase.assertEqual"], "<builtin>.len": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testUTF8StringPathExists": ["tensorflow.python.lib.io.file_io.file_exists", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.file_io.write_string_to_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFilecmp": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.lib.io.file_io.filecmp", "tensorflow.python.lib.io.file_io.write_string_to_file"], "tensorflow.python.lib.io.file_io.filecmp": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFilecmpSameSize": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.lib.io.file_io.filecmp", "tensorflow.python.lib.io.file_io.write_string_to_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFilecmpBinary": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.lib.io.file_io.filecmp"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFileCrc32": ["tensorflow.python.lib.io.file_io.file_crc32", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.file_io.write_string_to_file"], "tensorflow.python.lib.io.file_io.file_crc32": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFileCrc32WithBytes": ["tensorflow.python.lib.io.file_io.file_crc32", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.file_io.write_string_to_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFileCrc32Binary": ["tensorflow.python.lib.io.file_io.file_crc32", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertTrue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testMatchingFilesPermission": ["tensorflow.python.lib.io.file_io.create_dir", "tensorflow.python.lib.io.file_io.FileIO", "tensorflow.python.platform.test.TestCase.assertItemsEqual", "tensorflow.python.lib.io.file_io.get_matching_files"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testFileSeekableWithZip": ["numpy.load", "numpy.savez_compressed", "tensorflow.python.platform.gfile.GFile"], "numpy.savez_compressed": [], "tensorflow.python.platform.gfile.GFile": [], "numpy.load": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\lib\\io\\file_io_test.FileIoTest.testHasAtomicMove": ["tensorflow.python.lib.io.file_io.has_atomic_move", "tensorflow.python.platform.test.TestCase.assertTrue"], "tensorflow.python.lib.io.file_io.has_atomic_move": [], "tensorflow.python.platform.test.main": []}
