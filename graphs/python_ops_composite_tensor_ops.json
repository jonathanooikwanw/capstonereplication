{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\composite_tensor_ops": ["tensorflow.python.framework.ops.RegisterGradient"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\composite_tensor_ops.composite_tensor_to_variants": ["<builtin>.isinstance", "<builtin>.ValueError", "tensorflow.python.saved_model.nested_structure_coder.StructureCoder", "tensorflow.python.ops.gen_composite_tensor_ops.CompositeTensorVariantFromComponents", "<builtin>.TypeError", "tensorflow.python.util.nest.flatten", "tensorflow.core.protobuf.composite_tensor_variant_pb2.CompositeTensorVariantMetadata"], "<builtin>.isinstance": [], "<builtin>.TypeError": [], "<builtin>.ValueError": [], "tensorflow.python.saved_model.nested_structure_coder.StructureCoder": [], "tensorflow.core.protobuf.composite_tensor_variant_pb2.CompositeTensorVariantMetadata": [], "tensorflow.python.util.nest.flatten": [], "tensorflow.python.ops.gen_composite_tensor_ops.CompositeTensorVariantFromComponents": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\composite_tensor_ops.composite_tensor_from_variant": ["tensorflow.python.util.nest.pack_sequence_as", "<builtin>.isinstance", "tensorflow.python.saved_model.nested_structure_coder.StructureCoder", "<builtin>.TypeError", "tensorflow.python.ops.gen_composite_tensor_ops.CompositeTensorVariantToComponents", "tensorflow.python.util.nest.flatten", "tensorflow.core.protobuf.composite_tensor_variant_pb2.CompositeTensorVariantMetadata"], "tensorflow.python.ops.gen_composite_tensor_ops.CompositeTensorVariantToComponents": [], "tensorflow.python.util.nest.pack_sequence_as": [], "tensorflow.python.framework.ops.RegisterGradient": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\composite_tensor_ops._composite_tensor_to_variants_grad": ["tensorflow.python.ops.gen_composite_tensor_ops.CompositeTensorVariantToComponents"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\composite_tensor_ops._composite_tensor_from_variant_grad": ["<builtin>.len", "<builtin>.range", "tensorflow.python.ops.gen_composite_tensor_ops.CompositeTensorVariantFromComponents"], "<builtin>.len": [], "<builtin>.range": []}
