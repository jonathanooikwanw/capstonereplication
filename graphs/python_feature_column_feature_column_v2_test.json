{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test": ["tensorflow.python.platform.test.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session": ["tensorflow.python.client.session.Session", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.lookup_ops.tables_initializer"], "tensorflow.python.client.session.Session": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "tensorflow.python.ops.lookup_ops.tables_initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias": ["tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.ops.variable_scope.get_variable"], "tensorflow.python.ops.variable_scope.variable_scope": [], "tensorflow.python.ops.variable_scope.get_variable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var": ["tensorflow.python.framework.ops.get_collection"], "tensorflow.python.framework.ops.get_collection": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BaseFeatureColumnForTests.parents": ["<builtin>.ValueError"], "<builtin>.ValueError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BaseFeatureColumnForTests.from_config": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BaseFeatureColumnForTests.get_config": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SortableFeatureColumnTest.test_sort_columns_by_string_representation": ["<builtin>.sorted", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.feature_column.feature_column._numeric_column"], "tensorflow.python.feature_column.feature_column_v2.numeric_column": [], "tensorflow.python.feature_column.feature_column._numeric_column": [], "<builtin>.sorted": [], "tensorflow.python.platform.test.TestCase.assertAllEqual": [], "tensorflow.python.platform.test.TestCase.assertTrue": [], "tensorflow.python.platform.test.TestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_transformations_called_once": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter.__init__", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter.__init__": ["<builtin>.super"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter._is_v2_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter.transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter.parse_example_spec": [], "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache": [], "tensorflow.python.platform.test.TestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_returns_transform_output": ["tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_returns_transform_output.Transformer._is_v2_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_returns_transform_output.Transformer.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_returns_transform_output.Transformer.transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_returns_transform_output.Transformer.parse_example_spec": [], "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_does_not_pollute_given_features_dict": ["<builtin>.list", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_does_not_pollute_given_features_dict.Transformer._is_v2_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_does_not_pollute_given_features_dict.Transformer.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_does_not_pollute_given_features_dict.Transformer.transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_does_not_pollute_given_features_dict.Transformer.parse_example_spec": [], "<builtin>.list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_error_if_feature_is_not_found": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache"], "tensorflow.python.platform.test.TestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_not_supported_feature_column": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_not_supported_feature_column.NotAProperColumn._is_v2_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_not_supported_feature_column.NotAProperColumn.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_not_supported_feature_column.NotAProperColumn.transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_not_supported_feature_column.NotAProperColumn.parse_example_spec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_key_should_be_string_or_feature_colum": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.LazyColumnTest.test_expand_dim_rank_1_sparse_tensor_empty_batch": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertAllEqual", "numpy.reshape", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "numpy.array": [], "numpy.reshape": [], "tensorflow.python.framework.sparse_tensor.SparseTensor": [], "tensorflow.python.platform.test.TestCase.evaluate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_defaults": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.platform.test.TestCase.assertIsNone"], "tensorflow.python.platform.test.TestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_key_should_be_string": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_shape_saved_as_tuple": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_default_value_saved_as_tuple": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_shape_and_default_value_compatibility": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_default_value_type_check": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_shape_must_be_positive_integer": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_dtype_is_convertible_to_float": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_scalar_default_value_fills_the_shape": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_parse_spec": ["tensorflow.python.ops.parsing_ops.FixedLenFeature", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "tensorflow.python.ops.parsing_ops.FixedLenFeature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_parse_example_no_default_value": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.core.example.feature_pb2.FloatList", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.core.example.feature_pb2.FloatList": [], "tensorflow.core.example.feature_pb2.Feature": [], "tensorflow.core.example.feature_pb2.Features": [], "tensorflow.core.example.example_pb2.Example": [], "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2": [], "tensorflow.python.ops.parsing_ops.parse_example": [], "tensorflow.python.platform.test.TestCase.assertIn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_parse_example_with_default_value": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.core.example.feature_pb2.FloatList", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_normalizer_fn_must_be_callable": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_normalizer_fn_transform_feature": ["tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_normalizer_fn_transform_feature._increment_two": [], "tensorflow.python.feature_column.feature_column_v2._transform_features_v2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_get_dense_tensor": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_get_dense_tensor._increment_two": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_sparse_tensor_not_supported": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.framework.sparse_tensor.SparseTensor"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_deep_copy": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "copy.deepcopy"], "copy.deepcopy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_numpy_default_value": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_old_linear_model": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.framework.ops.Graph": [], "tensorflow.python.feature_column.feature_column.linear_model": [], "tensorflow.python.platform.test.TestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_serialization": ["tensorflow.python.feature_column.serialization.serialize_feature_column", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.serialization.deserialize_feature_column", "tensorflow.python.feature_column.feature_column_v2.NumericColumn.from_config", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.NumericColumnTest.test_serialization._increment_two": [], "tensorflow.python.feature_column.feature_column_v2.NumericColumn.from_config": [], "tensorflow.python.feature_column.serialization.serialize_feature_column": [], "tensorflow.python.feature_column.serialization.deserialize_feature_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_invalid_source_column_type": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket": [], "tensorflow.python.feature_column.feature_column_v2.bucketized_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_invalid_source_column_shape": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_invalid_boundaries": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_name": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_is_v2_column_old_numeric": ["tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.feature_column.feature_column._numeric_column", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_parse_spec": ["tensorflow.python.ops.parsing_ops.FixedLenFeature", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_variable_shape": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_num_buckets": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_parse_example": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.core.example.feature_pb2.FloatList", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_transform_feature": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_get_dense_tensor_one_input_value": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_get_dense_tensor_two_input_values": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_get_sparse_tensors_one_input_value": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_get_sparse_tensors_two_input_values": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_sparse_tensor_input_not_supported": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_deep_copy": ["tensorflow.python.platform.test.TestCase.assertEqual", "copy.deepcopy", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_old_linear_model_one_input_value": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_old_linear_model_two_input_values": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_old_linear_model_one_input_value_old_numeric": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.feature_column.feature_column._numeric_column", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.BucketizedColumnTest.test_serialization": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNot", "tensorflow.python.feature_column.serialization._column_name_with_class_name", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.feature_column.feature_column_v2.BucketizedColumn.from_config"], "tensorflow.python.feature_column.feature_column_v2.BucketizedColumn.from_config": [], "tensorflow.python.platform.test.TestCase.assertIsNot": [], "tensorflow.python.feature_column.serialization._column_name_with_class_name": [], "tensorflow.python.platform.test.TestCase.assertIs": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_defaults": ["tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_key_should_be_string": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_bucket_size_should_be_given": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_bucket_size_should_be_positive": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_dtype_should_be_string_or_integer": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_deep_copy": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "copy.deepcopy"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_parse_spec_string": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "tensorflow.python.ops.parsing_ops.VarLenFeature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_parse_spec_int": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_parse_example": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.core.example.feature_pb2.BytesList", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "tensorflow.core.example.feature_pb2.BytesList": [], "tensorflow.python.framework.sparse_tensor.SparseTensorValue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value": ["tensorflow.python.platform.test.TestCase.assertEqual", "numpy.array", "tensorflow.python.platform.test.TestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_strings_should_be_hashed": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_tensor_dtype_should_be_string_or_integer": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_dtype_should_match_with_tensor": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_ints_should_be_hashed": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_int32_64_is_compatible": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.framework.constant_op.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_get_sparse_tensors": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_get_sparse_tensors_dense_input": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_old_linear_model": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.HashedCategoricalColumnTest.test_serialization": ["tensorflow.python.feature_column.feature_column_v2.HashedCategoricalColumn.from_config", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "tensorflow.python.feature_column.feature_column_v2.HashedCategoricalColumn.from_config": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_keys_empty": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.crossed_column"], "tensorflow.python.feature_column.feature_column_v2.crossed_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_keys_length_one": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.crossed_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_key_type_unsupported": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_hash_bucket_size_negative": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.crossed_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_hash_bucket_size_zero": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.crossed_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_hash_bucket_size_none": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.crossed_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_name": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_is_v2_column": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.feature_column.feature_column._numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_name_ordered_alphabetically": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_name_leaf_keys_ordered_alphabetically": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_parse_spec": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.ops.parsing_ops.FixedLenFeature"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_num_buckets": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_deep_copy": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.platform.test.TestCase.assertEqual", "copy.deepcopy", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_parse_example": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.core.example.feature_pb2.FloatList", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "tensorflow.core.example.feature_pb2.BytesList", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_transform_feature": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertIn", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertAllEqual", "<builtin>.range", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.evaluate"], "<builtin>.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_get_sparse_tensors": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_get_sparse_tensors_simple": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.sparse_tensor.SparseTensor", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights._is_v2_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights.parse_example_spec": ["tensorflow.python.ops.parsing_ops.VarLenFeature"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights._parse_example_spec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights.num_buckets": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights._num_buckets": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights.transform_feature": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights._transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights.get_sparse_tensors": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights._get_sparse_tensors": ["tensorflow.python.feature_column.feature_column_v2.CategoricalColumn.IdWeightPair"], "tensorflow.python.feature_column.feature_column_v2.CategoricalColumn.IdWeightPair": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_old_linear_model_old_numeric": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.sparse_tensor.SparseTensor", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.feature_column.feature_column._numeric_column", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.CrossedColumnTest.test_serialization": ["tensorflow.python.feature_column.feature_column_v2.crossed_column", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.CrossedColumn.from_config", "tensorflow.python.platform.test.TestCase.assertIsNot", "tensorflow.python.feature_column.serialization._column_name_with_class_name", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.platform.test.TestCase.assertIs"], "tensorflow.python.feature_column.feature_column_v2.CrossedColumn.from_config": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_raises_if_empty_feature_columns": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.linear_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_should_be_feature_column": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.linear_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__", "tensorflow.python.feature_column.feature_column.linear_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn._is_v2_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn.transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn._transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn.parse_example_spec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn._parse_example_spec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_does_not_support_dict_columns": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_raises_if_duplicate_name": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_bias": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_sparse_bias": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_bias": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertAllClose", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._is_v2_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.parse_example_spec": ["tensorflow.python.ops.parsing_ops.VarLenFeature"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._parse_example_spec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.transform_feature": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.variable_shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._variable_shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.get_dense_tensor": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._get_dense_tensor": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.num_buckets": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._num_buckets": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.get_sparse_tensors": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._get_sparse_tensors": ["tensorflow.python.feature_column.feature_column_v2.CategoricalColumn.IdWeightPair", "tensorflow.python.framework.sparse_tensor.SparseTensor"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_multi_output": ["tensorflow.python.framework.ops.Graph", "numpy.zeros", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "numpy.zeros": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_sparse_multi_output": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "numpy.zeros", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_multi_dimension": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_sparse_multi_rank": ["tensorflow.python.ops.array_ops.sparse_placeholder", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "numpy.zeros", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.ops.array_ops.sparse_placeholder": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_sparse_combiner": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_sparse_combiner_with_negative_weights": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_multi_dimension_multi_output": ["tensorflow.python.framework.ops.Graph", "numpy.zeros", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_raises_if_shape_mismatch": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_reshaping": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_multi_column": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_fills_cols_to_vars": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_fills_cols_to_vars_partitioned_variables": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.ops.partitioned_variables.fixed_size_partitioner"], "tensorflow.python.ops.partitioned_variables.fixed_size_partitioner": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_fills_cols_to_output_tensors": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column"], "tensorflow.python.feature_column.feature_column_v2.embedding_column": [], "tensorflow.python.feature_column.feature_column.input_layer": [], "tensorflow.python.platform.test.TestCase.assertCountEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_collection": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.feature_column.feature_column.linear_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_sparse_collection": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.feature_column.feature_column.linear_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_trainable_default": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.feature_column.feature_column.linear_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_sparse_trainable_default": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.feature_column.feature_column.linear_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_dense_trainable_false": ["tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_sparse_trainable_false": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column.linear_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_column_order": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.feature_column.feature_column.linear_model"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_static_batch_size_mismatch": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_subset_of_static_batch_size_mismatch": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.ops.array_ops.placeholder"], "tensorflow.python.ops.array_ops.placeholder": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_runtime_batch_size_mismatch": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.ops.array_ops.placeholder"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_runtime_batch_size_matches": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.ops.array_ops.placeholder"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_with_1d_sparse_tensor": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.framework.constant_op.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_with_1d_unknown_shape_sparse_tensor": ["tensorflow.python.ops.array_ops.sparse_placeholder", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.ops.array_ops.placeholder", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_with_rank_0_feature": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertRaisesOpError", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.ops.array_ops.placeholder"], "tensorflow.python.platform.test.TestCase.assertRaisesOpError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_multiple_linear_models": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_linear_model_v1_shared_embedding_all_other_v2": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity": [], "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_linear_model_v1_shared_embedding_with_v2_cat_all_other_v2": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_linear_model_v1_v2_mix": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.OldLinearModelTest.test_linear_model_v2_shared_embedding_all_other_v1": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.InputLayerTest": ["tensorflow.python.framework.test_util.run_in_graph_and_eager_modes"], "tensorflow.python.framework.test_util.run_in_graph_and_eager_modes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.InputLayerTest.test_retrieving_input": ["tensorflow.python.feature_column.feature_column.InputLayer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "tensorflow.python.feature_column.feature_column.InputLayer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.InputLayerTest.test_reuses_variables": ["tensorflow.python.eager.context.eager_mode", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column.InputLayer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs", "<builtin>.len"], "tensorflow.python.eager.context.eager_mode": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.InputLayerTest.test_reuses_variables._embedding_column_initializer": [], "<builtin>.len": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.InputLayerTest.test_feature_column_input_layer_gradient": ["tensorflow.python.eager.context.eager_mode", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column.InputLayer", "tensorflow.python.eager.backprop.implicit_grad", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.InputLayerTest.test_feature_column_input_layer_gradient.scale_matrix"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.InputLayerTest.test_feature_column_input_layer_gradient._embedding_column_initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.InputLayerTest.test_feature_column_input_layer_gradient.scale_matrix": [], "tensorflow.python.eager.backprop.implicit_grad": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_raises_if_empty_feature_columns": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.input_layer"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_should_be_dense_column": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_does_not_support_dict_columns": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_bare_column": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_column_generator": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_raises_if_duplicate_name": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.feature_column.feature_column_v2.numeric_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_one_column": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_multi_dimension": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_raises_if_shape_mismatch": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_reshaping": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_multi_column": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_fills_cols_to_vars": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.platform.test.TestCase.assertIsInstance", "<builtin>.len"], "tensorflow.python.platform.test.TestCase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_fills_cols_to_vars_shared_embedding": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsInstance", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.framework.sparse_tensor.SparseTensor", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "<builtin>.len"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_fills_cols_to_vars_partitioned_variables": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.ops.variable_scope.variable_scope", "<builtin>.list", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.ops.partitioned_variables.fixed_size_partitioner", "<builtin>.len"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_column_order": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_fails_for_categorical_column": ["tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_static_batch_size_mismatch": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_subset_of_static_batch_size_mismatch": ["tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.array_ops.placeholder"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_runtime_batch_size_mismatch": ["tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.array_ops.placeholder"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_runtime_batch_size_matches": ["tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.ops.array_ops.placeholder"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_multiple_layers_with_same_embedding_column": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "<builtin>.len", "tensorflow.python.framework.ops.get_collection"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_with_1d_sparse_tensor": ["tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_with_1d_sparse_tensor._initializer": [], "tensorflow.python.feature_column.feature_column_v2.indicator_column": [], "tensorflow.python.eager.context.executing_eagerly": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_with_1d_unknown_shape_sparse_tensor": ["tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.ops.array_ops.sparse_placeholder", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.array_ops.placeholder", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_with_1d_unknown_shape_sparse_tensor._initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.FunctionalInputLayerTest.test_with_rank_0_feature": ["tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertRaisesOpError", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.array_ops.placeholder"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn._is_v2_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn.transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn._transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn.parse_example_spec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn._parse_example_spec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest.test_no_feature_columns": ["tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.platform.test.TestCase.assertDictEqual"], "tensorflow.python.platform.test.TestCase.assertDictEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest.test_invalid_type": ["tensorflow.python.ops.parsing_ops.FixedLenFeature", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest.test_one_feature_column": ["tensorflow.python.ops.parsing_ops.FixedLenFeature", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.platform.test.TestCase.assertDictEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest.test_two_feature_columns": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.platform.test.TestCase.assertDictEqual", "tensorflow.python.ops.parsing_ops.FixedLenFeature", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest.test_equal_keys_different_parse_spec": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.ops.parsing_ops.FixedLenFeature", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest.test_equal_keys_equal_parse_spec": ["tensorflow.python.ops.parsing_ops.FixedLenFeature", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.platform.test.TestCase.assertDictEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.MakeParseExampleSpecTest.test_multiple_features_dict": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.platform.test.TestCase.assertDictEqual", "tensorflow.python.ops.parsing_ops.FixedLenFeature", "tensorflow.python.feature_column.feature_column_v2.FeatureColumn.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.setUp": ["tensorflow.python.platform.test.test_src_dir_path", "<builtin>.super"], "tensorflow.python.platform.test.test_src_dir_path": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_defaults": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_defaults_unicode": ["tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.evaluate", "<builtin>.isinstance"], "<builtin>.isinstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_key_should_be_string": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_all_constructor_args": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_deep_copy": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertEqual", "copy.deepcopy"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_vocabulary_file_none": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_vocabulary_file_empty_string": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_vocabulary_file": ["tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_vocabulary_size": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_too_large_vocabulary_size": ["tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_num_oov_buckets": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_dtype": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_buckets_and_default_value": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_input_dtype_int32": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_input_dtype_string": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_parse_example": ["tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.core.example.feature_pb2.BytesList", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_none_vocabulary_size": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_transform_feature": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_dense_input": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_default_value_in_vocabulary": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_with_oov_buckets": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_small_vocabulary_size": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_int32": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_int32_dense_input": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_int32_with_oov_buckets": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_old_linear_model": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_serialization": ["tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.VocabularyFileCategoricalColumn.from_config"], "tensorflow.python.feature_column.feature_column_v2.VocabularyFileCategoricalColumn.from_config": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyTfrecordGzipFileCategoricalColumnTest.setUp": ["tensorflow.python.platform.test.test_src_dir_path", "<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_defaults_string": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_key_should_be_string": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_defaults_int": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_all_constructor_args": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_deep_copy": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertEqual", "copy.deepcopy"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_dtype": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_mapping_dtype": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_mismatched_int_dtype": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_mismatched_string_dtype": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_none_mapping": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_empty_mapping": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "<builtin>.tuple"], "<builtin>.tuple": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_duplicate_mapping": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_num_oov_buckets": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_buckets_and_default_value": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_input_dtype_int32": ["tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_input_dtype_string": ["tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_parse_example_string": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.core.example.feature_pb2.BytesList", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_parse_example_int": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.core.example.feature_pb2.Int64List", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.core.example.feature_pb2.Int64List": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_transform_feature": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_dense_input": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_default_value_in_vocabulary": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_with_oov_buckets": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_int32": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_int32_dense_input": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_int32_with_oov_buckets": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_old_linear_model": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.VocabularyListCategoricalColumnTest.test_serialization": ["tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.VocabularyListCategoricalColumn.from_config"], "tensorflow.python.feature_column.feature_column_v2.VocabularyListCategoricalColumn.from_config": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_constructor": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_key_should_be_string": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_deep_copy": ["tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertEqual", "copy.deepcopy"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_invalid_num_buckets_zero": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_invalid_num_buckets_negative": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_invalid_default_value_too_small": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_invalid_default_value_too_big": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_invalid_input_dtype": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_parse_example": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.core.example.feature_pb2.Int64List", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_transform_feature": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_dense_input": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_small": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._TestStateManager.__init__", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_small._initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._TestStateManager.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_inputs_too_small": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_small"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest": ["tensorflow.python.framework.test_util.enable_control_flow_v2"], "tensorflow.python.framework.test_util.enable_control_flow_v2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_inputs_too_small_v2": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_small"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_big": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._TestStateManager.__init__", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_big._initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_inputs_too_big": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_big"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_inputs_too_big_v2": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_big"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_default_value": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_default_value_and_placeholder_inputs": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertIsNone", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.ops.array_ops.placeholder", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_old_linear_model": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IdentityCategoricalColumnTest.test_serialization": ["tensorflow.python.feature_column.feature_column_v2.IdentityCategoricalColumn.from_config", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertEqual"], "tensorflow.python.feature_column.feature_column_v2.IdentityCategoricalColumn.from_config": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.TransformFeaturesTest.transform_multi_column": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.numeric_column", "tensorflow.python.feature_column.feature_column_v2.bucketized_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.TransformFeaturesTest.test_column_order": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn.__init__", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn.__init__": ["<builtin>.super"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn._is_v2_column": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn.name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn.transform_feature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn.parse_example_spec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_indicator_column": ["tensorflow.python.feature_column.feature_column._categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.platform.test.TestCase.assertFalse"], "tensorflow.python.feature_column.feature_column._categorical_column_with_hash_bucket": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_not_categorical_input": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.indicator_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_1D_shape_succeeds": ["tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_2D_shape_succeeds": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_multi_hot": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_multi_hot2": ["tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_deep_copy": ["copy.deepcopy", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.feature_column.feature_column_v2.indicator_column"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_parse_example": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.ops.parsing_ops.parse_example", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.core.example.feature_pb2.BytesList", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_transform": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_transform_with_weighted_column": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_transform_with_missing_value_in_weighted_column": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_transform_with_missing_value_in_categorical_column": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_old_linear_model": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_old_linear_model_old_categorical": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column._categorical_column_with_identity", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.python.feature_column.feature_column._categorical_column_with_identity": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_input_layer": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_input_layer_old_categorical": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column.input_layer", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column._categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.platform.test.TestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.IndicatorColumnTest.test_serialization": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNot", "tensorflow.python.feature_column.serialization._column_name_with_class_name", "tensorflow.python.feature_column.feature_column_v2.indicator_column", "tensorflow.python.feature_column.feature_column_v2.IndicatorColumn.from_config", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs"], "tensorflow.python.feature_column.feature_column_v2.IndicatorColumn.from_config": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._TestStateManager.create_variable": ["tensorflow.python.ops.variable_scope.get_variable"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._TestStateManager.get_variable": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_defaults": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_is_v2_column": ["tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.feature_column.feature_column._categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_all_constructor_args": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs", "tensorflow.python.platform.test.TestCase.assertFalse"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_all_constructor_args.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_deep_copy": ["tensorflow.python.platform.test.TestCase.assertEqual", "copy.deepcopy", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertFalse"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_deep_copy.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_invalid_initializer": ["tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_parse_example": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.core.example.feature_pb2.BytesList", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_transform_feature": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.ops.variables.global_variables_initializer", "<builtin>.tuple", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._TestStateManager.__init__", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.framework.ops.get_collection"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_old_categorical": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column._LazyBuilder", "<builtin>.tuple", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.feature_column._categorical_column_with_identity", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.framework.ops.get_collection"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_old_categorical._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "tensorflow.python.feature_column.feature_column._LazyBuilder": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_3d": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.ops.variables.global_variables_initializer", "<builtin>.tuple", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._TestStateManager.__init__", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.framework.ops.get_collection"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_3d._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_placeholder_inputs": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.ops.variables.global_variables_initializer", "<builtin>.tuple", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._TestStateManager.__init__", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.ops.array_ops.placeholder", "tensorflow.python.framework.ops.get_collection"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_placeholder_inputs._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_restore_from_ckpt": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.ops.variables.global_variables_initializer", "<builtin>.tuple", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._TestStateManager.__init__", "tensorflow.python.platform.test.test_src_dir_path", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_input_layer": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column.input_layer", "<builtin>.tuple", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.framework.ops.get_collection"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_input_layer._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_old_linear_model": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "numpy.zeros", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_old_linear_model._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_old_linear_model_old_categorical": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "numpy.zeros", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.feature_column._categorical_column_with_identity", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_old_linear_model_old_categorical._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_serialization_with_default_initializer": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.EmbeddingColumn.from_config", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertIsNot", "tensorflow.python.feature_column.serialization._column_name_with_class_name", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs"], "tensorflow.python.feature_column.feature_column_v2.EmbeddingColumn.from_config": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_serialization_with_custom_initializer": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.EmbeddingColumn.from_config", "tensorflow.python.feature_column.feature_column_v2.embedding_column", "tensorflow.python.platform.test.TestCase.assertIsNot", "tensorflow.python.feature_column.serialization._column_name_with_class_name", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.EmbeddingColumnTest.test_serialization_with_custom_initializer._initializer": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_defaults": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_all_constructor_args": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_all_constructor_args.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_deep_copy": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.framework.ops.Graph", "copy.deepcopy", "tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_deep_copy.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_invalid_initializer": ["tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_incompatible_column_type": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_weighted_categorical_column_ok": ["tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_parse_example": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.core.example.feature_pb2.BytesList", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_transform_feature": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.framework.sparse_tensor.SparseTensor", "tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "absl.testing.parameterized.named_parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest": ["absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.ops.variables.global_variables_initializer", "<builtin>.tuple", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.ops.variable_scope.variable_scope", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertNotIn", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.ops.partitioned_variables.fixed_size_partitioner", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.framework.ops.get_default_graph", "numpy.array", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor._initializer": ["tensorflow.python.platform.test.TestCase.assertIsNone", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertAllEqual"], "tensorflow.python.framework.ops.get_default_graph": [], "tensorflow.python.platform.test.TestCase.assertNotIn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor_valid": ["tensorflow.python.platform.test.TestCase.assertCountEqual", "tensorflow.python.ops.variables.global_variables_initializer", "<builtin>.tuple", "tensorflow.python.framework.ops.Graph", "tensorflow.python.framework.ops.get_collection", "tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertNotIn", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.framework.ops.get_default_graph", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor_valid._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor_placeholder_inputs": ["tensorflow.python.framework.ops.Graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertNotIn", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.feature_column.feature_column_v2.FeatureTransformationCache", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.framework.ops.get_default_graph", "tensorflow.python.ops.array_ops.placeholder", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor_placeholder_inputs._initializer": ["tensorflow.python.platform.test.TestCase.assertAllEqual", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.platform.test.TestCase.assertIsNone"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_serialization": ["tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.shared_embedding_columns_v2", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.SharedEmbeddingColumnTest.test_serialization._initializer": ["<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_defaults": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.platform.test.TestCase.assertTrue", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_is_v2_column": ["tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.platform.test.TestCase.assertFalse", "tensorflow.python.feature_column.feature_column._categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_deep_copy": ["tensorflow.python.platform.test.TestCase.assertEqual", "copy.deepcopy", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.ops.parsing_ops.VarLenFeature", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_invalid_dtype_none": ["tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_invalid_dtype_string": ["tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_invalid_input_dtype": ["tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_column_name_collision": ["tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_missing_weights": ["tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_parse_example": ["tensorflow.core.example.feature_pb2.Feature", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "tensorflow.core.example.feature_pb2.FloatList", "tensorflow.python.feature_column.feature_column_v2.make_parse_example_spec_v2", "tensorflow.python.ops.parsing_ops.parse_example", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.core.example.feature_pb2.BytesList", "tensorflow.core.example.example_pb2.Example", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.platform.test.TestCase.assertIn", "tensorflow.core.example.feature_pb2.Features", "tensorflow.python.platform.test.TestCase.evaluate", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_transform_features": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_transform_features_dense_input": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_transform_features_dense_weights": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.feature_column.feature_column_v2._transform_features_v2", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._assert_sparse_tensor_value", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.platform.test.TestCase.evaluate", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_old_linear_model": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_old_linear_model_mismatched_shape": ["tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_old_linear_model_mismatched_dense_values": ["tensorflow.core.protobuf.config_pb2.ConfigProto", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test._initialized_session", "tensorflow.python.platform.test.TestCase.assertRaisesRegex", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.evaluate"], "tensorflow.core.protobuf.config_pb2.ConfigProto": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_old_linear_model_mismatched_dense_shape": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_old_linear_model_old_categorical": ["tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.framework.ops.Graph", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_bias", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.get_linear_model_column_var", "tensorflow.python.framework.sparse_tensor.SparseTensorValue", "tensorflow.python.feature_column.feature_column._categorical_column_with_identity", "tensorflow.python.ops.lookup_ops.tables_initializer", "tensorflow.python.feature_column.feature_column.linear_model", "tensorflow.python.platform.test.TestCase.assertAllClose", "tensorflow.python.platform.test.TestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\feature_column\\feature_column_v2_test.WeightedCategoricalColumnTest.test_serialization": ["tensorflow.python.platform.test.TestCase.assertEqual", "tensorflow.python.feature_column.feature_column_v2.weighted_categorical_column", "tensorflow.python.feature_column.serialization._column_name_with_class_name", "tensorflow.python.feature_column.feature_column_v2.WeightedCategoricalColumn.from_config", "tensorflow.python.feature_column.feature_column_v2.categorical_column_with_identity", "tensorflow.python.platform.test.TestCase.assertIs"], "tensorflow.python.feature_column.feature_column_v2.WeightedCategoricalColumn.from_config": [], "tensorflow.python.platform.test.main": []}
