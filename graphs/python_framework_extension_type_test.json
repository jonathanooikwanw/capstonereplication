{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test": ["tensorflow.python.platform.googletest.main", "contextlib.contextmanager"], "tensorflow.python.framework.tensor_spec.TensorSpec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV1": ["tensorflow.python.framework.tensor_spec.TensorSpec"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV2": ["tensorflow.python.framework.tensor_spec.TensorSpec"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV2.__repr__": ["tensorflow.python.framework.extension_type.ExtensionType.mask.numpy", "<builtin>.super", "tensorflow.python.framework.extension_type.ExtensionType.values.numpy", "<builtin>.hasattr", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test._masked_array_repr"], "<builtin>.hasattr": [], "tensorflow.python.framework.extension_type.ExtensionType.values.numpy": [], "tensorflow.python.framework.extension_type.ExtensionType.mask.numpy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test._masked_array_repr": ["<builtin>.zip", "<builtin>.repr", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test._masked_array_repr", "<builtin>.len"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV2.shape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV2.dtype": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV2.from_full_tensor": ["tensorflow.python.ops.array_ops.ones_like", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.ops.array_ops.ones_like": [], "tensorflow.python.framework.extension_type.ExtensionType.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV2.doc_link": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV2.__validate__": ["tensorflow.python.framework.extension_type.ExtensionType.values.shape.assert_is_compatible_with"], "tensorflow.python.framework.extension_type.ExtensionType.values.shape.assert_is_compatible_with": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV2.with_default": ["tensorflow.python.ops.array_ops.where_v2"], "tensorflow.python.ops.array_ops.where_v2": [], "<builtin>.len": [], "<builtin>.repr": [], "<builtin>.zip": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testAttributeAccessors": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.framework.extension_type.pack", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.framework.extension_type.pack": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testAttributesAreImmutable": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.framework.extension_type.pack", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex": [], "tensorflow.python.framework.constant_op.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testClassAndStaticMethod": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV2.from_full_tensor"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testRepr": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "<builtin>.repr", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testEagerRepr": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.eager.context.executing_eagerly", "<builtin>.repr", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.eager.context.executing_eagerly": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testConstructorSignature": ["tensorflow.python.util.tf_inspect.signature", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.util.tf_inspect.Signature", "tensorflow.python.util.tf_inspect.Parameter", "tensorflow.python.framework.tensor_spec.TensorSpec"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testConstructorSignature.MyType": ["tensorflow.python.framework.tensor_spec.TensorSpec"], "tensorflow.python.util.tf_inspect.Parameter": [], "tensorflow.python.util.tf_inspect.Signature": [], "tensorflow.python.util.tf_inspect.signature": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testEmptyType": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEmpty", "<builtin>.repr", "tensorflow.python.framework.extension_type.ExtensionType._tf_extension_type_fields", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.framework.extension_type.ExtensionType._tf_extension_type_fields": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEmpty": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCustomConstrutor": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCustomConstrutor.SummarizedTensor.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCustomConstrutor.SummarizedTensor.__init__": ["tensorflow.python.ops.math_ops.reduce_max", "tensorflow.python.ops.math_ops.reduce_mean", "tensorflow.python.framework.ops.convert_to_tensor"], "tensorflow.python.framework.ops.convert_to_tensor": [], "tensorflow.python.ops.math_ops.reduce_mean": [], "tensorflow.python.ops.math_ops.reduce_max": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCustomConstructorWithDefaultValues": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNone", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsNone": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCustomConstructorNondefaultCanotFollowDefault": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCustomConstrutorCantMutateNestedValues": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCustomConstrutorCantMutateNestedValues.Bar.__init__", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCustomConstrutorCantMutateNestedValues.Bar.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCustomValidate": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCustomValidate.AlignedTensors.__validate__": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testEquals": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.replace_tensors_with_placeholders", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.replace_tensors_with_placeholders": ["tensorflow.python.util.nest.map_structure"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testPassIntoTfFunction": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testPassIntoTfFunction.fn", "tensorflow.python.framework.extension_type.pack", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testPassIntoTfFunction.fn": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.MaskedTensorV2.with_default"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testReturnFromTfFunction": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.extension_type.is_packed", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testReturnFromTfFunction.mask_neg_values", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testReturnFromTfFunction.mask_neg_values_packed", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testReturnFromTfFunction.mask_neg_values": ["tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testReturnFromTfFunction.mask_neg_values_packed": ["tensorflow.python.framework.extension_type.pack", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.framework.extension_type.is_packed": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCaptureByTfFunction": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCaptureByTfFunction.add_to_x", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCaptureByTfFunction.add_to_x": ["tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testTfFunctionArgMutationError": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testTfFunctionArgMutationError.fn_with_side_effect", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testTfFunctionArgMutationError.fn_with_side_effect": ["tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testNestPackUnpack": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.util.nest.pack_sequence_as", "tensorflow.python.framework.extension_type.ExtensionType.__init__", "tensorflow.python.util.nest.flatten"], "tensorflow.python.util.nest.flatten": [], "tensorflow.python.util.nest.pack_sequence_as": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testSimpleCond": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.control_flow_ops.cond", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testSimpleCond.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testSimpleCond.<lambda2>": [], "tensorflow.python.ops.control_flow_ops.cond": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testSimpleCond.<lambda3>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testSimpleCond.<lambda4>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testComplexCond": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.control_flow_ops.cond", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testComplexCond.true_fn": ["tensorflow.python.ops.array_ops.where_v2", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testComplexCond.false_fn": ["tensorflow.python.ops.array_ops.where_v2", "tensorflow.python.ops.math_ops.logical_not", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.ops.math_ops.logical_not": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondAutograph": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondAutograph.fn", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondAutograph.fn": ["tensorflow.python.ops.array_ops.where_v2", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondTypeMismatch": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.ops.control_flow_ops.cond"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondTypeMismatch.<lambda1>": ["tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondTypeMismatch.<lambda2>": ["tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondTypeMismatch.<lambda3>": ["tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondTypeMismatch.<lambda4>": ["tensorflow.python.framework.constant_op.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondPacked": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.extension_type.ExtensionType.__init__", "tensorflow.python.framework.extension_type.pack", "tensorflow.python.ops.control_flow_ops.cond"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondPacked.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondPacked.<lambda2>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondPacked.<lambda3>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondPacked.<lambda4>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondPacked.<lambda5>": ["tensorflow.python.ops.array_ops.size"], "tensorflow.python.ops.array_ops.size": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondPacked.<lambda6>": ["tensorflow.python.ops.array_ops.size"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondPacked.<lambda7>": ["tensorflow.python.ops.array_ops.size"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testCondPacked.<lambda8>": ["tensorflow.python.ops.array_ops.size"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoop": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.ops.control_flow_ops.while_loop_v2", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoop.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoop.<lambda2>": ["tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.ops.control_flow_ops.while_loop_v2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoopAutograph": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoopAutograph.fn", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoopAutograph.fn": ["tensorflow.python.ops.math_ops.range", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.ops.math_ops.range": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoopTypeMismatch": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.ops.control_flow_ops.while_loop_v2", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoopTypeMismatch.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoopTypeMismatch.body": ["<builtin>.isinstance", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "<builtin>.isinstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoopPacked": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.framework.extension_type.pack", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.control_flow_ops.while_loop_v2", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoopPacked.<lambda1>": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testWhileLoopPacked.body": ["tensorflow.python.framework.extension_type.pack", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testNestedFields": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRegex", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.repr", "<builtin>.set", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.ops.ragged.ragged_factory_ops.constant": [], "<builtin>.set": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testNestedExtensionTypes": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testNestedExtensionTypes.fn", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testNestedExtensionTypes.fn": ["tensorflow.python.ops.math_ops.reduce_sum", "tensorflow.python.ops.array_ops.stack"], "tensorflow.python.ops.array_ops.stack": [], "tensorflow.python.ops.math_ops.reduce_sum": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testNestedCustomConstructor": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "<builtin>.set", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testNestedCustomConstructor.ToyBox.__init__", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testNestedCustomConstructor.Toy.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testNestedCustomConstructor.ToyBox.__init__": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testNestedCustomConstructor.Toy.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testExtensionTypeWithMathOperators": ["tensorflow.python.framework.extension_type.ExtensionType.__init__", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.temporarily_add_dispatch"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testExtensionTypeWithMathOperators.masked_add": ["<builtin>.isinstance", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.temporarily_add_dispatch": ["tensorflow.python.util.dispatch.dispatch_for_types", "<builtin>.len"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testGetExtensionTypeFields": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.extension_type.ExtensionType._tf_extension_type_fields", "tensorflow.python.framework.tensor_spec.TensorSpec", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testHasExtensionTypeField": ["tensorflow.python.framework.extension_type.ExtensionType._tf_extension_type_has_field", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.framework.extension_type.ExtensionType._tf_extension_type_has_field": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testForwardReferences": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.util.tf_inspect.signature", "tensorflow.python.util.tf_inspect.Signature", "tensorflow.python.util.tf_inspect.Parameter", "tensorflow.python.framework.extension_type.ExtensionType._tf_extension_type_fields", "tensorflow.python.framework.extension_type_field.ExtensionTypeField"], "tensorflow.python.framework.extension_type_field.ExtensionTypeField": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testUnresolvedForwardReference": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testUnsupportedAnnotations": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testExtensionTypeBaseClassHasNoSpec": ["<builtin>.hasattr", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testExtensionTypeBaseConstructorRaisesException": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.framework.extension_type.ExtensionType"], "tensorflow.python.framework.extension_type.ExtensionType": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testSavedModelSupport": ["tempfile.mkdtemp", "tensorflow.python.platform.test.get_temp_dir", "tensorflow.python.saved_model.save.save", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.module.module.Module.__init__", "tensorflow.python.saved_model.load.load", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testSavedModelSupport.TestModule.f": [], "tensorflow.python.module.module.Module.__init__": [], "tensorflow.python.platform.test.get_temp_dir": [], "tempfile.mkdtemp": [], "tensorflow.python.saved_model.save.save": [], "tensorflow.python.saved_model.load.load": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeTest.testPackedEncoding": ["tensorflow.python.util.nest.assert_same_structure", "tensorflow.python.framework.extension_type.unpack", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.extension_type.ExtensionType.__init__", "tensorflow.python.framework.extension_type.pack", "tensorflow.python.util.nest.flatten"], "tensorflow.python.framework.extension_type.unpack": [], "tensorflow.python.util.nest.assert_same_structure": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeSpecTest.testSpecConstructor": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.extension_type.ExtensionType.Spec", "tensorflow.python.framework.tensor_spec.TensorSpec", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.framework.extension_type.ExtensionType.Spec": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeSpecTest.testSpecConstructorSignature": ["tensorflow.python.util.tf_inspect.signature", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.util.tf_inspect.Signature", "tensorflow.python.util.tf_inspect.Parameter"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeSpecTest.testSpecConstructorSignature.MyType": ["tensorflow.python.framework.tensor_spec.TensorSpec"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeSpecTest.testSpecAttributesAreImmutable": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.framework.extension_type.ExtensionType.Spec.from_value", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.framework.extension_type.ExtensionType.Spec.from_value": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeSpecTest.testSpecFromValue": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.extension_type.ExtensionType.Spec.from_value", "tensorflow.python.framework.tensor_spec.TensorSpec", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeSpecTest.testSpecSerialize": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.extension_type.ExtensionType.Spec", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.framework.extension_type.ExtensionType.Spec._deserialize", "tensorflow.python.framework.tensor_spec.TensorSpec"], "tensorflow.python.framework.extension_type.ExtensionType.Spec._deserialize": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.ExtensionTypeSpecTest.testSpecComponents": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertLen", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.extension_type.ExtensionType.Spec.from_value", "tensorflow.python.framework.tensor_spec.TensorSpec", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.AnonymousExtensionTypeTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.AnonymousExtensionTypeTest.testConstruction": ["tensorflow.python.framework.extension_type.AnonymousExtensionType", "<builtin>.callable"], "<builtin>.callable": [], "tensorflow.python.framework.extension_type.AnonymousExtensionType": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.AnonymousExtensionTypeTest.testConstructionErrors": ["tensorflow.python.framework.extension_type.AnonymousExtensionType", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.AnonymousExtensionTypeTest.testAttributeAccessors": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "<builtin>.isinstance", "tensorflow.python.framework.extension_type.AnonymousExtensionType", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.callable", "<builtin>.getattr"], "<builtin>.getattr": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.AnonymousExtensionTypeTest.testAttributeAccessorsAreImmutable": ["tensorflow.python.framework.extension_type.AnonymousExtensionType", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.AnonymousExtensionTypeTest.testReinterpret": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.extension_type.reinterpret", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.framework.extension_type.reinterpret": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.AnonymousExtensionTypeTest.testReinterpretErrors": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "<builtin>.callable", "tensorflow.python.framework.extension_type.reinterpret"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.AnonymousExtensionTypeTest.testLoadSavedModelWithUnregisteredExtensionType": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.extension_type.ExtensionType.Spec", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaises", "tensorflow.python.eager.def_function.function", "tensorflow.python.framework.type_spec.lookup", "tempfile.mkdtemp", "tensorflow.python.platform.test.get_temp_dir", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance", "tensorflow.python.saved_model.save.save", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.module.module.Module", "tensorflow.python.framework.extension_type.reinterpret", "tensorflow.python.saved_model.load.load", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.temporarily_register_type_spec", "tensorflow.python.framework.tensor_spec.TensorSpec", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.AnonymousExtensionTypeTest.testLoadSavedModelWithUnregisteredExtensionType.f": ["<builtin>.isinstance", "tensorflow.python.framework.extension_type.ExtensionType.__init__"], "tensorflow.python.module.module.Module": [], "tensorflow.python.eager.def_function.function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.temporarily_register_type_spec": ["tensorflow.python.framework.type_spec._NAME_TO_TYPE_SPEC.pop", "tensorflow.python.framework.type_spec._TYPE_SPEC_TO_NAME.pop", "tensorflow.python.framework.type_spec.register"], "tensorflow.python.framework.type_spec.lookup": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\extension_type_test.replace_tensors_with_placeholders.repl": ["tensorflow.python.ops.array_ops.placeholder_with_default", "<builtin>.isinstance"], "tensorflow.python.ops.array_ops.placeholder_with_default": [], "tensorflow.python.util.nest.map_structure": [], "contextlib.contextmanager": [], "tensorflow.python.util.dispatch.dispatch_for_types": [], "tensorflow.python.framework.type_spec.register": [], "tensorflow.python.framework.type_spec._TYPE_SPEC_TO_NAME.pop": [], "tensorflow.python.framework.type_spec._NAME_TO_TYPE_SPEC.pop": [], "tensorflow.python.platform.googletest.main": []}
