{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util": ["contextlib.contextmanager", "tensorflow.python.util.deprecation.deprecated", "tensorflow.python.util.tf_export.tf_export"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_xla_enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_mlir_bridge_enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_asan_enabled": ["tensorflow.python.pywrap_sanitizers.is_asan_enabled"], "tensorflow.python.pywrap_sanitizers.is_asan_enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_msan_enabled": ["tensorflow.python.pywrap_sanitizers.is_msan_enabled"], "tensorflow.python.pywrap_sanitizers.is_msan_enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_tsan_enabled": ["tensorflow.python.pywrap_sanitizers.is_tsan_enabled"], "tensorflow.python.pywrap_sanitizers.is_tsan_enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_ubsan_enabled": ["tensorflow.python.pywrap_sanitizers.is_ubsan_enabled"], "tensorflow.python.pywrap_sanitizers.is_ubsan_enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._get_object_count_by_type": ["<builtin>.type", "collections.Counter", "gc.get_objects"], "<builtin>.type": [], "gc.get_objects": [], "collections.Counter": [], "tensorflow.python.util.tf_export.tf_export": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.gpu_device_name": ["tensorflow.python.util.compat.as_str", "tensorflow.python.client.device_lib.list_local_devices"], "tensorflow.python.client.device_lib.list_local_devices": [], "tensorflow.python.util.compat.as_str": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_ops_in_graph": ["<builtin>.ValueError", "<builtin>.set"], "<builtin>.ValueError": [], "<builtin>.set": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_equal_graph_def_v2": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_equal_graph_def"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_equal_graph_def": ["tensorflow.python.util.compat.as_str", "<builtin>.TypeError", "<builtin>.isinstance", "tensorflow.python.client.pywrap_tf_session.EqualGraphDefWrapper", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._strip_hash_table_shared_name", "<builtin>.type", "<builtin>.AssertionError", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._strip_checkpoint_v2_randomized"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_equal_graph_def_v1": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_equal_graph_def"], "<builtin>.isinstance": [], "<builtin>.TypeError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._strip_checkpoint_v2_randomized": ["re.match", "<builtin>.len", "tensorflow.python.util.compat.as_bytes"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._strip_hash_table_shared_name": ["re.match", "tensorflow.python.util.compat.as_bytes"], "tensorflow.python.client.pywrap_tf_session.EqualGraphDefWrapper": [], "<builtin>.AssertionError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_meta_graph_protos_equal": ["tensorflow.python.framework.ops.get_collection_proto_type", "<builtin>.len", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_equal_graph_def", "<builtin>.set", "<builtin>.zip"], "tensorflow.python.framework.ops.get_collection_proto_type": [], "<builtin>.len": [], "<builtin>.zip": [], "tensorflow.python.util.compat.as_bytes": [], "re.match": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.IsGoogleCudaEnabled": ["tensorflow.python.util._pywrap_util_port.IsGoogleCudaEnabled"], "tensorflow.python.util._pywrap_util_port.IsGoogleCudaEnabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.IsBuiltWithROCm": ["tensorflow.python.util._pywrap_util_port.IsBuiltWithROCm"], "tensorflow.python.util._pywrap_util_port.IsBuiltWithROCm": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.IsBuiltWithXLA": ["tensorflow.python.util._pywrap_util_port.IsBuiltWithXLA"], "tensorflow.python.util._pywrap_util_port.IsBuiltWithXLA": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.IsBuiltWithNvcc": ["tensorflow.python.util._pywrap_util_port.IsBuiltWithNvcc"], "tensorflow.python.util._pywrap_util_port.IsBuiltWithNvcc": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.GpuSupportsHalfMatMulAndConv": ["tensorflow.python.util._pywrap_util_port.GpuSupportsHalfMatMulAndConv"], "tensorflow.python.util._pywrap_util_port.GpuSupportsHalfMatMulAndConv": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.IsMklEnabled": ["tensorflow.python.util._pywrap_util_port.IsMklEnabled", "os.getenv"], "tensorflow.python.util._pywrap_util_port.IsMklEnabled": [], "os.getenv": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.InstallStackTraceHandler": ["tensorflow.python.platform._pywrap_stacktrace_handler.InstallStacktraceHandler"], "tensorflow.python.platform._pywrap_stacktrace_handler.InstallStacktraceHandler": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.NHWCToNCHW": ["<builtin>.isinstance", "<builtin>.len", "tensorflow.python.ops.array_ops.transpose"], "tensorflow.python.ops.array_ops.transpose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.NHWCToNCHW_VECT_C": ["<builtin>.isinstance", "<builtin>.len", "tensorflow.python.ops.array_ops.reshape", "<builtin>.ValueError", "tensorflow.python.ops.array_ops.transpose"], "tensorflow.python.ops.array_ops.reshape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.NCHW_VECT_CToNHWC": ["<builtin>.isinstance", "<builtin>.len", "tensorflow.python.ops.array_ops.reshape", "<builtin>.ValueError", "tensorflow.python.ops.array_ops.transpose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.NCHWToNHWC": ["<builtin>.isinstance", "<builtin>.len", "tensorflow.python.ops.array_ops.transpose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.skip_if": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.skip_if.real_skip_if": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.skip_if.real_skip_if.wrapper": ["<builtin>.callable"], "<builtin>.callable": [], "contextlib.contextmanager": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.skip_if_error": ["<builtin>.any", "<builtin>.str", "<builtin>.type", "tensorflow.python.util.nest.flatten"], "tensorflow.python.util.nest.flatten": [], "<builtin>.str": [], "<builtin>.any": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_c_shapes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.with_c_shapes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_control_flow_v2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_control_flow_v2.wrapper": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.with_control_flow_v2": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_control_flow_v2", "<builtin>.getattr", "<builtin>.callable", "<builtin>.setattr"], "<builtin>.getattr": [], "<builtin>.setattr": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_control_flow_v2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_control_flow_v2.wrapper": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_output_all_intermediates": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_output_all_intermediates.wrapper": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_pyobjects_executing_eagerly": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_pyobjects_executing_eagerly.wrap_f"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_pyobjects_executing_eagerly.wrap_f": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_pyobjects_executing_eagerly.wrap_f.decorator": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._get_object_count_by_type", "gc.collect", "gc.disable", "tensorflow.python.framework.ops.get_collection", "gc.get_referents", "<builtin>.range", "<builtin>.len", "tensorflow.python.framework.ops.get_default_graph", "<builtin>.AssertionError", "<builtin>.str", "tensorflow.python.framework.ops.has_default_graph", "tensorflow.python.eager.context.context", "tensorflow.python.eager.context.eager_mode", "gc.enable"], "tensorflow.python.eager.context.eager_mode": [], "gc.disable": [], "<builtin>.range": [], "gc.collect": [], "tensorflow.python.eager.context.context": [], "gc.get_referents": [], "tensorflow.python.framework.ops.has_default_graph": [], "tensorflow.python.framework.ops.get_collection": [], "tensorflow.python.framework.ops.get_default_graph": [], "gc.enable": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_tensors": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_tensors.decorator": ["tensorflow.python.eager.context.executing_eagerly", "<builtin>.id", "gc.collect", "gc.get_objects", "<builtin>.AssertionError", "tensorflow.python.eager.context.context", "<builtin>.len", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_tensors.decorator._is_tensorflow_object", "tensorflow.python.framework.ops.get_default_graph", "<builtin>.str", "<builtin>.set", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_garbage_created.decorator", "tensorflow.python.eager.context.eager_mode", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_tensors.decorator._is_tensorflow_object": ["<builtin>.isinstance"], "<builtin>.id": [], "tensorflow.python.eager.context.executing_eagerly": [], "tensorflow.python.framework.ops.Graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_garbage_created.decorator": ["<builtin>.dir", "tensorflow.python.eager.tape.distribution_strategy_context.get_strategy", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle", "tensorflow.python.platform.tf_logging.error", "gc.get_referrers", "gc.collect", "gc.disable", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_tensors.decorator", "<builtin>.enumerate", "<builtin>.len", "<builtin>.getattr", "gc.get_referents", "gc.set_debug", "<builtin>.range", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_garbage_created.decorator._safe_object_str", "gc.enable", "gc.get_debug", "<builtin>.repr"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.find_cycle", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.build_ref_graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.get_ignore_reason": ["tensorflow.python.util.tf_inspect.isframe", "<builtin>.len", "tensorflow.python.util.tf_inspect.getframeinfo"], "tensorflow.python.util.tf_inspect.isframe": [], "tensorflow.python.util.tf_inspect.getframeinfo": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.describe": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.get_ignore_reason", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.describe", "<builtin>.isinstance", "tensorflow.python.util.tf_inspect.getframeinfo", "tensorflow.python.util.tf_inspect.ismodule", "<builtin>.id", "tensorflow.python.util.tf_inspect.isframe", "<builtin>.type", "<builtin>.len", "tensorflow.python.util.tf_inspect.isfunction"], "tensorflow.python.util.tf_inspect.ismodule": [], "tensorflow.python.util.tf_inspect.isfunction": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.build_ref_graph": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.build_ref_graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.get_ignore_reason", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.describe", "<builtin>.id", "gc.get_referrers"], "gc.get_referrers": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.find_cycle": ["<builtin>.str", "tensorflow.python.platform.tf_logging.error", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._find_reference_cycle.find_cycle"], "tensorflow.python.platform.tf_logging.error": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_garbage_created": [], "tensorflow.python.eager.tape.distribution_strategy_context.get_strategy": [], "gc.get_debug": [], "gc.set_debug": [], "<builtin>.enumerate": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_garbage_created.decorator._safe_object_str": ["<builtin>.id"], "<builtin>.dir": [], "<builtin>.repr": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._combine_named_parameters": ["<builtin>.isinstance", "<builtin>.sorted", "itertools.product", "collections.OrderedDict"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._combine_named_parameters.<lambda1>": [], "<builtin>.sorted": [], "collections.OrderedDict": [], "itertools.product": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.generate_combinations_with_testcase_name": ["<builtin>.isinstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._combine_named_parameters", "<builtin>.str", "collections.OrderedDict", "<builtin>.list", "<builtin>.filter"], "<builtin>.filter": [], "<builtin>.list": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_all_in_graph_and_eager_modes": ["<builtin>.dir", "<builtin>.callable", "<builtin>.setattr", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_in_graph_and_eager_modes", "<builtin>.getattr"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_in_graph_and_eager_modes": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_in_graph_and_eager_modes.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.build_as_function_and_v1_graph": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.build_as_function_and_v1_graph.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.build_as_function_and_v1_graph.decorator": ["functools.wraps", "tensorflow.python.util.tf_inspect.isclass", "<builtin>.ValueError", "absl.testing.parameterized.named_parameters"], "tensorflow.python.util.tf_inspect.isclass": [], "absl.testing.parameterized.named_parameters": [], "functools.wraps": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.build_as_function_and_v1_graph.decorator.decorated": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.build_as_function_and_v1_graph.decorator.decorated.function_in_eager", "<builtin>.ValueError", "tensorflow.python.framework.ops.dismantle_graph", "tensorflow.python.eager.context.eager_mode", "tensorflow.python.framework.ops.Graph"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.build_as_function_and_v1_graph.decorator.decorated.function_in_eager": [], "tensorflow.python.framework.ops.dismantle_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_in_async_and_sync_mode": ["functools.wraps", "absl.testing.parameterized.named_parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_in_async_and_sync_mode.decorator": ["tensorflow.python.eager.context.execution_mode"], "tensorflow.python.eager.context.execution_mode": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_in_graph_and_eager_modes.decorator": ["tensorflow.python.util.tf_decorator.make_decorator", "tensorflow.python.util.tf_inspect.isclass", "<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_in_graph_and_eager_modes.decorator.decorated": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_tensors", "tensorflow.python.framework.ops.reset_default_graph", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_garbage_created", "tensorflow.python.eager.context.graph_mode", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.assert_no_new_tensors.decorator", "tensorflow.python.framework.ops.dismantle_graph", "tensorflow.python.eager.context.eager_mode", "tensorflow.python.framework.ops.Graph"], "tensorflow.python.eager.context.graph_mode": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_in_graph_and_eager_modes.decorator.decorated.run_eagerly": ["tensorflow.python.framework.ops.device"], "tensorflow.python.framework.ops.device": [], "tensorflow.python.framework.ops.reset_default_graph": [], "tensorflow.python.util.tf_decorator.make_decorator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.py_func_if_in_function": ["tensorflow.python.util.tf_decorator.make_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.py_func_if_in_function.decorated": ["tensorflow.python.framework.ops.inside_function", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNotAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllInRange", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllClose", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNear", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllInSet", "<builtin>.isinstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllLessEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNotAllClose", "<builtin>.enumerate", "tensorflow.python.ops.script_ops.py_func", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertDTypeEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllGreaterEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllLess", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertArrayNear", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNDArrayNear", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllGreater"], "tensorflow.python.framework.ops.inside_function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllLess": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate_if_both_tensors", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "tensorflow.python.platform.googletest.TestCase.assertLess", "numpy.max"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNotAllEqual": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.AssertionError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNDArrayNear": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._NDArrayNear", "tensorflow.python.platform.googletest.TestCase.assertTrue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllInSet": ["numpy.size", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "numpy.setdiff1d", "<builtin>.AssertionError", "<builtin>.list"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllInRange": ["numpy.size", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "numpy.isnan", "numpy.less", "numpy.issubdtype", "numpy.where", "<builtin>.AssertionError", "<builtin>.len", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._format_subscripts", "<builtin>.str", "numpy.greater_equal", "numpy.less_equal", "numpy.logical_or", "numpy.greater"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllClose": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertRaggedClose", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertAllCloseRecursive", "tensorflow.python.ops.ragged.ragged_tensor.is_ragged"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllGreater": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate_if_both_tensors", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "tensorflow.python.platform.googletest.TestCase.assertGreater", "numpy.min"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllLessEqual": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate_if_both_tensors", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "tensorflow.python.platform.googletest.TestCase.assertLessEqual", "numpy.max"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNotAllClose": ["<builtin>.AssertionError", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllEqual": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "numpy.isnan", "numpy.logical_and", "<builtin>.isinstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate_if_both_tensors", "numpy.all", "tensorflow.python.ops.ragged.ragged_tensor.is_ragged", "numpy.where", "numpy.array", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertRaggedEqual", "tensorflow.python.platform.googletest.TestCase.assertEqual", "numpy.logical_or", "numpy.testing.assert_array_equal", "numpy.logical_not"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertDTypeEqual": ["<builtin>.isinstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "tensorflow.python.platform.googletest.TestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllGreaterEqual": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate_if_both_tensors", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "tensorflow.python.platform.googletest.TestCase.assertGreaterEqual", "numpy.min"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllCloseAccordingToType": ["<builtin>.max", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate_if_both_tensors", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllClose"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertArrayNear": ["<builtin>.len", "tensorflow.python.platform.googletest.TestCase.assertEqual", "<builtin>.zip", "<builtin>.float", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNear"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNear": ["math.fabs", "tensorflow.python.platform.googletest.TestCase.assertTrue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.py_func_if_in_function.decorated.inner_f": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllLess", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNotAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNDArrayNear", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllInSet", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllInRange", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllGreaterEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllGreater", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllLessEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertArrayNear", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNotAllClose", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertDTypeEqual", "<builtin>.list", "<builtin>.zip", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllClose", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertNear"], "tensorflow.python.ops.script_ops.py_func": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.also_run_as_tf_function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.also_run_as_tf_function.decorated": ["tensorflow.python.eager.context.eager_mode", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.also_run_as_tf_function.decorated.bound_f", "tensorflow.python.eager.def_function.function"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.also_run_as_tf_function.decorated.bound_f": [], "tensorflow.python.eager.def_function.function": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.deprecated_graph_mode_only": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.deprecated_graph_mode_only.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.deprecated_graph_mode_only.decorator": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.deprecated_graph_mode_only.decorator", "tensorflow.python.util.tf_inspect.isclass", "<builtin>.callable", "<builtin>.setattr"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.deprecated_graph_mode_only.decorator.decorated": ["tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.eager.context.graph_mode"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_all_in_deprecated_graph_mode_only": ["<builtin>.dir", "<builtin>.callable", "<builtin>.setattr", "<builtin>.getattr", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.deprecated_graph_mode_only"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_v1_only": ["<builtin>.isinstance", "<builtin>.type", "<builtin>.ValueError", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_v1_only.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_v1_only.decorator": ["tensorflow.python.util.tf_inspect.isclass", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_v1_only.decorator", "<builtin>.setattr"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_v1_only.decorator.decorated": ["tensorflow.python.tf2.enabled"], "tensorflow.python.tf2.enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_v2_only": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_v2_only.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_v2_only.decorator": ["tensorflow.python.util.tf_inspect.isclass", "<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_v2_only.decorator.decorated": ["tensorflow.python.tf2.enabled"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_gpu_only": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_gpu_only.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_gpu_only.decorator": ["tensorflow.python.util.tf_inspect.isclass", "<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_gpu_only.decorator.decorated": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_gpu_available"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_gpu_available": ["tensorflow.python.framework.gpu_util.compute_capability_from_device_desc", "tensorflow.python.platform.tf_logging.error", "tensorflow.python.client.device_lib.list_local_devices", "<builtin>.str", "<builtin>.all"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_cuda_only": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_cuda_only.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_cuda_only.decorator": ["tensorflow.python.util.tf_inspect.isclass", "<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_cuda_only.decorator.decorated": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_gpu_available"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_gpu_or_tpu": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_gpu_or_tpu.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_gpu_or_tpu.decorator": ["tensorflow.python.util.tf_inspect.isclass", "<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_gpu_or_tpu.decorator.decorated": ["tensorflow.python.framework.config.list_physical_devices"], "tensorflow.python.framework.config.list_physical_devices": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.with_forward_compatibility_horizons": ["<builtin>.isinstance", "<builtin>.len", "<builtin>.ValueError", "<builtin>.all"], "<builtin>.all": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.with_forward_compatibility_horizons.decorator": ["tensorflow.python.util.tf_inspect.isclass", "<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.with_forward_compatibility_horizons.decorator.decorated": ["tensorflow.python.compat.compat.forward_compatibility_horizon"], "tensorflow.python.compat.compat.forward_compatibility_horizon": [], "tensorflow.python.util.deprecation.deprecated": [], "tensorflow.python.framework.gpu_util.compute_capability_from_device_desc": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.device": ["tensorflow.python.framework.ops.device", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_gpu_available"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.use_gpu": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.force_gpu": ["tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.force_cpu": ["tensorflow.python.framework.ops.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.CapturedWrites.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.CapturedWrites.contents": ["<builtin>.open"], "<builtin>.open": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.FakeEagerSession.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.FakeEagerSession.run": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate", "<builtin>.RuntimeError"], "<builtin>.RuntimeError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._eval_helper", "tensorflow.python.framework.ops.get_default_session", "tensorflow.python.eager.context.executing_eagerly", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.test_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.ErrorLoggingSession.run": ["<builtin>.isinstance", "<builtin>.str", "<builtin>.super", "tensorflow.python.platform.tf_logging.error"], "<builtin>.super": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_cudnn_autotune": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_cudnn_autotune.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_cudnn_autotune.decorator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_cudnn_autotune.decorator.decorated": ["os.environ.get"], "os.environ.get": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_tf_xla_constant_folding": ["<builtin>.isinstance", "<builtin>.type", "<builtin>.ValueError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_tf_xla_constant_folding.enable_tf_xla_constant_folding_impl": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_tf_xla_constant_folding.enable_tf_xla_constant_folding_impl.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_tf_xla_constant_folding.enable_tf_xla_constant_folding_impl.decorator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.enable_tf_xla_constant_folding.enable_tf_xla_constant_folding_impl.decorator.decorated": ["tensorflow.python.client.pywrap_tf_session.TF_SetXlaConstantFoldingDisabled", "tensorflow.python.client.pywrap_tf_session.TF_GetXlaConstantFoldingDisabled"], "tensorflow.python.client.pywrap_tf_session.TF_GetXlaConstantFoldingDisabled": [], "tensorflow.python.client.pywrap_tf_session.TF_SetXlaConstantFoldingDisabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test.disable_test_impl": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test.disable_test_impl.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test.disable_test_impl.decorator": ["tensorflow.python.util.tf_decorator.make_decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test.disable_test_impl.decorator.decorated": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_xla": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test", "tensorflow.python.framework.is_xla_test_true.is_xla_enabled"], "tensorflow.python.framework.is_xla_test_true.is_xla_enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_mlir_bridge": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test", "tensorflow.python.framework.is_mlir_bridge_test_true.is_mlir_bridge_enabled", "tensorflow.python.framework.is_mlir_bridge_test_false.is_mlir_bridge_enabled"], "tensorflow.python.framework.is_mlir_bridge_test_true.is_mlir_bridge_enabled": [], "tensorflow.python.framework.is_mlir_bridge_test_false.is_mlir_bridge_enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_asan": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_asan_enabled"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_msan": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_msan_enabled"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_tsan": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_tsan_enabled", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_ubsan": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.is_ubsan_enabled"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_tfrt": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_tfrt.disable_tfrt_impl": ["tensorflow.python.framework.tfrt_utils.enabled", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_tfrt.disable_tfrt_impl.decorator", "tensorflow.python.util.tf_inspect.isclass"], "tensorflow.python.framework.tfrt_utils.enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_tfrt.disable_tfrt_impl.decorator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.disable_tfrt.disable_tfrt_impl.decorator.decorated": ["tensorflow.python.framework.tfrt_utils.enabled"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.for_all_test_methods": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.for_all_test_methods.all_test_methods_impl": ["<builtin>.dir", "<builtin>.callable", "<builtin>.setattr", "<builtin>.getattr", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_without_tensor_float_32.decorator", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_without_tensor_float_32"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_without_tensor_float_32": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_without_tensor_float_32.decorator": ["functools.wraps"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.no_xla_auto_jit": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._disable_test", "tensorflow.python.framework.is_xla_test_true.is_xla_enabled"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.xla_allow_fallback": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.xla_allow_fallback.xla_allow_fallback_impl": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.xla_allow_fallback.xla_allow_fallback_impl.decorator"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.xla_allow_fallback.xla_allow_fallback_impl.decorator": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.xla_allow_fallback.xla_allow_fallback_impl.decorator.decorated": ["tensorflow.python.framework.is_xla_test_true.is_xla_enabled", "tensorflow.python.client.pywrap_tf_session.TF_SetXlaEnableLazyCompilation"], "tensorflow.python.client.pywrap_tf_session.TF_SetXlaEnableLazyCompilation": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_without_tensor_float_32.decorator.decorated": ["tensorflow.python.framework.config.tensor_float_32_execution_enabled", "tensorflow.python.framework.config.enable_tensor_float_32_execution"], "tensorflow.python.framework.config.tensor_float_32_execution_enabled": [], "tensorflow.python.framework.config.enable_tensor_float_32_execution": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_all_without_tensor_float_32": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.for_all_test_methods"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.matmul_without_tf32": ["tensorflow.python.framework.config.tensor_float_32_execution_enabled", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.ops.math_ops.cast"], "tensorflow.python.ops.math_ops.cast": [], "tensorflow.python.ops.math_ops.matmul": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.EagerSessionWarner.__getattr__": ["<builtin>.AttributeError"], "<builtin>.AttributeError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.__init__": ["tensorflow.python.framework.is_xla_test_true.is_xla_enabled", "tensorflow.python.client.pywrap_tf_session.TF_SetTfXlaCpuGlobalJit", "tensorflow.python.client.pywrap_tf_session.TF_SetXlaConstantFoldingDisabled", "tensorflow.python.framework.is_mlir_bridge_test_false.is_mlir_bridge_enabled", "tensorflow.python.util.traceback_utils.disable_traceback_filtering", "tensorflow.python.client.pywrap_tf_session.TF_SetXlaMinClusterSize", "<builtin>.super", "tensorflow.python.client.pywrap_tf_session.TF_SetXlaAutoJitMode", "tensorflow.python.client.pywrap_tf_session.TF_SetXlaEnableLazyCompilation", "tensorflow.python.eager.context.context", "tensorflow.python.framework.is_mlir_bridge_test_true.is_mlir_bridge_enabled"], "tensorflow.python.util.traceback_utils.disable_traceback_filtering": [], "tensorflow.python.client.pywrap_tf_session.TF_SetXlaAutoJitMode": [], "tensorflow.python.client.pywrap_tf_session.TF_SetXlaMinClusterSize": [], "tensorflow.python.client.pywrap_tf_session.TF_SetTfXlaCpuGlobalJit": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.setUp": ["tensorflow.python.platform.googletest.TestCase.id", "tensorflow.python.platform.googletest.TestCase.skipTest", "time.time", "random.seed", "tensorflow.python.framework.ops.reset_default_graph", "tensorflow.python.framework.random_seed.set_random_seed", "tensorflow.python.framework.ops._default_graph_stack.reset", "<builtin>.super", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._ClearCachedSession", "numpy.random.seed"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._ClearCachedSession": ["tensorflow.python.client.session.Session.close"], "random.seed": [], "numpy.random.seed": [], "tensorflow.python.framework.ops._default_graph_stack.reset": [], "tensorflow.python.framework.random_seed.set_random_seed": [], "tensorflow.python.platform.googletest.TestCase.id": [], "tensorflow.python.platform.googletest.TestCase.skipTest": [], "time.time": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.tearDown": ["tensorflow.python.platform.googletest.TestCase.id", "time.time", "<builtin>.round", "<builtin>.super", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._ClearCachedSession", "tensorflow.python.platform.tf_logging.info"], "<builtin>.round": [], "tensorflow.python.platform.tf_logging.info": [], "tensorflow.python.client.session.Session.close": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.get_temp_dir": ["tempfile.mkdtemp", "tensorflow.python.platform.googletest.GetTempDir"], "tensorflow.python.platform.googletest.GetTempDir": [], "tempfile.mkdtemp": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase": ["contextlib.contextmanager", "tensorflow.python.util.deprecation.deprecated", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.py_func_if_in_function"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.captureWritesToStream": ["<builtin>.open", "os.dup2", "tempfile.mktemp", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.CapturedWrites.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.get_temp_dir", "os.dup"], "tempfile.mktemp": [], "os.dup": [], "os.dup2": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._AssertProtoEquals": ["tensorflow.python.util.protobuf.compare.assertProtoEqual", "tensorflow.python.util.protobuf.compare.ProtoEq"], "tensorflow.python.util.protobuf.compare.ProtoEq": [], "tensorflow.python.util.protobuf.compare.assertProtoEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertProtoEquals": ["<builtin>.isinstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._AssertProtoEquals", "google.protobuf.descriptor_pool.Default", "<builtin>.type", "google.protobuf.text_format.Merge"], "google.protobuf.descriptor_pool.Default": [], "google.protobuf.text_format.Merge": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertProtoEqualsVersion": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertProtoEquals"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertStartsWith": ["tensorflow.python.platform.googletest.TestCase.fail"], "tensorflow.python.platform.googletest.TestCase.fail": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._eval_tensor": ["tensorflow.python.framework.sparse_tensor.is_sparse", "<builtin>.isinstance", "<builtin>.callable", "tensorflow.python.ops.ragged.ragged_tensor.is_ragged", "six.raise_from", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._eval_helper", "tensorflow.python.util.nest.map_structure", "<builtin>.type", "tensorflow.python.ops.ragged.ragged_tensor_value.RaggedTensorValue", "<builtin>.ValueError", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._eval_tensor", "tensorflow.python.framework.ops.IndexedSlicesValue", "tensorflow.python.framework.sparse_tensor.SparseTensorValue"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._eval_helper": ["tensorflow.python.util.nest.map_structure"], "tensorflow.python.framework.sparse_tensor.is_sparse": [], "tensorflow.python.framework.sparse_tensor.SparseTensorValue": [], "tensorflow.python.ops.ragged.ragged_tensor.is_ragged": [], "tensorflow.python.ops.ragged.ragged_tensor_value.RaggedTensorValue": [], "tensorflow.python.framework.ops.IndexedSlicesValue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._eval_tensor.<lambda1>": [], "tensorflow.python.util.nest.map_structure": [], "six.raise_from": [], "tensorflow.python.framework.ops.get_default_session": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.test_session": ["tensorflow.python.platform.googletest.TestCase.id", "tensorflow.python.platform.googletest.TestCase.skipTest", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._get_cached_session", "tensorflow.python.eager.context.executing_eagerly", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._constrain_devices_and_set_default"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.session": ["tensorflow.python.eager.context.executing_eagerly", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._create_session", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._constrain_devices_and_set_default"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._create_session": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._create_session.prepare_config", "tensorflow.python.client.session.Session.__init__"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._constrain_devices_and_set_default": ["tensorflow.python.client.session.Session.graph.as_default", "tensorflow.python.eager.context.executing_eagerly", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.gpu_device_name", "tensorflow.python.client.session.Session.as_default", "tensorflow.python.client.session.Session.graph.device"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.cached_session": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.FakeEagerSession.__init__", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._get_cached_session", "tensorflow.python.eager.context.executing_eagerly", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._constrain_devices_and_set_default"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._get_cached_session": ["<builtin>.ValueError", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._create_session"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._CheckedThread.__init__": ["threading.Thread"], "threading.Thread": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._CheckedThread._protected_run": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._CheckedThread.start": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._CheckedThread.join": ["tensorflow.python.platform.googletest.TestCase.fail", "<builtin>.str"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._CheckedThread.is_alive": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._CheckedThread.check_termination": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._CheckedThread.is_alive", "tensorflow.python.platform.googletest.TestCase.fail", "<builtin>.RuntimeError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.checkedThread": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._CheckedThread.__init__"], "math.fabs": [], "tensorflow.python.platform.googletest.TestCase.assertTrue": [], "tensorflow.python.platform.googletest.TestCase.assertEqual": [], "<builtin>.float": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._NDArrayNear": ["numpy.linalg.norm"], "numpy.linalg.norm": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray": ["<builtin>.isinstance", "tensorflow.python.framework.tensor_util.is_tf_type", "numpy.array", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.framework.tensor_util.is_tf_type": [], "numpy.array": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate_if_both_tensors": ["<builtin>.isinstance", "tensorflow.python.framework.tensor_util.is_tf_type", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertArrayLikeAllClose": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "numpy.allclose", "numpy.isnan", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate_if_both_tensors", "numpy.where", "numpy.abs", "tensorflow.python.platform.googletest.TestCase.assertEqual", "numpy.testing.assert_allclose", "numpy.logical_or"], "numpy.allclose": [], "numpy.abs": [], "numpy.isnan": [], "numpy.logical_or": [], "numpy.where": [], "numpy.testing.assert_allclose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertAllCloseRecursive": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetNdArray", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertArrayLikeAllClose", "<builtin>.isinstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate_if_both_tensors", "tensorflow.python.platform.googletest.TestCase.assertCountEqual", "<builtin>.enumerate", "<builtin>.str", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertAllCloseRecursive", "<builtin>.ValueError", "<builtin>.len", "<builtin>.type", "<builtin>.zip", "<builtin>.hasattr"], "<builtin>.hasattr": [], "tensorflow.python.platform.googletest.TestCase.assertCountEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertRaggedClose": ["<builtin>.isinstance", "tensorflow.python.ops.ragged.ragged_tensor.is_ragged", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetPyList", "tensorflow.python.platform.googletest.TestCase.assertEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertListCloseRecursive"], "<builtin>.max": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertRaggedEqual": ["<builtin>.isinstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetPyList", "tensorflow.python.platform.googletest.TestCase.assertEqual", "tensorflow.python.ops.ragged.ragged_tensor.is_ragged"], "numpy.logical_and": [], "numpy.all": [], "numpy.logical_not": [], "numpy.testing.assert_array_equal": [], "numpy.min": [], "tensorflow.python.platform.googletest.TestCase.assertGreater": [], "numpy.max": [], "tensorflow.python.platform.googletest.TestCase.assertLess": [], "tensorflow.python.platform.googletest.TestCase.assertGreaterEqual": [], "tensorflow.python.platform.googletest.TestCase.assertLessEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._format_subscripts": ["<builtin>.tuple", "itertools.islice", "numpy.transpose", "<builtin>.str", "<builtin>.len", "numpy.ndim"], "numpy.transpose": [], "numpy.ndim": [], "itertools.islice": [], "<builtin>.tuple": [], "numpy.issubdtype": [], "numpy.size": [], "numpy.less_equal": [], "numpy.less": [], "numpy.greater_equal": [], "numpy.greater": [], "numpy.setdiff1d": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertRaisesWithPredicateMatch": ["tensorflow.python.platform.googletest.TestCase.fail", "<builtin>.isinstance", "<builtin>.callable", "<builtin>.AssertionError", "<builtin>.type", "<builtin>.str"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertRaisesWithPredicateMatch.predicate": ["<builtin>.isinstance", "tensorflow.python.platform.tf_logging.info", "<builtin>.str", "re.search"], "re.search": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertRaisesOpError": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertRaisesWithPredicateMatch"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertRaisesIncompatibleShapesError": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertRaisesWithPredicateMatch"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertShapeEqual": ["<builtin>.isinstance", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.TypeError"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.assertDeviceEqual": ["tensorflow.python.platform.googletest.TestCase.assertEqual", "tensorflow.python.framework.device.canonical_name"], "tensorflow.python.framework.device.canonical_name": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._GetPyList": ["<builtin>.isinstance", "numpy.array", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertListCloseRecursive": ["<builtin>.isinstance", "tensorflow.python.platform.googletest.TestCase.assertLen", "<builtin>.type", "tensorflow.python.platform.googletest.TestCase.assertEqual", "<builtin>.len", "<builtin>.range", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertListCloseRecursive", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._assertAllCloseRecursive"], "tensorflow.python.platform.googletest.TestCase.assertLen": [], "tensorflow.python.client.session.Session.graph.as_default": [], "tensorflow.python.client.session.Session.as_default": [], "tensorflow.python.client.session.Session.graph.device": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.TensorFlowTestCase._create_session.prepare_config": ["tensorflow.python.eager.context.context"], "tensorflow.python.client.session.Session.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.create_local_cluster": ["tensorflow.python.training.server_lib.ClusterSpec", "<builtin>.range", "portpicker.pick_unused_port", "tensorflow.python.training.server_lib.Server"], "portpicker.pick_unused_port": [], "tensorflow.python.training.server_lib.ClusterSpec": [], "tensorflow.python.training.server_lib.Server": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.get_node_def_from_graph": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.set_producer_version": ["tensorflow.python.framework.importer.import_graph_def", "tensorflow.core.framework.graph_pb2.GraphDef"], "tensorflow.core.framework.graph_pb2.GraphDef": [], "tensorflow.python.framework.importer.import_graph_def": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._fake_gradient_tape_context_manager": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._fake_gradient_tape_context_manager.FakeGradientTape.watch": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._fake_gradient_tape_context_manager.FakeGradientTape.gradient": ["<builtin>.isinstance", "<builtin>.len", "tensorflow.python.ops.gradients_impl.gradients"], "tensorflow.python.ops.gradients_impl.gradients": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.AbstractGradientTape.__init__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.AbstractGradientTape.__enter__": ["tensorflow.python.eager.backprop.GradientTape", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util._fake_gradient_tape_context_manager"], "tensorflow.python.eager.backprop.GradientTape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.AbstractGradientTape.__exit__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\framework\\test_util.run_functions_eagerly": ["tensorflow.python.eager.def_function.functions_run_eagerly", "tensorflow.python.platform.tf_logging.warning", "<builtin>.isinstance", "tensorflow.python.eager.context.executing_eagerly", "<builtin>.ValueError", "tensorflow.python.eager.def_function.run_functions_eagerly"], "tensorflow.python.platform.tf_logging.warning": [], "tensorflow.python.eager.def_function.functions_run_eagerly": [], "tensorflow.python.eager.def_function.run_functions_eagerly": []}
