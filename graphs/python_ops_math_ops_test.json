{"Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test": ["tensorflow.python.platform.googletest.main"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ReduceTest.testReduceAllDims": ["numpy.array", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.math_ops.reduce_sum", "tensorflow.python.framework.test_util.device", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "numpy.array": [], "tensorflow.python.framework.test_util.device": [], "tensorflow.python.ops.math_ops.reduce_sum": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ReduceTest.testReduceExtendType": ["numpy.random.randn", "tensorflow.python.ops.math_ops.reduce_sum", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.cast"], "numpy.random.randn": [], "tensorflow.python.ops.math_ops.cast": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ReduceTest.testReduceExplicitAxes": ["numpy.array", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.math_ops.reduce_sum", "tensorflow.python.framework.test_util.device", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ReduceTest.testReduceInvalidAxis": ["numpy.array", "tensorflow.python.ops.math_ops.reduce_sum", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.eager.context.executing_eagerly"], "tensorflow.python.eager.context.executing_eagerly": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ReduceTest.testReduceVar": ["numpy.array", "numpy.var", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.ops.math_ops.reduce_variance", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.ops.math_ops.reduce_variance": [], "numpy.var": [], "tensorflow.python.ops.ragged.ragged_factory_ops.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ReduceTest.testReduceVarComplex": ["numpy.array", "numpy.var", "tensorflow.python.ops.math_ops.reduce_variance", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ReduceTest.testReduceStd": ["numpy.array", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.ragged.ragged_factory_ops.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.ops.math_ops.reduce_std", "numpy.std", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.ops.math_ops.reduce_std": [], "numpy.std": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ReduceTest.testReduceStdComplex": ["numpy.array", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.math_ops.reduce_std", "numpy.std", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.LogSumExpTest.testReduceLogSumExp": ["numpy.random.rand", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.log", "numpy.exp", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.reduce_logsumexp", "numpy.sum"], "numpy.random.rand": [], "tensorflow.python.framework.test_util.use_gpu": [], "tensorflow.python.ops.math_ops.reduce_logsumexp": [], "numpy.exp": [], "numpy.sum": [], "numpy.log": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.LogSumExpTest.testReductionIndices": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertShapeEqual", "numpy.random.rand", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.log", "numpy.exp", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.reduce_logsumexp", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "numpy.sum"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertShapeEqual": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.LogSumExpTest.testReductionIndices2": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertShapeEqual", "numpy.random.rand", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.log", "numpy.exp", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.reduce_logsumexp", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "numpy.sum"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.LogSumExpTest.testKeepDims": ["numpy.random.rand", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.log", "numpy.exp", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.reduce_logsumexp", "numpy.sum"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.LogSumExpTest.testOverflow": ["numpy.array", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "numpy.max", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.log", "numpy.exp", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.reduce_logsumexp", "numpy.sum", "<builtin>.RuntimeWarning"], "numpy.max": [], "<builtin>.RuntimeWarning": [], "tensorflow.python.framework.constant_op.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.LogSumExpTest.testUnderflow": ["numpy.array", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "numpy.max", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.log", "numpy.exp", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.reduce_logsumexp", "numpy.sum", "<builtin>.RuntimeWarning"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.LogSumExpTest.testInfinity": ["tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.reduce_logsumexp", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.RoundTest.testRounding": ["numpy.array", "tensorflow.python.framework.test_util.device", "numpy.arange", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.round", "tensorflow.python.ops.math_ops.round", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "numpy.arange": [], "tensorflow.python.ops.math_ops.round": [], "numpy.round": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.MatMulTest.testMatMul2D": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose"], "tensorflow.python.ops.math_ops.matmul": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.MatMulTest.testBatchMatMul": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.arange"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.MatMulTest.testUnsupportedtypeMatmul": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.matmul", "numpy.arange", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "absl.testing.parameterized.parameters": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.MatMulTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.MatMulTest.testInt8Matmul": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "numpy.arange"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.MatMulTest.testMixPrecMatmul": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.matmul", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.arange"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.MatMulTest.testInvalidOutputTypeMatmul": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.eager.context.executing_eagerly", "numpy.arange", "tensorflow.python.eager.context.is_tfrt_enabled", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.matmul"], "tensorflow.python.eager.context.is_tfrt_enabled": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ModTest.testFloat": ["numpy.array", "tensorflow.python.ops.math_ops.mod", "numpy.fmod", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.ops.math_ops.mod": [], "numpy.fmod": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ModTest.testFixed": ["numpy.array", "tensorflow.python.ops.math_ops.mod", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.mod", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "numpy.mod": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.SquaredDifferenceTest.testSquaredDifference": ["numpy.array", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.device", "tensorflow.python.ops.math_ops.squared_difference", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.ops.math_ops.squared_difference": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.SquaredDifferenceTest.testComplexSquaredDifference": ["numpy.array", "numpy.conj", "tensorflow.python.framework.test_util.device", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.ops.math_ops.squared_difference", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "numpy.conj": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ApproximateEqualTest.testApproximateEqual": ["tensorflow.python.ops.math_ops.approximate_equal", "numpy.array", "tensorflow.python.framework.test_util.device", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.ops.math_ops.approximate_equal": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ApproximateEqualTest.testApproximateEqualShape": ["tensorflow.python.ops.math_ops.approximate_equal", "numpy.array", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ScalarMulTest.testAcceptsRefs": ["tensorflow.python.ops.variables.Variable", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.resource_variable_ops.ResourceVariable", "tensorflow.python.framework.test_util.device", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.scalar_mul"], "tensorflow.python.ops.resource_variable_ops.ResourceVariable": [], "tensorflow.python.ops.variables.Variable": [], "tensorflow.python.ops.math_ops.scalar_mul": [], "tensorflow.python.ops.variables.global_variables_initializer": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ScalarMulTest.testAcceptsConstant": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.device", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.scalar_mul"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ScalarMulTest.testAcceptsTensor": ["tensorflow.python.ops.array_ops.ones", "tensorflow.python.framework.test_util.device", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.scalar_mul"], "tensorflow.python.ops.array_ops.ones": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ScalarMulTest.testAcceptsIndexedSlices": ["tensorflow.python.framework.ops.IndexedSlices", "tensorflow.python.framework.test_util.device", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.scalar_mul"], "tensorflow.python.framework.ops.IndexedSlices": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.AddNTest.testPartials": ["<builtin>.range", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.add_n"], "<builtin>.range": [], "tensorflow.python.ops.math_ops.add_n": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.AddNTest.testFloat": ["<builtin>.range", "numpy.random.random", "numpy.random.seed", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "<builtin>.sum", "tensorflow.python.framework.ops.convert_n_to_tensor", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.add_n"], "numpy.random.seed": [], "numpy.random.random": [], "tensorflow.python.framework.ops.convert_n_to_tensor": [], "<builtin>.sum": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.AddNTest.testInt": ["<builtin>.range", "numpy.random.randint", "numpy.random.seed", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.sum", "tensorflow.python.framework.ops.convert_n_to_tensor", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.add_n"], "numpy.random.randint": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.AddNTest.testGrad": ["<builtin>.range", "tensorflow.python.ops.variables.Variable", "tensorflow.python.eager.context.executing_eagerly", "numpy.random.random", "tensorflow.python.ops.variables.global_variables_initializer", "numpy.random.seed", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "numpy.repeat", "tensorflow.python.ops.gradients.gradients", "tensorflow.python.eager.backprop.GradientTape", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.add_n"], "tensorflow.python.eager.backprop.GradientTape": [], "tensorflow.python.ops.gradients.gradients": [], "numpy.repeat": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.AddNTest.testIndexedSlices": ["tensorflow.python.framework.ops.IndexedSlices", "tensorflow.python.ops.array_ops.constant", "numpy.array", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.add_n"], "tensorflow.python.ops.array_ops.constant": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.AddNTest.test_iterable": ["tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.math_ops.add_n", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.AddNTest.test_iterable.fn", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.AddNTest.test_iterable.fn": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.intTestData": ["numpy.arange"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.floatTestData": ["numpy.arange"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeFloorDivInt": ["numpy.iinfo"], "numpy.iinfo": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeFloorModInt": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeFloorDivInt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeTruncateDivInt": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeFloorDivInt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeTruncateModInt": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeTruncateDivInt"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testFloorModInt": ["tensorflow.python.ops.math_ops.floormod", "tensorflow.python.ops.array_ops.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.intTestData", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeFloorModInt"], "tensorflow.python.ops.math_ops.floormod": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testFloorModFloat": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.floatTestData", "tensorflow.python.ops.math_ops.floormod", "tensorflow.python.ops.array_ops.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testFloorModBfloat16": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.floatTestData", "tensorflow.python.ops.math_ops.floormod", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.math_ops.cast"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testTruncateModInt": ["tensorflow.python.ops.math_ops.truncatemod", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.intTestData", "numpy.fmod", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "tensorflow.python.ops.math_ops.truncatemod": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testTruncateModFloat": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.floatTestData", "tensorflow.python.ops.math_ops.truncatemod", "numpy.fmod", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testFloorDivideInt": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeFloorDivInt", "tensorflow.python.ops.array_ops.constant", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.intTestData", "tensorflow.python.ops.math_ops.floor_div", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "tensorflow.python.ops.math_ops.floor_div": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testTruncateDivideInt": ["tensorflow.python.ops.math_ops.truncatediv", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.intTestData", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeTruncateDivInt", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "tensorflow.python.ops.math_ops.truncatediv": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest": ["tensorflow.python.framework.test_util.deprecated_graph_mode_only", "tensorflow.python.framework.test_util.disable_asan", "tensorflow.python.framework.test_util.disable_ubsan"], "tensorflow.python.framework.test_util.deprecated_graph_mode_only": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testDivideName": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.math_ops.divide", "tensorflow.python.ops.array_ops.constant"], "tensorflow.python.ops.math_ops.divide": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testRealDiv": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.floatTestData", "numpy.divide", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.ops.math_ops.realdiv"], "tensorflow.python.ops.math_ops.realdiv": [], "numpy.divide": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testDivideType": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.divide", "tensorflow.python.ops.array_ops.constant"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testComplexDiv": ["tensorflow.python.ops.math_ops.divide", "tensorflow.python.ops.array_ops.constant", "tensorflow.python.ops.math_ops.div"], "tensorflow.python.ops.math_ops.div": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testFloorDivGrad": ["tensorflow.python.ops.variables.Variable", "tensorflow.python.ops.math_ops.divide", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.ops.variables.global_variables_initializer", "tensorflow.python.ops.math_ops.floordiv", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.gradients.gradients", "tensorflow.python.eager.backprop.GradientTape", "tensorflow.python.ops.math_ops.div", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.ops.math_ops.floordiv": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testConsistent": ["tensorflow.python.ops.math_ops.truncatediv", "tensorflow.python.ops.math_ops.floormod", "tensorflow.python.ops.array_ops.constant", "tensorflow.python.ops.math_ops.truncatemod", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.intTestData", "tensorflow.python.ops.math_ops.floor_div", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "numpy.tile", "numpy.reshape"], "numpy.tile": [], "numpy.reshape": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testWithPythonValue": ["tensorflow.python.ops.math_ops.divide", "tensorflow.python.ops.array_ops.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertIsInstance": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.intEdgeTestData": ["numpy.array"], "tensorflow.python.framework.test_util.disable_asan": [], "tensorflow.python.framework.test_util.disable_ubsan": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testFloorDivModIntEdges": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeFloorDivInt", "tensorflow.python.ops.math_ops.floormod", "tensorflow.python.ops.math_ops.add", "tensorflow.python.ops.math_ops.floor_div", "tensorflow.python.ops.math_ops.multiply", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.intEdgeTestData", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeFloorModInt", "numpy.broadcast_to"], "tensorflow.python.ops.math_ops.multiply": [], "tensorflow.python.ops.math_ops.add": [], "numpy.broadcast_to": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.testTruncateDivModIntEdges": ["tensorflow.python.ops.math_ops.truncatediv", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeTruncateDivInt", "tensorflow.python.ops.math_ops.truncatemod", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.numpySafeTruncateModInt", "tensorflow.python.ops.math_ops.add", "tensorflow.python.ops.math_ops.multiply", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivAndModTest.intEdgeTestData", "numpy.broadcast_to"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivNoNanTest": ["absl.testing.parameterized.parameters"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivNoNanTest.testBasic": ["numpy.true_divide", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "numpy.arange", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.div_no_nan"], "numpy.true_divide": [], "tensorflow.python.ops.math_ops.div_no_nan": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllCloseAccordingToType": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.DivNoNanTest.testSmall": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.ops.math_ops.div_no_nan", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.MultiplyNoNanTest.testBasic": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.math_ops.multiply_no_nan", "numpy.ones", "tensorflow.python.framework.test_util.use_gpu", "numpy.zeros", "tensorflow.python.framework.constant_op.constant"], "numpy.zeros": [], "numpy.ones": [], "tensorflow.python.ops.math_ops.multiply_no_nan": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.XlogyTest.testXlogyNoZero": ["tensorflow.python.ops.math_ops.xlogy", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.log"], "tensorflow.python.ops.math_ops.xlogy": [], "tensorflow.python.ops.math_ops.log": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.XlogyTest.testXlogyWithZero": ["tensorflow.python.ops.math_ops.xlogy", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.use_gpu", "numpy.zeros", "tensorflow.python.ops.array_ops.zeros_like", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.ops.array_ops.zeros_like": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.XlogyTest.testXlogyWithZeroBroadcast": ["tensorflow.python.ops.math_ops.xlogy", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.array_ops.zeros_like", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.log"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.Xlog1pyTest.testXlog1pyNoNeg1": ["tensorflow.python.ops.math_ops.xlog1py", "tensorflow.python.ops.math_ops.log1p", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.ops.math_ops.xlog1py": [], "tensorflow.python.ops.math_ops.log1p": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.Xlog1pyTest.testXlog1pyWithNegOne": ["tensorflow.python.ops.math_ops.xlog1py", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.use_gpu", "numpy.zeros", "tensorflow.python.ops.array_ops.zeros_like", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.Xlog1pyTest.testXlog1pyWithZeroBroadcast": ["tensorflow.python.ops.math_ops.xlog1py", "tensorflow.python.ops.math_ops.log1p", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.array_ops.zeros_like", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.XdivyTest.testXdivyNoZero": ["tensorflow.python.ops.math_ops.xdivy", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.ops.math_ops.xdivy": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.XdivyTest.testXdivyWithZero": ["tensorflow.python.ops.math_ops.xdivy", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.use_gpu", "numpy.zeros", "tensorflow.python.ops.array_ops.zeros_like", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.XdivyTest.testXdivyWithZeroBroadcast": ["tensorflow.python.ops.math_ops.xdivy", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.framework.test_util.use_gpu", "tensorflow.python.ops.array_ops.zeros_like", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.NextAfterTest.testBasic": ["tensorflow.python.ops.math_ops.nextafter", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllLess", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.math_ops.is_nan", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.ops.math_ops.nextafter": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllLess": [], "tensorflow.python.ops.math_ops.is_nan": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.NextAfterTest.testBroadcasting": ["tensorflow.python.framework.constant_op.constant", "numpy.finfo", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.math_ops.nextafter"], "numpy.finfo": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.BinaryOpsTest.testErrorReceivedIfDtypeMismatchFromOp": ["tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.array_ops.ones", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.eager.context.executing_eagerly"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.BinaryOpsTest.testRHSDispatchingAndErrorRaising": ["tensorflow.python.ops.array_ops.ones", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertRaisesRegex", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.eager.context.executing_eagerly", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.BinaryOpsTest.testRHSDispatchingAndErrorRaising.RHSReturnsTrue.__radd__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.BinaryOpsTest.testRHSDispatchingAndErrorRaising.RHSRaisesError.__radd__": ["<builtin>.TypeError"], "<builtin>.TypeError": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.BinaryOpsTest.testRHSDispatchingAndErrorRaising.RHSReturnsNotImplemented.__radd__": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.SignTest.test_complex_sign_gradient": ["tensorflow.python.ops.math_ops.complex", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "tensorflow.python.eager.backprop.GradientTape", "tensorflow.python.eager.context.eager_mode", "tensorflow.python.ops.math_ops.sign"], "tensorflow.python.eager.context.eager_mode": [], "tensorflow.python.ops.math_ops.complex": [], "tensorflow.python.ops.math_ops.sign": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ReciprocalNoNanTest.testBasic": ["tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.ops.math_ops.reciprocal_no_nan", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual"], "tensorflow.python.ops.math_ops.reciprocal_no_nan": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ReciprocalNoNanTest.testInverse": ["tensorflow.python.ops.math_ops.reciprocal_no_nan", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.random.choice", "tensorflow.python.framework.constant_op.constant"], "numpy.random.choice": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.EqualityTest.testEqualityNone": ["tensorflow.python.framework.test_util.TensorFlowTestCase.assertNotEqual", "tensorflow.python.ops.math_ops.tensor_not_equals", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse", "tensorflow.python.ops.math_ops.tensor_equals", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue", "tensorflow.python.framework.constant_op.constant"], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertNotEqual": [], "tensorflow.python.ops.math_ops.tensor_equals": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertFalse": [], "tensorflow.python.ops.math_ops.tensor_not_equals": [], "tensorflow.python.framework.test_util.TensorFlowTestCase.assertTrue": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.RangeTest.testConvertToTensorRange": ["<builtin>.range", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.ops.convert_to_tensor"], "tensorflow.python.framework.ops.convert_to_tensor": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ErfcinvTest.testErfcinv": ["tensorflow.python.ops.math_ops.erfcinv", "<builtin>.int", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllClose", "numpy.random.uniform", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "tensorflow.python.ops.math_ops.erfc"], "<builtin>.int": [], "numpy.random.uniform": [], "tensorflow.python.ops.math_ops.erfcinv": [], "tensorflow.python.ops.math_ops.erfc": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest._generateRandomTensor": ["tensorflow.python.framework.constant_op.constant", "numpy.random.default_rng"], "numpy.random.default_rng": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest._getValidDtypes": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest.testArgMax": ["<builtin>.range", "tensorflow.python.ops.math_ops.argmax", "numpy.argmax", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest._generateRandomTensor", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest._getValidDtypes", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "<builtin>.len"], "<builtin>.len": [], "numpy.argmax": [], "tensorflow.python.ops.math_ops.argmax": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest.testArgMaxReturnsFirstOccurence": ["tensorflow.python.ops.math_ops.argmax", "numpy.argmax", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest._getValidDtypes", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.framework.constant_op.constant", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.ops.array_ops.zeros": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest.testArgMin": ["<builtin>.range", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest._generateRandomTensor", "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest._getValidDtypes", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.math_ops.argmin", "numpy.argmin", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate", "<builtin>.len"], "numpy.argmin": [], "tensorflow.python.ops.math_ops.argmin": [], "Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest.testArgMinReturnsFirstOccurence": ["Desktop\\Work\\tensorflow-master\\tensorflow\\python\\ops\\math_ops_test.ArgMaxMinTest._getValidDtypes", "tensorflow.python.ops.array_ops.zeros", "tensorflow.python.framework.test_util.TensorFlowTestCase.assertAllEqual", "tensorflow.python.ops.math_ops.argmin", "tensorflow.python.framework.constant_op.constant", "numpy.argmin", "tensorflow.python.framework.test_util.TensorFlowTestCase.evaluate"], "tensorflow.python.platform.googletest.main": []}
