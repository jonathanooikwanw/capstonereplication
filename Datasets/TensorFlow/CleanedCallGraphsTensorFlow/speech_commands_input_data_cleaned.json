{"speech_commands.input_data": ["compat.v1.disable_eager_execution"], "compat.v1.disable_eager_execution": [], "speech_commands.input_data.prepare_words_list": [], "speech_commands.input_data.which_set": ["<builtin>.int", "hashlib.sha1", "util.compat.as_bytes", "re.sub"], "re.sub": [], "util.compat.as_bytes": [], "hashlib.sha1": [], "<builtin>.int": [], "speech_commands.input_data.load_wav_file": ["tensorflow.audio.decode_wav", "compat.v1.Session", "tensorflow.Graph", "compat.v1.placeholder", "ops.io_ops.read_file"], "tensorflow.Graph": [], "compat.v1.Session": [], "compat.v1.placeholder": [], "ops.io_ops.read_file": [], "tensorflow.audio.decode_wav": [], "speech_commands.input_data.save_wav_file": ["ops.io_ops.write_file", "compat.v1.Session", "tensorflow.Graph", "compat.v1.placeholder", "tensorflow.audio.encode_wav"], "tensorflow.audio.encode_wav": [], "ops.io_ops.write_file": [], "speech_commands.input_data.get_features_range": ["<builtin>.Exception"], "<builtin>.Exception": [], "speech_commands.input_data.AudioProcessor.__init__": ["tensorflow.audio.encode_wav", "tensorflow.audio.encode_wav", "tensorflow.audio.encode_wav", "tensorflow.audio.encode_wav"], "speech_commands.input_data.AudioProcessor.maybe_download_and_extract_dataset": ["platform.gfile.Exists", "six.moves.urllib.request.urlretrieve", "tarfile.open", "<builtin>.print", "v1.logging.error", "v1.logging.info"], "speech_commands.input_data.AudioProcessor.prepare_data_index": ["<builtin>.enumerate", "<builtin>.len", "<builtin>.range", "<builtin>.int", "platform.gfile.Glob", "platform.gfile.Glob", "platform.gfile.Glob", "random.shuffle", "random.seed", "<builtin>.Exception", "math.ceil"], "speech_commands.input_data.AudioProcessor.prepare_background_data": ["platform.gfile.Exists", "tensorflow.audio.decode_wav", "compat.v1.Session", "tensorflow.Graph", "platform.gfile.Glob", "compat.v1.placeholder", "ops.io_ops.read_file", "<builtin>.Exception"], "speech_commands.input_data.AudioProcessor.prepare_processing_graph": ["tensorflow.expand_dims", "v1.summary.FileWriter", "compat.v1.get_default_graph", "compat.v1.placeholder", "v1.summary.merge_all", "ops.io_ops.read_file", "ops.audio_microfrontend_op.audio_microfrontend", "v1.summary.image", "tensorflow.audio.decode_wav", "<builtin>.ValueError", "<builtin>.Exception", "ops.gen_audio_ops.audio_spectrogram", "tensorflow.nn.pool", "tensorflow.add", "tensorflow.multiply", "tensorflow.cast", "tensorflow.slice", "tensorflow.pad", "ops.gen_audio_ops.mfcc", "tensorflow.clip_by_value"], "platform.gfile.Exists": [], "speech_commands.input_data.AudioProcessor.maybe_download_and_extract_dataset._progress": ["sys.stdout.flush", "sys.stdout.write", "<builtin>.float"], "<builtin>.float": [], "sys.stdout.write": [], "sys.stdout.flush": [], "six.moves.urllib.request.urlretrieve": [], "v1.logging.error": [], "<builtin>.print": [], "v1.logging.info": [], "tarfile.open": [], "random.seed": [], "<builtin>.enumerate": [], "platform.gfile.Glob": [], "<builtin>.len": [], "math.ceil": [], "<builtin>.range": [], "random.shuffle": [], "compat.v1.get_default_graph": [], "tensorflow.multiply": [], "tensorflow.pad": [], "tensorflow.slice": [], "tensorflow.add": [], "tensorflow.clip_by_value": [], "ops.gen_audio_ops.audio_spectrogram": [], "tensorflow.expand_dims": [], "v1.summary.image": [], "tensorflow.nn.pool": [], "ops.gen_audio_ops.mfcc": [], "tensorflow.cast": [], "ops.audio_microfrontend_op.audio_microfrontend": [], "<builtin>.ValueError": [], "v1.summary.merge_all": [], "v1.summary.FileWriter": [], "speech_commands.input_data.AudioProcessor.set_size": ["<builtin>.len"], "speech_commands.input_data.AudioProcessor.get_data": ["<builtin>.len", "numpy.random.randint", "<builtin>.ValueError", "<builtin>.max", "numpy.zeros", "six.moves.xrange", "<builtin>.min", "numpy.random.uniform"], "<builtin>.min": [], "<builtin>.max": [], "numpy.zeros": [], "six.moves.xrange": [], "numpy.random.randint": [], "numpy.random.uniform": [], "speech_commands.input_data.AudioProcessor.get_features_for_wav": ["numpy.zeros"], "speech_commands.input_data.AudioProcessor.get_unprocessed_data": ["<builtin>.len", "tensorflow.audio.decode_wav", "compat.v1.Session", "tensorflow.Graph", "tensorflow.multiply", "numpy.random.randint", "<builtin>.range", "compat.v1.placeholder", "numpy.zeros", "ops.io_ops.read_file"]}