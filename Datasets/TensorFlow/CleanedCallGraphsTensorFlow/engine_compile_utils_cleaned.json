{"engine.compile_utils": [], "engine.compile_utils.Container.__init__": [], "engine.compile_utils.Container.build": ["keras_parameterized.TestCase.assertAllEqual"], "engine.compile_utils.create_pseudo_output_names": ["keras_parameterized.TestCase.assertAllEqual"], "engine.compile_utils.Container._conform_to_outputs": ["util.nest.map_structure", "util.nest.map_structure", "util.nest.map_structure", "util.nest.is_nested"], "engine.compile_utils.map_to_output_names": ["copy.copy", "<builtin>.any", "<builtin>.ValueError", "util.nest.is_nested", "<builtin>.len", "util.nest.is_nested", "<builtin>.isinstance"], "engine.compile_utils.map_missing_dict_keys": ["<builtin>.isinstance"], "util.nest.is_nested": [], "engine.compile_utils.Container._conform_to_outputs.<lambda1>": [], "util.nest.map_structure": [], "engine.compile_utils.Container._maybe_broadcast_to_outputs": ["util.nest.map_structure", "util.nest.map_structure", "util.nest.flatten", "<builtin>.len"], "engine.compile_utils.Container._should_broadcast": [], "util.nest.flatten": [], "<builtin>.len": [], "engine.compile_utils.Container._maybe_broadcast_to_outputs._broadcast_fn": ["util.nest.map_structure"], "engine.compile_utils.Container._maybe_broadcast_to_outputs.<lambda1>": ["util.nest.map_structure"], "engine.compile_utils.Container._copy_object": [], "engine.compile_utils.LossesContainer.__init__": ["<builtin>.super", "keras.metrics.Mean"], "<builtin>.super": [], "keras.metrics.Mean": [], "engine.compile_utils.LossesContainer.metrics": ["util.nest.flatten"], "engine.compile_utils.LossesContainer.build": ["util.nest.flatten", "<builtin>.super", "util.nest.flatten", "util.nest.flatten", "util.nest.map_structure", "util.nest.flatten"], "engine.compile_utils.LossesContainer._create_metrics": ["keras.metrics.Mean", "<builtin>.zip", "<builtin>.len"], "engine.compile_utils.LossesContainer.built": [], "<builtin>.zip": [], "engine.compile_utils.LossesContainer.__call__": ["utils.tf_utils.is_ragged", "ops.array_ops.zeros", "utils.losses_utils.scale_loss_for_distribution", "distribute.distribution_strategy_context.get_strategy", "distribute.distribution_strategy_context.get_strategy", "<builtin>.zip", "distribute.distribution_strategy_context.get_strategy", "distribute.distribution_strategy_context.get_strategy", "distribute.distribution_strategy_context.get_strategy", "ops.math_ops.add_n", "util.nest.flatten", "util.nest.flatten", "utils.losses_utils.cast_losses_to_common_dtype", "ops.array_ops.shape"], "engine.compile_utils.match_dtype_and_rank": ["ops.array_ops.expand_dims_v2", "ops.math_ops.cast"], "engine.compile_utils.get_mask": ["<builtin>.getattr"], "engine.compile_utils.apply_mask": ["ops.math_ops.cast", "utils.losses_utils.squeeze_or_expand_dimensions"], "distribute.distribution_strategy_context.get_strategy": [], "utils.tf_utils.is_ragged": [], "ops.array_ops.shape": [], "utils.losses_utils.scale_loss_for_distribution": [], "utils.losses_utils.cast_losses_to_common_dtype": [], "ops.math_ops.add_n": [], "ops.array_ops.zeros": [], "engine.compile_utils.LossesContainer.reset_state": ["util.nest.flatten"], "engine.compile_utils.LossesContainer._get_loss_object": ["<builtin>.ValueError", "util.nest.flatten", "keras.losses.get", "keras.losses.LossFunctionWrapper", "<builtin>.isinstance"], "keras.losses.get": [], "<builtin>.isinstance": [], "engine.compile_utils.get_custom_object_name": ["utils.generic_utils.to_snake_case", "<builtin>.hasattr"], "<builtin>.ValueError": [], "keras.losses.LossFunctionWrapper": [], "engine.compile_utils.LossesContainer._should_broadcast": ["util.nest.is_nested"], "engine.compile_utils.LossesContainer._copy_object": [], "engine.compile_utils.MetricsContainer.__init__": ["<builtin>.super"], "engine.compile_utils.MetricsContainer.metrics": [], "engine.compile_utils.MetricsContainer.unweighted_metrics": ["util.nest.flatten"], "engine.compile_utils.MetricsContainer.weighted_metrics": ["util.nest.flatten"], "engine.compile_utils.MetricsContainer.build": ["util.nest.flatten", "<builtin>.super", "util.nest.flatten", "util.nest.flatten", "util.nest.map_structure_up_to", "util.nest.list_to_tuple", "util.nest.list_to_tuple", "util.nest.flatten_up_to"], "util.nest.list_to_tuple": [], "util.nest.map_structure_up_to": [], "util.nest.flatten_up_to": [], "engine.compile_utils.MetricsContainer._set_metric_names": ["<builtin>.ValueError", "<builtin>.set", "<builtin>.zip", "<builtin>.len"], "engine.compile_utils.MetricsContainer._create_ordered_metrics": ["util.nest.flatten", "<builtin>.zip"], "engine.compile_utils.MetricsContainer.built": [], "<builtin>.set": [], "engine.compile_utils.MetricsContainer.update_state": ["util.nest.flatten", "util.nest.flatten", "<builtin>.zip", "util.nest.flatten", "util.nest.flatten", "util.nest.flatten", "<builtin>.all", "util.nest.flatten"], "<builtin>.all": [], "engine.compile_utils.MetricsContainer.reset_state": ["util.nest.flatten", "<builtin>.isinstance"], "engine.compile_utils.MetricsContainer._get_metric_objects": ["util.nest.flatten", "util.nest.flatten"], "engine.compile_utils.MetricsContainer._get_metric_object": ["<builtin>.ValueError", "keras.metrics.get", "keras.metrics.MeanMetricWrapper", "<builtin>.len", "<builtin>.str", "keras.metrics.MeanMetricWrapper", "<builtin>.isinstance"], "<builtin>.str": [], "keras.metrics.get": [], "keras.metrics.MeanMetricWrapper": [], "engine.compile_utils.MetricsContainer._should_broadcast": ["<builtin>.isinstance", "<builtin>.any", "util.nest.is_nested"], "<builtin>.any": [], "engine.compile_utils.MetricsContainer._copy_object": ["<builtin>.isinstance"], "engine.compile_utils._create_pseudo_names": ["<builtin>.list", "util.nest.yield_flat_paths", "util.nest.map_structure", "<builtin>.str", "<builtin>.isinstance"], "engine.compile_utils.create_pseudo_input_names": ["util.nest.map_structure"], "engine.compile_utils._create_pseudo_names.one_index": ["<builtin>.isinstance"], "util.nest.yield_flat_paths": [], "<builtin>.list": [], "copy.copy": [], "ops.array_ops.expand_dims_v2": [], "ops.math_ops.cast": [], "<builtin>.getattr": [], "utils.losses_utils.squeeze_or_expand_dimensions": [], "<builtin>.hasattr": [], "utils.generic_utils.to_snake_case": []}