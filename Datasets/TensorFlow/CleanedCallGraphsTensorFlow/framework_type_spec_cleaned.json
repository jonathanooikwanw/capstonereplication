{"framework.type_spec": ["util.tf_export.tf_export", "re.compile", "util._pywrap_utils.RegisterType", "<builtin>.globals", "util.lazy_loader.LazyLoader"], "<builtin>.globals": [], "util.lazy_loader.LazyLoader": [], "framework.type_spec.TypeSpecTraceType.__init__": [], "framework.type_spec.TypeSpecTraceType.is_subtype_of": [], "framework.type_spec.TypeSpecTraceType.most_specific_common_supertype": [], "framework.type_spec.TypeSpecTraceType.__hash__": ["<builtin>.hash"], "<builtin>.hash": [], "framework.type_spec.TypeSpecTraceType.__eq__": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "framework.type_spec.TypeSpec": ["abc.abstractproperty", "abc.abstractmethod"], "abc.abstractproperty": [], "framework.type_spec.TypeSpec.value_type": ["<builtin>.type", "<builtin>.NotImplementedError"], "<builtin>.type": [], "<builtin>.NotImplementedError": [], "framework.type_spec.TypeSpec.is_compatible_with": ["<builtin>.type", "util.lazy_loader.LazyLoader", "util.lazy_loader.LazyLoader", "util.lazy_loader.LazyLoader", "<builtin>.isinstance"], "framework.type_spec.type_spec_from_value": ["<builtin>.type", "util.lazy_loader.LazyLoader", "platform.tf_logging.vlog", "<builtin>.TypeError"], "framework.type_spec.TypeSpec._serialize": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.TypeSpec.__is_compatible": ["<builtin>.all", "<builtin>.sorted", "platform.tf_logging.vlog", "platform.tf_logging.vlog", "<builtin>.len", "<builtin>.zip", "<builtin>.isinstance"], "framework.type_spec.TypeSpec.most_specific_compatible_type": ["<builtin>.type", "platform.tf_logging.vlog", "platform.tf_logging.vlog", "platform.tf_logging.vlog", "<builtin>.ValueError"], "<builtin>.ValueError": [], "framework.type_spec.TypeSpec.__most_specific_compatible_type_serialization": ["<builtin>.type", "collections.OrderedDict", "<builtin>.sorted", "platform.tf_logging.vlog", "<builtin>.tuple", "util.nest.is_namedtuple", "<builtin>.len", "util.nest.is_namedtuple", "<builtin>.ValueError", "<builtin>.zip", "<builtin>.AssertionError", "<builtin>.isinstance"], "framework.type_spec.TypeSpec._deserialize": [], "framework.type_spec.TypeSpec._with_tensor_ranks_only": ["util.nest.is_namedtuple", "util.nest.is_namedtuple", "util.nest.map_structure"], "framework.type_spec.TypeSpec._with_tensor_ranks_only.relax": ["framework.tensor_shape.TensorShape", "<builtin>.isinstance"], "framework.tensor_shape.TensorShape": [], "util.nest.map_structure": [], "abc.abstractmethod": [], "framework.type_spec.TypeSpec._to_components": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.TypeSpec._from_components": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.TypeSpec._component_specs": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.TypeSpec._to_tensor_list": ["framework.tensor_shape.TensorShape", "util.nest.flatten"], "util.nest.flatten": [], "framework.type_spec.TypeSpec._from_tensor_list": ["util.nest.flatten", "util.nest.flatten"], "framework.type_spec.TypeSpec.__check_tensor_list": ["<builtin>.enumerate", "<builtin>.len", "<builtin>.ValueError", "util.nest.flatten", "<builtin>.zip"], "framework.type_spec.TypeSpec._from_compatible_tensor_list": ["util.nest.pack_sequence_as", "util.nest.pack_sequence_as"], "util.nest.pack_sequence_as": [], "framework.type_spec.TypeSpec._flat_tensor_specs": ["util.nest.flatten"], "framework.type_spec.TypeSpec.__eq__": ["<builtin>.type", "util.nest.flatten"], "framework.type_spec.TypeSpec.__get_cmp_key": ["<builtin>.type", "util.nest.flatten", "util.nest.flatten"], "framework.type_spec.TypeSpec.__ne__": [], "framework.type_spec.TypeSpec.__hash__": ["<builtin>.hash", "util.nest.flatten"], "framework.type_spec.TypeSpec.__reduce__": ["<builtin>.type", "util.nest.flatten"], "framework.type_spec.TypeSpec.__repr__": ["<builtin>.type", "util.nest.flatten"], "framework.type_spec.TypeSpec._to_legacy_output_types": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.TypeSpec._to_legacy_output_shapes": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.TypeSpec._to_legacy_output_classes": [], "framework.type_spec.TypeSpec.__tf_tracing_type__": ["util.nest.flatten"], "<builtin>.len": [], "<builtin>.zip": [], "<builtin>.enumerate": [], "framework.type_spec.TypeSpec.__make_cmp_key": ["<builtin>.type", "util.nest.flatten", "util.nest.flatten", "<builtin>.sorted", "<builtin>.tuple", "<builtin>.ValueError", "<builtin>.isinstance"], "<builtin>.tuple": [], "<builtin>.sorted": [], "framework.type_spec.TypeSpec.__nested_list_to_tuple": ["util.nest.flatten", "<builtin>.tuple", "<builtin>.isinstance"], "framework.type_spec.TypeSpec.__same_types": ["<builtin>.type", "util.nest.is_namedtuple", "util.nest.same_namedtuples"], "util.nest.is_namedtuple": [], "util.nest.same_namedtuples": [], "<builtin>.all": [], "collections.OrderedDict": [], "<builtin>.AssertionError": [], "framework.type_spec.TypeSpecBatchEncoder": ["abc.abstractmethod"], "framework.type_spec.TypeSpecBatchEncoder.batch": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.TypeSpecBatchEncoder.unbatch": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.TypeSpecBatchEncoder.encode": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.TypeSpecBatchEncoder.decode": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.TypeSpecBatchEncoder.encoding_specs": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.LegacyTypeSpecBatchEncoder.batch": [], "framework.type_spec.LegacyTypeSpecBatchEncoder.unbatch": [], "framework.type_spec.LegacyTypeSpecBatchEncoder.encode": ["<builtin>.isinstance", "<builtin>.ValueError"], "framework.type_spec.LegacyTypeSpecBatchEncoder.decode": [], "framework.type_spec.LegacyTypeSpecBatchEncoder.encoding_specs": [], "framework.type_spec.BatchableTypeSpec": ["abc.abstractmethod"], "framework.type_spec.BatchableTypeSpec._batch": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.BatchableTypeSpec._unbatch": ["<builtin>.type", "<builtin>.NotImplementedError"], "framework.type_spec.BatchableTypeSpec._flat_tensor_specs": ["functools.partial", "util.nest.flatten", "util.nest.map_structure"], "functools.partial": [], "framework.type_spec.BatchableTypeSpec._to_tensor_list": ["util.nest.map_structure", "util.nest.flatten", "util.nest.map_structure"], "framework.type_spec.BatchableTypeSpec._to_batched_tensor_list": ["util.nest.map_structure", "util.nest.map_structure", "util.nest.flatten", "<builtin>.ValueError", "<builtin>.any"], "framework.type_spec.BatchableTypeSpec._to_batched_tensor_list.<lambda1>": ["util.nest.flatten", "<builtin>.isinstance"], "framework.type_spec.batchable_to_tensor_list": ["<builtin>.hasattr", "util.nest.map_structure", "functools.partial", "util.nest.flatten", "<builtin>.isinstance"], "<builtin>.any": [], "framework.type_spec.BatchableTypeSpec._from_compatible_tensor_list": ["util.nest.pack_sequence_as", "util.nest.map_structure", "util.nest.map_structure_up_to", "util.nest.map_structure_up_to", "functools.partial"], "util.nest.map_structure_up_to": [], "framework.type_spec.get_batchable_flat_tensor_specs": ["<builtin>.hasattr", "util.nest.map_structure", "functools.partial", "util.nest.flatten", "warnings.warn", "<builtin>.isinstance"], "<builtin>.hasattr": [], "warnings.warn": [], "framework.type_spec.batchable_from_tensor_list": ["<builtin>.hasattr", "util.nest.pack_sequence_as", "util.nest.map_structure", "util.nest.map_structure_up_to", "<builtin>.len", "<builtin>.isinstance"], "util.tf_export.tf_export": [], "framework.type_spec._type_spec_from_value": ["<builtin>.type", "<builtin>.reversed", "util.nest.map_structure_up_to", "<builtin>.len", "<builtin>.isinstance"], "platform.tf_logging.vlog": [], "<builtin>.TypeError": [], "<builtin>.reversed": [], "framework.type_spec.register_type_spec_from_value_converter": ["util.tf_decorator.unwrap"], "util.tf_decorator.unwrap": [], "util._pywrap_utils.RegisterType": [], "re.compile": [], "framework.type_spec.register": ["<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.ValueError"], "framework.type_spec.register.decorator_fn": ["<builtin>.TypeError", "<builtin>.issubclass", "<builtin>.isinstance", "<builtin>.ValueError"], "<builtin>.issubclass": [], "framework.type_spec.get_name": ["<builtin>.TypeError", "<builtin>.issubclass", "<builtin>.isinstance", "<builtin>.ValueError"], "framework.type_spec.lookup": ["<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.ValueError"]}