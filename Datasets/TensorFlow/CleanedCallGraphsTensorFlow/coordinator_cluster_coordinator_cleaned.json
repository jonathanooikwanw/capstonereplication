{"coordinator.cluster_coordinator": [], "coordinator.cluster_coordinator.InputError.__init__": ["<builtin>.super", "<builtin>.str"], "<builtin>.str": [], "<builtin>.super": [], "coordinator.cluster_coordinator._maybe_rebuild_remote_values": ["util.nest.map_structure"], "coordinator.cluster_coordinator._maybe_rebuild_remote_values._get_error": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "util.nest.map_structure": [], "coordinator.cluster_coordinator._maybe_get_remote_value": ["<builtin>.AssertionError", "<builtin>.isinstance"], "<builtin>.AssertionError": [], "coordinator.cluster_coordinator._maybe_as_type_spec": ["<builtin>.ValueError", "<builtin>.isinstance"], "<builtin>.ValueError": [], "coordinator.cluster_coordinator._select_worker_slice": ["util.nest.map_structure"], "coordinator.cluster_coordinator._select_worker_slice._get": ["<builtin>.isinstance"], "coordinator.cluster_coordinator._disallow_remote_value_as_input": ["util.nest.map_structure"], "coordinator.cluster_coordinator._disallow_remote_value_as_input._raise_if_remote_value": ["<builtin>.ValueError", "<builtin>.isinstance"], "coordinator.cluster_coordinator.Closure.__init__": ["util.nest.map_structure", "coordinator.metric_utils.monitored_timer", "<builtin>.isinstance", "util.nest.map_structure", "<builtin>.callable", "util.nest.map_structure", "<builtin>.hasattr", "<builtin>.ValueError", "framework.func_graph.convert_structure_to_signature"], "<builtin>.callable": [], "coordinator.metric_utils.monitored_timer": [], "<builtin>.hasattr": [], "framework.func_graph.convert_structure_to_signature": [], "coordinator.cluster_coordinator.Closure.build_output_remote_value": ["weakref.ref", "coordinator.values.RemoteValueImpl", "<builtin>.ValueError"], "coordinator.values.RemoteValueImpl": [], "weakref.ref": [], "coordinator.cluster_coordinator.Closure.maybe_call_with_output_remote_value": [], "coordinator.cluster_coordinator.Closure.mark_cancelled": ["framework.errors.CancelledError", "framework.errors.CancelledError"], "framework.errors.CancelledError": [], "coordinator.cluster_coordinator.Closure.mark_cancelled.<lambda1>": [], "coordinator.cluster_coordinator.Closure.execute_on": ["framework.errors.CancelledError", "framework.errors.CancelledError", "coordinator.metric_utils.monitored_timer", "<builtin>.isinstance", "util.nest.map_structure", "util.nest.map_structure", "coordinator.coordinator_context.with_dispatch_context", "coordinator.coordinator_context.with_dispatch_context", "eager.context.executor_scope", "framework.ops.device"], "framework.ops.device": [], "eager.context.executor_scope": [], "coordinator.coordinator_context.with_dispatch_context": [], "coordinator.cluster_coordinator.Closure.execute_on.<lambda1>": [], "coordinator.cluster_coordinator.ResourceClosure.build_output_remote_value": ["weakref.ref", "coordinator.values.RemoteValueImpl"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.__init__": ["six.moves.queue.Queue", "threading.Condition", "threading.Lock", "coordinator.watchdog.WatchDog", "platform.tf_logging.warning", "eager.cancellation.CancellationManager"], "threading.Lock": [], "threading.Condition": [], "eager.cancellation.CancellationManager": [], "platform.tf_logging.warning": [], "six.moves.queue.Queue": [], "coordinator.watchdog.WatchDog": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue._on_watchdog_timeout": ["platform.tf_logging.info"], "platform.tf_logging.info": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue.stop": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue._cancel_all_closures": ["eager.cancellation.CancellationManager"], "coordinator.cluster_coordinator._CoordinatedClosureQueue._raise_if_error": ["eager.cancellation.CancellationManager", "platform.tf_logging.error"], "platform.tf_logging.error": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue.put": ["platform.tf_logging.error"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.put.<lambda1>": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue.get": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue.mark_finished": ["<builtin>.AssertionError"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.put_back": ["<builtin>.AssertionError"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.put_back.<lambda1>": [], "coordinator.cluster_coordinator._CoordinatedClosureQueue.wait": ["platform.tf_logging.error"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.mark_failed": ["<builtin>.AssertionError"], "coordinator.cluster_coordinator._CoordinatedClosureQueue.done": ["platform.tf_logging.error"], "coordinator.cluster_coordinator.WorkerPreemptionHandler.__init__": ["threading.Thread", "threading.Event", "threading.Condition", "threading.Lock"], "threading.Event": [], "threading.Thread": [], "coordinator.cluster_coordinator.WorkerPreemptionHandler.stop": [], "coordinator.cluster_coordinator.WorkerPreemptionHandler._validate_preemption_failure": ["platform.tf_logging.error"], "coordinator.cluster_coordinator._is_worker_failure": ["<builtin>.str", "<builtin>.isinstance"], "coordinator.cluster_coordinator.WorkerPreemptionHandler": ["contextlib.contextmanager"], "contextlib.contextmanager": [], "coordinator.cluster_coordinator.WorkerPreemptionHandler.wait_on_failure": ["<builtin>.isinstance", "platform.tf_logging.info", "platform.tf_logging.info", "platform.tf_logging.info", "platform.tf_logging.info", "platform.tf_logging.error", "platform.tf_logging.error", "<builtin>.str"], "coordinator.cluster_coordinator.Cluster._record_and_ignore_transient_ps_failure": ["platform.tf_logging.error", "platform.tf_logging.error", "<builtin>.str"], "coordinator.cluster_coordinator.Worker._set_resources_aborted": [], "coordinator.cluster_coordinator.WorkerPreemptionHandler._preemption_handler": ["platform.tf_logging.info", "platform.tf_logging.info", "eager.context.context", "platform.tf_logging.error"], "eager.context.context": [], "coordinator.cluster_coordinator.Worker.__init__": ["threading.Thread"], "coordinator.cluster_coordinator.Worker.stop": [], "coordinator.cluster_coordinator.Worker._set_dead": ["<builtin>.NotImplementedError"], "<builtin>.NotImplementedError": [], "coordinator.cluster_coordinator.Worker._process_closure": ["coordinator.metric_utils.monitored_timer", "<builtin>.isinstance", "coordinator.metric_utils.monitored_timer", "coordinator.metric_utils.monitored_timer", "coordinator.metric_utils.monitored_timer", "platform.tf_logging.error"], "coordinator.cluster_coordinator.Worker._process_closure.<lambda1>": ["platform.tf_logging.error"], "coordinator.cluster_coordinator.Worker._process_closure.<lambda2>": ["platform.tf_logging.error"], "coordinator.cluster_coordinator.Worker._process_closure.<lambda3>": [], "coordinator.cluster_coordinator.Worker._process_closure.<lambda4>": [], "coordinator.cluster_coordinator.Worker._maybe_delay": ["<builtin>.min", "platform.tf_logging.info", "<builtin>.int", "os.environ.get", "time.sleep"], "os.environ.get": [], "<builtin>.int": [], "<builtin>.min": [], "time.sleep": [], "coordinator.cluster_coordinator.Worker._process_queue": ["platform.tf_logging.info", "platform.tf_logging.info", "platform.tf_logging.info"], "coordinator.cluster_coordinator.Worker.create_resource": ["platform.tf_logging.info", "platform.tf_logging.info", "platform.tf_logging.info"], "coordinator.cluster_coordinator.Worker._register_resource": ["weakref.ref", "<builtin>.ValueError", "<builtin>.isinstance"], "coordinator.cluster_coordinator.Cluster.__init__": ["platform.tf_logging.info", "platform.tf_logging.info", "<builtin>.range", "<builtin>.int", "platform.tf_logging.info", "<builtin>.enumerate", "eager.context.get_server_def", "threading.Lock", "os.environ.get"], "eager.context.get_server_def": [], "<builtin>.range": [], "<builtin>.enumerate": [], "coordinator.cluster_coordinator.Cluster.stop": ["eager.context.get_server_def", "eager.context.get_server_def"], "coordinator.cluster_coordinator._is_ps_failure": ["<builtin>.str", "<builtin>.isinstance"], "coordinator.cluster_coordinator._extract_failed_ps_instances": ["<builtin>.int", "<builtin>.set", "re.findall"], "coordinator.cluster_coordinator.Cluster.schedule": ["eager.context.get_server_def", "eager.context.get_server_def", "eager.context.get_server_def", "eager.context.get_server_def"], "coordinator.cluster_coordinator.Cluster.join": ["eager.context.get_server_def"], "coordinator.cluster_coordinator.Cluster.done": ["eager.context.get_server_def"], "coordinator.cluster_coordinator.ClusterCoordinator.__new__": ["<builtin>.super"], "coordinator.cluster_coordinator.ClusterCoordinator.__init__": ["eager.context.get_server_def", "<builtin>.getattr", "<builtin>.ValueError", "<builtin>.isinstance"], "<builtin>.getattr": [], "coordinator.cluster_coordinator.ClusterCoordinator.__del__": ["eager.context.get_server_def"], "coordinator.cluster_coordinator.ClusterCoordinator.strategy": [], "coordinator.cluster_coordinator.ClusterCoordinator.schedule": ["eager.context.get_server_def", "<builtin>.TypeError", "<builtin>.isinstance"], "<builtin>.TypeError": [], "coordinator.cluster_coordinator.ClusterCoordinator.join": ["eager.context.get_server_def"], "coordinator.cluster_coordinator.ClusterCoordinator.done": ["eager.context.get_server_def"], "coordinator.cluster_coordinator.ClusterCoordinator.create_per_worker_dataset": ["coordinator.values.get_per_worker_dataset"], "coordinator.values.get_per_worker_dataset": [], "coordinator.cluster_coordinator.ClusterCoordinator._create_per_worker_resources": ["coordinator.values.PerWorkerValues", "<builtin>.tuple"], "<builtin>.tuple": [], "coordinator.values.PerWorkerValues": [], "coordinator.cluster_coordinator.ClusterCoordinator.fetch": ["util.nest.map_structure"], "coordinator.cluster_coordinator.ClusterCoordinator.fetch._maybe_fetch": ["<builtin>.isinstance"], "re.findall": [], "<builtin>.set": []}