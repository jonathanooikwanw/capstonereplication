{"linalg.linear_operator_kronecker": [], "linalg.linear_operator_kronecker._prefer_static_shape": ["ops.array_ops.shape"], "ops.array_ops.shape": [], "linalg.linear_operator_kronecker._prefer_static_concat_shape": ["framework.tensor_util.constant_value", "<builtin>.isinstance", "ops.array_ops.concat", "<builtin>.all"], "framework.tensor_util.constant_value": [], "<builtin>.isinstance": [], "<builtin>.all": [], "ops.array_ops.concat": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker.__init__": ["<builtin>.all", "framework.ops.name_scope", "<builtin>.super", "<builtin>.str", "ops.check_ops.assert_proper_iterable", "<builtin>.ValueError", "<builtin>.list", "<builtin>.dict", "<builtin>.TypeError", "linear_operator.LinearOperator._set_graph_parents"], "<builtin>.dict": [], "ops.check_ops.assert_proper_iterable": [], "<builtin>.list": [], "<builtin>.ValueError": [], "<builtin>.str": [], "<builtin>.TypeError": [], "framework.ops.name_scope": [], "<builtin>.super": [], "linear_operator.LinearOperator._set_graph_parents": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker.operators": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker._shape": ["framework.tensor_shape.TensorShape", "framework.common_shapes.broadcast_shape"], "framework.tensor_shape.TensorShape": [], "framework.common_shapes.broadcast_shape": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker._shape_tensor": ["ops.array_ops.concat", "ops.array_ops.broadcast_dynamic_shape"], "ops.array_ops.broadcast_dynamic_shape": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker._solve_matmul_internal": ["framework.tensor_util.constant_value", "ops.math_ops.conj", "ops.math_ops.conj", "ops.math_ops.conj", "linear_operator.LinearOperator.range_dimension_tensor", "linalg.linalg_impl.transpose", "framework.common_shapes.broadcast_shape", "ops.math_ops.cast", "<builtin>.reversed", "ops.math_ops.cast", "<builtin>.int", "linear_operator.LinearOperator.domain_dimension_tensor", "ops.array_ops.reshape", "ops.array_ops.reshape"], "ops.math_ops.conj": [], "linalg.linalg_impl.transpose": [], "<builtin>.reversed": [], "<builtin>.int": [], "ops.math_ops.cast": [], "ops.array_ops.reshape": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker._matmul.matmul_fn": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker._solve.solve_fn": [], "linear_operator.LinearOperator.domain_dimension_tensor": [], "linear_operator.LinearOperator.range_dimension_tensor": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker._matmul": ["ops.array_ops.reshape"], "linalg.linear_operator_kronecker.LinearOperatorKronecker._solve": ["ops.array_ops.reshape"], "linalg.linear_operator_kronecker.LinearOperatorKronecker._determinant": ["linear_operator.LinearOperator.domain_dimension_tensor", "ops.math_ops.cast"], "linalg.linear_operator_kronecker.LinearOperatorKronecker._log_abs_determinant": ["linear_operator.LinearOperator.domain_dimension_tensor", "ops.math_ops.cast"], "linalg.linear_operator_kronecker.LinearOperatorKronecker._trace": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker._diag_part": ["ops.array_ops.reshape", "LinearOperator.batch_shape.concatenate", "ops.array_ops.concat", "ops.array_ops.shape"], "LinearOperator.batch_shape.concatenate": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker._to_dense": ["ops.array_ops.reshape", "ops.array_ops.reshape", "ops.array_ops.reshape"], "linalg.linear_operator_kronecker.LinearOperatorKronecker._eigvals": ["ops.array_ops.reshape", "ops.array_ops.concat", "ops.array_ops.shape"], "linalg.linear_operator_kronecker.LinearOperatorKronecker._assert_non_singular": ["ops.control_flow_ops.group", "framework.errors.InvalidArgumentError", "<builtin>.all"], "ops.control_flow_ops.group": [], "framework.errors.InvalidArgumentError": [], "linalg.linear_operator_kronecker.LinearOperatorKronecker._assert_self_adjoint": ["ops.control_flow_ops.group", "framework.errors.InvalidArgumentError", "<builtin>.all"], "linalg.linear_operator_kronecker.LinearOperatorKronecker._composite_tensor_fields": []}