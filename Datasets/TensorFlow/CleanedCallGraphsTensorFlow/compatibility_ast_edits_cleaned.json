{"compatibility.ast_edits": ["collections.namedtuple", "re.compile"], "re.compile": [], "collections.namedtuple": [], "compatibility.ast_edits.full_name_node": ["six.ensure_str", "ast.Load", "ast.Attribute", "ast.Name"], "six.ensure_str": [], "ast.Load": [], "ast.Name": [], "ast.Attribute": [], "compatibility.ast_edits.get_arg_value": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "compatibility.ast_edits.uses_star_args_in_call": ["<builtin>.isinstance"], "compatibility.ast_edits.uses_star_kwargs_in_call": [], "compatibility.ast_edits.uses_star_args_or_kwargs_in_call": ["test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty"], "compatibility.ast_edits.excluded_from_module_rename": [], "compatibility.ast_edits.APIChangeSpec.preprocess": [], "compatibility.ast_edits.APIChangeSpec.clear_preprocessing": [], "compatibility.ast_edits.NoUpdateSpec.__init__": [], "compatibility.ast_edits._PastaEditVisitor.__init__": [], "compatibility.ast_edits._PastaEditVisitor.visit": ["<builtin>.super"], "<builtin>.super": [], "compatibility.ast_edits._PastaEditVisitor.errors": [], "compatibility.ast_edits._PastaEditVisitor.warnings": [], "compatibility.ast_edits._PastaEditVisitor.warnings_and_errors": [], "compatibility.ast_edits._PastaEditVisitor.info": [], "compatibility.ast_edits._PastaEditVisitor.log": [], "compatibility.ast_edits._PastaEditVisitor.add_log": ["<builtin>.print"], "<builtin>.print": [], "compatibility.ast_edits._PastaEditVisitor.add_logs": ["<builtin>.print"], "compatibility.ast_edits._PastaEditVisitor._get_applicable_entries": ["six.ensure_str", "<builtin>.getattr"], "<builtin>.getattr": [], "compatibility.ast_edits._PastaEditVisitor._get_applicable_dict": ["six.ensure_str", "<builtin>.getattr"], "compatibility.ast_edits._PastaEditVisitor._get_full_name": ["<builtin>.reversed", "<builtin>.isinstance"], "<builtin>.reversed": [], "compatibility.ast_edits._PastaEditVisitor._maybe_add_warning": ["test_util.TensorFlowTestCase.assertEmpty", "six.ensure_str"], "compatibility.ast_edits._PastaEditVisitor._maybe_add_module_deprecation_warning": ["test_util.TensorFlowTestCase.assertEmpty", "six.ensure_str"], "compatibility.ast_edits._PastaEditVisitor._maybe_add_call_warning": ["six.ensure_str", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "<builtin>.isinstance", "<builtin>.sorted"], "<builtin>.sorted": [], "compatibility.ast_edits._PastaEditVisitor._maybe_rename": ["pasta.ast_utils.replace_child", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "ast.copy_location"], "ast.copy_location": [], "pasta.ast_utils.replace_child": [], "compatibility.ast_edits._PastaEditVisitor._maybe_change_to_function_call": ["pasta.ast_utils.replace_child", "ast.copy_location", "ast.Call", "test_util.TensorFlowTestCase.assertEmpty", "<builtin>.isinstance"], "ast.Call": [], "compatibility.ast_edits._PastaEditVisitor._maybe_add_arg_names": ["test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "ast.keyword", "<builtin>.isinstance"], "ast.keyword": [], "compatibility.ast_edits._PastaEditVisitor._maybe_modify_args": ["test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "<builtin>.getattr", "test_util.TensorFlowTestCase.assertEmpty"], "compatibility.ast_edits._PastaEditVisitor.visit_Call": ["test_util.TensorFlowTestCase.assertEmpty", "pasta.ast_utils.replace_child", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "ast.NodeVisitor.generic_visit", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "<builtin>.isinstance", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty"], "ast.NodeVisitor.generic_visit": [], "compatibility.ast_edits._PastaEditVisitor.visit_Attribute": ["test_util.TensorFlowTestCase.assertEmpty", "pasta.dump", "test_util.TensorFlowTestCase.assertEmpty", "ast.NodeVisitor.generic_visit", "<builtin>.isinstance", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty"], "pasta.dump": [], "compatibility.ast_edits._PastaEditVisitor.visit_Import": ["<builtin>.list", "six.ensure_str", "six.moves.range", "pasta.ast_utils.replace_child", "ast.alias", "<builtin>.reversed", "test_util.TensorFlowTestCase.assertEmpty", "ast.copy_location", "<builtin>.min", "pasta.base.formatting.set", "ast.Import", "ast.NodeVisitor.generic_visit", "test_util.TensorFlowTestCase.assertEmpty", "pasta.parse", "pasta.base.formatting.get", "pasta.dump", "<builtin>.getattr", "<builtin>.len"], "six.moves.range": [], "<builtin>.list": [], "<builtin>.len": [], "<builtin>.min": [], "ast.alias": [], "pasta.parse": [], "pasta.base.formatting.get": [], "pasta.base.formatting.set": [], "ast.Import": [], "compatibility.ast_edits._PastaEditVisitor.visit_ImportFrom": ["six.ensure_str", "pasta.ast_utils.replace_child", "test_util.TensorFlowTestCase.assertEmpty", "ast.ImportFrom", "ast.NodeVisitor.generic_visit", "ast.copy_location", "pasta.base.formatting.set", "test_util.TensorFlowTestCase.assertEmpty", "pasta.base.formatting.get", "pasta.dump", "<builtin>.getattr", "<builtin>.len"], "ast.ImportFrom": [], "compatibility.ast_edits.PastaAnalyzeVisitor.__init__": ["<builtin>.super", "test_util.TensorFlowTestCase.assertEmpty"], "compatibility.ast_edits.PastaAnalyzeVisitor.results": [], "compatibility.ast_edits.PastaAnalyzeVisitor.add_result": [], "compatibility.ast_edits.PastaAnalyzeVisitor.visit_Attribute": ["test_util.TensorFlowTestCase.assertEmpty", "ast.NodeVisitor.generic_visit", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty"], "compatibility.ast_edits.PastaAnalyzeVisitor.visit_Import": ["test_util.TensorFlowTestCase.assertEmpty", "ast.NodeVisitor.generic_visit", "test_util.TensorFlowTestCase.assertEmpty"], "compatibility.ast_edits.PastaAnalyzeVisitor.visit_ImportFrom": ["test_util.TensorFlowTestCase.assertEmpty", "ast.NodeVisitor.generic_visit", "test_util.TensorFlowTestCase.assertEmpty"], "compatibility.ast_edits.ASTCodeUpgrader.__init__": ["<builtin>.type", "<builtin>.TypeError", "<builtin>.isinstance"], "<builtin>.type": [], "<builtin>.TypeError": [], "compatibility.ast_edits.ASTCodeUpgrader.process_file": ["shutil.move", "os.remove", "test_util.TensorFlowTestCase.assertEmpty", "<builtin>.open", "tempfile.NamedTemporaryFile"], "<builtin>.open": [], "tempfile.NamedTemporaryFile": [], "compatibility.ast_edits.ASTCodeUpgrader.process_opened_file": ["test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty"], "os.remove": [], "shutil.move": [], "compatibility.ast_edits.ASTCodeUpgrader.format_log": ["six.ensure_str"], "compatibility.ast_edits.ASTCodeUpgrader.update_string_pasta": ["traceback.format_exc", "test_util.TensorFlowTestCase.assertEmpty", "test_util.TensorFlowTestCase.assertEmpty", "pasta.dump", "test_util.TensorFlowTestCase.assertEmpty", "pasta.parse"], "traceback.format_exc": [], "compatibility.ast_edits.ASTCodeUpgrader._format_log": ["six.ensure_str"], "compatibility.ast_edits.ASTCodeUpgrader.process_tree": ["os.path.islink", "six.ensure_str", "os.path.relpath", "os.path.normpath", "os.path.exists", "shutil.copy", "os.path.split", "os.makedirs", "test_util.TensorFlowTestCase.assertEmpty", "os.path.dirname", "os.walk", "test_util.TensorFlowTestCase.assertEmpty", "os.symlink", "sys.exit", "os.readlink", "<builtin>.print", "os.path.isdir", "os.path.join"], "compatibility.ast_edits.ASTCodeUpgrader.process_tree_inplace": ["six.ensure_str", "os.walk", "test_util.TensorFlowTestCase.assertEmpty", "os.path.join", "os.path.islink"], "os.path.exists": [], "sys.exit": [], "os.path.normpath": [], "os.path.split": [], "os.walk": [], "os.path.join": [], "os.path.relpath": [], "os.path.dirname": [], "os.path.isdir": [], "os.makedirs": [], "os.path.islink": [], "os.readlink": [], "os.symlink": [], "shutil.copy": []}