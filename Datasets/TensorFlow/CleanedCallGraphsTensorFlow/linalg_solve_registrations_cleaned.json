{"linalg.solve_registrations": ["linalg.linear_operator_algebra.RegisterSolve"], "linalg.linear_operator_algebra.RegisterSolve": [], "linalg.solve_registrations._solve_linear_operator": ["linalg.registrations_util.combined_non_singular_hint", "linalg.registrations_util.is_square", "linalg.linear_operator_inversion.LinearOperatorInversion", "linalg.linear_operator_composition.LinearOperatorComposition"], "linalg.registrations_util.is_square": [], "linalg.registrations_util.combined_non_singular_hint": [], "linalg.linear_operator_inversion.LinearOperatorInversion": [], "linalg.linear_operator_composition.LinearOperatorComposition": [], "linalg.solve_registrations._solve_inverse_linear_operator": [], "linalg.solve_registrations._solve_linear_operator_identity_left": [], "linalg.solve_registrations._solve_linear_operator_identity_right": [], "linalg.solve_registrations._solve_linear_operator_scaled_identity": ["linalg.registrations_util.combined_commuting_self_adjoint_hint", "linalg.registrations_util.combined_non_singular_hint", "linalg.registrations_util.combined_commuting_positive_definite_hint", "linalg.linear_operator_identity.LinearOperatorScaledIdentity"], "linalg.registrations_util.combined_commuting_self_adjoint_hint": [], "linalg.registrations_util.combined_commuting_positive_definite_hint": [], "linalg.linear_operator_identity.LinearOperatorScaledIdentity": [], "linalg.solve_registrations._solve_linear_operator_diag": ["linalg.registrations_util.combined_commuting_self_adjoint_hint", "linalg.registrations_util.combined_non_singular_hint", "linalg.registrations_util.combined_commuting_positive_definite_hint", "linalg.linear_operator_diag.LinearOperatorDiag"], "linalg.linear_operator_diag.LinearOperatorDiag": [], "linalg.solve_registrations._solve_linear_operator_diag_scaled_identity_right": ["linalg.registrations_util.combined_commuting_self_adjoint_hint", "linalg.registrations_util.combined_non_singular_hint", "linalg.registrations_util.combined_commuting_positive_definite_hint", "linalg.linear_operator_diag.LinearOperatorDiag"], "linalg.solve_registrations._solve_linear_operator_diag_scaled_identity_left": ["linalg.registrations_util.combined_commuting_self_adjoint_hint", "linalg.registrations_util.combined_non_singular_hint", "linalg.registrations_util.combined_commuting_positive_definite_hint", "linalg.linear_operator_diag.LinearOperatorDiag"], "linalg.solve_registrations._solve_linear_operator_diag_tril": ["linalg.registrations_util.combined_commuting_self_adjoint_hint", "linalg.registrations_util.combined_non_singular_hint", "linalg.linear_operator_lower_triangular.LinearOperatorLowerTriangular"], "linalg.linear_operator_lower_triangular.LinearOperatorLowerTriangular": [], "linalg.solve_registrations._solve_linear_operator_circulant_circulant": ["linalg.registrations_util.combined_commuting_self_adjoint_hint", "linalg.registrations_util.combined_non_singular_hint", "linalg.registrations_util.combined_commuting_positive_definite_hint", "linalg.linear_operator_circulant.LinearOperatorCirculant"], "linalg.linear_operator_circulant.LinearOperatorCirculant": [], "linalg.solve_registrations._solve_linear_operator_block_diag_block_diag": ["linalg.registrations_util.combined_non_singular_hint", "linalg.linear_operator_block_diag.LinearOperatorBlockDiag", "<builtin>.zip"], "<builtin>.zip": [], "linalg.linear_operator_block_diag.LinearOperatorBlockDiag": []}