{"preprocessing.category_encoding": [], "preprocessing.category_encoding.CategoryEncoding.__init__": ["utils.layer_utils.validate_string_arg", "platform.tf_logging.warning", "<builtin>.ValueError", "<builtin>.super"], "platform.tf_logging.warning": [], "<builtin>.super": [], "utils.layer_utils.validate_string_arg": [], "<builtin>.ValueError": [], "preprocessing.category_encoding.CategoryEncoding.compute_output_shape": ["framework.tensor_shape.TensorShape"], "framework.tensor_shape.TensorShape": [], "preprocessing.category_encoding.CategoryEncoding.compute_output_signature": ["framework.sparse_tensor.SparseTensorSpec", "framework.sparse_tensor.SparseTensorSpec", "framework.tensor_spec.TensorSpec"], "framework.sparse_tensor.SparseTensorSpec": [], "framework.tensor_spec.TensorSpec": [], "preprocessing.category_encoding.CategoryEncoding.get_config": ["<builtin>.dict", "<builtin>.list", "<builtin>.super"], "<builtin>.list": [], "<builtin>.dict": [], "preprocessing.category_encoding.CategoryEncoding.call": ["ops.math_ops.logical_and", "ops.math_ops.logical_and", "<builtin>.isinstance", "ops.math_ops.reduce_min", "ops.math_ops.reduce_min", "ops.math_ops.greater_equal", "framework.ops.control_dependencies", "ops.math_ops.cast", "ops.math_ops.cast", "framework.ops.convert_to_tensor_v2_with_dispatch", "<builtin>.ValueError", "ops.math_ops.reduce_max", "ops.control_flow_ops.Assert", "ops.math_ops.greater"], "<builtin>.isinstance": [], "framework.ops.convert_to_tensor_v2_with_dispatch": [], "preprocessing.category_encoding.CategoryEncoding.call.expand_dims": ["utils.tf_utils.is_sparse", "ops.sparse_ops.sparse_expand_dims", "ops.array_ops.expand_dims"], "utils.tf_utils.is_sparse": [], "ops.sparse_ops.sparse_expand_dims": [], "ops.array_ops.expand_dims": [], "ops.math_ops.reduce_max": [], "ops.math_ops.reduce_min": [], "ops.math_ops.cast": [], "ops.math_ops.greater": [], "ops.math_ops.greater_equal": [], "ops.math_ops.logical_and": [], "ops.control_flow_ops.Assert": [], "framework.ops.control_dependencies": [], "preprocessing.category_encoding.sparse_bincount": ["ops.array_ops.shape", "ops.bincount_ops.sparse_bincount", "keras.backend.floatx", "ops.math_ops.cast", "framework.sparse_tensor.SparseTensor"], "preprocessing.category_encoding.dense_bincount": ["ops.bincount_ops.bincount", "keras.backend.floatx", "framework.tensor_shape.TensorShape"], "ops.bincount_ops.sparse_bincount": [], "keras.backend.floatx": [], "ops.array_ops.shape": [], "framework.sparse_tensor.SparseTensor": [], "ops.bincount_ops.bincount": []}