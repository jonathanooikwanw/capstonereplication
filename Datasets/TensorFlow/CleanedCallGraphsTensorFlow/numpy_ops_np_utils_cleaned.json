{"numpy_ops.np_utils": ["ops.numpy_ops.prod", "os.getenv", "ops.numpy_ops.prod", "ops.numpy_ops.prod", "ops.numpy_ops.prod"], "numpy_ops.np_utils._canonicalize_axis": ["ops.numpy_ops.prod"], "numpy_ops.np_utils._canonicalize_axes": ["ops.numpy_ops.prod", "ops.numpy_ops.prod", "ops.numpy_ops.prod", "<builtin>.isinstance"], "numpy_ops.np_utils._maybe_static": ["ops.numpy_ops.prod"], "<builtin>.isinstance": [], "numpy_ops.np_utils._canonicalize_axes.<lambda1>": ["ops.numpy_ops.prod"], "numpy_ops.np_utils._canonicalize_axes.<lambda1>.<lambda1>": [], "numpy_ops.np_utils._canonicalize_axes.<lambda1>.<lambda2>": [], "numpy_ops.np_utils.cond": ["ops.control_flow_ops.cond", "ops.control_flow_ops.cond", "ops.control_flow_ops.cond", "ops.control_flow_ops.cond"], "numpy_ops.np_utils._canonicalize_axes.<lambda2>": [], "numpy_ops.np_utils._supports_signature": ["<builtin>.hasattr"], "<builtin>.hasattr": [], "numpy_ops.np_utils._to_tf_type": ["framework.dtypes.as_dtype"], "framework.dtypes.as_dtype": [], "numpy_ops.np_utils._to_numpy_type": ["numpy.dtype", "<builtin>.isinstance"], "numpy.dtype": [], "numpy_ops.np_utils.isscalar": ["ops.array_ops.rank", "ops.math_ops.equal", "numpy.isscalar", "<builtin>.isinstance"], "ops.array_ops.rank": [], "ops.math_ops.equal": [], "numpy.isscalar": [], "numpy_ops.np_utils._has_docstring": ["<builtin>.hasattr", "<builtin>.isinstance"], "numpy_ops.np_utils._add_blank_line": [], "numpy_ops.np_utils._np_signature": ["inspect.signature", "ops.math_ops.equal", "<builtin>.isinstance", "inspect.Parameter", "<builtin>.hasattr", "inspect.Signature"], "inspect.signature": [], "numpy_ops.np_utils._np_signature.names_from_num": ["<builtin>.str", "<builtin>.range"], "<builtin>.str": [], "<builtin>.range": [], "inspect.Parameter": [], "inspect.Signature": [], "numpy_ops.np_utils._is_compatible_param_kind": ["ops.math_ops.equal"], "numpy_ops.np_utils._is_compatible_param_kind.relax": [], "numpy_ops.np_utils._prepare_np_fun_name_and_fun": ["<builtin>.str", "<builtin>.getattr", "<builtin>.isinstance"], "<builtin>.getattr": [], "numpy_ops.np_utils._np_doc_helper": ["ops.math_ops.equal", "ops.math_ops.equal", "ops.math_ops.equal"], "numpy_ops.np_utils._add_np_doc": ["requests.head", "ops.math_ops.equal", "ops.math_ops.equal", "<builtin>.ValueError", "ops.math_ops.equal", "<builtin>.isinstance", "ops.math_ops.equal"], "os.getenv": [], "numpy_ops.np_utils.get_np_doc_form": [], "numpy_ops.np_utils.set_np_doc_form": [], "numpy_ops.np_utils.Link.__init__": [], "numpy_ops.np_utils.AliasOf.__init__": [], "numpy_ops.np_utils.generate_link": ["re.match"], "re.match": [], "numpy_ops.np_utils.is_check_link": [], "numpy_ops.np_utils.set_check_link": [], "requests.head": [], "<builtin>.ValueError": [], "numpy_ops.np_utils.is_sig_mismatch_an_error": [], "numpy_ops.np_utils.set_is_sig_mismatch_an_error": [], "numpy_ops.np_utils.np_doc": ["ops.math_ops.equal", "ops.math_ops.equal"], "numpy_ops.np_utils.np_doc.decorator": ["inspect.signature", "ops.math_ops.equal", "<builtin>.TypeError", "<builtin>.list", "ops.math_ops.equal", "ops.math_ops.equal", "numpy_ops.np_export.np_export", "<builtin>.hasattr"], "<builtin>.list": [], "<builtin>.TypeError": [], "numpy_ops.np_export.np_export": [], "numpy_ops.np_utils.np_doc_only": ["numpy_ops.np_export.np_export"], "numpy_ops.np_utils.np_doc_only.decorator": ["numpy_ops.np_export.np_export", "numpy_ops.np_export.np_export"], "numpy_ops.np_utils.finfo": ["numpy.finfo", "numpy_ops.np_export.np_export"], "numpy.finfo": [], "numpy_ops.np_utils._maybe_get_dtype": ["<builtin>.type", "<builtin>.ValueError", "numpy_ops.np_export.np_export", "<builtin>.isinstance"], "<builtin>.type": [], "numpy_ops.np_utils.result_type": ["util.nest.flatten", "numpy.asarray", "numpy_ops.np_dtypes._result_type", "numpy_ops.np_dtypes._result_type"], "util.nest.flatten": [], "numpy.asarray": [], "numpy_ops.np_dtypes._result_type": [], "numpy_ops.np_utils.result_type_unary": ["<builtin>.isinstance", "numpy_ops.np_dtypes._result_type"], "numpy_ops.np_utils._result_type_binary": ["numpy_ops.np_dtypes._result_type", "numpy_ops.np_dtypes._result_type", "numpy_ops.np_dtypes._result_type"], "numpy_ops.np_utils.promote_types": ["numpy.promote_types", "numpy_ops.np_dtypes.canonicalize_dtype", "numpy_ops.np_dtypes.canonicalize_dtype"], "numpy.promote_types": [], "numpy_ops.np_dtypes.canonicalize_dtype": [], "numpy_ops.np_utils.tf_broadcast": ["ops.array_ops.broadcast_to", "ops.array_ops.shape", "<builtin>.len", "ops.array_ops.broadcast_dynamic_shape"], "<builtin>.len": [], "ops.array_ops.shape": [], "ops.array_ops.broadcast_dynamic_shape": [], "ops.array_ops.broadcast_to": [], "numpy_ops.np_utils.get_static_value": ["<builtin>.isinstance", "framework.tensor_util.constant_value"], "framework.tensor_util.constant_value": [], "ops.control_flow_ops.cond": [], "numpy_ops.np_utils.add": ["framework.tensor_util.constant_value"], "numpy_ops.np_utils.subtract": ["framework.tensor_util.constant_value"], "numpy_ops.np_utils.greater": ["framework.tensor_util.constant_value"], "numpy_ops.np_utils.greater_equal": ["framework.tensor_util.constant_value"], "numpy_ops.np_utils.less_equal": ["framework.tensor_util.constant_value"], "numpy_ops.np_utils.logical_and": ["framework.tensor_util.constant_value", "numpy.isscalar", "framework.tensor_util.constant_value"], "numpy_ops.np_utils.logical_or": ["framework.tensor_util.constant_value", "numpy.isscalar", "framework.tensor_util.constant_value"], "numpy_ops.np_utils.getitem": ["framework.tensor_util.constant_value"], "numpy_ops.np_utils.reduce_all": ["ops.math_ops.reduce_all", "ops.math_ops.reduce_all"], "ops.math_ops.reduce_all": [], "numpy_ops.np_utils.reduce_any": ["ops.math_ops.reduce_all", "ops.math_ops.reduce_any"], "ops.math_ops.reduce_any": [], "numpy_ops.np_utils.tf_rank": ["ops.array_ops.rank"]}