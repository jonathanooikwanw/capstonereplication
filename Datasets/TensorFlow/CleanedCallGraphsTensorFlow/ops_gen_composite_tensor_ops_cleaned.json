{"ops.gen_composite_tensor_ops": ["util.tf_export.tf_export", "framework.ops.to_raw_op"], "ops.gen_composite_tensor_ops.composite_tensor_variant_from_components": ["python.pywrap_tfe.TFE_Py_FastPathExecute", "python.pywrap_tfe.TFE_Py_FastPathExecute", "framework.ops.raise_from_not_ok_status", "eager.context.context", "eager.execute.make_str", "framework.op_def_library._apply_op_helper", "eager.execute.record_gradient", "eager.execute.must_record_gradient"], "eager.context.context": [], "python.pywrap_tfe.TFE_Py_FastPathExecute": [], "framework.ops.raise_from_not_ok_status": [], "ops.gen_composite_tensor_ops.composite_tensor_variant_from_components_eager_fallback": ["<builtin>.list", "eager.execute.execute", "eager.execute.convert_to_mixed_eager_tensors", "eager.execute.make_str", "eager.execute.record_gradient", "eager.execute.must_record_gradient"], "eager.execute.make_str": [], "framework.op_def_library._apply_op_helper": [], "eager.execute.must_record_gradient": [], "eager.execute.record_gradient": [], "framework.ops.to_raw_op": [], "util.tf_export.tf_export": [], "eager.execute.convert_to_mixed_eager_tensors": [], "<builtin>.list": [], "eager.execute.execute": [], "ops.gen_composite_tensor_ops.composite_tensor_variant_to_components": ["python.pywrap_tfe.TFE_Py_FastPathExecute", "framework.ops.raise_from_not_ok_status", "eager.context.context", "<builtin>.TypeError", "eager.execute.make_str", "framework.op_def_library._apply_op_helper", "eager.execute.record_gradient", "eager.execute.make_type", "eager.execute.must_record_gradient", "eager.execute.must_record_gradient", "<builtin>.isinstance"], "ops.gen_composite_tensor_ops.composite_tensor_variant_to_components_eager_fallback": ["framework.ops.convert_to_tensor", "<builtin>.len", "eager.execute.execute", "<builtin>.isinstance", "eager.execute.make_str", "eager.execute.record_gradient", "eager.execute.make_type", "eager.execute.must_record_gradient", "<builtin>.TypeError"], "<builtin>.isinstance": [], "<builtin>.TypeError": [], "eager.execute.make_type": [], "framework.ops.convert_to_tensor": [], "<builtin>.len": []}