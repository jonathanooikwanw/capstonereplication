{"signal.window_ops": ["util.tf_export.tf_export", "util.dispatch.add_dispatch_support"], "signal.window_ops._check_params": ["<builtin>.ValueError", "framework.ops.convert_to_tensor"], "<builtin>.ValueError": [], "framework.ops.convert_to_tensor": [], "util.tf_export.tf_export": [], "util.dispatch.add_dispatch_support": [], "signal.window_ops.kaiser_window": ["framework.ops.name_scope", "ops.math_ops.range", "ops.special_math_ops.bessel_i0e", "framework.tensor_util.constant_value", "ops.math_ops.cast", "ops.math_ops.sqrt", "ops.math_ops.exp", "ops.math_ops.exp", "ops.array_ops.ones", "ops.math_ops.pow"], "framework.ops.name_scope": [], "framework.tensor_util.constant_value": [], "ops.array_ops.ones": [], "ops.math_ops.cast": [], "ops.math_ops.range": [], "ops.math_ops.pow": [], "ops.math_ops.sqrt": [], "ops.math_ops.exp": [], "ops.special_math_ops.bessel_i0e": [], "signal.window_ops.kaiser_bessel_derived_window": ["framework.ops.name_scope", "ops.math_ops.cumsum", "ops.math_ops.sqrt", "ops.array_ops.concat", "ops.array_ops.concat", "ops.array_ops.concat"], "ops.math_ops.cumsum": [], "ops.array_ops.concat": [], "signal.window_ops.vorbis_window": ["ops.math_ops.sin", "framework.ops.name_scope", "ops.math_ops.range", "ops.math_ops.cast", "ops.math_ops.cast", "ops.math_ops.pow"], "ops.math_ops.sin": [], "signal.window_ops.hann_window": ["ops.math_ops.pow"], "signal.window_ops._raised_cosine_window": ["framework.ops.name_scope", "ops.math_ops.range", "ops.math_ops.equal", "ops.control_flow_ops.cond", "framework.ops.convert_to_tensor", "framework.tensor_util.constant_value", "ops.math_ops.cast", "framework.constant_op.constant", "<builtin>.ValueError", "ops.math_ops.mod", "ops.array_ops.ones", "ops.math_ops.cos"], "signal.window_ops.hamming_window": ["ops.math_ops.cos"], "ops.math_ops.mod": [], "framework.constant_op.constant": [], "ops.math_ops.cos": [], "ops.math_ops.equal": [], "signal.window_ops._raised_cosine_window.<lambda1>": ["ops.array_ops.ones"], "signal.window_ops._raised_cosine_window.<lambda2>": ["ops.math_ops.cast", "ops.math_ops.cos"], "ops.control_flow_ops.cond": []}