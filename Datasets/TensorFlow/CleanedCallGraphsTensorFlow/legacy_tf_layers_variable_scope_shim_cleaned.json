{"legacy_tf_layers.variable_scope_shim": [], "legacy_tf_layers.variable_scope_shim.as_shape": ["framework.tensor_shape.TensorShape", "<builtin>.isinstance"], "<builtin>.isinstance": [], "framework.tensor_shape.TensorShape": [], "legacy_tf_layers.variable_scope_shim._is_callable_object": ["utils.tf_inspect.ismethod", "<builtin>.hasattr"], "<builtin>.hasattr": [], "utils.tf_inspect.ismethod": [], "legacy_tf_layers.variable_scope_shim._has_kwargs": ["<builtin>.TypeError", "<builtin>.callable", "<builtin>.type", "utils.tf_inspect.ismethod", "<builtin>.isinstance", "utils.tf_inspect.getfullargspec"], "<builtin>.callable": [], "<builtin>.type": [], "<builtin>.TypeError": [], "utils.tf_inspect.getfullargspec": [], "legacy_tf_layers.variable_scope_shim.fn_args": ["utils.tf_inspect.getfullargspec", "<builtin>.tuple", "<builtin>.len", "utils.tf_inspect.ismethod", "utils.tf_inspect.ismethod", "<builtin>.hasattr", "<builtin>.isinstance", "utils.tf_inspect.getfullargspec"], "<builtin>.len": [], "legacy_tf_layers.variable_scope_shim._is_bound_method": ["util.tf_decorator.unwrap", "utils.tf_inspect.ismethod"], "<builtin>.tuple": [], "util.tf_decorator.unwrap": [], "legacy_tf_layers.variable_scope_shim.validate_synchronization_aggregation_trainable": ["ops.variables.VariableSynchronization", "<builtin>.isinstance", "ops.variables.VariableAggregationV2", "<builtin>.ValueError"], "ops.variables.VariableAggregationV2": [], "<builtin>.ValueError": [], "ops.variables.VariableSynchronization": [], "legacy_tf_layers.variable_scope_shim._EagerVariableStore.__init__": [], "legacy_tf_layers.variable_scope_shim._EagerVariableStore.get_variable": ["ops.variables.VariableAggregationV2", "<builtin>.ValueError", "<builtin>.callable", "ops.variables.VariableAggregationV2", "ops.variables.VariableAggregationV2", "ops.variables.VariableAggregationV2", "framework.ops.init_scope", "eager.context.executing_eagerly"], "framework.ops.init_scope": [], "eager.context.executing_eagerly": [], "legacy_tf_layers.variable_scope_shim._EagerVariableStore.get_variable._true_getter": ["eager.context.executing_eagerly", "<builtin>.ValueError"], "legacy_tf_layers.variable_scope_shim._EagerVariableStore._get_single_variable": ["eager.context.executing_eagerly", "<builtin>.ValueError", "<builtin>.callable", "framework.dtypes.as_dtype", "functools.partial", "platform.tf_logging.vlog", "ops.variables.Variable", "framework.ops.init_scope", "framework.ops.init_scope", "<builtin>.format", "framework.ops.init_scope", "utils.tf_inspect.isclass", "utils.tf_inspect.getargspec"], "framework.dtypes.as_dtype": [], "legacy_tf_layers.variable_scope_shim._EagerVariableStore._get_default_initializer": ["ops.init_ops.zeros_initializer", "ops.init_ops.glorot_uniform_initializer", "<builtin>.ValueError"], "utils.tf_inspect.isclass": [], "utils.tf_inspect.getargspec": [], "functools.partial": [], "ops.variables.Variable": [], "<builtin>.format": [], "platform.tf_logging.vlog": [], "legacy_tf_layers.variable_scope_shim._EagerVariableStore.add_regularizer": ["functools.partial"], "ops.init_ops.glorot_uniform_initializer": [], "ops.init_ops.zeros_initializer": [], "legacy_tf_layers.variable_scope_shim.VariableAndLossTracker.__init__": ["ops.init_ops.glorot_uniform_initializer"], "legacy_tf_layers.variable_scope_shim.VariableAndLossTracker._variable_creator": [], "legacy_tf_layers.variable_scope_shim.VariableAndLossTracker": ["utils.tf_contextlib.contextmanager"], "utils.tf_contextlib.contextmanager": [], "legacy_tf_layers.variable_scope_shim.VariableAndLossTracker.scope": ["ops.variable_scope.with_variable_store", "ops.variable_scope.variable_creator_scope"], "ops.variable_scope.variable_creator_scope": [], "ops.variable_scope.with_variable_store": [], "legacy_tf_layers.variable_scope_shim.VariableAndLossTracker.get_regularization_losses": [], "legacy_tf_layers.variable_scope_shim.VariableScopeWrapperLayer.__init__": ["ops.variable_scope.variable_creator_scope", "<builtin>.super"], "<builtin>.super": [], "legacy_tf_layers.variable_scope_shim.VariableScopeWrapperLayer.forward_pass": [], "legacy_tf_layers.variable_scope_shim.VariableScopeWrapperLayer.call": ["base_layer.Layer.add_loss", "base_layer.Layer.add_loss", "base_layer.Layer.add_loss", "base_layer.Layer.add_loss"], "base_layer.Layer.add_loss": []}