{"ops.clustering_ops": [], "ops.clustering_ops.KMeans.__init__": ["<builtin>.ValueError", "<builtin>.int", "<builtin>.isinstance", "framework.random_seed.get_seed"], "<builtin>.isinstance": [], "<builtin>.ValueError": [], "<builtin>.int": [], "framework.random_seed.get_seed": [], "ops.clustering_ops.KMeans._distance_graph": ["framework.random_seed.get_seed", "<builtin>.str", "<builtin>.isinstance", "framework.random_seed.get_seed"], "ops.clustering_ops.KMeans._compute_euclidean_distance": ["framework.ops.colocate_with", "ops.math_ops.matmul", "ops.math_ops.square", "ops.array_ops.transpose", "ops.math_ops.reduce_sum"], "ops.clustering_ops.KMeans._compute_cosine_distance": ["ops.nn_impl.l2_normalize", "framework.ops.colocate_with", "ops.math_ops.matmul"], "<builtin>.str": [], "framework.ops.colocate_with": [], "ops.math_ops.square": [], "ops.math_ops.reduce_sum": [], "ops.math_ops.matmul": [], "ops.array_ops.transpose": [], "ops.nn_impl.l2_normalize": [], "ops.clustering_ops.KMeans._infer_graph": ["framework.ops.colocate_with", "ops.gen_clustering_ops.nearest_neighbors", "<builtin>.isinstance", "ops.nn_impl.l2_normalize", "<builtin>.zip", "ops.array_ops.squeeze", "ops.array_ops.squeeze", "ops.array_ops.squeeze"], "ops.clustering_ops.KMeans._clusters_l2_normalized": [], "<builtin>.zip": [], "ops.gen_clustering_ops.nearest_neighbors": [], "ops.array_ops.squeeze": [], "ops.clustering_ops.KMeans._create_variables": ["ops.array_ops.placeholder_with_default", "ops.array_ops.zeros", "ops.array_ops.ones", "ops.variable_scope.variable"], "ops.array_ops.placeholder_with_default": [], "ops.variable_scope.variable": [], "ops.array_ops.zeros": [], "ops.array_ops.ones": [], "ops.clustering_ops.KMeans._l2_normalize_data": ["ops.nn_impl.l2_normalize", "framework.ops.colocate_with"], "ops.clustering_ops.KMeans.training_graph": ["framework.ops.colocate_with", "framework.ops.colocate_with", "<builtin>.callable", "framework.ops.control_dependencies", "framework.ops.control_dependencies", "ops.array_ops.shape", "framework.ops.convert_to_tensor", "ops.nn_impl.l2_normalize", "ops.nn_impl.l2_normalize", "ops.nn_impl.l2_normalize", "ops.nn_impl.l2_normalize", "ops.nn_impl.l2_normalize", "ops.nn_impl.l2_normalize", "<builtin>.isinstance", "ops.nn_impl.l2_normalize"], "<builtin>.callable": [], "framework.ops.convert_to_tensor": [], "ops.array_ops.shape": [], "ops.clustering_ops._InitializeClustersOpFactory.__init__": ["ops.math_ops.add_n", "ops.array_ops.shape"], "ops.clustering_ops._InitializeClustersOpFactory.op": ["ops.math_ops.equal", "ops.control_flow_ops.cond"], "ops.clustering_ops.KMeans._mini_batch_sync_updates_op": ["framework.ops.colocate_with", "ops.control_flow_ops.no_op", "ops.control_flow_ops.cond"], "framework.ops.control_dependencies": [], "ops.clustering_ops.KMeans._mini_batch_training_op": ["ops.array_ops.gather", "ops.array_ops.rank", "ops.array_ops.reshape", "ops.array_ops.concat", "ops.array_ops.unique", "ops.math_ops.unsorted_segment_sum", "framework.ops.colocate_with", "ops.state_ops.scatter_add", "ops.array_ops.size", "<builtin>.zip", "ops.control_flow_ops.group", "ops.math_ops.cast", "ops.math_ops.reciprocal", "ops.array_ops.ones_like", "ops.array_ops.ones"], "ops.clustering_ops.KMeans._full_batch_training_op": ["ops.state_ops.assign", "ops.array_ops.reshape", "ops.math_ops.unsorted_segment_sum", "framework.ops.colocate_with", "ops.array_ops.shape", "framework.constant_op.constant", "ops.math_ops.add_n", "<builtin>.zip", "ops.nn_impl.l2_normalize", "ops.math_ops.cast", "ops.array_ops.ones", "ops.array_ops.ones"], "ops.clustering_ops.KMeans._mini_batch_sync_updates_op._f": ["ops.state_ops.assign", "ops.array_ops.zeros_like", "framework.ops.control_dependencies", "framework.ops.colocate_with", "ops.nn_impl.l2_normalize", "ops.array_ops.identity"], "ops.state_ops.assign": [], "ops.array_ops.zeros_like": [], "ops.array_ops.identity": [], "ops.clustering_ops.KMeans._mini_batch_sync_updates_op.<lambda1>": ["ops.state_ops.assign_sub"], "ops.state_ops.assign_sub": [], "ops.control_flow_ops.cond": [], "ops.control_flow_ops.no_op": [], "ops.array_ops.reshape": [], "ops.array_ops.unique": [], "ops.array_ops.size": [], "ops.array_ops.gather": [], "ops.array_ops.ones_like": [], "ops.math_ops.unsorted_segment_sum": [], "ops.array_ops.rank": [], "ops.array_ops.concat": [], "ops.math_ops.cast": [], "ops.math_ops.reciprocal": [], "ops.state_ops.scatter_add": [], "ops.control_flow_ops.group": [], "framework.constant_op.constant": [], "ops.math_ops.add_n": [], "ops.clustering_ops._InitializeClustersOpFactory._random": ["ops.math_ops.cast", "ops.random_ops.random_uniform", "ops.embedding_ops.embedding_lookup", "ops.array_ops.reshape"], "ops.random_ops.random_uniform": [], "ops.embedding_ops.embedding_lookup": [], "ops.clustering_ops._InitializeClustersOpFactory._kmeans_plus_plus": ["ops.math_ops.cast", "ops.nn_impl.l2_normalize", "ops.gen_clustering_ops.kmeans_plus_plus_initialization"], "ops.gen_clustering_ops.kmeans_plus_plus_initialization": [], "ops.clustering_ops._InitializeClustersOpFactory._kmc2_multiple_centers": ["ops.math_ops.maximum", "ops.control_flow_ops.while_loop", "ops.array_ops.shape", "ops.math_ops.minimum", "ops.math_ops.cast"], "ops.math_ops.minimum": [], "ops.math_ops.maximum": [], "ops.clustering_ops._InitializeClustersOpFactory._kmc2_multiple_centers._cond": ["ops.math_ops.less"], "ops.math_ops.less": [], "ops.clustering_ops._InitializeClustersOpFactory._kmc2_multiple_centers._body": ["ops.array_ops.shape", "ops.math_ops.equal", "ops.state_ops.assign", "ops.control_flow_ops.cond"], "ops.clustering_ops._InitializeClustersOpFactory._kmc2_multiple_centers._body._sample_random": ["ops.nn_impl.l2_normalize", "ops.array_ops.reshape"], "ops.clustering_ops._InitializeClustersOpFactory._kmc2_multiple_centers._body._sample_kmc2_chain": ["ops.array_ops.reshape", "ops.array_ops.concat", "ops.gen_clustering_ops.nearest_neighbors", "ops.array_ops.squeeze", "ops.nn_impl.l2_normalize", "ops.gen_clustering_ops.kmc2_chain_initialization"], "ops.gen_clustering_ops.kmc2_chain_initialization": [], "ops.math_ops.equal": [], "ops.control_flow_ops.while_loop": [], "ops.clustering_ops._InitializeClustersOpFactory._greedy_batch_sampler": ["ops.control_flow_ops.cond"], "ops.clustering_ops._InitializeClustersOpFactory._greedy_batch_sampler.<lambda1>": ["ops.array_ops.concat"], "ops.clustering_ops._InitializeClustersOpFactory._single_batch_sampler": ["ops.array_ops.concat", "framework.ops.control_dependencies", "ops.check_ops.assert_greater_equal"], "ops.check_ops.assert_greater_equal": [], "ops.clustering_ops._InitializeClustersOpFactory._choose_initial_centers": ["<builtin>.callable", "framework.ops.control_dependencies", "framework.ops.control_dependencies", "ops.array_ops.shape", "ops.array_ops.shape", "ops.check_ops.assert_equal", "<builtin>.isinstance"], "ops.check_ops.assert_equal": [], "ops.clustering_ops._InitializeClustersOpFactory._add_new_centers": ["ops.state_ops.assign", "ops.math_ops.equal", "ops.array_ops.shape", "ops.nn_impl.l2_normalize", "ops.control_flow_ops.cond", "ops.control_flow_ops.cond"], "ops.clustering_ops._InitializeClustersOpFactory._add_new_centers.<lambda1>": [], "ops.clustering_ops._InitializeClustersOpFactory._add_new_centers.<lambda2>": ["ops.array_ops.concat"], "ops.clustering_ops._InitializeClustersOpFactory._initialize": ["framework.ops.control_dependencies", "ops.math_ops.equal", "ops.math_ops.equal", "ops.check_ops.assert_positive", "ops.check_ops.assert_positive", "ops.control_flow_ops.cond"], "ops.check_ops.assert_positive": [], "ops.clustering_ops._InitializeClustersOpFactory._initialize.<lambda1>": ["ops.state_ops.assign"], "ops.clustering_ops._InitializeClustersOpFactory.op.<lambda1>": ["ops.check_ops.assert_equal"]}