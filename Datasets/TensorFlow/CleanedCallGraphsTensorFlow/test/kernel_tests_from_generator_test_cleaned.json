{"kernel_tests.from_generator_test": ["platform.test.main"], "kernel_tests.from_generator_test.FromGeneratorTest._testFromGenerator": ["test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.from_generator"], "dataset_ops.Dataset.from_generator": [], "test_base.DatasetTestBase.assertDatasetProduces": [], "kernel_tests.test_base.default_test_combinations": [], "kernel_tests.from_generator_test.FromGeneratorTest": ["framework.combinations.times", "framework.combinations.combine", "framework.combinations.generate", "kernel_tests.test_base.default_test_combinations"], "framework.combinations.combine": [], "framework.combinations.times": [], "framework.combinations.generate": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorUsingFn": ["<builtin>.list", "kernel_tests.test_base.default_test_combinations", "kernel_tests.test_base.default_test_combinations"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorUsingFn.generator": ["<builtin>.range"], "<builtin>.range": [], "<builtin>.list": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorUsingList": ["<builtin>.list", "kernel_tests.test_base.default_test_combinations", "kernel_tests.test_base.default_test_combinations"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorUsingList.<lambda1>": ["<builtin>.range"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorUsingNdarray": ["<builtin>.list", "kernel_tests.test_base.default_test_combinations", "kernel_tests.test_base.default_test_combinations"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorUsingNdarray.<lambda1>": ["numpy.arange"], "numpy.arange": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorUsingGeneratorExpression": ["<builtin>.list", "kernel_tests.test_base.default_test_combinations", "kernel_tests.test_base.default_test_combinations"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorUsingGeneratorExpression.<lambda1>": ["<builtin>.range"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromMultipleConcurrentGenerators": ["<builtin>.list", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertRaises", "<builtin>.range", "test_base.DatasetTestBase.assertRaises", "dataset_ops.Dataset.range", "<builtin>.len", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.assertAllEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromMultipleConcurrentGenerators.generator": ["<builtin>.range"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromMultipleConcurrentGenerators.interleave_fn": ["dataset_ops.Dataset.from_generator"], "<builtin>.len": [], "dataset_ops.Dataset.range": [], "test_base.DatasetTestBase.getNext": [], "test_base.DatasetTestBase.evaluate": [], "test_base.DatasetTestBase.assertAllEqual": [], "test_base.DatasetTestBase.assertRaises": [], "kernel_tests.from_generator_test.FromGeneratorTest.DISABLED_testFromGeneratorsRunningInParallel": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertRaises", "threading.Lock", "<builtin>.range", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.getNext", "threading.Condition", "test_base.DatasetTestBase.skipTest", "test_base.DatasetTestBase.assertAllEqual"], "test_base.DatasetTestBase.skipTest": [], "threading.Lock": [], "threading.Condition": [], "kernel_tests.from_generator_test.FromGeneratorTest.DISABLED_testFromGeneratorsRunningInParallel.generator": [], "kernel_tests.from_generator_test.FromGeneratorTest.DISABLED_testFromGeneratorsRunningInParallel.interleave_fn": ["dataset_ops.Dataset.from_generator"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorImplicitConversion": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertRaises", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_generator", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertAllEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorImplicitConversion.generator": [], "test_base.DatasetTestBase.assertEqual": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorString": ["test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.from_generator"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorString.generator": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorDatastructures": ["test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.from_generator"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorDatastructures.generator": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorTypeError": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertRaises", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_generator", "test_base.DatasetTestBase.assertAllEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorTypeError.generator": ["numpy.array"], "numpy.array": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorShapeError": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertRaises", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_generator", "test_base.DatasetTestBase.assertAllEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorShapeError.generator": ["numpy.array"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorStructureError": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertRaises", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_generator", "test_base.DatasetTestBase.assertEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorStructureError.generator": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorHeterogeneous": ["test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.from_generator"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorHeterogeneous.generator": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorStopShort": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_generator", "test_base.DatasetTestBase.assertAllEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorStopShort.generator": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorDestructorCalled": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertRaises", "threading.Event", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_generator", "test_base.DatasetTestBase.assertTrue", "test_base.DatasetTestBase.assertAllEqual"], "threading.Event": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorDestructorCalled.GeneratorWrapper.__iter__": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorDestructorCalled.GeneratorWrapper.next": ["test_base.DatasetTestBase.assertAllEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorDestructorCalled.GeneratorWrapper.__next__": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorDestructorCalled.GeneratorWrapper.__del__": [], "test_base.DatasetTestBase.assertTrue": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorWithArgs": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorWithArgs.flat_map_fn": ["dataset_ops.Dataset.from_generator"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorWithArgs.flat_map_fn.generator_with_arg": ["<builtin>.range", "numpy.array"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorWithTwoArgs": ["dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.zip", "dataset_ops.Dataset.from_tensors"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorWithTwoArgs.flat_map_fn": ["dataset_ops.Dataset.from_generator"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorWithTwoArgs.flat_map_fn.generator_with_arg": ["<builtin>.range"], "dataset_ops.Dataset.from_tensors": [], "dataset_ops.Dataset.zip": [], "kernel_tests.from_generator_test.FromGeneratorTest.testGeneratorDatasetFinalizeFunctionCalled": ["framework.constant_op.constant", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertRaises", "threading.Event", "ops.dataset_ops._GeneratorDataset", "framework.tensor_spec.TensorSpec", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.assertAllEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testGeneratorDatasetFinalizeFunctionCalled.finalize_fn": ["ops.script_ops.py_func"], "kernel_tests.from_generator_test.FromGeneratorTest.testGeneratorDatasetFinalizeFunctionCalled.finalize_fn.finalize_py_func": [], "ops.script_ops.py_func": [], "framework.constant_op.constant": [], "kernel_tests.from_generator_test.FromGeneratorTest.testGeneratorDatasetFinalizeFunctionCalled.<lambda1>": [], "kernel_tests.from_generator_test.FromGeneratorTest.testGeneratorDatasetFinalizeFunctionCalled.<lambda2>": [], "framework.tensor_spec.TensorSpec": [], "ops.dataset_ops._GeneratorDataset": [], "kernel_tests.from_generator_test.FromGeneratorTest.testSharedName": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_generator", "test_base.DatasetTestBase.assertAllEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testSharedName.generator": ["<builtin>.range"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorRaggedTensor": ["ragged.ragged_tensor.RaggedTensorSpec", "test_base.DatasetTestBase.assertIsInstance", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_generator", "test_base.DatasetTestBase.assertAllEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorRaggedTensor.generator": ["ragged.ragged_factory_ops.constant"], "ragged.ragged_factory_ops.constant": [], "ragged.ragged_tensor.RaggedTensorSpec": [], "test_base.DatasetTestBase.assertIsInstance": [], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorSparseTensor": ["test_base.DatasetTestBase.assertIsInstance", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_generator", "ops.sparse_ops.sparse_tensor_to_dense", "framework.sparse_tensor.SparseTensorSpec", "test_base.DatasetTestBase.assertAllEqual"], "kernel_tests.from_generator_test.FromGeneratorTest.testFromGeneratorSparseTensor.generator": ["framework.constant_op.constant", "framework.sparse_tensor.SparseTensor"], "framework.sparse_tensor.SparseTensor": [], "framework.sparse_tensor.SparseTensorSpec": [], "ops.sparse_ops.sparse_tensor_to_dense": [], "kernel_tests.from_generator_test.FromGeneratorTest.testTypeIsListError": ["dataset_ops.Dataset.from_generator", "test_base.DatasetTestBase.assertRaisesRegex"], "kernel_tests.from_generator_test.FromGeneratorTest.testTypeIsListError.generator": ["<builtin>.range"], "test_base.DatasetTestBase.assertRaisesRegex": [], "kernel_tests.from_generator_test.FromGeneratorTest.testDimensionIsListError": ["dataset_ops.Dataset.from_generator", "test_base.DatasetTestBase.assertRaisesRegex"], "kernel_tests.from_generator_test.FromGeneratorTest.testDimensionIsListError.generator": ["<builtin>.range"], "kernel_tests.from_generator_test.FromGeneratorTest.testName": ["dataset_ops.Dataset.from_generator"], "kernel_tests.from_generator_test.FromGeneratorTest.testName.generator": [], "platform.test.main": []}