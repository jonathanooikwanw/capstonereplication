{"engine.training_utils_v1_test": ["numpy.array", "platform.test.main"], "engine.training_utils_v1_test.ModelInputsTest.test_single_thing": ["keras.backend.floatx", "numpy.ones", "test.TestCase.assertEqual", "framework.tensor_util.is_tf_type", "engine.training_utils_v1.ModelInputs", "test.TestCase.assertTrue", "<builtin>.len"], "numpy.ones": [], "engine.training_utils_v1.ModelInputs": [], "test.TestCase.assertEqual": [], "framework.tensor_util.is_tf_type": [], "test.TestCase.assertTrue": [], "<builtin>.len": [], "keras.backend.floatx": [], "engine.training_utils_v1_test.ModelInputsTest.test_single_thing_eager": ["numpy.ones", "test.TestCase.assertEqual", "test.TestCase.assertIsInstance", "engine.training_utils_v1.ModelInputs", "eager.context.executing_eagerly", "test.TestCase.skipTest", "<builtin>.len"], "eager.context.executing_eagerly": [], "test.TestCase.skipTest": [], "test.TestCase.assertIsInstance": [], "engine.training_utils_v1_test.ModelInputsTest.test_list": ["numpy.ones", "test.TestCase.assertEqual", "framework.tensor_util.is_tf_type", "engine.training_utils_v1.ModelInputs", "test.TestCase.assertTrue"], "engine.training_utils_v1_test.ModelInputsTest.test_list_eager": ["numpy.ones", "test.TestCase.assertEqual", "test.TestCase.assertIsInstance", "engine.training_utils_v1.ModelInputs", "eager.context.executing_eagerly", "test.TestCase.skipTest"], "engine.training_utils_v1_test.ModelInputsTest.test_dict": ["numpy.ones", "test.TestCase.assertEqual", "framework.tensor_util.is_tf_type", "engine.training_utils_v1.ModelInputs", "test.TestCase.assertTrue"], "engine.training_utils_v1_test.ModelInputsTest.test_dict_eager": ["numpy.ones", "test.TestCase.assertEqual", "test.TestCase.assertIsInstance", "engine.training_utils_v1.ModelInputs", "eager.context.executing_eagerly", "test.TestCase.skipTest"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda1>": ["dataset_ops.Dataset.range"], "dataset_ops.Dataset.range": [], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda2>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda3>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda4>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda4>.<lambda1>": ["dataset_ops.Dataset.from_tensors"], "dataset_ops.Dataset.from_tensors": [], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda5>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda5>.<lambda1>": ["dataset_ops.Dataset.from_tensors"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda6>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda6>.<lambda1>": [], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda7>": ["ops.readers.FixedLengthRecordDatasetV2"], "ops.readers.FixedLengthRecordDatasetV2": [], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda8>": ["dataset_ops.Dataset.from_tensors"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda9>": ["dataset_ops.Dataset.from_tensor_slices"], "dataset_ops.Dataset.from_tensor_slices": [], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda10>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda10>.<lambda1>": ["dataset_ops.Dataset.from_tensors"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda11>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda11>.<lambda1>": ["dataset_ops.Dataset.from_tensors"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda12>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda12>.<lambda1>": [], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda13>": ["ops.options.Options", "dataset_ops.Dataset.range"], "ops.options.Options": [], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda14>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda15>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda15>.<lambda1>": ["dataset_ops.Dataset.from_tensors"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda16>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda16>.<lambda1>": [], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda17>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda18>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda19>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda20>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda21>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda22>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda23>": ["ops.readers.TextLineDatasetV2"], "ops.readers.TextLineDatasetV2": [], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda24>": ["ops.readers.TFRecordDatasetV2"], "ops.readers.TFRecordDatasetV2": [], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda25>": ["dataset_ops.Dataset.range"], "engine.training_utils_v1_test.DatasetUtilsTest.<lambda26>": ["dataset_ops.Dataset.zip", "dataset_ops.Dataset.range"], "dataset_ops.Dataset.zip": [], "absl.testing.parameterized.named_parameters": [], "engine.training_utils_v1_test.DatasetUtilsTest": ["absl.testing.parameterized.named_parameters"], "engine.training_utils_v1_test.DatasetUtilsTest.test_verify_dataset_shuffled": ["<builtin>.str", "test.TestCase.assertRegex", "mock.patch.object", "engine.training_utils_v1.verify_dataset_shuffled", "test.TestCase.assertTrue", "test.TestCase.assertFalse"], "mock.patch.object": [], "engine.training_utils_v1.verify_dataset_shuffled": [], "<builtin>.str": [], "test.TestCase.assertRegex": [], "test.TestCase.assertFalse": [], "engine.training_utils_v1_test.StandardizeWeightsTest.test_sample_weights": ["keras_parameterized.TestCase.assertAllClose", "numpy.array", "engine.training_utils_v1.standardize_weights"], "numpy.array": [], "engine.training_utils_v1.standardize_weights": [], "keras_parameterized.TestCase.assertAllClose": [], "engine.training_utils_v1_test.StandardizeWeightsTest.test_class_weights": ["keras_parameterized.TestCase.assertAllClose", "numpy.array", "engine.training_utils_v1.standardize_weights"], "engine.training_utils_v1_test.StandardizeWeightsTest.test_sample_weights_and_class_weights": ["keras_parameterized.TestCase.assertAllClose", "numpy.array", "engine.training_utils_v1.standardize_weights"], "engine.training_utils_v1_test.StandardizeWeightsTest.test_dataset_with_class_weight": ["numpy.array", "dataset_ops.Dataset.from_tensor_slices", "<builtin>.enumerate", "<builtin>.dict", "keras.testing_utils.get_small_functional_mlp", "numpy.zeros"], "keras.testing_utils.get_small_functional_mlp": [], "numpy.zeros": [], "<builtin>.enumerate": [], "<builtin>.dict": [], "engine.training_utils_v1_test.MonitoredPool.__init__": ["<builtin>.super"], "<builtin>.super": [], "engine.training_utils_v1_test.MonitoredPool.apply_async": ["<builtin>.super"], "engine.training_utils_v1_test.add_sleep": ["functools.wraps"], "functools.wraps": [], "engine.training_utils_v1_test.add_sleep.wrapped": ["time.sleep"], "time.sleep": [], "engine.training_utils_v1_test.cause_error": ["functools.wraps"], "engine.training_utils_v1_test.cause_error.wrapped": [], "engine.training_utils_v1_test.AggregationTest.setUp": ["keras.testing_utils.get_small_functional_mlp", "<builtin>.super"], "engine.training_utils_v1_test.AggregationTest.tearDown": ["<builtin>.super"], "engine.training_utils_v1_test.AggregationTest._run_with_steps": ["<builtin>.enumerate", "engine.training_utils_v1.OutputsAggregator", "numpy.array_split", "<builtin>.len", "<builtin>.isinstance"], "engine.training_utils_v1.OutputsAggregator": [], "numpy.array_split": [], "<builtin>.isinstance": [], "engine.training_utils_v1_test.AggregationTest._run_without_steps": ["<builtin>.enumerate", "engine.training_utils_v1.OutputsAggregator", "numpy.array_split", "<builtin>.len", "<builtin>.isinstance"], "engine.training_utils_v1_test.AggregationTest.test_with_steps": ["engine.training_utils_v1.OutputsAggregator", "keras_parameterized.TestCase.assertAllEqual"], "keras_parameterized.TestCase.assertAllEqual": [], "engine.training_utils_v1_test.AggregationTest.test_without_steps": ["keras_parameterized.TestCase.assertAllEqual", "keras_parameterized.TestCase.assertAllEqual"], "engine.training_utils_v1_test.AggregationTest.test_nested_aggregation": ["<builtin>.zip", "<builtin>.enumerate", "keras_parameterized.TestCase.assertAllEqual", "engine.training_utils_v1.OutputsAggregator", "numpy.array_split", "<builtin>.len"], "<builtin>.zip": [], "engine.training_utils_v1_test.AggregationTest.test_concat_single_batch": ["<builtin>.isinstance", "<builtin>.len", "engine.training_utils_v1.OutputsAggregator"], "engine.training_utils_v1_test.AggregationTest.test_slice_single_batch": ["<builtin>.isinstance", "<builtin>.len", "engine.training_utils_v1.OutputsAggregator"], "engine.training_utils_v1_test.AggregationTest.test_async_copy": ["keras_parameterized.TestCase.assertEqual", "keras_parameterized.TestCase.assertEqual", "keras_parameterized.TestCase.assertAllEqual"], "keras_parameterized.TestCase.assertEqual": [], "engine.training_utils_v1_test.AggregationTest.test_async_copy_timeout": ["keras_parameterized.TestCase.assertRaisesRegex", "keras_parameterized.TestCase.assertRaisesRegex"], "keras_parameterized.TestCase.assertRaisesRegex": [], "engine.training_utils_v1_test.AggregationTest.test_async_copy_reraise": ["keras_parameterized.TestCase.assertRaisesRegex", "keras_parameterized.TestCase.assertRaisesRegex"], "engine.training_utils_v1_test.CompositeTensorTestUtils.test_is_composite": ["engine.training_utils_v1.is_composite_or_composite_value", "numpy.array", "framework.ops.convert_to_tensor_v2_with_dispatch", "keras_parameterized.TestCase.assertFalse", "keras_parameterized.TestCase.assertTrue", "numpy.ndarray", "ragged.ragged_tensor_value.RaggedTensorValue", "framework.sparse_tensor.SparseTensor", "ragged_tensor.RaggedTensor.from_row_splits", "framework.sparse_tensor.SparseTensorValue"], "framework.sparse_tensor.SparseTensor": [], "engine.training_utils_v1.is_composite_or_composite_value": [], "keras_parameterized.TestCase.assertTrue": [], "framework.sparse_tensor.SparseTensorValue": [], "ragged_tensor.RaggedTensor.from_row_splits": [], "ragged.ragged_tensor_value.RaggedTensorValue": [], "numpy.ndarray": [], "keras_parameterized.TestCase.assertFalse": [], "framework.ops.convert_to_tensor_v2_with_dispatch": [], "engine.training_utils_v1_test.CompositeTensorTestUtils.test_sparse_concatenation": ["keras_parameterized.TestCase.evaluate", "engine.training_utils_v1._append_composite_tensor", "framework.sparse_tensor.SparseTensor", "keras_parameterized.TestCase.assertAllEqual"], "engine.training_utils_v1._append_composite_tensor": [], "keras_parameterized.TestCase.evaluate": [], "engine.training_utils_v1_test.CompositeTensorTestUtils.test_sparse_value_concatenation": ["engine.training_utils_v1._append_composite_tensor", "framework.sparse_tensor.SparseTensorValue", "keras_parameterized.TestCase.assertAllEqual"], "engine.training_utils_v1_test.CompositeTensorTestUtils.test_ragged_concatenation": ["numpy.array", "engine.training_utils_v1._append_composite_tensor", "ragged_tensor.RaggedTensor.from_row_splits", "keras_parameterized.TestCase.evaluate", "keras_parameterized.TestCase.assertAllEqual"], "engine.training_utils_v1_test.CompositeTensorTestUtils.test_ragged_value_concatenation": ["numpy.array", "engine.training_utils_v1._append_composite_tensor", "keras_parameterized.TestCase.assertAllEqual", "ragged.ragged_tensor_value.RaggedTensorValue"], "platform.test.main": []}