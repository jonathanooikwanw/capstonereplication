{"kernel_tests.flat_map_test": ["platform.test.main"], "kernel_tests.test_base.default_test_combinations": [], "kernel_tests.flat_map_test.FlatMapTest": ["framework.combinations.generate", "kernel_tests.test_base.default_test_combinations", "kernel_tests.test_base.graph_only_combinations"], "framework.combinations.generate": [], "kernel_tests.flat_map_test.FlatMapTest.testFlatMapDataset": ["dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertDatasetProduces", "numpy.array"], "numpy.array": [], "kernel_tests.flat_map_test.FlatMapTest.testFlatMapDataset.<lambda1>": ["dataset_ops.Dataset.from_tensors"], "dataset_ops.Dataset.from_tensors": [], "dataset_ops.Dataset.from_tensor_slices": [], "test_base.DatasetTestBase.assertDatasetProduces": [], "kernel_tests.flat_map_test.FlatMapTest.testNestedFlatMapDataset": ["dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertDatasetProduces", "numpy.array"], "kernel_tests.flat_map_test.FlatMapTest.testNestedFlatMapDataset.<lambda1>": ["dataset_ops.Dataset.from_tensor_slices"], "kernel_tests.flat_map_test.FlatMapTest.testNestedFlatMapDataset.<lambda1>.<lambda1>": ["dataset_ops.Dataset.from_tensors"], "kernel_tests.test_base.graph_only_combinations": [], "kernel_tests.flat_map_test.FlatMapTest.testSharedResourceNestedFlatMapDataset": ["<builtin>.range", "test_base.DatasetTestBase.assertRaises", "numpy.array", "dataset_ops.Dataset.from_tensor_slices", "server_lib.Server.create_local_server", "ops.dataset_ops.make_initializable_iterator", "random.choice", "client.session.Session", "test_base.DatasetTestBase.assertEqual"], "kernel_tests.flat_map_test.FlatMapTest.testSharedResourceNestedFlatMapDataset.<lambda1>": ["dataset_ops.Dataset.from_tensor_slices"], "kernel_tests.flat_map_test.FlatMapTest.testSharedResourceNestedFlatMapDataset.<lambda1>.<lambda1>": ["dataset_ops.Dataset.from_tensors"], "ops.dataset_ops.make_initializable_iterator": [], "server_lib.Server.create_local_server": [], "client.session.Session": [], "<builtin>.range": [], "random.choice": [], "test_base.DatasetTestBase.assertEqual": [], "test_base.DatasetTestBase.assertRaises": [], "kernel_tests.flat_map_test.FlatMapTest.testMapDict": ["test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.range", "<builtin>.range", "test_base.DatasetTestBase.assertRaises", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertEqual"], "kernel_tests.flat_map_test.FlatMapTest.testMapDict.<lambda1>": ["dataset_ops.Dataset.from_tensors"], "kernel_tests.flat_map_test.FlatMapTest.testMapDict.<lambda2>": [], "dataset_ops.Dataset.range": [], "test_base.DatasetTestBase.getNext": [], "test_base.DatasetTestBase.evaluate": [], "kernel_tests.flat_map_test.FlatMapTest.testSparse": ["<builtin>.range", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.flat_map_test.FlatMapTest.testSparse._map_fn": ["framework.sparse_tensor.SparseTensorValue"], "framework.sparse_tensor.SparseTensorValue": [], "kernel_tests.flat_map_test.FlatMapTest.testSparse._flat_map_fn": ["dataset_ops.Dataset.from_tensor_slices", "ops.sparse_ops.sparse_to_dense"], "ops.sparse_ops.sparse_to_dense": [], "kernel_tests.flat_map_test.FlatMapTest.testTensorArray": ["<builtin>.range", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.flat_map_test.FlatMapTest.testTensorArray._map_fn": ["ops.tensor_array_ops.TensorArray", "ops.math_ops.range", "ops.math_ops.cast"], "ops.math_ops.cast": [], "ops.math_ops.range": [], "ops.tensor_array_ops.TensorArray": [], "kernel_tests.flat_map_test.FlatMapTest.testTensorArray._flat_map_fn": ["dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertIsInstance"], "test_base.DatasetTestBase.assertIsInstance": [], "kernel_tests.flat_map_test.FlatMapTest.testRagged": ["<builtin>.range", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.flat_map_test.FlatMapTest.testRagged._map_fn": ["ragged_tensor.RaggedTensor.from_tensor"], "ragged_tensor.RaggedTensor.from_tensor": [], "kernel_tests.flat_map_test.FlatMapTest.testRagged._flat_map_fn": ["dataset_ops.Dataset.from_tensor_slices", "ragged.ragged_conversion_ops.to_tensor"], "ragged.ragged_conversion_ops.to_tensor": [], "kernel_tests.flat_map_test.FlatMapTest.testName": ["dataset_ops.Dataset.from_tensors", "test_base.DatasetTestBase.assertDatasetProduces"], "kernel_tests.flat_map_test.FlatMapTest.testName.fn": ["dataset_ops.Dataset.from_tensors"], "kernel_tests.flat_map_test.FlatMapCheckpointTest": ["framework.combinations.generate", "kernel_tests.checkpoint_test_base.default_test_combinations", "kernel_tests.test_base.default_test_combinations", "framework.combinations.times"], "kernel_tests.checkpoint_test_base.default_test_combinations": [], "framework.combinations.times": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.test": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.test.build_ds": ["dataset_ops.Dataset.range"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.test.build_ds.map_fn": ["dataset_ops.Dataset.range"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.test.<lambda1>": ["dataset_ops.Dataset.range"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testNested": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testNested.build_ds": ["<builtin>.range", "dataset_ops.Dataset.from_tensor_slices", "dataset_ops.Dataset.from_tensors"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testNested.build_ds.<lambda1>": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testMapThenFlatMap": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testMapThenFlatMap.build_ds": ["dataset_ops.Dataset.range"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testMapThenFlatMap.build_ds.flat_map_fn": ["dataset_ops.Dataset.range"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testMapThenFlatMap.build_ds.flat_map_fn.map_fn": ["ops.math_ops.cast"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testCaptureDefunInMapFn": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testCaptureDefunInMapFn.build_ds": ["dataset_ops.Dataset.range"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testCaptureDefunInMapFn.build_ds.map_fn": ["dataset_ops.Dataset.from_tensor_slices", "dataset_ops.Dataset.from_tensor_slices", "framework.function.Defun"], "framework.function.Defun": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testCaptureDefunInMapFn.build_ds.map_fn.defun_fn": ["ops.math_ops.cast", "framework.constant_op.constant"], "framework.constant_op.constant": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testDisallowVariableCapture": ["checkpoint_test_base.CheckpointTestBase.verify_error_on_save"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testDisallowVariableCapture.build_ds": ["dataset_ops.Dataset.range", "ops.variable_scope.get_variable"], "ops.variable_scope.get_variable": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testDisallowVariableCapture.build_ds.<lambda1>": ["dataset_ops.Dataset.from_tensor_slices"], "checkpoint_test_base.CheckpointTestBase.verify_error_on_save": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testDisallowCapturingStatefulOps": ["checkpoint_test_base.CheckpointTestBase.verify_error_on_save"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testDisallowCapturingStatefulOps.build_ds": ["dataset_ops.Dataset.range"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testDisallowCapturingStatefulOps.build_ds.flat_map_fn": ["dataset_ops.Dataset.range"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testDisallowCapturingStatefulOps.build_ds.flat_map_fn.map_fn": ["ops.random_ops.random_uniform", "ops.math_ops.cast"], "ops.random_ops.random_uniform": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testSparse": [], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testSparse._map_fn": ["framework.sparse_tensor.SparseTensorValue"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testSparse._flat_map_fn": ["dataset_ops.Dataset.from_tensor_slices", "ops.sparse_ops.sparse_to_dense"], "kernel_tests.flat_map_test.FlatMapCheckpointTest.testSparse._build_ds": ["dataset_ops.Dataset.range"], "platform.test.main": []}