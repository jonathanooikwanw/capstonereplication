{"tools.saved_model_cli_test": ["platform.test.main", "contextlib.contextmanager"], "contextlib.contextmanager": [], "tools.saved_model_cli_test.captured_output": ["six.StringIO"], "six.StringIO": [], "tools.saved_model_cli_test.SavedModelCLITestCase.setUp": ["<builtin>.super", "platform.system", "test.TestCase.skipTest"], "<builtin>.super": [], "platform.system": [], "test.TestCase.skipTest": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowCommandAll": ["tools.saved_model_cli_test.captured_output", "platform.test.test_src_dir_path", "test.TestCase.assertMultiLineEqual", "test.TestCase.assertEqual", "tools.saved_model_cli.create_parser", "tools.saved_model_cli.show"], "platform.test.test_src_dir_path": [], "tools.saved_model_cli.create_parser": [], "tools.saved_model_cli.show": [], "test.TestCase.assertMultiLineEqual": [], "test.TestCase.assertEqual": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowAllWithFunctions": ["platform.test.get_temp_dir", "tools.saved_model_cli_test.captured_output", "os.path.join", "test.TestCase.assertMultiLineEqual", "tracking.AutoTrackable.__init__", "test.TestCase.assertEqual", "saved_model.save.save", "tools.saved_model_cli.create_parser", "tools.saved_model_cli_test.SavedModelCLITestCase.testShowAllWithFunctions.DummyModel.func1", "framework.constant_op.constant", "tools.saved_model_cli.show"], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowAllWithFunctions.DummyModel.func1": [], "eager.def_function.function": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowAllWithFunctions.DummyModel": ["eager.def_function.function"], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowAllWithFunctions.DummyModel.func2": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowAllWithFunctions.DummyModel.__call__": [], "platform.test.get_temp_dir": [], "os.path.join": [], "tracking.AutoTrackable.__init__": [], "framework.constant_op.constant": [], "saved_model.save.save": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowAllWithPureConcreteFunction": ["platform.test.get_temp_dir", "tools.saved_model_cli_test.captured_output", "os.path.join", "test.TestCase.assertMultiLineEqual", "test.TestCase.assertEqual", "saved_model.save.save", "tools.saved_model_cli_test.SavedModelCLITestCase.testShowAllWithPureConcreteFunction.DummyModel.__init__", "tools.saved_model_cli.create_parser", "tools.saved_model_cli.show"], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowAllWithPureConcreteFunction.DummyModel.__init__": ["<builtin>.super", "eager.def_function.function"], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowAllWithPureConcreteFunction.DummyModel.multiply": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowCommandTags": ["tools.saved_model_cli_test.captured_output", "platform.test.test_src_dir_path", "test.TestCase.assertMultiLineEqual", "test.TestCase.assertEqual", "tools.saved_model_cli.create_parser", "tools.saved_model_cli.show"], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowCommandSignature": ["tools.saved_model_cli_test.captured_output", "platform.test.test_src_dir_path", "test.TestCase.assertMultiLineEqual", "test.TestCase.assertEqual", "tools.saved_model_cli.create_parser", "tools.saved_model_cli.show"], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowCommandErrorNoTagSet": ["test.TestCase.assertRaises", "platform.test.test_src_dir_path", "tools.saved_model_cli.show", "tools.saved_model_cli.create_parser"], "test.TestCase.assertRaises": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testShowCommandInputsOutputs": ["tools.saved_model_cli_test.captured_output", "platform.test.test_src_dir_path", "test.TestCase.assertEqual", "tools.saved_model_cli.create_parser", "tools.saved_model_cli.show"], "tools.saved_model_cli_test.SavedModelCLITestCase.testPrintREFTypeTensor": ["test.TestCase.assertTrue", "tools.saved_model_cli._print_tensor_info", "tools.saved_model_cli_test.captured_output", "protobuf.meta_graph_pb2.TensorInfo", "test.TestCase.assertEqual"], "protobuf.meta_graph_pb2.TensorInfo": [], "tools.saved_model_cli._print_tensor_info": [], "test.TestCase.assertTrue": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputPreProcessFormats": ["test.TestCase.assertTrue", "test.TestCase.assertAllClose", "<builtin>.print", "tools.saved_model_cli.preprocess_input_exprs_arg_string", "tools.saved_model_cli.preprocess_inputs_arg_string", "<builtin>.len", "numpy.zeros"], "tools.saved_model_cli.preprocess_inputs_arg_string": [], "tools.saved_model_cli.preprocess_input_exprs_arg_string": [], "<builtin>.print": [], "numpy.zeros": [], "test.TestCase.assertAllClose": [], "<builtin>.len": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputPreProcessExamplesWithStrAndBytes": ["test.TestCase.assertProtoEquals", "tools.saved_model_cli.preprocess_input_examples_arg_string", "example_pb2.Example.FromString"], "tools.saved_model_cli.preprocess_input_examples_arg_string": [], "example_pb2.Example.FromString": [], "test.TestCase.assertProtoEquals": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputPreprocessExampleWithCodeInjection": ["tools.saved_model_cli.preprocess_input_examples_arg_string", "test.TestCase.assertRaisesRegex"], "test.TestCase.assertRaisesRegex": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputPreProcessFileNames": ["test.TestCase.assertTrue", "tools.saved_model_cli.preprocess_inputs_arg_string"], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputPreProcessErrorBadFormat": ["test.TestCase.assertRaises", "tools.saved_model_cli.preprocess_input_exprs_arg_string", "tools.saved_model_cli.preprocess_inputs_arg_string", "test.TestCase.assertRaisesRegex"], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputParserNPY": ["test.TestCase.assertTrue", "platform.test.get_temp_dir", "numpy.all", "os.path.join", "tools.saved_model_cli.load_inputs_from_input_arg_string", "<builtin>.range", "numpy.array", "numpy.save"], "numpy.array": [], "<builtin>.range": [], "numpy.save": [], "tools.saved_model_cli.load_inputs_from_input_arg_string": [], "numpy.all": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputParserNPZ": ["test.TestCase.assertTrue", "platform.test.get_temp_dir", "numpy.all", "os.path.join", "numpy.savez", "tools.saved_model_cli.load_inputs_from_input_arg_string", "numpy.array"], "numpy.savez": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputParserPickle": ["test.TestCase.assertTrue", "platform.test.get_temp_dir", "numpy.all", "os.path.join", "tools.saved_model_cli.load_inputs_from_input_arg_string", "<builtin>.range", "pickle.dump", "numpy.array", "<builtin>.open"], "<builtin>.open": [], "pickle.dump": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputParserPythonExpression": ["test.TestCase.assertTrue", "numpy.all", "tools.saved_model_cli.load_inputs_from_input_arg_string", "numpy.ones", "numpy.array"], "numpy.ones": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputParserBoth": ["test.TestCase.assertTrue", "platform.test.get_temp_dir", "numpy.all", "os.path.join", "numpy.savez", "tools.saved_model_cli.load_inputs_from_input_arg_string", "numpy.ones", "numpy.array"], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputParserBothDuplicate": ["test.TestCase.assertTrue", "platform.test.get_temp_dir", "numpy.all", "os.path.join", "numpy.savez", "tools.saved_model_cli.load_inputs_from_input_arg_string", "numpy.ones", "numpy.array"], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputParserErrorNoName": ["platform.test.get_temp_dir", "test.TestCase.assertRaises", "os.path.join", "numpy.savez", "tools.saved_model_cli.load_inputs_from_input_arg_string", "<builtin>.range", "numpy.array"], "tools.saved_model_cli_test.SavedModelCLITestCase.testInputParserErrorWrongName": ["platform.test.get_temp_dir", "test.TestCase.assertRaises", "os.path.join", "numpy.savez", "tools.saved_model_cli.load_inputs_from_input_arg_string", "<builtin>.range", "numpy.array"], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandInputExamples": ["platform.test.get_temp_dir", "os.path.join", "platform.test.test_src_dir_path", "numpy.load", "numpy.array", "test.TestCase.assertAllEqual", "tools.saved_model_cli.create_parser", "tools.saved_model_cli.run"], "tools.saved_model_cli.run": [], "numpy.load": [], "test.TestCase.assertAllEqual": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandExistingOutdir": ["platform.test.get_temp_dir", "platform.test.test_src_dir_path", "os.path.join", "numpy.savez", "test.TestCase.assertAllClose", "numpy.load", "numpy.array", "os.path.exists", "tools.saved_model_cli.create_parser", "numpy.zeros", "tools.saved_model_cli.run", "os.remove"], "os.path.exists": [], "os.remove": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandNewOutdir": ["platform.test.get_temp_dir", "platform.test.test_src_dir_path", "os.path.join", "os.path.isdir", "numpy.savez", "numpy.load", "test.TestCase.assertAllClose", "numpy.array", "tools.saved_model_cli.create_parser", "numpy.zeros", "tools.saved_model_cli.run", "shutil.rmtree"], "os.path.isdir": [], "shutil.rmtree": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandOutOverwrite": ["platform.test.get_temp_dir", "platform.test.test_src_dir_path", "os.path.join", "numpy.savez", "test.TestCase.assertAllClose", "numpy.load", "numpy.array", "<builtin>.open", "tools.saved_model_cli.create_parser", "numpy.zeros", "tools.saved_model_cli.run"], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandInvalidInputKeyError": ["tools.saved_model_cli.run", "test.TestCase.assertRaises", "platform.test.test_src_dir_path", "tools.saved_model_cli.create_parser"], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandInvalidSignature": ["tools.saved_model_cli.run", "platform.test.test_src_dir_path", "test.TestCase.assertRaisesRegex", "tools.saved_model_cli.create_parser"], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandInputExamplesNotListError": ["platform.test.get_temp_dir", "os.path.join", "platform.test.test_src_dir_path", "tools.saved_model_cli.create_parser", "tools.saved_model_cli.run", "test.TestCase.assertRaisesRegex"], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandInputExamplesFeatureValueNotListError": ["platform.test.get_temp_dir", "os.path.join", "platform.test.test_src_dir_path", "tools.saved_model_cli.create_parser", "tools.saved_model_cli.run", "test.TestCase.assertRaisesRegex"], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandInputExamplesFeatureBadType": ["platform.test.get_temp_dir", "os.path.join", "platform.test.test_src_dir_path", "tools.saved_model_cli.create_parser", "tools.saved_model_cli.run", "test.TestCase.assertRaisesRegex"], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandOutputFileExistError": ["platform.test.get_temp_dir", "test.TestCase.assertRaises", "platform.test.test_src_dir_path", "os.path.join", "numpy.savez", "numpy.array", "<builtin>.open", "tools.saved_model_cli.create_parser", "numpy.zeros", "tools.saved_model_cli.run"], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandInputNotGivenError": ["tools.saved_model_cli.run", "test.TestCase.assertRaises", "platform.test.test_src_dir_path", "tools.saved_model_cli.create_parser"], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandWithDebuggerEnabled": ["platform.test.get_temp_dir", "mock.patch.object", "platform.test.test_src_dir_path", "os.path.join", "os.path.isdir", "numpy.savez", "numpy.load", "test.TestCase.assertAllClose", "numpy.array", "tools.saved_model_cli.create_parser", "numpy.zeros", "tools.saved_model_cli.run", "shutil.rmtree"], "tools.saved_model_cli_test.SavedModelCLITestCase.testRunCommandWithDebuggerEnabled.fake_wrapper_session": [], "mock.patch.object": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testScanCommand": ["test.TestCase.assertTrue", "tools.saved_model_cli_test.captured_output", "platform.test.test_src_dir_path", "tools.saved_model_cli.scan", "tools.saved_model_cli.create_parser"], "tools.saved_model_cli.scan": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testScanCommandFoundDenylistedOp": ["test.TestCase.assertTrue", "tools.saved_model_cli_test.captured_output", "platform.test.test_src_dir_path", "tools.saved_model_cli.scan", "<builtin>.set", "tools.saved_model_cli.create_parser"], "<builtin>.set": [], "tools.saved_model_cli_test.SavedModelCLITestCase.testAOTCompileCPUWrongSignatureDefKey": ["platform.test.get_temp_dir", "platform.test.test_src_dir_path", "os.path.join", "platform.test.is_built_with_xla", "tools.saved_model_cli.aot_compile_cpu", "tools.saved_model_cli.create_parser", "test.TestCase.skipTest", "test.TestCase.assertRaisesRegex"], "platform.test.is_built_with_xla": [], "tools.saved_model_cli.aot_compile_cpu": [], "tools.saved_model_cli_test.SavedModelCLITestCase.AOTCompileDummyModel.__init__": ["ops.variables.Variable"], "ops.variables.Variable": [], "tools.saved_model_cli_test.SavedModelCLITestCase.AOTCompileDummyModel": ["eager.def_function.function"], "tools.saved_model_cli_test.SavedModelCLITestCase.AOTCompileDummyModel.func2": [], "tools.saved_model_cli_test.SavedModelCLITestCase.AOTCompileDummyModel.func3": [], "tools.saved_model_cli_test.SavedModelCLITestCase.AOTCompileDummyModel.func_write": [], "absl.testing.parameterized.named_parameters": [], "tools.saved_model_cli_test.SavedModelCLITestCase": ["absl.testing.parameterized.named_parameters"], "tools.saved_model_cli_test.SavedModelCLITestCase.testAOTCompileCPUFreezesAndCompiles": ["platform.test.get_temp_dir", "mock.patch.object", "test.TestCase.assertNotIn", "<builtin>.str", "io.file_io.file_exists", "saved_model.save.save", "io.file_io.read_file_to_string", "test.TestCase.skipTest", "test.TestCase.assertTrue", "platform.test.is_built_with_xla", "test.TestCase.assertIn", "test.TestCase.evaluate", "tools.saved_model_cli.aot_compile_cpu", "test.TestCase.assertRegex", "tools.saved_model_cli_test.SavedModelCLITestCase.AOTCompileDummyModel.__init__", "test.TestCase.cached_session", "os.path.join", "<builtin>.getattr", "tools.saved_model_cli.create_parser"], "<builtin>.getattr": [], "test.TestCase.cached_session": [], "test.TestCase.evaluate": [], "<builtin>.str": [], "test.TestCase.assertRegex": [], "io.file_io.file_exists": [], "io.file_io.read_file_to_string": [], "test.TestCase.assertIn": [], "test.TestCase.assertNotIn": [], "platform.test.main": []}