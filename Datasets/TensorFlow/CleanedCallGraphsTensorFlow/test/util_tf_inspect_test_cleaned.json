{"util.tf_inspect_test": ["platform.test.main", "util.tf_inspect_test.test_decorator", "util.tf_inspect_test.test_decorator.make_tf_decorator"], "util.tf_inspect_test.test_decorator": [], "util.tf_inspect_test.test_decorator.make_tf_decorator": ["util.tf_decorator.TFDecorator"], "util.tf_decorator.TFDecorator": [], "util.tf_inspect_test.test_undecorated_function": [], "util.tf_inspect_test.test_decorated_function": [], "util.tf_inspect_test.test_decorated_function_with_defaults": [], "util.tf_inspect_test.TestDecoratedClass.__init__": [], "util.tf_inspect_test.TestDecoratedClass.two": [], "util.tf_inspect_test.TfInspectTest.testCurrentFrame": ["test.TestCase.assertEqual", "util.tf_inspect.currentframe", "inspect.currentframe"], "inspect.currentframe": [], "util.tf_inspect.currentframe": [], "test.TestCase.assertEqual": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnDecoratorsThatDontProvideArgspec": ["util.tf_inspect.getargspec", "test.TestCase.assertEqual"], "util.tf_inspect.getargspec": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnDecoratorThatChangesArgspec": ["util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_decorator.TFDecorator", "util.tf_inspect.ArgSpec"], "util.tf_inspect.ArgSpec": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecIgnoresDecoratorsThatDontProvideArgspec": ["util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_decorator.TFDecorator", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecReturnsOutermostDecoratorThatChangesArgspec": ["util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_decorator.TFDecorator", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialPositionalArgumentOnly": ["functools.partial", "util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialPositionalArgumentOnly.func": [], "functools.partial": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialArgumentWithConvertibleToFalse": ["functools.partial", "util.tf_inspect.getargspec", "test.TestCase.assertRaisesRegex"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialArgumentWithConvertibleToFalse.func": [], "test.TestCase.assertRaisesRegex": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialInvalidArgspec": ["functools.partial", "util.tf_inspect.getargspec", "test.TestCase.assertRaisesRegex"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialInvalidArgspec.func": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialValidArgspec": ["functools.partial", "util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialValidArgspec.func": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialNoArgumentsLeft": ["functools.partial", "util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialNoArgumentsLeft.func": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialKeywordArgument": ["functools.partial", "util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialKeywordArgument.func": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialKeywordArgumentWithDefaultValue": ["functools.partial", "util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialKeywordArgumentWithDefaultValue.func": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialWithVarargs": ["functools.partial", "util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialWithVarargs.func": ["<builtin>.len"], "<builtin>.len": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialWithVarkwargs": ["functools.partial", "util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialWithVarkwargs.func": ["<builtin>.len"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialWithDecorator": ["test.TestCase.assertEqual", "util.tf_inspect.ArgSpec", "util.tf_inspect.getargspec", "util.tf_inspect_test.test_decorator", "util.tf_inspect_test.test_decorator.make_tf_decorator", "functools.partial"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialWithDecorator.func": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnPartialWithDecoratorThatChangesArgspec": ["test.TestCase.assertEqual", "util.tf_inspect.ArgSpec", "util.tf_inspect.getargspec", "util.tf_decorator.TFDecorator", "functools.partial"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnCallableObject": ["util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnCallableObject.Callable.__call__": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnInitClass": ["util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnInitClass.InitClass.__init__": [], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnNewClass": ["util.tf_inspect.getargspec", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectTest.testGetArgSpecOnNewClass.NewClass.__new__": [], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnDecoratorsThatDontProvideFullArgSpec": ["test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect.getfullargspec": [], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnDecoratorThatChangesFullArgSpec": ["util.tf_inspect.FullArgSpec", "util.tf_decorator.TFDecorator", "test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect.FullArgSpec": [], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecIgnoresDecoratorsThatDontProvideFullArgSpec": ["util.tf_inspect.FullArgSpec", "util.tf_decorator.TFDecorator", "test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecReturnsOutermostDecoratorThatChangesFullArgSpec": ["util.tf_inspect.FullArgSpec", "util.tf_decorator.TFDecorator", "test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect_test.TfInspectTest.testGetFullArgsSpecForPartial": ["functools.partial", "util.tf_inspect.FullArgSpec", "test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect_test.TfInspectTest.testGetFullArgsSpecForPartial.func": [], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnPartialNoArgumentsLeft": ["functools.partial", "util.tf_inspect.FullArgSpec", "test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnPartialNoArgumentsLeft.func": [], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnPartialWithVarargs": ["functools.partial", "util.tf_inspect.FullArgSpec", "test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnPartialWithVarargs.func": ["<builtin>.len"], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnPartialWithVarkwargs": ["functools.partial", "util.tf_inspect.FullArgSpec", "test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnPartialWithVarkwargs.func": ["<builtin>.len"], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnCallableObject": ["util.tf_inspect.FullArgSpec", "test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnCallableObject.Callable.__call__": [], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnInitClass": ["util.tf_inspect.FullArgSpec", "test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnInitClass.InitClass.__init__": [], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnNewClass": ["util.tf_inspect.FullArgSpec", "test.TestCase.assertEqual", "util.tf_inspect.getfullargspec"], "util.tf_inspect_test.TfInspectTest.testGetFullArgSpecOnNewClass.NewClass.__new__": [], "util.tf_inspect_test.TfInspectTest.testSignatureOnDecoratorsThatDontProvideFullArgSpec": ["<builtin>.list", "test.TestCase.assertEqual", "util.tf_inspect.signature", "util.tf_inspect.Parameter"], "util.tf_inspect.signature": [], "util.tf_inspect.Parameter": [], "<builtin>.list": [], "util.tf_inspect_test.TfInspectTest.testSignatureFollowsNestedDecorators": ["<builtin>.list", "test.TestCase.assertEqual", "util.tf_inspect.signature", "util.tf_inspect.Parameter"], "util.tf_inspect_test.TfInspectTest.testGetDoc": ["test.TestCase.assertEqual", "util.tf_inspect.getdoc"], "util.tf_inspect.getdoc": [], "util.tf_inspect_test.TfInspectTest.testGetFile": ["test.TestCase.assertTrue", "util.tf_inspect.getfile", "util.tf_inspect_test.test_decorator.make_tf_decorator", "util.tf_inspect_test.test_decorator"], "util.tf_inspect.getfile": [], "test.TestCase.assertTrue": [], "util.tf_inspect_test.TfInspectTest.testGetMembers": ["util.tf_inspect.getmembers", "test.TestCase.assertEqual", "inspect.getmembers"], "inspect.getmembers": [], "util.tf_inspect.getmembers": [], "util.tf_inspect_test.TfInspectTest.testGetModule": ["test.TestCase.assertEqual", "util.tf_inspect.getmodule", "inspect.getmodule"], "inspect.getmodule": [], "util.tf_inspect.getmodule": [], "util.tf_inspect_test.TfInspectTest.testGetSource": ["test.TestCase.assertEqual", "util.tf_inspect.getsource"], "util.tf_inspect.getsource": [], "util.tf_inspect_test.TfInspectTest.testGetSourceFile": ["test.TestCase.assertEqual", "util.tf_inspect.getsourcefile"], "util.tf_inspect.getsourcefile": [], "util.tf_inspect_test.TfInspectTest.testGetSourceLines": ["inspect.getsourcelines", "test.TestCase.assertEqual", "util.tf_inspect.getsourcelines"], "inspect.getsourcelines": [], "util.tf_inspect.getsourcelines": [], "util.tf_inspect_test.TfInspectTest.testIsBuiltin": ["test.TestCase.assertEqual", "util.tf_inspect.isbuiltin", "inspect.isbuiltin"], "util.tf_inspect.isbuiltin": [], "inspect.isbuiltin": [], "util.tf_inspect_test.TfInspectTest.testIsClass": ["test.TestCase.assertFalse", "util.tf_inspect.isclass", "test.TestCase.assertTrue"], "util.tf_inspect.isclass": [], "test.TestCase.assertFalse": [], "util.tf_inspect_test.TfInspectTest.testIsFunction": ["test.TestCase.assertFalse", "test.TestCase.assertTrue", "util.tf_inspect.isfunction"], "util.tf_inspect.isfunction": [], "util.tf_inspect_test.TfInspectTest.testIsMethod": ["util.tf_inspect.ismethod", "test.TestCase.assertFalse", "test.TestCase.assertTrue", "util.tf_inspect_test.TestDecoratedClass.__init__"], "util.tf_inspect.ismethod": [], "util.tf_inspect_test.TfInspectTest.testIsModule": ["inspect.currentframe", "util.tf_inspect.ismodule", "test.TestCase.assertFalse", "test.TestCase.assertTrue", "inspect.getmodule"], "util.tf_inspect.ismodule": [], "util.tf_inspect_test.TfInspectTest.testIsRoutine": ["test.TestCase.assertFalse", "util.tf_inspect.isroutine", "test.TestCase.assertTrue"], "util.tf_inspect.isroutine": [], "util.tf_inspect_test.TfInspectTest.testStack": ["<builtin>.len", "inspect.stack", "util.tf_inspect.stack", "test.TestCase.assertEqual"], "inspect.stack": [], "util.tf_inspect.stack": [], "util.tf_inspect_test.TfInspectTest.testIsAnyTargetMethod": ["test.TestCase.assertFalse", "test.TestCase.assertTrue", "util.tf_inspect.isanytargetmethod", "util.tf_inspect_test.test_decorator", "util.tf_inspect_test.test_decorator.make_tf_decorator", "functools.partial"], "util.tf_inspect_test.TfInspectTest.testIsAnyTargetMethod.MyModule.f": [], "util.tf_inspect_test.TfInspectTest.testIsAnyTargetMethod.MyModule.__call__": [], "util.tf_inspect.isanytargetmethod": [], "util.tf_inspect_test.TfInspectTest.testIsAnyTargetMethod.f2": [], "util.tf_inspect_test.TfInspectTest.testIsAnyTargetMethod.<lambda1>": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testReturnsEmptyWhenUnboundFuncHasNoParameters": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testReturnsEmptyWhenUnboundFuncHasNoParameters.empty": [], "util.tf_inspect.getcallargs": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testClashingParameterNames": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual", "<builtin>.dict"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testClashingParameterNames.func": [], "<builtin>.dict": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithOneParamPositional": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithOneParamPositional.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsPositional": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsPositional.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithOneParamKeyword": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithOneParamKeyword.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsKeyword": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsKeyword.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithOneParamDefault": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithOneParamDefault.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithOneParamDefaultOnePositional": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithOneParamDefaultOnePositional.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsDefaultOnePositional": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsDefaultOnePositional.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsDefaultTwoPositional": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsDefaultTwoPositional.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithOneParamDefaultOneKeyword": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithOneParamDefaultOneKeyword.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsDefaultOneKeywordFirst": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsDefaultOneKeywordFirst.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsDefaultOneKeywordSecond": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsDefaultOneKeywordSecond.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsDefaultTwoKeywords": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUnboundFuncWithTwoParamsDefaultTwoKeywords.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testBoundFuncWithOneParam": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testBoundFuncWithOneParam.Test.bound": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testBoundFuncWithManyParamsAndDefaults": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testBoundFuncWithManyParamsAndDefaults.Test.bound": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testClassMethod": ["util.tf_inspect.getcallargs", "test.TestCase.assertEqual"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testClassMethod.Test.test": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUsesOutermostDecoratorsArgSpec": ["util.tf_inspect.getcallargs", "util.tf_decorator.make_decorator", "test.TestCase.assertEqual", "util.tf_inspect.ArgSpec"], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUsesOutermostDecoratorsArgSpec.func": [], "util.tf_inspect_test.TfInspectGetCallArgsTest.testUsesOutermostDecoratorsArgSpec.wrapper": ["util.tf_inspect_test.TfInspectGetCallArgsTest.testUsesOutermostDecoratorsArgSpec.func"], "util.tf_decorator.make_decorator": [], "platform.test.main": []}