{"ragged.ragged_tensor_supported_values_test": ["dispatch.GlobalOpDispatcher.__init__", "ragged.ragged_tensor._add_supported_value_type", "platform.googletest.main", "dispatch.GlobalOpDispatcher.register"], "ragged.ragged_tensor_supported_values_test.WrappedTensor.__init__": ["<builtin>.ValueError", "<builtin>.isinstance"], "<builtin>.isinstance": [], "<builtin>.ValueError": [], "ragged.ragged_tensor_supported_values_test.WrappedTensor.shape": [], "ragged.ragged_tensor_supported_values_test.WrappedTensor.dtype": [], "ragged.ragged_tensor_supported_values_test.WrappedTensor.__getitem__": ["dispatch.GlobalOpDispatcher.register"], "ragged.ragged_tensor_supported_values_test.WrappedTensor._type_spec": ["framework.type_spec.type_spec_from_value", "framework.type_spec.type_spec_from_value"], "framework.type_spec.type_spec_from_value": [], "ragged.ragged_tensor_supported_values_test.WrappedTensorSpec.__init__": [], "ragged.ragged_tensor_supported_values_test.WrappedTensorSpec.dtype": [], "ragged.ragged_tensor_supported_values_test.WrappedTensorSpec.value_type": [], "ragged.ragged_tensor_supported_values_test.WrappedTensorSpec._to_components": [], "ragged.ragged_tensor_supported_values_test.WrappedTensorSpec._from_components": ["framework.type_spec.type_spec_from_value"], "ragged.ragged_tensor_supported_values_test.WrappedTensorSpec._component_specs": [], "ragged.ragged_tensor_supported_values_test.WrappedTensorSpec._serialize": [], "ragged.ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.call_op": [], "ragged.ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.handle": ["framework.type_spec.type_spec_from_value", "framework.type_spec.type_spec_from_value", "framework.type_spec.type_spec_from_value", "<builtin>.any", "framework.type_spec.type_spec_from_value", "<builtin>.dict"], "ragged.ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.is_wrapped_tensor_arg": ["<builtin>.isinstance", "<builtin>.any"], "<builtin>.any": [], "ragged.ragged_tensor_supported_values_test.WrappedTensorOpDispatcher.unwrap": ["framework.type_spec.type_spec_from_value", "<builtin>.type", "<builtin>.isinstance"], "<builtin>.dict": [], "<builtin>.type": [], "dispatch.GlobalOpDispatcher.__init__": [], "dispatch.GlobalOpDispatcher.register": [], "ragged.ragged_tensor._add_supported_value_type": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.assertAllTensorsEqual": ["<builtin>.len", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.zip"], "<builtin>.len": [], "test_util.TensorFlowTestCase.assertLen": [], "<builtin>.zip": [], "test_util.TensorFlowTestCase.assertAllEqual": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.testConstruction": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor.from_uniform_row_length", "ragged_tensor.RaggedTensor.from_row_limits", "test_util.TensorFlowTestCase.assertIsInstance", "ragged_tensor.RaggedTensor.from_row_lengths", "ragged_tensor.RaggedTensor.from_row_starts", "ragged_tensor.RaggedTensor.from_row_splits", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.constant_op.constant": [], "ragged_tensor.RaggedTensor.from_row_splits": [], "test_util.TensorFlowTestCase.assertIsInstance": [], "ragged_tensor.RaggedTensor.from_row_starts": [], "ragged_tensor.RaggedTensor.from_row_limits": [], "ragged_tensor.RaggedTensor.from_row_lengths": [], "ragged_tensor.RaggedTensor.from_uniform_row_length": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.testWithValues": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertIsInstance", "ragged_tensor.RaggedTensor.from_nested_row_splits", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual"], "ragged_tensor.RaggedTensor.from_nested_row_splits": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.testWithFlatValues": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertIsInstance", "ragged_tensor.RaggedTensor.from_nested_row_splits", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual"], "absl.testing.parameterized.parameters": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest": ["absl.testing.parameterized.parameters"], "ragged.ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.testUnaryElementwiseOp": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.random_seed.set_seed", "ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.assertIsInstance", "ragged_tensor.RaggedTensor.from_nested_row_splits", "test_util.TensorFlowTestCase.assertAllEqual"], "ragged.ragged_factory_ops.constant": [], "test_util.random_seed.set_seed": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSupportedValuesTest.testBinaryElementwiseOp": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual", "ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.assertIsInstance", "ragged_tensor.RaggedTensor.from_nested_row_splits", "test_util.TensorFlowTestCase.assertAllEqual"], "ragged.ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.assertAllTensorsEqual": ["<builtin>.len", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.zip"], "ragged.ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testConstruction": ["test_util.TensorFlowTestCase.assertRaisesRegex", "test_util.TensorFlowTestCase.assertIsNone", "framework.tensor_spec.TensorSpec", "ragged.ragged_tensor.RaggedTensorSpec", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEqual"], "framework.tensor_spec.TensorSpec": [], "ragged.ragged_tensor.RaggedTensorSpec": [], "test_util.TensorFlowTestCase.assertIsNone": [], "test_util.TensorFlowTestCase.assertEqual": [], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest": ["absl.testing.parameterized.parameters"], "ragged.ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testSerialize": ["test_util.TensorFlowTestCase.assertEqual", "<builtin>.repr"], "<builtin>.repr": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testComponentSpecs": ["test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testToFromComponents": ["test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertIsInstance", "ragged_tensor.RaggedTensor.from_nested_row_splits", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertAllEqual"], "ragged.ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testIsCompatibleWith": ["test_util.TensorFlowTestCase.assertFalse", "test_util.TensorFlowTestCase.assertFalse", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertTrue", "framework.tensor_spec.TensorSpec", "ragged.ragged_tensor.RaggedTensorSpec", "ragged.ragged_tensor.RaggedTensorSpec"], "test_util.TensorFlowTestCase.assertTrue": [], "test_util.TensorFlowTestCase.assertFalse": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testToList": ["eager.context.eager_mode", "eager.context.eager_mode", "test_util.TensorFlowTestCase.assertRaisesRegex", "ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.subTest", "ragged_tensor.RaggedTensor.from_row_splits", "test_util.TensorFlowTestCase.assertEqual", "framework.constant_op.constant"], "eager.context.eager_mode": [], "test_util.TensorFlowTestCase.subTest": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testToList.WrappedTensorWithNumpy.numpy": [], "ragged.ragged_tensor_supported_values_test.RaggedTensorSpecSupportedValuesTest.testToList.WrappedTensorWithToList.to_list": [], "platform.googletest.main": []}