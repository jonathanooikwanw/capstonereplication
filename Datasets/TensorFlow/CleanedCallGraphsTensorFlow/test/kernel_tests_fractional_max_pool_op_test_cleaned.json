{"kernel_tests.fractional_max_pool_op_test": ["platform.test.main"], "numpy.random.RandomState": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest": ["framework.test_util.run_deprecated_v1", "numpy.random.RandomState"], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest._MaxPoolAlongRows": ["numpy.zeros", "<builtin>.min", "numpy.vstack", "numpy.amax", "<builtin>.range"], "numpy.zeros": [], "<builtin>.range": [], "<builtin>.min": [], "numpy.amax": [], "numpy.vstack": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest._MaxPoolAlongCols": ["framework.test_util.run_deprecated_v1"], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest._GetExpectedFractionalMaxPoolResult": ["numpy.zeros", "<builtin>.len", "framework.test_util.run_deprecated_v1", "framework.test_util.run_deprecated_v1", "<builtin>.range"], "<builtin>.len": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest._ValidateFractionalMaxPoolResult": ["test.TestCase.evaluate", "test.TestCase.evaluate", "ops.nn_ops.fractional_max_pool_v2", "test.TestCase.cached_session", "test.TestCase.assertAllClose", "test.TestCase.assertShapeEqual"], "test.TestCase.cached_session": [], "ops.nn_ops.fractional_max_pool_v2": [], "test.TestCase.evaluate": [], "test.TestCase.assertShapeEqual": [], "test.TestCase.assertAllClose": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest._testVisually": ["test.TestCase.evaluate", "<builtin>.len", "test.TestCase.evaluate", "ops.nn_ops.fractional_max_pool_v2", "test.TestCase.cached_session", "<builtin>.range", "<builtin>.str", "<builtin>.print", "math.sqrt"], "<builtin>.print": [], "math.sqrt": [], "<builtin>.str": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest.testAllInputOptions": ["test.TestCase.cached_session", "math.sqrt"], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest.testIntegerTensorInput": ["test.TestCase.cached_session", "math.sqrt"], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest.testDifferentTensorShapes": ["test.TestCase.cached_session"], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest.testLargePoolingRatio": ["test.TestCase.cached_session", "math.sqrt"], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest.testDivisiblePoolingRatio": ["test.TestCase.cached_session"], "framework.test_util.run_deprecated_v1": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest.testDifferentInputTensorShape": ["numpy.zeros", "test.TestCase.cached_session", "ops.nn_ops.fractional_max_pool_v2", "test.TestCase.cached_session", "test.TestCase.assertSequenceEqual", "ops.array_ops.placeholder"], "ops.array_ops.placeholder": [], "test.TestCase.assertSequenceEqual": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolTest.testDeterminismExceptionThrowing": ["framework.test_util.deterministic_ops", "ops.nn_ops.fractional_max_pool_v2", "ops.nn_ops.fractional_max_pool", "test.TestCase.assertRaisesRegex"], "framework.test_util.deterministic_ops": [], "test.TestCase.assertRaisesRegex": [], "ops.nn_ops.fractional_max_pool": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolGradTest": ["framework.test_util.run_deprecated_v1", "numpy.random.RandomState"], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolGradTest._GenerateUniqueRandomInputTensor": ["numpy.arange"], "numpy.arange": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolGradTest.testDirectNotUseOverlapping": ["test.TestCase.evaluate", "test.TestCase.evaluate", "ops.nn_ops.max_pool", "<builtin>.list", "framework.constant_op.constant", "ops.gen_nn_ops.max_pool_grad", "ops.gen_nn_ops.fractional_max_pool_grad", "test.TestCase.cached_session", "test.TestCase.assertAllClose", "<builtin>.range", "test.TestCase.assertShapeEqual"], "framework.constant_op.constant": [], "ops.nn_ops.max_pool": [], "ops.gen_nn_ops.max_pool_grad": [], "<builtin>.list": [], "ops.gen_nn_ops.fractional_max_pool_grad": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolGradTest.testDirectUseOverlapping": ["test.TestCase.evaluate", "test.TestCase.evaluate", "ops.nn_ops.max_pool", "<builtin>.list", "framework.constant_op.constant", "ops.gen_nn_ops.max_pool_grad", "ops.gen_nn_ops.fractional_max_pool_grad", "test.TestCase.cached_session", "test.TestCase.assertAllClose", "<builtin>.range", "test.TestCase.assertShapeEqual"], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolGradTest.testAllInputOptionsThroughGradientError": ["ops.gradient_checker.compute_gradient_error", "test.TestCase.evaluate", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.nn_ops.fractional_max_pool_v2", "test.TestCase.cached_session", "test.TestCase.assertLess", "math.sqrt"], "ops.gradient_checker.compute_gradient_error": [], "test.TestCase.assertLess": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolGradTest.testDifferentTensorShapesThroughGradientError": ["ops.gradient_checker.compute_gradient_error", "test.TestCase.evaluate", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.nn_ops.fractional_max_pool_v2", "test.TestCase.cached_session", "test.TestCase.assertLess", "math.sqrt"], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolGradTest.testLargePoolingRatioThroughGradientError": ["ops.gradient_checker.compute_gradient_error", "<builtin>.zip", "<builtin>.int", "ops.gradient_checker.compute_gradient_error", "framework.constant_op.constant", "ops.nn_ops.fractional_max_pool_v2", "test.TestCase.cached_session", "test.TestCase.assertLess", "math.sqrt"], "<builtin>.int": [], "<builtin>.zip": [], "kernel_tests.fractional_max_pool_op_test.FractionalMaxPoolGradTest.testWhenRepeatedMaxValueInPoolingRegion": ["test.TestCase.evaluate", "ops.gen_nn_ops.fractional_max_pool_grad", "framework.constant_op.constant", "test.TestCase.cached_session", "test.TestCase.assertAllClose", "numpy.reshape", "test.TestCase.assertShapeEqual"], "numpy.reshape": [], "platform.test.main": []}