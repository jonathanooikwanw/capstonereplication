{"kernel_tests.functional_ops_test": ["platform.test.main"], "kernel_tests.functional_ops_test.simple_scoped_fn": ["ops.math_ops.add", "ops.init_ops.constant_initializer", "ops.variable_scope.get_variable", "ops.variable_scope.variable_scope", "ops.math_ops.multiply"], "ops.variable_scope.variable_scope": [], "ops.init_ops.constant_initializer": [], "ops.variable_scope.get_variable": [], "ops.math_ops.add": [], "ops.math_ops.multiply": [], "kernel_tests.functional_ops_test.FunctionalOpsTest": ["framework.test_util.run_v2_only", "framework.test_util.disable_xla", "framework.test_util.run_in_graph_and_eager_modes", "framework.test_util.run_v1_only", "framework.test_util.run_deprecated_v1"], "framework.test_util.run_in_graph_and_eager_modes": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldl_Simple": ["test.TestCase.assertAllEqual", "framework.constant_op.constant", "ops.functional_ops.foldl", "test.TestCase.evaluate"], "framework.constant_op.constant": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldl_Simple.<lambda1>": ["ops.math_ops.add", "ops.math_ops.multiply"], "ops.functional_ops.foldl": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllEqual": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldl_Simple.<lambda2>": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldl_SingleInputMultiOutput": ["test.TestCase.assertAllEqual", "ops.functional_ops.foldl", "numpy.array", "test.TestCase.evaluate"], "numpy.array": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldl_SingleInputMultiOutput.<lambda1>": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldl_MultiInputSingleOutput": ["test.TestCase.assertAllEqual", "ops.functional_ops.foldl", "numpy.array", "test.TestCase.evaluate"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldl_MultiInputSingleOutput.<lambda1>": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldl_MultiInputDifferentDimsSingleOutput": ["test.TestCase.assertAllEqual", "ops.functional_ops.foldl", "numpy.array", "test.TestCase.evaluate"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldl_MultiInputDifferentDimsSingleOutput.<lambda1>": [], "framework.test_util.run_deprecated_v1": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldl_Scoped": ["test.TestCase.assertAllEqual", "ops.variables.trainable_variables", "<builtin>.len", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.functional_ops.foldl", "ops.variable_scope.variable_scope", "framework.constant_op.constant", "test.TestCase.cached_session"], "test.TestCase.cached_session": [], "ops.variables.trainable_variables": [], "<builtin>.len": [], "test.TestCase.assertEqual": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldr_Simple": ["test.TestCase.assertAllEqual", "framework.constant_op.constant", "ops.functional_ops.foldr", "test.TestCase.evaluate"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldr_Simple.<lambda1>": ["ops.math_ops.add", "ops.math_ops.multiply"], "ops.functional_ops.foldr": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldr_Simple.<lambda2>": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldr_SingleInputMultiOutput": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "ops.functional_ops.foldr", "numpy.array"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldr_SingleInputMultiOutput.<lambda1>": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldr_MultiInputSingleOutput": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "ops.functional_ops.foldr", "numpy.array"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldr_MultiInputSingleOutput.<lambda1>": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldr_Scoped": ["test.TestCase.assertAllEqual", "ops.variables.trainable_variables", "<builtin>.len", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "framework.constant_op.constant", "ops.functional_ops.foldr", "test.TestCase.cached_session"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFold_Grad": ["ops.gradients_impl.gradients", "test.TestCase.evaluate", "ops.functional_ops.foldl", "test.TestCase.assertAllEqual", "framework.constant_op.constant", "ops.functional_ops.foldr", "test.TestCase.cached_session"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFold_Grad.<lambda1>": ["ops.math_ops.multiply"], "ops.gradients_impl.gradients": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFold_Grad.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Simple": ["test.TestCase.assertAllEqual", "framework.constant_op.constant", "test.TestCase.evaluate", "ops.functional_ops.scan"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Simple.<lambda1>": ["ops.math_ops.multiply"], "ops.functional_ops.scan": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Simple.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Reverse": ["test.TestCase.assertAllEqual", "framework.constant_op.constant", "test.TestCase.evaluate", "ops.functional_ops.scan"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Reverse.<lambda1>": ["ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Reverse.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_SingleInputMultiOutput": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "numpy.array", "ops.functional_ops.scan"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_SingleInputMultiOutput.<lambda1>": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_MultiInputSingleOutput": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "numpy.array", "ops.functional_ops.scan"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_MultiInputSingleOutput.<lambda1>": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_MultiInputSameTypeOutput": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "ops.functional_ops.scan", "numpy.cumsum", "numpy.array"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_MultiInputSameTypeOutput.<lambda1>": [], "numpy.cumsum": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_MultiOutputMismatchedInitializer": ["test.TestCase.assertRaisesRegex", "numpy.array", "ops.functional_ops.scan"], "test.TestCase.assertRaisesRegex": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_MultiOutputMismatchedInitializer.<lambda1>": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Scoped": ["test.TestCase.assertAllEqual", "ops.variables.trainable_variables", "<builtin>.len", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "ops.functional_ops.scan", "ops.variable_scope.variable_scope", "framework.constant_op.constant", "numpy.array", "test.TestCase.cached_session"], "ops.variables.global_variables_initializer": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanFoldl_Nested": ["framework.constant_op.constant", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "ops.functional_ops.scan"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanFoldl_Nested.r_inner": ["ops.functional_ops.foldl"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanFoldl_Nested.r_inner.<lambda1>": [], "test.TestCase.assertAllClose": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Control": ["framework.ops.control_dependencies", "ops.array_ops.placeholder", "test.TestCase.assertAllClose", "ops.functional_ops.scan", "numpy.array", "test.TestCase.cached_session"], "ops.array_ops.placeholder": [], "framework.ops.control_dependencies": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Control.<lambda1>": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Grad": ["ops.gradients_impl.gradients", "test.TestCase.evaluate", "ops.functional_ops.scan", "test.TestCase.assertAllEqual", "framework.constant_op.constant", "test.TestCase.cached_session"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScan_Grad.<lambda1>": ["ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanGradientWithPartStopGradient": ["ops.array_ops.stop_gradient", "ops.array_ops.zeros", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "ops.functional_ops.scan", "ops.variables.Variable", "test.TestCase.test_session", "ops.gradients_impl.gradients"], "ops.variables.Variable": [], "ops.array_ops.zeros": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanGradientWithPartStopGradient.<lambda1>": [], "ops.array_ops.stop_gradient": [], "test.TestCase.test_session": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldShape": ["test.TestCase.assertAllEqual", "framework.constant_op.constant", "ops.functional_ops.foldl", "test.TestCase.evaluate"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFoldShape.fn": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanShape": ["test.TestCase.assertAllEqual", "framework.constant_op.constant", "test.TestCase.evaluate", "ops.functional_ops.scan"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanShape.fn": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanEmptyTensor": ["ops.array_ops.ones", "test.TestCase.cached_session", "test.TestCase.evaluate", "ops.functional_ops.scan", "test.TestCase.assertAllEqual", "ops.math_ops.range"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanEmptyTensor.<lambda1>": [], "ops.math_ops.range": [], "ops.array_ops.ones": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanUnknownShape": ["ops.array_ops.placeholder", "test.TestCase.assertIs", "ops.functional_ops.scan"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanUnknownShape.fn": [], "test.TestCase.assertIs": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanVaryingShape": ["ops.array_ops.transpose", "ops.array_ops.placeholder", "ops.functional_ops.scan", "ops.gradients_impl.gradients", "test.TestCase.cached_session"], "ops.array_ops.transpose": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanVaryingShape.<lambda1>": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testScanVaryingShape.<lambda2>": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunction": ["ops.functional_ops.remote_call", "client.session.Session", "framework.ops.device", "test.TestCase.evaluate", "framework.test_util.create_local_cluster", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "ops.variables.Variable", "framework.function.Defun", "protobuf.config_pb2.ConfigProto"], "protobuf.config_pb2.ConfigProto": [], "framework.test_util.create_local_cluster": [], "framework.function.Defun": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunction._remote_fn": ["ops.math_ops.multiply"], "framework.ops.device": [], "ops.functional_ops.remote_call": [], "client.session.Session": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionDirectSession": ["ops.functional_ops.remote_call", "framework.ops.device", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "ops.variables.Variable", "test.TestCase.test_session", "framework.function.Defun", "protobuf.config_pb2.ConfigProto"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionDirectSession._remote_fn": ["ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionSameDeviceDirectSession": ["ops.functional_ops.remote_call", "framework.ops.device", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "ops.variables.Variable", "framework.function.Defun", "test.TestCase.cached_session"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionSameDeviceDirectSession._remote_fn": ["ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionCPUGPU": ["test.TestCase.skipTest", "ops.functional_ops.remote_call", "framework.test_util.is_gpu_available", "framework.ops.device", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "ops.variables.Variable", "framework.function.Defun", "test.TestCase.cached_session"], "framework.test_util.is_gpu_available": [], "test.TestCase.skipTest": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionCPUGPU._remote_fn": ["ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionGPUCPU": ["test.TestCase.skipTest", "ops.functional_ops.remote_call", "framework.test_util.is_gpu_available", "framework.ops.device", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "ops.variables.Variable", "framework.function.Defun", "test.TestCase.cached_session"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionGPUCPU._remote_fn": ["ops.math_ops.multiply"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionGPUCPUStrings": ["test.TestCase.assertAllEqual", "test.TestCase.skipTest", "ops.array_ops.constant", "ops.functional_ops.remote_call", "framework.test_util.is_gpu_available", "framework.ops.device", "test.TestCase.evaluate", "framework.function.Defun", "test.TestCase.cached_session"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionGPUCPUStrings._remote_fn": ["ops.array_ops.identity"], "ops.array_ops.identity": [], "ops.array_ops.constant": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionCrossProcess": ["ops.functional_ops.remote_call", "client.session.Session", "framework.ops.device", "test.TestCase.evaluate", "framework.test_util.create_local_cluster", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "ops.variables.Variable", "framework.function.Defun"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionCrossProcess._remote_fn": ["ops.math_ops.multiply"], "framework.test_util.run_v2_only": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionCancellation": ["eager.cancellation.CancellationManager", "test.TestCase.assertRaises", "framework.config.set_logical_device_configuration", "eager.context.executor_scope", "eager.executor.new_executor", "framework.ops.device", "ops.collective_ops.all_reduce_v2", "eager.context.LogicalDeviceConfiguration", "framework.config.list_physical_devices", "eager.context._reset_context", "framework.function.Defun"], "eager.context._reset_context": [], "eager.context.LogicalDeviceConfiguration": [], "framework.config.list_physical_devices": [], "framework.config.set_logical_device_configuration": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionCancellation._remote_fn": ["framework.ops.control_dependencies", "ops.collective_ops.all_reduce_v2"], "ops.collective_ops.all_reduce_v2": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testRemoteFunctionCancellation.run": ["framework.ops.device", "framework.constant_op.constant", "ops.functional_ops.remote_call"], "eager.executor.new_executor": [], "eager.cancellation.CancellationManager": [], "eager.context.executor_scope": [], "test.TestCase.assertRaises": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testIf": ["test.TestCase.assertAllEqual", "ops.array_ops.placeholder", "ops.math_ops.greater", "test.TestCase.test_session", "framework.function.Defun", "ops.functional_ops.If"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testIf.Twice": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testIf.Thrice": [], "ops.math_ops.greater": [], "ops.functional_ops.If": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhile": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual", "test.TestCase.session", "framework.function.Defun", "framework.ops.Graph"], "framework.ops.Graph": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhile.Cond": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhile.Body": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhile.Run": ["ops.functional_ops.While"], "ops.functional_ops.While": [], "test.TestCase.session": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testToBool": ["test.TestCase.assertAllEqual", "ops.gen_functional_ops.to_bool"], "ops.gen_functional_ops.to_bool": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileInt32": ["test.TestCase.assertAllEqual", "test.TestCase.session", "framework.function.Defun", "framework.function.Defun", "framework.ops.Graph"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileInt32.Cond": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileInt32.Body": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileInt32.Run": ["ops.functional_ops.While"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileLowering": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileLowering.Run": ["framework.attr_value_pb2.AttrValue", "test.TestCase.evaluate", "test.TestCase.session", "framework.function.Defun", "framework.ops.Graph", "ops.functional_ops.While"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileLowering.Run.Cond": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileLowering.Run.Body": [], "framework.attr_value_pb2.AttrValue": [], "framework.test_util.run_v1_only": [], "framework.test_util.disable_xla": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileError": ["test.TestCase.assertRaisesRegex", "test.TestCase.session", "framework.function.Defun", "framework.ops.Graph", "ops.functional_ops.While"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileError.Cond": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileError.CondReturnsTooManyArgs": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileError.Body": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileError.BodyReturnsTooManyArgs": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileInMultipleSubgraphs": ["test.TestCase.assertAllEqual", "ops.array_ops.placeholder", "test.TestCase.session", "framework.function.Defun", "framework.constant_op.constant", "framework.ops.Graph", "ops.functional_ops.While"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileInMultipleSubgraphs.Cond": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileInMultipleSubgraphs.Body": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileCapturedInputs": ["test.TestCase.assertRaises", "<builtin>.len", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "test.TestCase.session", "ops.variables.Variable", "framework.function.Defun", "framework.ops.Graph", "ops.functional_ops.While"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileCapturedInputs.TestCond": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileCapturedInputs.TestUnary": ["ops.math_ops.add"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileCapturedInputs.TestBinary": ["ops.math_ops.add"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testWhileCapturedInputs.TestCondCapture": ["ops.math_ops.cast"], "ops.math_ops.cast": [], "kernel_tests.functional_ops_test.FunctionalOpsTest._tfSum": ["test.TestCase.assertAllEqual", "test.TestCase.evaluate", "test.TestCase.session", "ops.functional_ops.For", "framework.function.Defun", "framework.ops.Graph"], "kernel_tests.functional_ops_test.FunctionalOpsTest._tfSum.Body": ["ops.math_ops.cast"], "ops.functional_ops.For": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testFor": ["ops.math_ops.cast"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForWithWhile": ["ops.math_ops.cast"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForWithWhileNaming": ["framework.function.Defun", "ops.functional_ops.For", "test.TestCase.assertTrue", "framework.ops.Graph"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForWithWhileNaming.TestBody": ["ops.math_ops.cast"], "test.TestCase.assertTrue": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForCapturedInputs": ["<builtin>.len", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "test.TestCase.test_session", "ops.variables.Variable", "ops.functional_ops.For", "framework.function.Defun", "framework.ops.get_default_graph"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForCapturedInputs.TestNullary": ["ops.math_ops.cast"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForCapturedInputs.TestUnary": ["ops.math_ops.cast"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForCapturedInputs.TestBinary": ["ops.math_ops.cast"], "framework.ops.get_default_graph": [], "kernel_tests.functional_ops_test.FunctionalOpsTest._tfMLP": ["framework.function.Defun", "ops.functional_ops.For", "test.TestCase.evaluate", "test.TestCase.test_session"], "kernel_tests.functional_ops_test.FunctionalOpsTest._tfMLP.MLP": ["ops.math_ops.matmul", "ops.math_ops.tanh"], "ops.math_ops.matmul": [], "ops.math_ops.tanh": [], "kernel_tests.functional_ops_test.FunctionalOpsTest._npMLP": ["numpy.tanh", "numpy.dot", "<builtin>.range"], "<builtin>.range": [], "numpy.dot": [], "numpy.tanh": [], "kernel_tests.functional_ops_test.FunctionalOpsTest._testForMLP": ["ops.math_ops.tanh", "test.TestCase.assertAllClose", "numpy.random.normal", "test.TestCase.assertAllClose"], "numpy.random.normal": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForMLP": ["test.TestCase.assertAllClose"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForMLPWhile": ["test.TestCase.assertAllClose"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForError": ["framework.function.Defun", "ops.functional_ops.For", "test.TestCase.assertRaisesRegex", "test.TestCase.test_session"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForError.Foo": ["ops.math_ops.cast"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testForError.ReturnsTooManyArgs": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testGradient": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "test.TestCase.test_session", "test.TestCase.test_session", "framework.function.Defun", "framework.constant_op.constant"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testGradient.Poly": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testGradient.Grad": ["ops.functional_ops.Gradient"], "ops.functional_ops.Gradient": [], "kernel_tests.functional_ops_test.FunctionalOpsTest.testCollective": ["test.TestCase.assertAllEqual", "framework.config.set_logical_device_configuration", "eager.context.LogicalDeviceConfiguration", "eager.context.LogicalDeviceConfiguration", "framework.config.list_physical_devices", "eager.context._reset_context", "framework.function.Defun"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testCollective.collective_fn": ["ops.collective_ops.all_reduce_v2"], "kernel_tests.functional_ops_test.FunctionalOpsTest.testCollective.run": ["framework.ops.device", "framework.constant_op.constant", "ops.functional_ops.remote_call"], "kernel_tests.functional_ops_test.PartitionedCallTest": ["framework.test_util.run_v1_only", "framework.test_util.run_deprecated_v1"], "kernel_tests.functional_ops_test.PartitionedCallTest.testRemoteDeviceInPartitionedCallOp": ["client.session.Session", "framework.ops.device", "framework.test_util.create_local_cluster", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "ops.variable_scope.get_variable", "framework.constant_op.constant", "protobuf.config_pb2.ConfigProto", "protobuf.config_pb2.ConfigProto"], "kernel_tests.functional_ops_test.PartitionedCallTest.testRemoteDeviceInPartitionedCallOp.f": [], "kernel_tests.functional_ops_test.PartitionedCallTest.testBasicSingleDevice": ["framework.function.Defun", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.functional_ops.partitioned_call"], "kernel_tests.functional_ops_test.PartitionedCallTest.testBasicSingleDevice.Body": ["framework.ops.device"], "ops.functional_ops.partitioned_call": [], "kernel_tests.functional_ops_test.PartitionedCallTest.testBasicMultiDevice": ["test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.functional_ops.partitioned_call", "test.TestCase.test_session", "framework.function.Defun", "protobuf.config_pb2.ConfigProto"], "kernel_tests.functional_ops_test.PartitionedCallTest.testBasicMultiDevice.Body": ["framework.ops.device"], "kernel_tests.functional_ops_test.PartitionedCallTest.testBasicMultiDeviceGPU": ["framework.test_util.is_gpu_available", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.functional_ops.partitioned_call", "framework.function.Defun"], "kernel_tests.functional_ops_test.PartitionedCallTest.testBasicMultiDeviceGPU.Body": ["framework.ops.device"], "kernel_tests.functional_ops_test.PartitionedCallTest.testBasicNoDeviceAnnotations": ["framework.function.Defun", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.functional_ops.partitioned_call"], "kernel_tests.functional_ops_test.PartitionedCallTest.testBasicNoDeviceAnnotations.Body": [], "kernel_tests.functional_ops_test.PartitionedCallTest.testShardsRunOnRequestedDevices": ["util.compat.as_bytes", "ops.functional_ops.partitioned_call", "test.TestCase.test_session", "test.TestCase.assertIn", "framework.function.Defun", "protobuf.config_pb2.ConfigProto"], "kernel_tests.functional_ops_test.PartitionedCallTest.testShardsRunOnRequestedDevices.Body": ["framework.ops.device", "iterator_ops.Iterator.from_structure"], "iterator_ops.Iterator.from_structure": [], "util.compat.as_bytes": [], "test.TestCase.assertIn": [], "kernel_tests.functional_ops_test.PartitionedCallTest.testAssignAddResourceVariable": ["test.TestCase.evaluate", "framework.function.Defun", "ops.functional_ops.partitioned_call", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "ops.resource_variable_ops.ResourceVariable"], "ops.resource_variable_ops.ResourceVariable": [], "kernel_tests.functional_ops_test.PartitionedCallTest.testAssignAddResourceVariable.AssignAdd": [], "kernel_tests.functional_ops_test.PartitionedCallTest.testFunctionWithResourcesOnDifferentDevices": ["test.TestCase.assertAllEqual", "test.TestCase.skipTest", "framework.test_util.is_gpu_available", "framework.ops.device", "test.TestCase.evaluate", "framework.function.Defun", "framework.function.Defun", "ops.variables.global_variables_initializer", "test.TestCase.test_session", "ops.functional_ops.partitioned_call", "ops.resource_variable_ops.ResourceVariable", "protobuf.config_pb2.ConfigProto"], "kernel_tests.functional_ops_test.PartitionedCallTest.testFunctionWithResourcesOnDifferentDevices.sum_gather": ["ops.array_ops.gather", "ops.math_ops.reduce_sum"], "ops.array_ops.gather": [], "ops.math_ops.reduce_sum": [], "kernel_tests.functional_ops_test.PartitionedCallTest.testExecutorTypeAttrExecutorNotFound": ["test.TestCase.assertRaisesRegex", "test.TestCase.evaluate", "ops.functional_ops.partitioned_call", "framework.function.Defun", "framework.constant_op.constant"], "kernel_tests.functional_ops_test.PartitionedCallTest.testExecutorTypeAttrExecutorNotFound.AddFive": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testCase": ["ops.array_ops.ones", "numpy.float32", "test.TestCase.evaluate", "test.TestCase.evaluate", "eager.function.defun", "test.TestCase.assertAllEqual"], "eager.function.defun": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testCase.two": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testCase.three": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testCase.four": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testCase.f": ["ops.gen_functional_ops.case", "ops.array_ops.identity", "ops.array_ops.zeros_like"], "ops.array_ops.zeros_like": [], "ops.gen_functional_ops.case": [], "numpy.float32": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest": ["framework.test_util.disable_xla", "framework.test_util.run_deprecated_v1"], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testSkipEagerCaseLoweringPreservesNameForFetch": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual"], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testSkipEagerCaseLoweringPreservesNameForFetch.Run": ["ops.gen_functional_ops.case", "framework.attr_value_pb2.AttrValue", "ops.array_ops.identity_n", "test.TestCase.session", "framework.function.Defun", "framework.ops.Graph"], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testSkipEagerCaseLoweringPreservesNameForFetch.Run.two": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testSkipEagerCaseLoweringPreservesNameForFetch.Run.three": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testSkipEagerCaseLoweringPreservesNameForFetch.Run.four": [], "ops.array_ops.identity_n": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testCaseLowering": ["framework.ops.device", "test.TestCase.evaluate", "eager.function.defun", "test.TestCase.assertAllEqual", "platform.test.gpu_device_name", "platform.test.gpu_device_name"], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testCaseLowering.Run": ["framework.function.Defun", "framework.attr_value_pb2.AttrValue", "ops.array_ops.identity_n", "ops.gen_functional_ops.case"], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testCaseLowering.Run.two": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testCaseLowering.Run.three": [], "kernel_tests.functional_ops_test.FunctionalOpsCaseTest.testCaseLowering.Run.four": [], "platform.test.gpu_device_name": [], "platform.test.main": []}