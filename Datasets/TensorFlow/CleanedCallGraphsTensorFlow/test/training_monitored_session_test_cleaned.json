{"training.monitored_session_test": ["platform.test.main"], "training.monitored_session_test.latest_summaries": ["os.path.join", "glob.glob", "<builtin>.sorted", "training.summary_io.summary_iterator"], "os.path.join": [], "glob.glob": [], "<builtin>.sorted": [], "training.summary_io.summary_iterator": [], "training.monitored_session_test.ScaffoldTest.test_nothing_created_before_finalize": ["test.TestCase.assertEqual", "training.monitored_session.Scaffold", "framework.ops.Graph"], "framework.ops.Graph": [], "training.monitored_session.Scaffold": [], "test.TestCase.assertEqual": [], "training.monitored_session_test.ScaffoldTest.test_defaults_empty_graph": ["<builtin>.len", "training.monitored_session.Scaffold", "framework.ops.Graph", "test.TestCase.cached_session", "<builtin>.isinstance", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "test.TestCase.assertItemsEqual", "ops.variables.VariableV1"], "ops.variables.VariableV1": [], "<builtin>.isinstance": [], "test.TestCase.assertTrue": [], "test.TestCase.cached_session": [], "test.TestCase.assertItemsEqual": [], "<builtin>.len": [], "training.monitored_session_test.ScaffoldTest.test_defaults_no_variables": ["training.monitored_session.Scaffold", "framework.ops.Graph", "<builtin>.isinstance", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "framework.constant_op.constant"], "framework.constant_op.constant": [], "training.monitored_session_test.ScaffoldTest.test_caches_values": ["ops.variables.VariableV1", "test.TestCase.assertEqual", "training.monitored_session.Scaffold", "framework.ops.Graph"], "training.monitored_session_test.ScaffoldTest.test_raise_error_if_more_than_one_cached_item": ["test.TestCase.assertRaisesRegex", "training.saver.Saver", "framework.ops.Graph", "framework.ops.add_to_collection", "training.monitored_session.Scaffold", "ops.variables.VariableV1"], "training.saver.Saver": [], "framework.ops.add_to_collection": [], "test.TestCase.assertRaisesRegex": [], "training.monitored_session_test.ScaffoldTest.test_uses_passed_values": ["training.monitored_session.Scaffold", "training.saver.Saver", "framework.ops.Graph", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "<builtin>.callable", "ops.variables.VariableV1"], "training.monitored_session_test.ScaffoldTest.test_uses_passed_values.<lambda1>": [], "<builtin>.callable": [], "training.monitored_session_test.ScaffoldTest.test_graph_is_finalized": ["test.TestCase.assertRaisesRegex", "training.monitored_session.Scaffold", "framework.ops.Graph", "framework.constant_op.constant", "ops.variables.VariableV1"], "training.monitored_session_test.ScaffoldTest.test_new_scaffold_from_default_scaffold": ["training.saver.Saver", "training.monitored_session.Scaffold", "framework.ops.Graph", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "<builtin>.callable", "ops.variables.VariableV1"], "training.monitored_session_test.ScaffoldTest.test_new_scaffold_from_default_scaffold.<lambda1>": [], "training.monitored_session_test.ScaffoldTest.test_new_scaffold_from_existing_scaffold": ["training.monitored_session.Scaffold", "training.saver.Saver", "framework.ops.Graph", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "<builtin>.callable", "ops.variables.VariableV1"], "training.monitored_session_test.ScaffoldTest.test_new_scaffold_from_existing_scaffold.<lambda1>": [], "training.monitored_session_test.ScaffoldTest.test_new_scaffold_from_existing_scaffold.<lambda2>": [], "training.monitored_session_test.ScaffoldTest.test_copy_from_scaffold_is_scaffold": ["test.TestCase.assertRaisesRegex", "training.monitored_session.Scaffold", "framework.ops.Graph"], "training.monitored_session_test._test_dir": ["glob.glob", "os.makedirs", "os.remove", "os.path.join", "os.path.isdir"], "os.path.isdir": [], "os.remove": [], "os.makedirs": [], "training.monitored_session_test.FakeHook.__init__": ["collections.Counter"], "collections.Counter": [], "training.monitored_session_test.FakeHook.begin": [], "training.monitored_session_test.FakeHook.after_create_session": [], "training.monitored_session_test.FakeHook.before_run": [], "training.monitored_session_test.FakeHook.after_run": [], "training.monitored_session_test.FakeHook.end": [], "training.monitored_session_test.MonitoredTrainingSessionTest.test_saving_restoring_checkpoint": ["ops.state_ops.assign_add", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "test.TestCase.assertEqual", "training.monitored_session_test._test_dir", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir"], "test.TestCase.get_temp_dir": [], "training.training_util.get_or_create_global_step": [], "ops.state_ops.assign_add": [], "training.monitored_session.MonitoredTrainingSession": [], "training.monitored_session_test.MonitoredTrainingSessionTest.test_save_checkpoint_steps": ["ops.state_ops.assign_add", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "test.TestCase.assertEqual", "training.monitored_session_test._test_dir", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "<builtin>.range"], "<builtin>.range": [], "training.monitored_session_test.MonitoredTrainingSessionTest.test_save_checkpoint_secs": ["ops.state_ops.assign_add", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "time.sleep", "test.TestCase.assertEqual", "training.monitored_session_test._test_dir", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "<builtin>.range"], "time.sleep": [], "training.monitored_session_test.MonitoredTrainingSessionTest.test_save_restore_checkpoint_v1_saved_model": ["ops.state_ops.assign_add", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "training.monitored_session_test.MonitoredTrainingSessionTest.test_save_restore_checkpoint_v1_saved_model._write_v1_simple_saved_model", "test.TestCase.assertEqual", "training.monitored_session_test._test_dir", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "saved_model.load.load"], "training.monitored_session_test.MonitoredTrainingSessionTest.test_save_restore_checkpoint_v1_saved_model._write_v1_simple_saved_model": ["saved_model.builder.SavedModelBuilder", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.cached_session", "ops.resource_variable_ops.ResourceVariable"], "saved_model.builder.SavedModelBuilder": [], "ops.resource_variable_ops.ResourceVariable": [], "ops.variables.global_variables_initializer": [], "saved_model.load.load": [], "training.monitored_session_test.MonitoredTrainingSessionTest.test_summaries_steps": ["ops.state_ops.assign_add", "test.TestCase.assertIn", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "training.monitored_session_test._test_dir", "training.monitored_session_test.latest_summaries", "training.training_util.get_or_create_global_step", "summary.summary.scalar", "test.TestCase.get_temp_dir", "<builtin>.range"], "summary.summary.scalar": [], "test.TestCase.assertIn": [], "training.monitored_session_test.MonitoredTrainingSessionTest.test_summaries_secs": ["ops.state_ops.assign_add", "test.TestCase.assertIn", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "time.sleep", "training.monitored_session_test._test_dir", "training.monitored_session_test.latest_summaries", "training.training_util.get_or_create_global_step", "summary.summary.scalar", "test.TestCase.get_temp_dir", "<builtin>.range"], "training.monitored_session_test.MonitoredTrainingSessionTest.test_custom_saving": ["ops.state_ops.assign_add", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "test.TestCase.assertEqual", "training.monitored_session_test._test_dir", "training.training_util.get_or_create_global_step", "training.monitored_session_test.FakeHook.__init__", "test.TestCase.get_temp_dir"], "training.monitored_session_test.MonitoredTrainingSessionTest.test_save_graph_def": ["test.TestCase.assertLen", "ops.state_ops.assign_add", "test.TestCase.assertIn", "glob.glob", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "os.listdir", "training.monitored_session_test._test_dir", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "os.path.join"], "os.listdir": [], "test.TestCase.assertLen": [], "training.monitored_session_test.MonitoredTrainingSessionTest.test_save_graph_def_false": ["ops.state_ops.assign_add", "glob.glob", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "os.listdir", "training.monitored_session_test._test_dir", "training.training_util.get_or_create_global_step", "test.TestCase.assertNotIn", "test.TestCase.get_temp_dir", "test.TestCase.assertEmpty", "os.path.join"], "test.TestCase.assertNotIn": [], "test.TestCase.assertEmpty": [], "training.monitored_session_test.MockExtended.__init__": [], "training.monitored_session_test.MockStrategy.__init__": ["training.monitored_session_test.MockExtended.__init__"], "training.monitored_session_test.MonitoredTrainingSessionWithDistributeCoordinatorTest.test_summary_hook_enabled": ["ops.state_ops.assign_add", "test.TestCase.assertIn", "distribute.distribute_coordinator._WorkerContext", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "training.monitored_session_test.MockStrategy.__init__", "training.monitored_session_test._test_dir", "training.monitored_session_test.latest_summaries", "training.training_util.get_or_create_global_step", "summary.summary.scalar", "test.TestCase.get_temp_dir", "<builtin>.range"], "distribute.distribute_coordinator._WorkerContext": [], "training.monitored_session_test.MonitoredTrainingSessionWithDistributeCoordinatorTest.test_summary_hook_disabled": ["ops.state_ops.assign_add", "distribute.distribute_coordinator._WorkerContext", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "<builtin>.len", "training.monitored_session_test.MockStrategy.__init__", "training.monitored_session_test._test_dir", "training.monitored_session_test.latest_summaries", "training.training_util.get_or_create_global_step", "summary.summary.scalar", "test.TestCase.assertEqual", "test.TestCase.get_temp_dir", "<builtin>.range"], "training.monitored_session_test.MonitoredTrainingSessionWithDistributeCoordinatorTest.test_checkpoint_hook_enabled": ["ops.state_ops.assign_add", "distribute.distribute_coordinator._WorkerContext", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "training.monitored_session_test.MockStrategy.__init__", "training.monitored_session_test._test_dir", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "<builtin>.range"], "training.monitored_session_test.MonitoredTrainingSessionWithDistributeCoordinatorTest.test_checkpoint_hook_disabled": ["ops.state_ops.assign_add", "training.checkpoint_management.latest_checkpoint", "distribute.distribute_coordinator._WorkerContext", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "training.monitored_session_test.MockStrategy.__init__", "training.monitored_session_test._test_dir", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "test.TestCase.assertIsNone", "<builtin>.range"], "training.checkpoint_management.latest_checkpoint": [], "test.TestCase.assertIsNone": [], "training.monitored_session_test.MonitoredTrainingSessionWithDistributeCoordinatorTest.test_checkpoint_hook_enable_on_non_chief_with_collective_ops": ["ops.state_ops.assign_add", "training.checkpoint_management.latest_checkpoint", "distribute.distribute_coordinator._WorkerContext", "training.monitored_session.MonitoredTrainingSession", "framework.ops.Graph", "training.monitored_session_test._test_dir", "test.TestCase.assertIsNotNone", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "distribute.collective_all_reduce_strategy.CollectiveAllReduceStrategy", "os.path.join", "test.TestCase.assertIsNone", "<builtin>.range"], "distribute.collective_all_reduce_strategy.CollectiveAllReduceStrategy": [], "test.TestCase.assertIsNotNone": [], "training.monitored_session_test.StopAtNSession.__init__": ["<builtin>.super"], "<builtin>.super": [], "training.monitored_session_test.StopAtNSession._check_stop": [], "training.monitored_session_test.WrappedSessionTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "training.monitored_session_test.WrappedSessionTest.test_properties": ["test.TestCase.assertEqual", "test.TestCase.cached_session", "framework.constant_op.constant", "training.monitored_session._WrappedSession"], "training.monitored_session._WrappedSession": [], "training.monitored_session_test.WrappedSessionTest.test_should_stop_on_close": ["test.TestCase.assertFalse", "test.TestCase.cached_session", "test.TestCase.assertTrue", "training.monitored_session._WrappedSession"], "test.TestCase.assertFalse": [], "training.monitored_session_test.WrappedSessionTest.test_should_stop_uses_check_stop": ["test.TestCase.assertFalse", "test.TestCase.cached_session", "test.TestCase.assertTrue", "training.monitored_session_test.StopAtNSession.__init__", "monitored_session._WrappedSession.should_stop"], "monitored_session._WrappedSession.should_stop": [], "training.monitored_session_test.WrappedSessionTest.test_should_stop_delegates_to_wrapped_session": ["test.TestCase.assertFalse", "training.monitored_session._WrappedSession", "test.TestCase.cached_session", "test.TestCase.assertTrue", "training.monitored_session_test.StopAtNSession.__init__"], "training.monitored_session_test.WrappedSessionTest.test_close_twice": ["test.TestCase.cached_session", "test.TestCase.assertTrue", "training.monitored_session._WrappedSession"], "training.monitored_session_test.WrappedSessionTest.test_run": ["training.monitored_session._WrappedSession", "test.TestCase.cached_session", "test.TestCase.assertEqual", "ops.array_ops.identity", "framework.constant_op.constant"], "ops.array_ops.identity": [], "training.monitored_session_test.busy_wait_for_coord_stop": ["time.sleep"], "training.monitored_session_test.CoordinatedSessionTest": ["framework.test_util.run_deprecated_v1"], "training.monitored_session_test.CoordinatedSessionTest.test_properties": ["test.TestCase.cached_session", "test.TestCase.assertEqual", "training.coordinator.Coordinator", "training.monitored_session._CoordinatedSession", "framework.constant_op.constant"], "training.coordinator.Coordinator": [], "training.monitored_session._CoordinatedSession": [], "training.monitored_session_test.CoordinatedSessionTest.test_run": ["test.TestCase.cached_session", "test.TestCase.assertEqual", "training.coordinator.Coordinator", "ops.array_ops.identity", "training.monitored_session._CoordinatedSession", "framework.constant_op.constant"], "training.monitored_session_test.CoordinatedSessionTest.test_should_stop_on_close": ["test.TestCase.assertFalse", "test.TestCase.cached_session", "training.coordinator.Coordinator", "training.monitored_session._CoordinatedSession", "test.TestCase.assertTrue"], "training.monitored_session_test.CoordinatedSessionTest.test_should_stop_on_coord_stop": ["test.TestCase.assertFalse", "test.TestCase.cached_session", "training.coordinator.Coordinator", "training.monitored_session._CoordinatedSession", "test.TestCase.assertTrue"], "training.monitored_session_test.CoordinatedSessionTest.test_dont_request_stop_on_exception_in_main_thread": ["test.TestCase.assertFalse", "test.TestCase.assertRaisesRegex", "test.TestCase.cached_session", "test.TestCase.assertEqual", "training.coordinator.Coordinator", "ops.array_ops.identity", "training.monitored_session._CoordinatedSession", "framework.constant_op.constant"], "training.monitored_session_test.CoordinatedSessionTest.test_stop_threads_on_close_after_exception": ["threading.Thread", "test.TestCase.assertFalse", "test.TestCase.assertRaisesRegex", "test.TestCase.cached_session", "test.TestCase.assertEqual", "training.coordinator.Coordinator", "ops.array_ops.identity", "training.monitored_session._CoordinatedSession", "test.TestCase.assertTrue", "framework.constant_op.constant", "<builtin>.range"], "threading.Thread": [], "training.monitored_session_test.CoordinatedSessionTest.test_stop_threads_on_close": ["threading.Thread", "test.TestCase.assertFalse", "test.TestCase.cached_session", "training.coordinator.Coordinator", "training.monitored_session._CoordinatedSession", "test.TestCase.assertTrue", "<builtin>.range"], "training.monitored_session_test.CoordinatedSessionTest.test_propagates_exception_trace": ["test.TestCase.fail", "traceback.extract_tb", "test.TestCase.assertIn", "os.path.basename", "ops.control_flow_ops.Assert", "test.TestCase.cached_session", "sys.exc_info", "test.TestCase.assertEqual", "training.coordinator.Coordinator", "training.monitored_session._CoordinatedSession"], "ops.control_flow_ops.Assert": [], "test.TestCase.fail": [], "sys.exc_info": [], "traceback.extract_tb": [], "os.path.basename": [], "training.monitored_session_test.AbortAtNSession.__init__": [], "training.monitored_session_test.AbortAtNSession.close": [], "training.monitored_session_test.AbortAtNSession.run": ["framework.errors_impl.AbortedError"], "framework.errors_impl.AbortedError": [], "training.monitored_session_test.StopCoordinatorWithException.__init__": ["threading.Lock", "framework.errors_impl.AbortedError", "threading.Event"], "threading.Lock": [], "threading.Event": [], "training.monitored_session_test.StopCoordinatorWithException._maybe_stop_with_exception": [], "training.monitored_session_test.StopCoordinatorWithException.after_create_session": ["threading.Thread", "session_run_hook.SessionRunHook.register_thread"], "session_run_hook.SessionRunHook.register_thread": [], "training.monitored_session_test.StopCoordinatorWithException.after_run": [], "training.monitored_session_test.FailTrainingAfterCoordinatorStopped.__init__": ["training.monitored_session_test.StopCoordinatorWithException.__init__"], "training.monitored_session_test.FailTrainingAfterCoordinatorStopped.after_create_session": ["training.monitored_session_test.StopCoordinatorWithException.after_create_session", "training.monitored_session_test.FailTrainingAfterCoordinatorStopped.after_create_session"], "training.monitored_session_test.FailTrainingAfterCoordinatorStopped.after_run": ["training.monitored_session_test.FailTrainingAfterCoordinatorStopped.after_run", "framework.errors_impl.CancelledError", "session_run_hook.SessionRunHook.raise_requested_exception", "training.monitored_session_test.StopCoordinatorWithException.after_run"], "session_run_hook.SessionRunHook.raise_requested_exception": [], "framework.errors_impl.CancelledError": [], "training.monitored_session_test.CountingSessionCreator.__init__": [], "training.monitored_session_test.CountingSessionCreator.__init__.<lambda1>": [], "training.monitored_session_test.CountingSessionCreator.number_of_sessions_created": [], "training.monitored_session_test.CountingSessionCreator.create_session": [], "training.monitored_session_test.RecoverableSessionTest._SessionReturner.__init__": [], "training.monitored_session_test.RecoverableSessionTest._SessionReturner.create_session": [], "training.monitored_session_test.RecoverableSessionTest": ["framework.test_util.run_deprecated_v1"], "training.monitored_session_test.RecoverableSessionTest.test_properties": ["training.monitored_session._RecoverableSession", "test.TestCase.cached_session", "test.TestCase.assertEqual", "training.monitored_session_test.RecoverableSessionTest._SessionReturner.__init__", "framework.constant_op.constant"], "training.monitored_session._RecoverableSession": [], "training.monitored_session_test.RecoverableSessionTest.test_run": ["training.monitored_session._RecoverableSession", "test.TestCase.cached_session", "test.TestCase.assertEqual", "training.monitored_session_test.RecoverableSessionTest._SessionReturner.__init__", "ops.array_ops.identity", "framework.constant_op.constant"], "training.monitored_session_test.RecoverableSessionTest.test_recovery": ["test.TestCase.assertRaisesRegex", "training.monitored_session._RecoverableSession", "<builtin>.len", "test.TestCase.cached_session", "test.TestCase.assertEqual", "ops.array_ops.identity", "training.monitored_session_test.RecoverableSessionTest.test_recovery.StackSessionCreator.__init__", "framework.constant_op.constant"], "training.monitored_session_test.RecoverableSessionTest.test_recovery.StackSessionCreator.__init__": ["training.monitored_session_test.AbortAtNSession.__init__", "<builtin>.range"], "training.monitored_session_test.RecoverableSessionTest.test_recovery.StackSessionCreator.create_session": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_coordinator_exception": ["test.TestCase.assertFalse", "test.TestCase.cached_session", "training.monitored_session_test.StopCoordinatorWithException.__init__", "test.TestCase.assertEqual", "ops.array_ops.identity", "framework.constant_op.constant", "training.monitored_session_test.CountingSessionCreator.__init__", "training.monitored_session.MonitoredSession"], "training.monitored_session.MonitoredSession": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_non_preemption_in_coordinator": ["test.TestCase.assertFalse", "test.TestCase.assertRaises", "test.TestCase.cached_session", "training.monitored_session_test.StopCoordinatorWithException.__init__", "framework.errors_impl.UnknownError", "test.TestCase.assertEqual", "ops.array_ops.identity", "test.TestCase.assertTrue", "framework.constant_op.constant", "training.monitored_session_test.CountingSessionCreator.__init__", "training.monitored_session.MonitoredSession"], "framework.errors_impl.UnknownError": [], "test.TestCase.assertRaises": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_session_getting_stuck": ["test.TestCase.assertFalse", "test.TestCase.cached_session", "test.TestCase.assertEqual", "ops.array_ops.identity", "training.monitored_session_test.FailTrainingAfterCoordinatorStopped.__init__", "framework.constant_op.constant", "training.monitored_session_test.CountingSessionCreator.__init__", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.RecoverableSessionTest.test_step_fn_recovery_from_coordinator_exception_when_run_hooks": ["test.TestCase.assertFalse", "test.TestCase.cached_session", "training.monitored_session_test.StopCoordinatorWithException.__init__", "test.TestCase.assertEqual", "ops.array_ops.identity", "framework.constant_op.constant", "training.monitored_session_test.CountingSessionCreator.__init__", "training.monitored_session.MonitoredSession", "training.monitored_session_test.RecoverableSessionTest.test_step_fn_recovery_from_coordinator_exception_when_run_hooks.feed_step_fn"], "training.monitored_session_test.RecoverableSessionTest.test_step_fn_recovery_from_coordinator_exception_when_run_hooks.feed_step_fn": [], "training.monitored_session_test.RecoverableSessionTest.test_step_fn_recovery_from_coordinator_exception_when_run_hooks.feed_step_fn.step_fn": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_non_preemption_in_coordinator_when_run_hooks": ["test.TestCase.assertFalse", "test.TestCase.assertRaises", "test.TestCase.cached_session", "training.monitored_session_test.StopCoordinatorWithException.__init__", "framework.errors_impl.UnknownError", "test.TestCase.assertEqual", "ops.array_ops.identity", "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_non_preemption_in_coordinator_when_run_hooks.feed_step_fn", "test.TestCase.assertTrue", "framework.constant_op.constant", "training.monitored_session_test.CountingSessionCreator.__init__", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_non_preemption_in_coordinator_when_run_hooks.feed_step_fn": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_non_preemption_in_coordinator_when_run_hooks.feed_step_fn.step_fn": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_session_getting_stuck_when_run_hooks": ["training.monitored_session_test.RecoverableSessionTest.test_recovery_from_session_getting_stuck_when_run_hooks.feed_step_fn", "test.TestCase.assertFalse", "test.TestCase.cached_session", "test.TestCase.assertEqual", "ops.array_ops.identity", "training.monitored_session_test.FailTrainingAfterCoordinatorStopped.__init__", "framework.constant_op.constant", "training.monitored_session_test.CountingSessionCreator.__init__", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_session_getting_stuck_when_run_hooks.feed_step_fn": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_session_getting_stuck_when_run_hooks.feed_step_fn.step_fn": [], "training.monitored_session_test.RecoverableSessionTest.create_raw_session_with_failing_coordinator": ["training.monitored_session.MonitoredSession"], "training.monitored_session_test.RecoverableSessionTest.create_raw_session_with_failing_coordinator.<lambda1>": [], "training.monitored_session_test.RecoverableSessionTest.test_step_fn_recovery_from_coordinator_exception_with_raw_session": ["test.TestCase.assertFalse", "training.monitored_session_test.RecoverableSessionTest.create_raw_session_with_failing_coordinator", "training.monitored_session_test.RecoverableSessionTest.test_step_fn_recovery_from_coordinator_exception_with_raw_session.feed_step_fn", "test.TestCase.cached_session", "training.monitored_session_test.StopCoordinatorWithException.__init__", "test.TestCase.assertEqual", "ops.array_ops.identity", "framework.constant_op.constant", "training.monitored_session_test.CountingSessionCreator.__init__"], "training.monitored_session_test.RecoverableSessionTest.test_step_fn_recovery_from_coordinator_exception_with_raw_session.feed_step_fn": [], "training.monitored_session_test.RecoverableSessionTest.test_step_fn_recovery_from_coordinator_exception_with_raw_session.feed_step_fn.step_fn": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_non_preemption_in_coordinator_with_raw_session": ["test.TestCase.assertFalse", "test.TestCase.assertRaises", "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_non_preemption_in_coordinator_with_raw_session.feed_step_fn", "training.monitored_session_test.RecoverableSessionTest.create_raw_session_with_failing_coordinator", "test.TestCase.cached_session", "training.monitored_session_test.StopCoordinatorWithException.__init__", "framework.errors_impl.UnknownError", "test.TestCase.assertEqual", "ops.array_ops.identity", "test.TestCase.assertTrue", "framework.constant_op.constant", "training.monitored_session_test.CountingSessionCreator.__init__"], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_non_preemption_in_coordinator_with_raw_session.feed_step_fn": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_non_preemption_in_coordinator_with_raw_session.feed_step_fn.step_fn": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_session_getting_stuck_with_raw_session": ["test.TestCase.assertFalse", "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_session_getting_stuck_with_raw_session.feed_step_fn", "training.monitored_session_test.RecoverableSessionTest.create_raw_session_with_failing_coordinator", "test.TestCase.cached_session", "test.TestCase.assertEqual", "ops.array_ops.identity", "training.monitored_session_test.FailTrainingAfterCoordinatorStopped.__init__", "framework.constant_op.constant", "training.monitored_session_test.CountingSessionCreator.__init__"], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_session_getting_stuck_with_raw_session.feed_step_fn": [], "training.monitored_session_test.RecoverableSessionTest.test_recovery_from_session_getting_stuck_with_raw_session.feed_step_fn.step_fn": [], "training.monitored_session_test.FakeSession.__init__": ["monitored_session._WrappedSession.__init__"], "monitored_session._WrappedSession.__init__": [], "training.monitored_session_test.FakeSession.run": ["<builtin>.dict", "monitored_session._WrappedSession.run"], "<builtin>.dict": [], "monitored_session._WrappedSession.run": [], "training.monitored_session_test.HookedSessionTest.testRunPassesAllArguments": ["test.TestCase.evaluate", "training.monitored_session_test.FakeSession.__init__", "training.monitored_session._HookedSession", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "client.session.Session", "framework.constant_op.constant"], "client.session.Session": [], "training.monitored_session._HookedSession": [], "test.TestCase.evaluate": [], "training.monitored_session_test.HookedSessionTest.testCallsHooksBeginEnd": ["test.TestCase.evaluate", "training.monitored_session._HookedSession", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "training.monitored_session_test.FakeHook.__init__", "client.session.Session", "framework.constant_op.constant", "protobuf.config_pb2.RunMetadata", "training.session_run_hook.SessionRunArgs", "protobuf.config_pb2.RunOptions", "training.session_run_hook.SessionRunValues"], "protobuf.config_pb2.RunOptions": [], "protobuf.config_pb2.RunMetadata": [], "training.session_run_hook.SessionRunValues": [], "training.session_run_hook.SessionRunArgs": [], "training.monitored_session_test.HookedSessionTest.testShouldStop": ["test.TestCase.evaluate", "test.TestCase.assertFalse", "training.monitored_session._HookedSession", "framework.ops.Graph", "ops.variables.global_variables_initializer", "training.monitored_session_test.FakeHook.__init__", "client.session.Session", "framework.constant_op.constant", "test.TestCase.assertTrue"], "training.monitored_session_test.HookedSessionTest.testFetchesHookRequests": ["test.TestCase.evaluate", "training.monitored_session._HookedSession", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "training.monitored_session_test.FakeHook.__init__", "client.session.Session", "framework.constant_op.constant", "training.session_run_hook.SessionRunArgs"], "training.monitored_session_test.HookedSessionTest.testOnlyHooksHaveFeeds": ["test.TestCase.evaluate", "training.monitored_session._HookedSession", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "training.monitored_session_test.FakeHook.__init__", "client.session.Session", "framework.constant_op.constant", "training.session_run_hook.SessionRunArgs"], "training.monitored_session_test.HookedSessionTest.testBothHooksAndUserHaveFeeds": ["test.TestCase.evaluate", "<builtin>.len", "training.monitored_session._HookedSession", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "training.monitored_session_test.FakeHook.__init__", "client.session.Session", "framework.constant_op.constant", "training.session_run_hook.SessionRunArgs"], "training.monitored_session_test.HookedSessionTest.testHooksFeedConflicts": ["test.TestCase.evaluate", "test.TestCase.assertRaisesRegex", "training.monitored_session._HookedSession", "framework.ops.Graph", "ops.variables.global_variables_initializer", "training.monitored_session_test.FakeHook.__init__", "client.session.Session", "framework.constant_op.constant", "training.session_run_hook.SessionRunArgs"], "training.monitored_session_test.HookedSessionTest.testHooksAndUserFeedConflicts": ["test.TestCase.evaluate", "test.TestCase.assertRaisesRegex", "training.monitored_session._HookedSession", "framework.ops.Graph", "ops.variables.global_variables_initializer", "training.monitored_session_test.FakeHook.__init__", "client.session.Session", "framework.constant_op.constant", "training.session_run_hook.SessionRunArgs"], "training.monitored_session_test.RaiseOnceAtCountN.__init__": [], "training.monitored_session_test.RaiseOnceAtCountN.before_run": [], "training.monitored_session_test.RunOptionsMetadataHook.__init__": [], "training.monitored_session_test.RunOptionsMetadataHook.before_run": ["protobuf.config_pb2.RunOptions", "training.session_run_hook.SessionRunArgs"], "training.monitored_session_test.RunOptionsMetadataHook.after_run": [], "training.monitored_session_test.MonitoredSessionTest.test_defaults": ["training.monitored_session.MonitoredSession", "ops.variables.VariableV1", "test.TestCase.assertEqual", "framework.ops.Graph"], "training.monitored_session_test.MonitoredSessionTest.test_last_step": ["ops.state_ops.assign_add", "test.TestCase.assertFalse", "training.monitored_session.ChiefSessionCreator", "training.monitored_session.Scaffold", "framework.ops.Graph", "training.saver._get_saver_or_default", "test.TestCase.assertEqual", "training.monitored_session_test._test_dir", "training.basic_session_run_hooks.StopAtStepHook", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "test.TestCase.assertTrue", "os.path.join", "training.monitored_session.MonitoredSession"], "training.basic_session_run_hooks.StopAtStepHook": [], "training.saver._get_saver_or_default": [], "training.monitored_session_test.MonitoredSessionTest.test_last_step.load_ckpt": [], "training.monitored_session.ChiefSessionCreator": [], "training.monitored_session_test.MonitoredSessionTest.test_num_steps": ["ops.state_ops.assign_add", "test.TestCase.assertFalse", "training.monitored_session.ChiefSessionCreator", "training.monitored_session.Scaffold", "framework.ops.Graph", "training.saver._get_saver_or_default", "test.TestCase.assertEqual", "training.monitored_session_test._test_dir", "training.basic_session_run_hooks.StopAtStepHook", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "test.TestCase.assertTrue", "os.path.join", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_num_steps.load_ckpt": [], "training.monitored_session_test.MonitoredSessionTest": ["framework.test_util.run_deprecated_v1"], "training.monitored_session_test.MonitoredSessionTest.test_recovery": ["ops.state_ops.assign_add", "training.monitored_session.ChiefSessionCreator", "training.checkpoint_management.latest_checkpoint", "training.monitored_session.Scaffold", "framework.ops.Graph", "training.basic_session_run_hooks.CheckpointSaverHook", "test.TestCase.assertEqual", "training.monitored_session_test._test_dir", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "training.monitored_session.MonitoredSession"], "training.basic_session_run_hooks.CheckpointSaverHook": [], "training.monitored_session_test.MonitoredSessionTest.test_retry_initialization_on_aborted_error": ["test.TestCase.assertFalse", "training.monitored_session.ChiefSessionCreator", "training.monitored_session.Scaffold", "framework.ops.Graph", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_retry_initialization_on_aborted_error._init_fn": ["framework.errors_impl.AbortedError"], "training.monitored_session_test.MonitoredSessionTest._retry_test": ["ops.state_ops.assign_add", "test.TestCase.assertFalse", "framework.ops.Graph", "training.monitored_session_test.RaiseOnceAtCountN.__init__", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_retry_on_aborted_error": ["training.monitored_session_test.MonitoredSessionTest._retry_test", "framework.errors_impl.AbortedError"], "training.monitored_session_test.MonitoredSessionTest.test_retry_on_unavailable_error": ["training.monitored_session_test.MonitoredSessionTest._retry_test", "framework.errors_impl.UnavailableError"], "framework.errors_impl.UnavailableError": [], "training.monitored_session_test.MonitoredSessionTest.test_recover_and_retry_on_aborted_error": ["ops.state_ops.assign_add", "training.monitored_session.ChiefSessionCreator", "test.TestCase.assertFalse", "training.monitored_session.Scaffold", "framework.ops.Graph", "framework.errors_impl.AbortedError", "training.basic_session_run_hooks.CheckpointSaverHook", "training.monitored_session_test.RaiseOnceAtCountN.__init__", "test.TestCase.assertEqual", "training.monitored_session_test._test_dir", "training.training_util.get_or_create_global_step", "test.TestCase.get_temp_dir", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_exit_cleanly_on_out_of_range_exception": ["ops.state_ops.assign_add", "test.TestCase.assertFalse", "framework.ops.Graph", "training.monitored_session_test.RaiseOnceAtCountN.__init__", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "framework.errors_impl.OutOfRangeError", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession"], "framework.errors_impl.OutOfRangeError": [], "training.monitored_session_test.MonitoredSessionTest.test_exit_cleanly_on_stop_iteration_exception": ["ops.state_ops.assign_add", "test.TestCase.assertFalse", "framework.ops.Graph", "training.monitored_session_test.RaiseOnceAtCountN.__init__", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_regular_exception_pass_through_run": ["ops.state_ops.assign_add", "test.TestCase.assertRaisesRegex", "test.TestCase.assertFalse", "framework.ops.Graph", "training.monitored_session_test.RaiseOnceAtCountN.__init__", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.assertTrue", "<builtin>.RuntimeError", "training.monitored_session.MonitoredSession"], "<builtin>.RuntimeError": [], "training.monitored_session_test.MonitoredSessionTest.test_regular_exception_reported_to_coord_pass_through_run": ["test.TestCase.assertRaisesRegex", "framework.ops.Graph", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.assertTrue", "<builtin>.RuntimeError", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_regular_exception_reported_to_coord_pass_through_return": ["test.TestCase.assertRaisesRegex", "framework.ops.Graph", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.assertTrue", "<builtin>.RuntimeError", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_stop_cleanly_when_no_exception_in_with_body": ["ops.state_ops.assign_add", "test.TestCase.assertFalse", "framework.ops.Graph", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_raises_regular_exceptions_in_with_body": ["ops.state_ops.assign_add", "test.TestCase.assertRaisesRegex", "test.TestCase.assertFalse", "framework.ops.Graph", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.assertTrue", "<builtin>.RuntimeError", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_graph": ["training.monitored_session.MonitoredSession", "test.TestCase.assertEqual", "framework.ops.Graph"], "training.monitored_session_test.MonitoredSessionTest.test_graph_finalized_during_run_unfinalized_after_exit": ["test.TestCase.assertFalse", "framework.ops.Graph", "ops.variables.VariableV1", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_keep_finalized_graph_as_finalized": ["training.monitored_session.Scaffold", "framework.ops.Graph", "ops.variables.VariableV1", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_merge_run_options_from_hooks": ["<builtin>.len", "framework.ops.Graph", "<builtin>.isinstance", "test.TestCase.assertEqual", "protobuf.debug_pb2.DebugOptions", "protobuf.debug_pb2.DebugTensorWatch", "test.TestCase.assertTrue", "framework.constant_op.constant", "test.TestCase.assertGreater", "training.monitored_session_test.RunOptionsMetadataHook.__init__", "training.monitored_session.MonitoredSession", "protobuf.config_pb2.RunOptions"], "protobuf.debug_pb2.DebugTensorWatch": [], "protobuf.debug_pb2.DebugOptions": [], "test.TestCase.assertGreater": [], "training.monitored_session_test.MonitoredSessionTest.test_merge_caller_and_hook_run_options": ["<builtin>.len", "framework.ops.Graph", "<builtin>.isinstance", "test.TestCase.assertEqual", "protobuf.debug_pb2.DebugTensorWatch", "test.TestCase.assertTrue", "framework.constant_op.constant", "test.TestCase.assertGreater", "training.monitored_session_test.RunOptionsMetadataHook.__init__", "training.monitored_session.MonitoredSession", "protobuf.config_pb2.RunOptions"], "training.monitored_session_test.MonitoredSessionTest.test_with_statement_and_close": ["test.TestCase.assertRaisesRegex", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_example": ["framework.ops.Graph", "test.TestCase.assertNear", "ops.array_ops.identity", "training.monitored_session.MonitoredSession", "ops.array_ops.placeholder"], "ops.array_ops.placeholder": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_example.step_fn": [], "test.TestCase.assertNear": [], "training.monitored_session_test.MonitoredSessionTest.test_step_function_stops": ["training.monitored_session.MonitoredSession", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "framework.ops.Graph"], "training.monitored_session_test.MonitoredSessionTest.test_step_function_stops.step_fn": [], "training.monitored_session_test.MonitoredSessionTest.test_step_request_stop_without_a_with_block": ["test.TestCase.assertFalse", "framework.ops.Graph", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession"], "training.monitored_session_test.MonitoredSessionTest.test_step_request_stop_without_a_with_block.step_fn": [], "training.monitored_session_test.MonitoredSessionTest.test_step_request_stop_in_a_loop": ["test.TestCase.fail", "training.monitored_session.MonitoredSession", "framework.ops.Graph"], "training.monitored_session_test.MonitoredSessionTest.test_step_request_stop_in_a_loop.step_fn": [], "training.monitored_session_test.MonitoredSessionTest.test_step_request_stop_with_returning_a_type": ["training.monitored_session.MonitoredSession", "test.TestCase.assertEqual", "framework.ops.Graph"], "training.monitored_session_test.MonitoredSessionTest.test_step_request_stop_with_returning_a_type.step_fn": [], "training.monitored_session_test.MonitoredSessionTest.test_step_with_extra_arguments": ["test.TestCase.assertRaisesRegex", "training.monitored_session.MonitoredSession", "test.TestCase.assertEqual", "framework.ops.Graph"], "training.monitored_session_test.MonitoredSessionTest.test_step_with_extra_arguments.step_fn": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_belongs_to_a_class": ["framework.ops.Graph", "test.TestCase.assertNear", "ops.array_ops.identity", "training.monitored_session.MonitoredSession", "ops.array_ops.placeholder"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_belongs_to_a_class.Model.step_fn": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_belongs_to_a_class_and_has_extra_methods": ["test.TestCase.assertRaisesRegex", "training.monitored_session.MonitoredSession", "test.TestCase.assertEqual", "framework.ops.Graph"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_belongs_to_a_class_and_has_extra_methods.Model.step_fn": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_with_hooks": ["ops.state_ops.assign_add", "framework.ops.Graph", "test.TestCase.assertEqual", "training.monitored_session_test.MonitoredSessionTest.test_step_fn_with_hooks.Hook.__init__", "ops.resource_variable_ops.ResourceVariable", "training.monitored_session.MonitoredSession", "framework.ops.control_dependencies"], "framework.ops.control_dependencies": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_with_hooks.Hook.__init__": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_with_hooks.Hook.before_run": ["training.session_run_hook.SessionRunArgs"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_with_hooks.Hook.after_run": ["test.TestCase.assertNear"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_with_hooks.step_fn": ["test.TestCase.assertNear"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_has_the_same_hooks_behavior_without_recovery": ["ops.state_ops.assign_add", "framework.ops.Graph", "test.TestCase.assertEqual", "training.monitored_session_test.MonitoredSessionTest.test_step_fn_has_the_same_hooks_behavior_without_recovery.Hook.__init__", "ops.resource_variable_ops.ResourceVariable", "training.monitored_session.SingularMonitoredSession", "framework.ops.control_dependencies"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_has_the_same_hooks_behavior_without_recovery.Hook.__init__": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_has_the_same_hooks_behavior_without_recovery.Hook.before_run": ["training.session_run_hook.SessionRunArgs"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_has_the_same_hooks_behavior_without_recovery.Hook.after_run": ["test.TestCase.assertNear"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_has_the_same_hooks_behavior_without_recovery.step_fn": ["test.TestCase.assertNear"], "training.monitored_session.SingularMonitoredSession": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_with_hooks_and_request_stop": ["test.TestCase.assertFalse", "framework.ops.Graph", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession", "session_run_hook.SessionRunHook.__init__"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_with_hooks_and_request_stop.Hook.before_run": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_with_hooks_and_request_stop.Hook.after_run": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_with_hooks_and_request_stop.step_fn": [], "session_run_hook.SessionRunHook.__init__": [], "training.monitored_session_test.MonitoredSessionTest.test_recovers_from_an_exception_in_step_fn": ["framework.ops.Graph", "test.TestCase.assertNear", "ops.array_ops.identity", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession", "ops.array_ops.placeholder"], "training.monitored_session_test.MonitoredSessionTest.test_recovers_from_an_exception_in_step_fn.step_fn": ["framework.errors_impl.AbortedError"], "training.monitored_session_test.MonitoredSessionTest.test_recovers_from_an_exception_in_step_fn_after_hooks": ["ops.state_ops.assign_add", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.cached_session", "test.TestCase.assertEqual", "test.TestCase.assertNear", "ops.array_ops.identity", "test.TestCase.assertTrue", "training.monitored_session.MonitoredSession", "training.monitored_session_test.CountingSessionCreator.__init__", "ops.variables.VariableV1", "ops.array_ops.placeholder"], "training.monitored_session_test.MonitoredSessionTest.test_recovers_from_an_exception_in_step_fn_after_hooks.step_fn": ["framework.errors_impl.AbortedError"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_doesnt_recover_when_it_wasnt_asked_to": ["test.TestCase.fail", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "test.TestCase.assertNear", "ops.array_ops.identity", "test.TestCase.assertTrue", "training.monitored_session.SingularMonitoredSession", "ops.array_ops.placeholder"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_doesnt_recover_when_it_wasnt_asked_to.step_fn": ["framework.errors_impl.AbortedError"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_exception_from_before_run": ["ops.state_ops.assign_add", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.cached_session", "test.TestCase.assertEqual", "test.TestCase.assertNear", "ops.array_ops.identity", "training.monitored_session_test.MonitoredSessionTest.test_step_fn_exception_from_before_run.Hook.__init__", "framework.constant_op.constant", "training.monitored_session.MonitoredSession", "training.monitored_session_test.CountingSessionCreator.__init__", "ops.variables.VariableV1", "ops.array_ops.placeholder"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_exception_from_before_run.Hook.__init__": [], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_exception_from_before_run.Hook.before_run": ["framework.errors_impl.AbortedError", "training.session_run_hook.SessionRunArgs"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_exception_from_before_run.Hook.after_run": ["test.TestCase.assertNear"], "training.monitored_session_test.MonitoredSessionTest.test_step_fn_exception_from_before_run.step_fn": [], "training.monitored_session_test.SingularMonitoredSessionTest.test_handles_initialization": ["training.monitored_session.SingularMonitoredSession", "ops.variables.VariableV1", "test.TestCase.assertEqual", "framework.ops.Graph"], "training.monitored_session_test.SingularMonitoredSessionTest.test_do_not_handle_aborted_error": ["test.TestCase.assertRaises", "framework.ops.Graph", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "training.monitored_session.SingularMonitoredSession", "session_run_hook.SessionRunHook.__init__"], "training.monitored_session_test.SingularMonitoredSessionTest.test_do_not_handle_aborted_error._RaiseAbortedHook.before_run": ["framework.errors_impl.AbortedError"], "training.monitored_session_test.SingularMonitoredSessionTest.test_exit_cleanly_on_out_of_range_exception": ["ops.state_ops.assign_add", "test.TestCase.assertFalse", "framework.ops.Graph", "training.monitored_session_test.RaiseOnceAtCountN.__init__", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "framework.errors_impl.OutOfRangeError", "test.TestCase.assertTrue", "training.monitored_session.SingularMonitoredSession"], "training.monitored_session_test.SingularMonitoredSessionTest.test_regular_exception_reported_to_coord_pass_through_run": ["test.TestCase.assertRaisesRegex", "framework.ops.Graph", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.assertTrue", "<builtin>.RuntimeError", "training.monitored_session.SingularMonitoredSession"], "training.monitored_session_test.SingularMonitoredSessionTest.test_stop_cleanly_when_no_exception_in_with_body": ["ops.state_ops.assign_add", "test.TestCase.assertFalse", "framework.ops.Graph", "test.TestCase.assertEqual", "training.training_util.get_or_create_global_step", "test.TestCase.assertTrue", "training.monitored_session.SingularMonitoredSession"], "training.monitored_session_test.SingularMonitoredSessionTest.test_graph": ["training.monitored_session.SingularMonitoredSession", "test.TestCase.assertEqual", "framework.ops.Graph"], "training.monitored_session_test.SingularMonitoredSessionTest.test_raw_session": ["training.monitored_session.SingularMonitoredSession", "<builtin>.isinstance", "test.TestCase.assertTrue", "framework.ops.Graph"], "platform.test.main": []}