{"feature_column.feature_column_v2_test": ["platform.test.main"], "feature_column.feature_column_v2_test._initialized_session": ["client.session.Session", "ops.lookup_ops.tables_initializer", "ops.variables.global_variables_initializer"], "client.session.Session": [], "ops.variables.global_variables_initializer": [], "ops.lookup_ops.tables_initializer": [], "feature_column.feature_column_v2_test.get_linear_model_bias": ["ops.variable_scope.get_variable", "ops.variable_scope.variable_scope"], "ops.variable_scope.variable_scope": [], "ops.variable_scope.get_variable": [], "feature_column.feature_column_v2_test.get_linear_model_column_var": ["framework.ops.get_collection"], "framework.ops.get_collection": [], "feature_column.feature_column_v2_test.BaseFeatureColumnForTests.parents": ["<builtin>.ValueError"], "<builtin>.ValueError": [], "feature_column.feature_column_v2_test.BaseFeatureColumnForTests.from_config": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.BaseFeatureColumnForTests.get_config": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.SortableFeatureColumnTest.test_sort_columns_by_string_representation": ["test.TestCase.assertFalse", "feature_column.feature_column_v2.numeric_column", "test.TestCase.assertAllEqual", "feature_column.feature_column._numeric_column", "test.TestCase.assertTrue", "<builtin>.sorted"], "feature_column.feature_column_v2.numeric_column": [], "feature_column.feature_column._numeric_column": [], "<builtin>.sorted": [], "test.TestCase.assertAllEqual": [], "test.TestCase.assertTrue": [], "test.TestCase.assertFalse": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_transformations_called_once": ["feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertEqual"], "feature_column.feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter.__init__": ["<builtin>.super"], "<builtin>.super": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter._is_v2_column": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter.name": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter.transform_feature": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_transformations_called_once.TransformCounter.parse_example_spec": [], "feature_column.feature_column_v2.FeatureTransformationCache": [], "test.TestCase.assertEqual": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_returns_transform_output": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertEqual", "feature_column_v2.FeatureColumn.__init__"], "feature_column.feature_column_v2_test.LazyColumnTest.test_returns_transform_output.Transformer._is_v2_column": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_returns_transform_output.Transformer.name": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_returns_transform_output.Transformer.transform_feature": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_returns_transform_output.Transformer.parse_example_spec": [], "feature_column_v2.FeatureColumn.__init__": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_does_not_pollute_given_features_dict": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertEqual", "<builtin>.list", "feature_column_v2.FeatureColumn.__init__"], "feature_column.feature_column_v2_test.LazyColumnTest.test_does_not_pollute_given_features_dict.Transformer._is_v2_column": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_does_not_pollute_given_features_dict.Transformer.name": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_does_not_pollute_given_features_dict.Transformer.transform_feature": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_does_not_pollute_given_features_dict.Transformer.parse_example_spec": [], "<builtin>.list": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_error_if_feature_is_not_found": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex"], "test.TestCase.assertRaisesRegex": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_not_supported_feature_column": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex", "feature_column_v2.FeatureColumn.__init__"], "feature_column.feature_column_v2_test.LazyColumnTest.test_not_supported_feature_column.NotAProperColumn._is_v2_column": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_not_supported_feature_column.NotAProperColumn.name": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_not_supported_feature_column.NotAProperColumn.transform_feature": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_not_supported_feature_column.NotAProperColumn.parse_example_spec": [], "feature_column.feature_column_v2_test.LazyColumnTest.test_key_should_be_string_or_feature_colum": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.LazyColumnTest.test_expand_dim_rank_1_sparse_tensor_empty_batch": ["numpy.array", "test.TestCase.evaluate", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertAllEqual", "numpy.reshape", "framework.sparse_tensor.SparseTensor"], "numpy.array": [], "numpy.reshape": [], "framework.sparse_tensor.SparseTensor": [], "test.TestCase.evaluate": [], "feature_column.feature_column_v2_test.NumericColumnTest.test_defaults": ["test.TestCase.assertTrue", "test.TestCase.assertEqual", "feature_column.feature_column_v2.numeric_column", "test.TestCase.assertIsNone"], "test.TestCase.assertIsNone": [], "feature_column.feature_column_v2_test.NumericColumnTest.test_key_should_be_string": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_shape_saved_as_tuple": ["test.TestCase.assertEqual", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_default_value_saved_as_tuple": ["test.TestCase.assertEqual", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_shape_and_default_value_compatibility": ["test.TestCase.assertEqual", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_default_value_type_check": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_shape_must_be_positive_integer": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_dtype_is_convertible_to_float": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_scalar_default_value_fills_the_shape": ["test.TestCase.assertEqual", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_parse_spec": ["test.TestCase.assertEqual", "ops.parsing_ops.FixedLenFeature", "feature_column.feature_column_v2.numeric_column"], "ops.parsing_ops.FixedLenFeature": [], "feature_column.feature_column_v2_test.NumericColumnTest.test_parse_example_no_default_value": ["feature_column.feature_column_v2.numeric_column", "example.feature_pb2.FloatList", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "test.TestCase.assertIn", "example.feature_pb2.Features", "test.TestCase.assertAllEqual", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "example.feature_pb2.FloatList": [], "example.feature_pb2.Feature": [], "example.feature_pb2.Features": [], "example.example_pb2.Example": [], "feature_column.feature_column_v2.make_parse_example_spec_v2": [], "ops.parsing_ops.parse_example": [], "test.TestCase.assertIn": [], "feature_column.feature_column_v2_test.NumericColumnTest.test_parse_example_with_default_value": ["feature_column.feature_column_v2.numeric_column", "example.feature_pb2.FloatList", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "test.TestCase.assertIn", "example.feature_pb2.Features", "test.TestCase.assertAllEqual", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.NumericColumnTest.test_normalizer_fn_must_be_callable": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_normalizer_fn_transform_feature": ["test.TestCase.assertAllEqual", "feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.numeric_column", "test.TestCase.evaluate"], "feature_column.feature_column_v2_test.NumericColumnTest.test_normalizer_fn_transform_feature._increment_two": [], "feature_column.feature_column_v2._transform_features_v2": [], "feature_column.feature_column_v2_test.NumericColumnTest.test_get_dense_tensor": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_get_dense_tensor._increment_two": [], "feature_column.feature_column_v2_test.NumericColumnTest.test_sparse_tensor_not_supported": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.NumericColumnTest.test_deep_copy": ["test.TestCase.assertEqual", "feature_column.feature_column_v2.numeric_column", "copy.deepcopy"], "copy.deepcopy": [], "feature_column.feature_column_v2_test.NumericColumnTest.test_numpy_default_value": ["numpy.array", "test.TestCase.assertEqual", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_old_linear_model": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose"], "framework.ops.Graph": [], "feature_column.feature_column.linear_model": [], "test.TestCase.assertAllClose": [], "feature_column.feature_column_v2_test.NumericColumnTest.test_serialization": ["feature_column.serialization.serialize_feature_column", "feature_column_v2.NumericColumn.from_config", "feature_column.feature_column_v2.numeric_column", "test.TestCase.assertEqual", "feature_column.serialization.deserialize_feature_column"], "feature_column.feature_column_v2_test.NumericColumnTest.test_serialization._increment_two": [], "feature_column_v2.NumericColumn.from_config": [], "feature_column.serialization.serialize_feature_column": [], "feature_column.serialization.deserialize_feature_column": [], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_invalid_source_column_type": ["feature_column.feature_column_v2.bucketized_column", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2.categorical_column_with_hash_bucket": [], "feature_column.feature_column_v2.bucketized_column": [], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_invalid_source_column_shape": ["feature_column.feature_column_v2.bucketized_column", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_invalid_boundaries": ["feature_column.feature_column_v2.bucketized_column", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_name": ["feature_column.feature_column_v2.bucketized_column", "test.TestCase.assertTrue", "feature_column.feature_column_v2.numeric_column", "test.TestCase.assertEqual"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_is_v2_column_old_numeric": ["feature_column.feature_column._numeric_column", "test.TestCase.assertFalse", "feature_column.feature_column_v2.bucketized_column", "test.TestCase.assertEqual"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_parse_spec": ["feature_column.feature_column_v2.bucketized_column", "test.TestCase.assertEqual", "ops.parsing_ops.FixedLenFeature", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_variable_shape": ["test.TestCase.assertAllEqual", "feature_column.feature_column_v2.bucketized_column", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_num_buckets": ["feature_column.feature_column_v2.bucketized_column", "test.TestCase.assertEqual", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_parse_example": ["feature_column.feature_column_v2.numeric_column", "example.feature_pb2.FloatList", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "test.TestCase.assertIn", "example.feature_pb2.Features", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.bucketized_column", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_transform_feature": ["feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.numeric_column", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.evaluate", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_get_dense_tensor_one_input_value": ["feature_column.feature_column_v2.numeric_column", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "feature_column.feature_column_v2.FeatureTransformationCache", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_get_dense_tensor_two_input_values": ["feature_column.feature_column_v2.numeric_column", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "feature_column.feature_column_v2.FeatureTransformationCache", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_get_sparse_tensors_one_input_value": ["feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIsNone", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_get_sparse_tensors_two_input_values": ["feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIsNone", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_sparse_tensor_input_not_supported": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.bucketized_column", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_deep_copy": ["feature_column.feature_column_v2.numeric_column", "copy.deepcopy", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_old_linear_model_one_input_value": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_old_linear_model_two_input_values": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_old_linear_model_one_input_value_old_numeric": ["feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "feature_column.feature_column._numeric_column", "feature_column.feature_column._numeric_column", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.BucketizedColumnTest.test_serialization": ["test.TestCase.assertIs", "feature_column.feature_column_v2.numeric_column", "test.TestCase.assertIsNot", "feature_column.serialization._column_name_with_class_name", "feature_column_v2.BucketizedColumn.from_config", "test.TestCase.assertEqual", "feature_column.feature_column_v2.bucketized_column"], "feature_column_v2.BucketizedColumn.from_config": [], "test.TestCase.assertIsNot": [], "feature_column.serialization._column_name_with_class_name": [], "test.TestCase.assertIs": [], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_defaults": ["test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "test.TestCase.assertTrue"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_key_should_be_string": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_bucket_size_should_be_given": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_bucket_size_should_be_positive": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_dtype_should_be_string_or_integer": ["test.TestCase.assertEqual", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_deep_copy": ["test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "copy.deepcopy"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_parse_spec_string": ["test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "ops.parsing_ops.VarLenFeature"], "ops.parsing_ops.VarLenFeature": [], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_parse_spec_int": ["test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "ops.parsing_ops.VarLenFeature"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_parse_example": ["numpy.array", "ops.parsing_ops.VarLenFeature", "example.feature_pb2.BytesList", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIn", "example.feature_pb2.Features", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "example.feature_pb2.BytesList": [], "framework.sparse_tensor.SparseTensorValue": [], "feature_column.feature_column_v2_test._assert_sparse_tensor_value": ["numpy.array", "test.TestCase.assertAllEqual", "test.TestCase.assertEqual"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_strings_should_be_hashed": ["feature_column.feature_column_v2._transform_features_v2", "test.TestCase.evaluate", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_tensor_dtype_should_be_string_or_integer": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_dtype_should_match_with_tensor": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_ints_should_be_hashed": ["test.TestCase.evaluate", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_int32_64_is_compatible": ["test.TestCase.evaluate", "framework.constant_op.constant", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "framework.constant_op.constant": [], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_get_sparse_tensors": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertEqual", "test.TestCase.assertIsNone", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_get_sparse_tensors_dense_input": ["feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_old_linear_model": ["feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertEqual", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.HashedCategoricalColumnTest.test_serialization": ["test.TestCase.assertEqual", "feature_column_v2.HashedCategoricalColumn.from_config", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column_v2.HashedCategoricalColumn.from_config": [], "feature_column.feature_column_v2_test.CrossedColumnTest.test_keys_empty": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.crossed_column"], "feature_column.feature_column_v2.crossed_column": [], "feature_column.feature_column_v2_test.CrossedColumnTest.test_keys_length_one": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.crossed_column"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_key_type_unsupported": ["feature_column.feature_column_v2.crossed_column", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_hash_bucket_size_negative": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.crossed_column"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_hash_bucket_size_zero": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.crossed_column"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_hash_bucket_size_none": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.crossed_column"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_name": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.assertTrue", "test.TestCase.assertEqual", "feature_column.feature_column_v2.crossed_column", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_is_v2_column": ["test.TestCase.assertFalse", "feature_column.feature_column._numeric_column", "test.TestCase.assertTrue", "test.TestCase.assertEqual", "feature_column.feature_column_v2.crossed_column", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_name_ordered_alphabetically": ["feature_column.feature_column_v2.bucketized_column", "test.TestCase.assertEqual", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.crossed_column"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_name_leaf_keys_ordered_alphabetically": ["feature_column.feature_column_v2.bucketized_column", "test.TestCase.assertEqual", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.crossed_column"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_parse_spec": ["feature_column.feature_column_v2.numeric_column", "ops.parsing_ops.VarLenFeature", "test.TestCase.assertEqual", "feature_column.feature_column_v2.crossed_column", "feature_column.feature_column_v2.bucketized_column", "ops.parsing_ops.FixedLenFeature"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_num_buckets": ["feature_column.feature_column_v2.bucketized_column", "test.TestCase.assertEqual", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.crossed_column"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_deep_copy": ["feature_column.feature_column_v2.numeric_column", "copy.deepcopy", "test.TestCase.assertEqual", "feature_column.feature_column_v2.crossed_column", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_parse_example": ["feature_column.feature_column_v2.numeric_column", "example.feature_pb2.FloatList", "example.feature_pb2.BytesList", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "test.TestCase.assertIn", "feature_column.feature_column_v2.crossed_column", "example.feature_pb2.Features", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.bucketized_column", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_transform_feature": ["feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.numeric_column", "test.TestCase.evaluate", "framework.constant_op.constant", "<builtin>.list", "test.TestCase.assertIn", "feature_column.feature_column_v2.crossed_column", "<builtin>.range", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.bucketized_column", "framework.sparse_tensor.SparseTensor"], "<builtin>.range": [], "feature_column.feature_column_v2_test.CrossedColumnTest.test_get_sparse_tensors": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.evaluate", "framework.constant_op.constant", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.crossed_column", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2.bucketized_column", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_get_sparse_tensors_simple": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.evaluate", "framework.constant_op.constant", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.crossed_column", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2.bucketized_column", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model": ["feature_column.feature_column_v2.numeric_column", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.constant_op.constant", "framework.constant_op.constant", "feature_column.feature_column_v2.crossed_column", "feature_column.feature_column_v2.bucketized_column", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights": ["feature_column.feature_column.linear_model", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "feature_column_v2.FeatureColumn.__init__", "feature_column.feature_column_v2.crossed_column", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights._is_v2_column": [], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights.name": [], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights.parse_example_spec": ["ops.parsing_ops.VarLenFeature"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights._parse_example_spec": [], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights.num_buckets": [], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights._num_buckets": [], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights.transform_feature": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights._transform_feature": [], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights.get_sparse_tensors": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_with_weights._TestColumnWithWeights._get_sparse_tensors": ["feature_column_v2.CategoricalColumn.IdWeightPair"], "feature_column_v2.CategoricalColumn.IdWeightPair": [], "feature_column.feature_column_v2_test.CrossedColumnTest.test_old_linear_model_old_numeric": ["feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "feature_column.feature_column._numeric_column", "framework.constant_op.constant", "framework.constant_op.constant", "feature_column.feature_column_v2.crossed_column", "feature_column.feature_column_v2.bucketized_column", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.CrossedColumnTest.test_serialization": ["test.TestCase.assertIs", "feature_column_v2.CrossedColumn.from_config", "feature_column.feature_column_v2.numeric_column", "test.TestCase.assertIsNot", "feature_column.serialization._column_name_with_class_name", "test.TestCase.assertEqual", "feature_column.feature_column_v2.crossed_column", "feature_column.feature_column_v2.bucketized_column"], "feature_column_v2.CrossedColumn.from_config": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_raises_if_empty_feature_columns": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column.linear_model"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_should_be_feature_column": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column.linear_model"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column": ["feature_column_v2.FeatureColumn.__init__", "test.TestCase.assertRaisesRegex", "feature_column.feature_column.linear_model"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn._is_v2_column": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn.name": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn.transform_feature": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn._transform_feature": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn.parse_example_spec": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_should_be_dense_or_categorical_column.NotSupportedColumn._parse_example_spec": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_does_not_support_dict_columns": ["feature_column.feature_column.linear_model", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_raises_if_duplicate_name": ["feature_column.feature_column.linear_model", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_bias": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_sparse_bias": ["feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_bias": ["feature_column.feature_column_v2.numeric_column", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column": ["feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "feature_column_v2.FeatureColumn.__init__", "feature_column_v2.FeatureColumn.__init__", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._is_v2_column": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.name": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.parse_example_spec": ["ops.parsing_ops.VarLenFeature"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._parse_example_spec": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.transform_feature": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._transform_feature": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.variable_shape": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._variable_shape": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.get_dense_tensor": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._get_dense_tensor": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.num_buckets": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._num_buckets": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn.get_sparse_tensors": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_and_sparse_column._DenseAndSparseColumn._get_sparse_tensors": ["feature_column_v2.CategoricalColumn.IdWeightPair", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_multi_output": ["numpy.zeros", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose"], "numpy.zeros": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_sparse_multi_output": ["numpy.zeros", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_multi_dimension": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "test.TestCase.evaluate", "framework.ops.Graph", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_sparse_multi_rank": ["numpy.zeros", "feature_column.feature_column.linear_model", "ops.array_ops.sparse_placeholder", "ops.array_ops.sparse_placeholder", "test.TestCase.evaluate", "framework.ops.Graph", "test.TestCase.assertAllClose", "framework.sparse_tensor.SparseTensorValue", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "ops.array_ops.sparse_placeholder": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_sparse_combiner": ["feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_sparse_combiner_with_negative_weights": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.weighted_categorical_column", "feature_column.feature_column_v2.weighted_categorical_column", "feature_column.feature_column_v2.weighted_categorical_column", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.constant_op.constant", "framework.constant_op.constant", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2.weighted_categorical_column": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_multi_dimension_multi_output": ["numpy.zeros", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_raises_if_shape_mismatch": ["feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_reshaping": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_multi_column": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_fills_cols_to_vars": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.assertAllEqual"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_fills_cols_to_vars_partitioned_variables": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "ops.variable_scope.variable_scope", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "framework.ops.Graph", "ops.partitioned_variables.fixed_size_partitioner", "test.TestCase.evaluate", "test.TestCase.assertEqual", "ops.lookup_ops.tables_initializer"], "ops.partitioned_variables.fixed_size_partitioner": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_fills_cols_to_output_tensors": ["feature_column.feature_column_v2.embedding_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.assertCountEqual", "feature_column.feature_column_v2.bucketized_column", "feature_column.feature_column.input_layer", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2.embedding_column": [], "feature_column.feature_column.input_layer": [], "test.TestCase.assertCountEqual": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_collection": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.assertIn"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_sparse_collection": ["feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.assertIn", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_trainable_default": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.assertIn"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_sparse_trainable_default": ["feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.assertIn", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_dense_trainable_false": ["framework.ops.Graph", "test.TestCase.assertEqual", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_sparse_trainable_false": ["feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_column_order": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.assertIn", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_static_batch_size_mismatch": ["feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_subset_of_static_batch_size_mismatch": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "ops.array_ops.placeholder", "test.TestCase.assertRaisesRegex", "framework.ops.Graph"], "ops.array_ops.placeholder": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_runtime_batch_size_mismatch": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "ops.array_ops.placeholder", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "framework.ops.Graph"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_runtime_batch_size_matches": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "ops.array_ops.placeholder", "framework.ops.Graph", "framework.ops.Graph"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_with_1d_sparse_tensor": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertEqual", "feature_column.feature_column_v2.bucketized_column", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2.categorical_column_with_vocabulary_list": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_with_1d_unknown_shape_sparse_tensor": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column.linear_model", "ops.array_ops.sparse_placeholder", "ops.array_ops.sparse_placeholder", "ops.array_ops.placeholder", "ops.array_ops.placeholder", "framework.ops.Graph", "test.TestCase.assertAllClose", "framework.sparse_tensor.SparseTensorValue", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIsNone", "feature_column.feature_column_v2.bucketized_column"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_with_rank_0_feature": ["feature_column.feature_column_v2.numeric_column", "feature_column.feature_column.linear_model", "ops.array_ops.placeholder", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "test.TestCase.assertRaisesOpError", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertEqual"], "test.TestCase.assertRaisesOpError": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_multiple_linear_models": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.numeric_column", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_linear_model_v1_shared_embedding_all_other_v2": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.embedding_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.shared_embedding_columns", "feature_column.feature_column_v2.shared_embedding_columns", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2.categorical_column_with_identity": [], "feature_column.feature_column_v2.shared_embedding_columns": [], "feature_column.feature_column_v2_test.OldLinearModelTest.test_linear_model_v1_shared_embedding_with_v2_cat_all_other_v2": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.embedding_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.shared_embedding_columns", "feature_column.feature_column_v2.shared_embedding_columns", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_linear_model_v1_v2_mix": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.embedding_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.shared_embedding_columns", "feature_column.feature_column_v2.shared_embedding_columns", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.OldLinearModelTest.test_linear_model_v2_shared_embedding_all_other_v1": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.embedding_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column.linear_model", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "feature_column.feature_column_v2.shared_embedding_columns_v2", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2.shared_embedding_columns_v2": [], "feature_column.feature_column_v2_test.InputLayerTest": ["framework.test_util.run_in_graph_and_eager_modes"], "framework.test_util.run_in_graph_and_eager_modes": [], "feature_column.feature_column_v2_test.InputLayerTest.test_retrieving_input": ["test.TestCase.evaluate", "feature_column.feature_column_v2.numeric_column", "test.TestCase.assertAllClose", "feature_column.feature_column.InputLayer"], "feature_column.feature_column.InputLayer": [], "feature_column.feature_column_v2_test.InputLayerTest.test_reuses_variables": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertIs", "eager.context.eager_mode", "feature_column.feature_column_v2.embedding_column", "<builtin>.len", "test.TestCase.assertEqual", "feature_column.feature_column.InputLayer", "test.TestCase.assertAllEqual", "framework.sparse_tensor.SparseTensor"], "eager.context.eager_mode": [], "feature_column.feature_column_v2_test.InputLayerTest.test_reuses_variables._embedding_column_initializer": [], "<builtin>.len": [], "feature_column.feature_column_v2_test.InputLayerTest.test_feature_column_input_layer_gradient": ["feature_column.feature_column_v2.categorical_column_with_identity", "eager.context.eager_mode", "feature_column.feature_column_v2.embedding_column", "eager.backprop.implicit_grad", "eager.backprop.implicit_grad", "feature_column.feature_column.InputLayer", "test.TestCase.assertAllEqual", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.InputLayerTest.test_feature_column_input_layer_gradient._embedding_column_initializer": [], "feature_column.feature_column_v2_test.InputLayerTest.test_feature_column_input_layer_gradient.scale_matrix": [], "eager.backprop.implicit_grad": [], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_raises_if_empty_feature_columns": ["feature_column.feature_column.input_layer", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_should_be_dense_column": ["feature_column.feature_column.input_layer", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_does_not_support_dict_columns": ["feature_column.feature_column.input_layer", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_bare_column": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.evaluate", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_column_generator": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.evaluate", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_raises_if_duplicate_name": ["feature_column.feature_column.input_layer", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_one_column": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.evaluate", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_multi_dimension": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.evaluate", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_raises_if_shape_mismatch": ["feature_column.feature_column.input_layer", "framework.ops.Graph", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_reshaping": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.evaluate", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_multi_column": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.evaluate", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_fills_cols_to_vars": ["feature_column.feature_column_v2.embedding_column", "feature_column.feature_column_v2.numeric_column", "<builtin>.len", "test.TestCase.assertIsInstance", "framework.ops.Graph", "<builtin>.list", "test.TestCase.assertEqual", "test.TestCase.assertCountEqual", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.bucketized_column", "feature_column.feature_column.input_layer", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "test.TestCase.assertIsInstance": [], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_fills_cols_to_vars_shared_embedding": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.embedding_column", "feature_column.feature_column_v2.numeric_column", "<builtin>.len", "test.TestCase.assertIsInstance", "feature_column.feature_column_v2.shared_embedding_columns", "framework.ops.Graph", "<builtin>.list", "test.TestCase.assertEqual", "test.TestCase.assertCountEqual", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.bucketized_column", "feature_column.feature_column.input_layer", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_fills_cols_to_vars_partitioned_variables": ["feature_column.feature_column_v2.embedding_column", "feature_column.feature_column_v2.numeric_column", "<builtin>.len", "ops.variable_scope.variable_scope", "framework.ops.Graph", "ops.partitioned_variables.fixed_size_partitioner", "<builtin>.list", "test.TestCase.assertEqual", "test.TestCase.assertCountEqual", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.bucketized_column", "feature_column.feature_column.input_layer", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_column_order": ["feature_column.feature_column_v2.numeric_column", "test.TestCase.evaluate", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_fails_for_categorical_column": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "feature_column.feature_column.input_layer", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_static_batch_size_mismatch": ["feature_column.feature_column.input_layer", "framework.ops.Graph", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.numeric_column"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_subset_of_static_batch_size_mismatch": ["feature_column.feature_column_v2.numeric_column", "ops.array_ops.placeholder", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_runtime_batch_size_mismatch": ["feature_column.feature_column_v2.numeric_column", "ops.array_ops.placeholder", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "framework.ops.Graph", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_runtime_batch_size_matches": ["feature_column.feature_column_v2.numeric_column", "ops.array_ops.placeholder", "framework.ops.Graph", "framework.ops.Graph", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_multiple_layers_with_same_embedding_column": ["feature_column.feature_column_v2.embedding_column", "<builtin>.len", "framework.ops.get_collection", "framework.ops.Graph", "test.TestCase.assertEqual", "test.TestCase.assertCountEqual", "feature_column.feature_column.input_layer", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_with_1d_sparse_tensor": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2.embedding_column", "feature_column.feature_column_v2.numeric_column", "feature_column.feature_column_v2.indicator_column", "test.TestCase.evaluate", "eager.context.executing_eagerly", "framework.constant_op.constant", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual", "feature_column.feature_column.input_layer", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_with_1d_sparse_tensor._initializer": [], "feature_column.feature_column_v2.indicator_column": [], "eager.context.executing_eagerly": [], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_with_1d_unknown_shape_sparse_tensor": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.embedding_column", "feature_column.feature_column_v2.numeric_column", "ops.array_ops.sparse_placeholder", "feature_column.feature_column_v2.indicator_column", "ops.array_ops.placeholder", "framework.ops.Graph", "framework.sparse_tensor.SparseTensorValue", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertEqual", "test.TestCase.assertIsNone", "test.TestCase.assertAllEqual", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_with_1d_unknown_shape_sparse_tensor._initializer": [], "feature_column.feature_column_v2_test.FunctionalInputLayerTest.test_with_rank_0_feature": ["feature_column.feature_column_v2.numeric_column", "ops.array_ops.placeholder", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "test.TestCase.assertRaisesOpError", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertEqual", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn._is_v2_column": [], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn.name": [], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn.transform_feature": [], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn._transform_feature": [], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn.parse_example_spec": [], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest._TestFeatureColumn._parse_example_spec": [], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest.test_no_feature_columns": ["test.TestCase.assertDictEqual", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "test.TestCase.assertDictEqual": [], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest.test_invalid_type": ["feature_column_v2.FeatureColumn.__init__", "test.TestCase.assertRaisesRegex", "ops.parsing_ops.FixedLenFeature", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest.test_one_feature_column": ["feature_column_v2.FeatureColumn.__init__", "test.TestCase.assertDictEqual", "ops.parsing_ops.FixedLenFeature", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest.test_two_feature_columns": ["ops.parsing_ops.VarLenFeature", "feature_column_v2.FeatureColumn.__init__", "test.TestCase.assertDictEqual", "ops.parsing_ops.FixedLenFeature", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest.test_equal_keys_different_parse_spec": ["test.TestCase.assertRaisesRegex", "ops.parsing_ops.VarLenFeature", "feature_column_v2.FeatureColumn.__init__", "ops.parsing_ops.FixedLenFeature", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest.test_equal_keys_equal_parse_spec": ["feature_column_v2.FeatureColumn.__init__", "test.TestCase.assertDictEqual", "ops.parsing_ops.FixedLenFeature", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.MakeParseExampleSpecTest.test_multiple_features_dict": ["ops.parsing_ops.VarLenFeature", "feature_column_v2.FeatureColumn.__init__", "test.TestCase.assertDictEqual", "ops.parsing_ops.FixedLenFeature", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.setUp": ["platform.test.test_src_dir_path", "<builtin>.super"], "platform.test.test_src_dir_path": [], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_defaults": ["test.TestCase.assertTrue", "test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "ops.parsing_ops.VarLenFeature"], "feature_column.feature_column_v2.categorical_column_with_vocabulary_file": [], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_defaults_unicode": ["<builtin>.isinstance", "test.TestCase.evaluate", "ops.parsing_ops.VarLenFeature", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "<builtin>.isinstance": [], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_key_should_be_string": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_all_constructor_args": ["test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "ops.parsing_ops.VarLenFeature"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_deep_copy": ["ops.parsing_ops.VarLenFeature", "test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "copy.deepcopy"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_vocabulary_file_none": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_vocabulary_file_empty_string": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_vocabulary_file": ["test.TestCase.assertRaisesRegex", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_vocabulary_size": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_too_large_vocabulary_size": ["test.TestCase.assertRaisesRegex", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_num_oov_buckets": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_dtype": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_buckets_and_default_value": ["test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_input_dtype_int32": ["framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_invalid_input_dtype_string": ["framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_parse_example": ["numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "example.feature_pb2.BytesList", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIn", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "example.feature_pb2.Features", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors": ["numpy.array", "feature_column.feature_column_v2.make_parse_example_spec_v2", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_none_vocabulary_size": ["numpy.array", "ops.lookup_ops.tables_initializer", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_transform_feature": ["numpy.array", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2._transform_features_v2", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_dense_input": ["numpy.array", "ops.lookup_ops.tables_initializer", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "feature_column.feature_column_v2.FeatureTransformationCache", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_default_value_in_vocabulary": ["numpy.array", "ops.lookup_ops.tables_initializer", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_with_oov_buckets": ["numpy.array", "ops.lookup_ops.tables_initializer", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_small_vocabulary_size": ["numpy.array", "ops.lookup_ops.tables_initializer", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_int32": ["numpy.array", "ops.lookup_ops.tables_initializer", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_int32_dense_input": ["numpy.array", "ops.lookup_ops.tables_initializer", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "feature_column.feature_column_v2.FeatureTransformationCache", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_get_sparse_tensors_int32_with_oov_buckets": ["numpy.array", "ops.lookup_ops.tables_initializer", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_old_linear_model": ["feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyFileCategoricalColumnTest.test_serialization": ["feature_column_v2.VocabularyFileCategoricalColumn.from_config", "test.TestCase.assertEqual", "feature_column.feature_column_v2.categorical_column_with_vocabulary_file"], "feature_column_v2.VocabularyFileCategoricalColumn.from_config": [], "feature_column.feature_column_v2_test.VocabularyTfrecordGzipFileCategoricalColumnTest.setUp": ["platform.test.test_src_dir_path", "<builtin>.super"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_defaults_string": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "ops.parsing_ops.VarLenFeature"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_key_should_be_string": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_defaults_int": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertEqual", "ops.parsing_ops.VarLenFeature"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_all_constructor_args": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertEqual", "ops.parsing_ops.VarLenFeature"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_deep_copy": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "ops.parsing_ops.VarLenFeature", "test.TestCase.assertEqual", "copy.deepcopy"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_dtype": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_mapping_dtype": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_mismatched_int_dtype": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_mismatched_string_dtype": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_none_mapping": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_empty_mapping": ["<builtin>.tuple", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertRaisesRegex"], "<builtin>.tuple": [], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_duplicate_mapping": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_num_oov_buckets": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_buckets_and_default_value": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_input_dtype_int32": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_invalid_input_dtype_string": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_parse_example_string": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "example.feature_pb2.BytesList", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIn", "example.feature_pb2.Features", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_parse_example_int": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "example.feature_pb2.Int64List", "example.feature_pb2.Int64List", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIn", "example.feature_pb2.Features", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "example.feature_pb2.Int64List": [], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_transform_feature": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2._transform_features_v2", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "framework.sparse_tensor.SparseTensorValue", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_dense_input": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "feature_column.feature_column_v2.FeatureTransformationCache", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_default_value_in_vocabulary": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_with_oov_buckets": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_int32": ["numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_int32_dense_input": ["numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "feature_column.feature_column_v2.FeatureTransformationCache", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_get_sparse_tensors_int32_with_oov_buckets": ["numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_old_linear_model": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertEqual", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.VocabularyListCategoricalColumnTest.test_serialization": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column_v2.VocabularyListCategoricalColumn.from_config", "test.TestCase.assertEqual"], "feature_column_v2.VocabularyListCategoricalColumn.from_config": [], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_constructor": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "ops.parsing_ops.VarLenFeature"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_key_should_be_string": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_deep_copy": ["feature_column.feature_column_v2.categorical_column_with_identity", "ops.parsing_ops.VarLenFeature", "test.TestCase.assertEqual", "copy.deepcopy"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_invalid_num_buckets_zero": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_invalid_num_buckets_negative": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_invalid_default_value_too_small": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_invalid_default_value_too_big": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_invalid_input_dtype": ["feature_column.feature_column_v2.categorical_column_with_identity", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_parse_example": ["feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array", "example.feature_pb2.Int64List", "example.feature_pb2.Int64List", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIn", "example.feature_pb2.Features", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors": ["feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_transform_feature": ["feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2._transform_features_v2", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "framework.sparse_tensor.SparseTensorValue", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_dense_input": ["feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "feature_column.feature_column_v2.FeatureTransformationCache", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_small": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "ops.lookup_ops.tables_initializer", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_small._initializer": [], "feature_column.feature_column_v2_test._TestStateManager.__init__": [], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_inputs_too_small": ["ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest": ["framework.test_util.enable_control_flow_v2"], "framework.test_util.enable_control_flow_v2": [], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_inputs_too_small_v2": ["framework.test_util.enable_control_flow_v2"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_big": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertRaisesRegex", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "ops.lookup_ops.tables_initializer", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest._test_get_sparse_tensors_with_inputs_too_big._initializer": [], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_inputs_too_big": ["ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_inputs_too_big_v2": ["ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_default_value": ["feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_get_sparse_tensors_with_default_value_and_placeholder_inputs": ["feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "ops.array_ops.placeholder", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIsNone", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_old_linear_model": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertEqual", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IdentityCategoricalColumnTest.test_serialization": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column_v2.IdentityCategoricalColumn.from_config", "test.TestCase.assertEqual"], "feature_column_v2.IdentityCategoricalColumn.from_config": [], "feature_column.feature_column_v2_test.TransformFeaturesTest.transform_multi_column": ["feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.numeric_column", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertIn", "ops.lookup_ops.tables_initializer", "feature_column.feature_column_v2.bucketized_column", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.TransformFeaturesTest.test_column_order": ["framework.sparse_tensor.SparseTensor", "test.TestCase.assertEqual", "feature_column.feature_column_v2._transform_features_v2", "framework.ops.Graph"], "feature_column.feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn.__init__": ["<builtin>.super"], "feature_column.feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn._is_v2_column": [], "feature_column.feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn.name": [], "feature_column.feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn.transform_feature": [], "feature_column.feature_column_v2_test.TransformFeaturesTest.test_column_order._LoggerColumn.parse_example_spec": [], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_indicator_column": ["test.TestCase.assertFalse", "feature_column.feature_column._categorical_column_with_hash_bucket", "feature_column.feature_column_v2.indicator_column", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column._categorical_column_with_hash_bucket": [], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_not_categorical_input": ["feature_column.feature_column_v2.indicator_column", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_1D_shape_succeeds": ["feature_column.feature_column_v2.indicator_column", "test.TestCase.evaluate", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_2D_shape_succeeds": ["feature_column.feature_column_v2.indicator_column", "test.TestCase.evaluate", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_multi_hot": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.indicator_column", "test.TestCase.evaluate", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertAllEqual", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_multi_hot2": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.indicator_column", "test.TestCase.evaluate", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertAllEqual", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_deep_copy": ["test.TestCase.assertEqual", "feature_column.feature_column_v2.indicator_column", "feature_column.feature_column_v2.categorical_column_with_hash_bucket", "copy.deepcopy"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_parse_example": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2.indicator_column", "example.feature_pb2.BytesList", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIn", "example.feature_pb2.Features", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_transform": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2._transform_features_v2", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.indicator_column", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_transform_with_weighted_column": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.weighted_categorical_column", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.indicator_column", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_transform_with_missing_value_in_weighted_column": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.weighted_categorical_column", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.indicator_column", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_transform_with_missing_value_in_categorical_column": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2._transform_features_v2", "test.TestCase.assertAllEqual", "feature_column.feature_column_v2.indicator_column", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_old_linear_model": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.indicator_column", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_old_linear_model_old_categorical": ["feature_column.feature_column.linear_model", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.indicator_column", "feature_column.feature_column._categorical_column_with_identity", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column._categorical_column_with_identity": [], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_input_layer": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.indicator_column", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column.input_layer", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_input_layer_old_categorical": ["feature_column.feature_column_v2.indicator_column", "feature_column.feature_column._categorical_column_with_identity", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer", "feature_column.feature_column.input_layer", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.IndicatorColumnTest.test_serialization": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertIs", "test.TestCase.assertIsNot", "feature_column.serialization._column_name_with_class_name", "feature_column.feature_column_v2.indicator_column", "feature_column_v2.IndicatorColumn.from_config", "test.TestCase.assertEqual"], "feature_column_v2.IndicatorColumn.from_config": [], "feature_column.feature_column_v2_test._TestStateManager.create_variable": ["ops.variable_scope.get_variable"], "feature_column.feature_column_v2_test._TestStateManager.get_variable": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_defaults": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertIs", "feature_column.feature_column_v2.embedding_column", "ops.parsing_ops.VarLenFeature", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_is_v2_column": ["test.TestCase.assertFalse", "feature_column.feature_column_v2.embedding_column", "feature_column.feature_column._categorical_column_with_identity"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_all_constructor_args": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertIs", "test.TestCase.assertFalse", "feature_column.feature_column_v2.embedding_column", "ops.parsing_ops.VarLenFeature", "test.TestCase.assertEqual"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_all_constructor_args.<lambda1>": [], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_deep_copy": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertFalse", "feature_column.feature_column_v2.embedding_column", "ops.parsing_ops.VarLenFeature", "copy.deepcopy", "test.TestCase.assertEqual"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_deep_copy.<lambda1>": [], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_invalid_initializer": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertRaisesRegex"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_parse_example": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2.embedding_column", "example.feature_pb2.BytesList", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIn", "example.feature_pb2.Features", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_transform_feature": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.embedding_column", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "ops.lookup_ops.tables_initializer", "framework.sparse_tensor.SparseTensor"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor": ["feature_column.feature_column_v2.categorical_column_with_identity", "<builtin>.tuple", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertAllEqual", "framework.ops.get_collection", "ops.variables.global_variables_initializer", "eager.context.executing_eagerly", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertCountEqual", "ops.lookup_ops.tables_initializer", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_old_categorical": ["<builtin>.tuple", "feature_column.feature_column._LazyBuilder", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertAllEqual", "feature_column.feature_column._categorical_column_with_identity", "framework.ops.get_collection", "eager.context.executing_eagerly", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertCountEqual", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_old_categorical._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column._LazyBuilder": [], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_3d": ["feature_column.feature_column_v2.categorical_column_with_identity", "<builtin>.tuple", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertAllEqual", "framework.ops.get_collection", "ops.variables.global_variables_initializer", "eager.context.executing_eagerly", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertCountEqual", "ops.lookup_ops.tables_initializer", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_3d._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_placeholder_inputs": ["feature_column.feature_column_v2.categorical_column_with_identity", "<builtin>.tuple", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertAllEqual", "ops.array_ops.placeholder", "framework.ops.get_collection", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertCountEqual", "ops.lookup_ops.tables_initializer", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_placeholder_inputs._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_get_dense_tensor_restore_from_ckpt": ["feature_column.feature_column_v2.categorical_column_with_identity", "<builtin>.tuple", "feature_column.feature_column_v2.embedding_column", "platform.test.test_src_dir_path", "test.TestCase.assertAllEqual", "framework.ops.get_collection", "ops.variables.global_variables_initializer", "eager.context.executing_eagerly", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertCountEqual", "ops.lookup_ops.tables_initializer", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_input_layer": ["feature_column.feature_column_v2.categorical_column_with_identity", "<builtin>.tuple", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertAllEqual", "framework.ops.get_collection", "ops.variables.global_variables_initializer", "eager.context.executing_eagerly", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertCountEqual", "ops.lookup_ops.tables_initializer", "feature_column.feature_column.input_layer"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_input_layer._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_old_linear_model": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.embedding_column", "numpy.zeros", "feature_column.feature_column.linear_model", "framework.ops.get_collection", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertCountEqual", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_old_linear_model._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_old_linear_model_old_categorical": ["numpy.zeros", "feature_column.feature_column_v2.embedding_column", "feature_column.feature_column.linear_model", "feature_column.feature_column._categorical_column_with_identity", "framework.ops.Graph", "framework.ops.get_collection", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertAllClose", "test.TestCase.assertCountEqual", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_old_linear_model_old_categorical._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_serialization_with_default_initializer": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertIs", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertIsNot", "feature_column_v2.EmbeddingColumn.from_config", "feature_column.serialization._column_name_with_class_name", "test.TestCase.assertEqual"], "feature_column_v2.EmbeddingColumn.from_config": [], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_serialization_with_custom_initializer": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertIs", "feature_column.feature_column_v2.embedding_column", "test.TestCase.assertIsNot", "feature_column_v2.EmbeddingColumn.from_config", "feature_column.serialization._column_name_with_class_name", "test.TestCase.assertEqual"], "feature_column.feature_column_v2_test.EmbeddingColumnTest.test_serialization_with_custom_initializer._initializer": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_defaults": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertIs", "framework.ops.Graph", "ops.parsing_ops.VarLenFeature", "feature_column.feature_column_v2.shared_embedding_columns_v2", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_all_constructor_args": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertIs", "framework.ops.Graph", "ops.parsing_ops.VarLenFeature", "feature_column.feature_column_v2.shared_embedding_columns_v2", "test.TestCase.assertEqual"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_all_constructor_args.<lambda1>": [], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_deep_copy": ["feature_column.feature_column_v2.categorical_column_with_identity", "framework.ops.Graph", "copy.deepcopy", "ops.parsing_ops.VarLenFeature", "feature_column.feature_column_v2.shared_embedding_columns_v2", "test.TestCase.assertEqual"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_deep_copy.<lambda1>": [], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_invalid_initializer": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "feature_column.feature_column_v2.shared_embedding_columns_v2"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_incompatible_column_type": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "feature_column.feature_column_v2.shared_embedding_columns_v2", "feature_column.feature_column_v2.categorical_column_with_hash_bucket"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_weighted_categorical_column_ok": ["feature_column.feature_column_v2.categorical_column_with_identity", "framework.ops.Graph", "feature_column.feature_column_v2.weighted_categorical_column", "feature_column.feature_column_v2.shared_embedding_columns_v2"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_parse_example": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "example.feature_pb2.BytesList", "framework.ops.Graph", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "feature_column.feature_column_v2.shared_embedding_columns_v2", "example.feature_pb2.Feature", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIn", "example.feature_pb2.Features", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_transform_feature": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2._transform_features_v2", "ops.variables.global_variables_initializer", "framework.ops.Graph", "test.TestCase.evaluate", "feature_column.feature_column_v2.shared_embedding_columns_v2", "ops.lookup_ops.tables_initializer", "framework.sparse_tensor.SparseTensor"], "absl.testing.parameterized.named_parameters": [], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest": ["absl.testing.parameterized.named_parameters"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor": ["numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "<builtin>.tuple", "ops.variable_scope.variable_scope", "test.TestCase.assertAllEqual", "framework.ops.get_collection", "ops.partitioned_variables.fixed_size_partitioner", "framework.ops.Graph", "ops.variables.global_variables_initializer", "feature_column.feature_column_v2.shared_embedding_columns_v2", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.evaluate", "test.TestCase.assertIn", "test.TestCase.assertNotIn", "framework.ops.get_default_graph", "test.TestCase.assertCountEqual", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "framework.ops.get_default_graph": [], "test.TestCase.assertNotIn": [], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor_valid": ["numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "<builtin>.tuple", "test.TestCase.assertAllEqual", "framework.ops.get_collection", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "feature_column.feature_column_v2.shared_embedding_columns_v2", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertNotIn", "test.TestCase.assertIn", "framework.ops.get_default_graph", "test.TestCase.assertCountEqual", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor_valid._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor_placeholder_inputs": ["numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "ops.array_ops.placeholder", "framework.ops.Graph", "test.TestCase.assertNotIn", "feature_column.feature_column_v2.shared_embedding_columns_v2", "feature_column.feature_column_v2.FeatureTransformationCache", "feature_column.feature_column_v2.FeatureTransformationCache", "test.TestCase.assertIn", "framework.ops.get_default_graph"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_get_dense_tensor_placeholder_inputs._initializer": ["test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertIsNone"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_serialization": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertEqual", "framework.ops.Graph", "feature_column.feature_column_v2.shared_embedding_columns_v2"], "feature_column.feature_column_v2_test.SharedEmbeddingColumnTest.test_serialization._initializer": ["<builtin>.ValueError"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_defaults": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.weighted_categorical_column", "ops.parsing_ops.VarLenFeature", "test.TestCase.assertEqual", "test.TestCase.assertTrue"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_is_v2_column": ["test.TestCase.assertFalse", "feature_column.feature_column._categorical_column_with_identity", "feature_column.feature_column_v2.weighted_categorical_column"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_deep_copy": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2.weighted_categorical_column", "ops.parsing_ops.VarLenFeature", "copy.deepcopy", "test.TestCase.assertEqual"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_invalid_dtype_none": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.weighted_categorical_column"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_invalid_dtype_string": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.weighted_categorical_column"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_invalid_input_dtype": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.weighted_categorical_column", "test.TestCase.assertRaisesRegex", "framework.sparse_tensor.SparseTensorValue"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_column_name_collision": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertRaisesRegex", "feature_column.feature_column_v2.weighted_categorical_column"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_missing_weights": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.weighted_categorical_column", "test.TestCase.assertRaisesRegex", "framework.sparse_tensor.SparseTensorValue"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_parse_example": ["feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_vocabulary_list", "feature_column.feature_column_v2.weighted_categorical_column", "example.feature_pb2.FloatList", "example.feature_pb2.BytesList", "test.TestCase.evaluate", "ops.parsing_ops.parse_example", "example.feature_pb2.Feature", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertIn", "example.feature_pb2.Features", "example.example_pb2.Example", "feature_column.feature_column_v2.make_parse_example_spec_v2"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_transform_features": ["feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.weighted_categorical_column", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_transform_features_dense_input": ["feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.weighted_categorical_column", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_transform_features_dense_weights": ["feature_column.feature_column_v2.categorical_column_with_identity", "numpy.array", "feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column_v2._transform_features_v2", "feature_column.feature_column_v2.weighted_categorical_column", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_old_linear_model": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.weighted_categorical_column", "feature_column.feature_column_v2.weighted_categorical_column", "feature_column.feature_column_v2.weighted_categorical_column", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.sparse_tensor.SparseTensorValue", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_old_linear_model_mismatched_shape": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.weighted_categorical_column", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "framework.sparse_tensor.SparseTensorValue"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_old_linear_model_mismatched_dense_values": ["feature_column.feature_column_v2.categorical_column_with_identity", "protobuf.config_pb2.ConfigProto", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.weighted_categorical_column", "test.TestCase.assertRaisesRegex", "framework.ops.Graph", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "framework.sparse_tensor.SparseTensorValue"], "protobuf.config_pb2.ConfigProto": [], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_old_linear_model_mismatched_dense_shape": ["feature_column.feature_column_v2.categorical_column_with_identity", "feature_column.feature_column.linear_model", "feature_column.feature_column_v2.weighted_categorical_column", "feature_column.feature_column_v2.weighted_categorical_column", "feature_column.feature_column_v2.weighted_categorical_column", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.sparse_tensor.SparseTensorValue", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_old_linear_model_old_categorical": ["feature_column.feature_column.linear_model", "feature_column.feature_column_v2.weighted_categorical_column", "feature_column.feature_column_v2.weighted_categorical_column", "feature_column.feature_column._categorical_column_with_identity", "framework.ops.Graph", "framework.ops.Graph", "ops.variables.global_variables_initializer", "test.TestCase.evaluate", "framework.sparse_tensor.SparseTensorValue", "test.TestCase.assertAllClose", "ops.lookup_ops.tables_initializer"], "feature_column.feature_column_v2_test.WeightedCategoricalColumnTest.test_serialization": ["feature_column.feature_column_v2.categorical_column_with_identity", "test.TestCase.assertIs", "feature_column.feature_column_v2.weighted_categorical_column", "feature_column_v2.WeightedCategoricalColumn.from_config", "feature_column.serialization._column_name_with_class_name", "test.TestCase.assertEqual"], "feature_column_v2.WeightedCategoricalColumn.from_config": [], "platform.test.main": []}