{"ops.special_math_ops_test": ["platform.test.main"], "ops.special_math_ops_test.LBetaTest": ["framework.test_util.run_deprecated_v1", "framework.test_util.run_in_graph_and_eager_modes"], "framework.test_util.run_in_graph_and_eager_modes": [], "ops.special_math_ops_test.LBetaTest.test_one_dimensional_arg": ["test.TestCase.session", "test.TestCase.assertAllClose", "ops.special_math_ops.lbeta", "test.TestCase.evaluate", "ops.math_ops.exp", "test.TestCase.assertEqual"], "test.TestCase.session": [], "ops.special_math_ops.lbeta": [], "ops.math_ops.exp": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "test.TestCase.assertEqual": [], "framework.test_util.run_deprecated_v1": [], "ops.special_math_ops_test.LBetaTest.test_one_dimensional_arg_dynamic": ["test.TestCase.session", "test.TestCase.assertAllClose", "ops.array_ops.placeholder", "ops.special_math_ops.lbeta", "ops.math_ops.exp"], "ops.array_ops.placeholder": [], "ops.special_math_ops_test.LBetaTest.test_four_dimensional_arg_with_partial_shape_dynamic": ["numpy.ones", "test.TestCase.session", "test.TestCase.assertAllClose", "ops.array_ops.placeholder", "ops.special_math_ops.lbeta", "ops.math_ops.exp"], "numpy.ones": [], "ops.special_math_ops_test.LBetaTest.test_two_dimensional_arg": ["test.TestCase.session", "test.TestCase.assertAllClose", "ops.special_math_ops.lbeta", "test.TestCase.evaluate", "ops.math_ops.exp", "test.TestCase.assertEqual"], "ops.special_math_ops_test.LBetaTest.test_two_dimensional_arg_dynamic": ["test.TestCase.session", "test.TestCase.assertAllClose", "ops.array_ops.placeholder", "ops.special_math_ops.lbeta", "ops.math_ops.exp"], "ops.special_math_ops_test.LBetaTest.test_two_dimensional_proper_shape": ["test.TestCase.session", "test.TestCase.assertAllClose", "ops.array_ops.shape", "ops.special_math_ops.lbeta", "test.TestCase.evaluate", "ops.math_ops.exp", "framework.tensor_shape.TensorShape", "test.TestCase.assertEqual"], "ops.array_ops.shape": [], "framework.tensor_shape.TensorShape": [], "ops.special_math_ops_test.LBetaTest.test_complicated_shape": ["framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "test.TestCase.session", "ops.array_ops.shape", "numpy.random.rand", "ops.special_math_ops.lbeta", "test.TestCase.evaluate", "framework.tensor_shape.TensorShape", "test.TestCase.assertEqual"], "numpy.random.rand": [], "framework.ops.convert_to_tensor": [], "test.TestCase.assertAllEqual": [], "ops.special_math_ops_test.LBetaTest.test_length_1_last_dimension_results_in_one": ["test.TestCase.session", "test.TestCase.assertAllClose", "ops.special_math_ops.lbeta", "test.TestCase.evaluate", "ops.math_ops.exp", "test.TestCase.assertEqual"], "ops.special_math_ops_test.LBetaTest.test_empty_rank1_returns_negative_infinity": ["test.TestCase.assertAllEqual", "test.TestCase.session", "ops.special_math_ops.lbeta", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertEqual"], "framework.constant_op.constant": [], "ops.special_math_ops_test.LBetaTest.test_empty_rank2_with_zero_last_dim_returns_negative_infinity": ["test.TestCase.assertAllEqual", "test.TestCase.session", "ops.special_math_ops.lbeta", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertEqual"], "ops.special_math_ops_test.LBetaTest.test_empty_rank2_with_zero_batch_dim_returns_empty": ["test.TestCase.assertAllEqual", "test.TestCase.session", "ops.special_math_ops.lbeta", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertEqual"], "ops.special_math_ops_test.DawsnTest": ["framework.test_util.run_in_graph_and_eager_modes", "absl.testing.parameterized.parameters"], "ops.special_math_ops_test.DawsnTest.test_dawsn_boundary": ["test.TestCase.assertAllClose", "numpy.isnan", "test.TestCase.evaluate", "test.TestCase.assertTrue", "ops.special_math_ops.dawsn"], "ops.special_math_ops.dawsn": [], "numpy.isnan": [], "test.TestCase.assertTrue": [], "absl.testing.parameterized.parameters": [], "ops.special_math_ops_test.DawsnTest.test_dawsn_odd": ["numpy.random.uniform", "test.TestCase.assertAllClose", "<builtin>.int", "test.TestCase.evaluate", "ops.special_math_ops.dawsn"], "<builtin>.int": [], "numpy.random.uniform": [], "ops.special_math_ops_test.DawsnTest.test_dawsn_small": ["numpy.random.uniform", "platform.tf_logging.warn", "scipy.special.dawsn", "test.TestCase.assertAllClose", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate", "ops.special_math_ops.dawsn"], "scipy.special.dawsn": [], "<builtin>.str": [], "platform.tf_logging.warn": [], "ops.special_math_ops_test.DawsnTest.test_dawsn_larger": ["numpy.random.uniform", "platform.tf_logging.warn", "scipy.special.dawsn", "test.TestCase.assertAllClose", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate", "ops.special_math_ops.dawsn"], "ops.special_math_ops_test.DawsnTest.test_dawsn_gradient": ["numpy.random.uniform", "<builtin>.int", "test.TestCase.assertLess", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error"], "ops.gradient_checker_v2.compute_gradient": [], "ops.gradient_checker_v2.max_error": [], "test.TestCase.assertLess": [], "ops.special_math_ops_test.ExpintTest": ["framework.test_util.run_in_graph_and_eager_modes", "absl.testing.parameterized.parameters"], "ops.special_math_ops_test.ExpintTest.test_expint_boundary": ["numpy.random.uniform", "numpy.all", "test.TestCase.assertAllClose", "numpy.isnan", "<builtin>.int", "test.TestCase.evaluate", "ops.special_math_ops.expint", "test.TestCase.assertTrue"], "ops.special_math_ops.expint": [], "numpy.all": [], "ops.special_math_ops_test.ExpintTest.test_expint_small": ["numpy.random.uniform", "scipy.special.expi", "platform.tf_logging.warn", "test.TestCase.assertAllClose", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate", "ops.special_math_ops.expint"], "scipy.special.expi": [], "ops.special_math_ops_test.ExpintTest.test_expint_larger": ["numpy.random.uniform", "scipy.special.expi", "platform.tf_logging.warn", "test.TestCase.assertAllClose", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate", "ops.special_math_ops.expint"], "ops.special_math_ops_test.ExpintTest.test_expint_gradient": ["numpy.random.uniform", "<builtin>.int", "test.TestCase.assertLess", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error"], "ops.special_math_ops_test.FresnelCosTest": ["framework.test_util.run_in_graph_and_eager_modes", "absl.testing.parameterized.parameters"], "ops.special_math_ops_test.FresnelCosTest.test_fresnel_cos_boundary": ["test.TestCase.assertAllClose", "numpy.isnan", "test.TestCase.evaluate", "test.TestCase.assertTrue", "ops.special_math_ops.fresnel_cos"], "ops.special_math_ops.fresnel_cos": [], "ops.special_math_ops_test.FresnelCosTest.test_fresnel_cos_odd": ["numpy.random.uniform", "test.TestCase.assertAllClose", "<builtin>.int", "test.TestCase.evaluate", "ops.special_math_ops.fresnel_cos"], "ops.special_math_ops_test.FresnelCosTest.test_fresnel_cos_small": ["numpy.random.uniform", "platform.tf_logging.warn", "test.TestCase.assertAllClose", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate", "scipy.special.fresnel", "ops.special_math_ops.fresnel_cos"], "scipy.special.fresnel": [], "ops.special_math_ops_test.FresnelCosTest.test_fresnel_cos_larger": ["numpy.random.uniform", "platform.tf_logging.warn", "test.TestCase.assertAllClose", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate", "scipy.special.fresnel", "ops.special_math_ops.fresnel_cos"], "ops.special_math_ops_test.FresnelCosTest.test_fresnel_cos_gradient": ["numpy.random.uniform", "<builtin>.int", "test.TestCase.assertLess", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error"], "ops.special_math_ops_test.FresnelSinTest": ["framework.test_util.run_in_graph_and_eager_modes", "absl.testing.parameterized.parameters"], "ops.special_math_ops_test.FresnelSinTest.test_fresnel_sin_boundary": ["test.TestCase.assertAllClose", "numpy.isnan", "test.TestCase.evaluate", "test.TestCase.assertTrue", "ops.special_math_ops.fresnel_sin"], "ops.special_math_ops.fresnel_sin": [], "ops.special_math_ops_test.FresnelSinTest.test_fresnel_sin_odd": ["numpy.random.uniform", "test.TestCase.assertAllClose", "<builtin>.int", "test.TestCase.evaluate", "ops.special_math_ops.fresnel_sin"], "ops.special_math_ops_test.FresnelSinTest.test_fresnel_sin_small": ["numpy.random.uniform", "platform.tf_logging.warn", "test.TestCase.assertAllClose", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate", "scipy.special.fresnel", "ops.special_math_ops.fresnel_sin"], "ops.special_math_ops_test.FresnelSinTest.test_fresnel_sin_larger": ["numpy.random.uniform", "platform.tf_logging.warn", "test.TestCase.assertAllClose", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate", "scipy.special.fresnel", "ops.special_math_ops.fresnel_sin"], "ops.special_math_ops_test.FresnelSinTest.test_fresnel_sin_gradient": ["numpy.random.uniform", "<builtin>.int", "test.TestCase.assertLess", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error"], "ops.special_math_ops_test.SpenceTest": ["framework.test_util.run_in_graph_and_eager_modes", "absl.testing.parameterized.parameters"], "ops.special_math_ops_test.SpenceTest.test_spence_boundary": ["numpy.random.uniform", "numpy.all", "test.TestCase.assertAllClose", "numpy.isnan", "ops.special_math_ops.spence", "<builtin>.int", "test.TestCase.evaluate", "test.TestCase.assertTrue"], "ops.special_math_ops.spence": [], "ops.special_math_ops_test.SpenceTest.test_spence_small": ["numpy.random.uniform", "platform.tf_logging.warn", "scipy.special.spence", "test.TestCase.assertAllClose", "ops.special_math_ops.spence", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate"], "scipy.special.spence": [], "ops.special_math_ops_test.SpenceTest.test_spence_larger": ["numpy.random.uniform", "platform.tf_logging.warn", "scipy.special.spence", "test.TestCase.assertAllClose", "ops.special_math_ops.spence", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate"], "ops.special_math_ops_test.SpenceTest.test_spence_gradient": ["numpy.random.uniform", "<builtin>.int", "test.TestCase.assertLess", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error"], "ops.special_math_ops_test.SpenceTest.test_spence_gradient_at_one": ["ops.gradient_checker_v2.compute_gradient", "test.TestCase.assertAllClose"], "ops.special_math_ops_test.BesselTest": ["framework.test_util.run_in_graph_and_eager_modes", "absl.testing.parameterized.parameters"], "ops.special_math_ops_test.BesselTest.test_besseli_boundary": ["ops.special_math_ops.bessel_i0", "test.TestCase.assertAllClose", "ops.special_math_ops.bessel_i1", "ops.special_math_ops.bessel_i0e", "numpy.isnan", "ops.special_math_ops.bessel_i1e", "test.TestCase.evaluate", "test.TestCase.assertTrue"], "ops.special_math_ops.bessel_i0": [], "ops.special_math_ops.bessel_i0e": [], "ops.special_math_ops.bessel_i1": [], "ops.special_math_ops.bessel_i1e": [], "ops.special_math_ops_test.BesselTest.test_besselj_boundary": ["test.TestCase.assertAllClose", "ops.special_math_ops.bessel_j0", "numpy.isnan", "ops.special_math_ops.bessel_j1", "test.TestCase.evaluate", "test.TestCase.assertTrue"], "ops.special_math_ops.bessel_j0": [], "ops.special_math_ops.bessel_j1": [], "ops.special_math_ops_test.BesselTest.test_besselk_boundary": ["ops.special_math_ops.bessel_k1", "ops.special_math_ops.bessel_k0e", "numpy.isnan", "ops.special_math_ops.bessel_k0", "test.TestCase.evaluate", "test.TestCase.assertTrue", "ops.special_math_ops.bessel_k1e", "numpy.isinf"], "ops.special_math_ops.bessel_k0": [], "numpy.isinf": [], "ops.special_math_ops.bessel_k0e": [], "ops.special_math_ops.bessel_k1": [], "ops.special_math_ops.bessel_k1e": [], "ops.special_math_ops_test.BesselTest.test_i0j0_even": ["numpy.random.uniform", "ops.special_math_ops.bessel_i0", "test.TestCase.assertAllClose", "ops.special_math_ops.bessel_i0e", "ops.special_math_ops.bessel_j0", "<builtin>.int", "test.TestCase.evaluate"], "ops.special_math_ops_test.BesselTest.test_i1j1_odd": ["numpy.random.uniform", "test.TestCase.assertAllClose", "ops.special_math_ops.bessel_i1", "ops.special_math_ops.bessel_i1e", "<builtin>.int", "ops.special_math_ops.bessel_j1", "test.TestCase.evaluate"], "ops.special_math_ops_test.BesselTest.test_besseli_small": ["numpy.random.uniform", "platform.tf_logging.warn", "ops.special_math_ops.bessel_i0", "test.TestCase.assertAllClose", "ops.special_math_ops.bessel_i1", "ops.special_math_ops.bessel_i0e", "<builtin>.str", "ops.special_math_ops.bessel_i1e", "<builtin>.int", "test.TestCase.evaluate", "scipy.special.i0", "scipy.special.i1", "scipy.special.i1e", "scipy.special.i0e"], "scipy.special.i0": [], "scipy.special.i1": [], "scipy.special.i0e": [], "scipy.special.i1e": [], "ops.special_math_ops_test.BesselTest.test_besselj_small": ["numpy.random.uniform", "platform.tf_logging.warn", "test.TestCase.assertAllClose", "ops.special_math_ops.bessel_j0", "<builtin>.str", "ops.special_math_ops.bessel_j1", "<builtin>.int", "test.TestCase.evaluate", "scipy.special.j1", "scipy.special.j0"], "scipy.special.j0": [], "scipy.special.j1": [], "ops.special_math_ops_test.BesselTest.test_besselk_small": ["numpy.random.uniform", "platform.tf_logging.warn", "numpy.finfo", "ops.special_math_ops.bessel_k1", "test.TestCase.assertAllClose", "ops.special_math_ops.bessel_k0e", "<builtin>.str", "<builtin>.int", "ops.special_math_ops.bessel_k0", "test.TestCase.evaluate", "scipy.special.k0", "ops.special_math_ops.bessel_k1e", "scipy.special.k1", "scipy.special.k0e", "scipy.special.k1e"], "numpy.finfo": [], "scipy.special.k0": [], "scipy.special.k0e": [], "scipy.special.k1": [], "scipy.special.k1e": [], "ops.special_math_ops_test.BesselTest.test_bessely_small": ["numpy.random.uniform", "platform.tf_logging.warn", "numpy.finfo", "ops.special_math_ops.bessel_y0", "test.TestCase.assertAllClose", "scipy.special.y1", "scipy.special.y0", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate", "ops.special_math_ops.bessel_y1"], "scipy.special.y0": [], "ops.special_math_ops.bessel_y0": [], "scipy.special.y1": [], "ops.special_math_ops.bessel_y1": [], "ops.special_math_ops_test.BesselTest.test_besseli_larger": ["numpy.random.uniform", "platform.tf_logging.warn", "ops.special_math_ops.bessel_i0e", "test.TestCase.assertAllClose", "<builtin>.str", "ops.special_math_ops.bessel_i1e", "<builtin>.int", "test.TestCase.evaluate", "scipy.special.i1e", "scipy.special.i0e"], "ops.special_math_ops_test.BesselTest.test_besselj_larger": ["numpy.random.uniform", "platform.tf_logging.warn", "test.TestCase.assertAllClose", "ops.special_math_ops.bessel_j0", "<builtin>.str", "ops.special_math_ops.bessel_j1", "<builtin>.int", "test.TestCase.evaluate", "scipy.special.j1", "scipy.special.j0"], "ops.special_math_ops_test.BesselTest.test_besselk_larger": ["numpy.random.uniform", "platform.tf_logging.warn", "ops.special_math_ops.bessel_k1", "test.TestCase.assertAllClose", "ops.special_math_ops.bessel_k0e", "<builtin>.str", "<builtin>.int", "ops.special_math_ops.bessel_k0", "test.TestCase.evaluate", "scipy.special.k0", "ops.special_math_ops.bessel_k1e", "scipy.special.k1", "scipy.special.k0e", "scipy.special.k1e"], "ops.special_math_ops_test.BesselTest.test_bessely_larger": ["numpy.random.uniform", "platform.tf_logging.warn", "ops.special_math_ops.bessel_y0", "test.TestCase.assertAllClose", "scipy.special.y1", "scipy.special.y0", "<builtin>.str", "<builtin>.int", "test.TestCase.evaluate", "ops.special_math_ops.bessel_y1"], "ops.special_math_ops_test.BesselTest.test_besseli_gradient": ["numpy.random.uniform", "<builtin>.int", "test.TestCase.assertLess", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error"], "ops.special_math_ops_test.BesselTest.test_besselj_gradient": ["numpy.random.uniform", "<builtin>.int", "test.TestCase.assertLess", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error"], "ops.special_math_ops_test.BesselTest.test_besselk_gradient": ["numpy.random.uniform", "<builtin>.int", "test.TestCase.assertLess", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error"], "ops.special_math_ops_test.BesselTest.test_bessely_gradient": ["numpy.random.uniform", "<builtin>.int", "test.TestCase.assertLess", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error"], "ops.special_math_ops_test.EinsumTest._check": ["numpy.array", "numpy.random.RandomState", "test.TestCase.assertAllClose", "ops.special_math_ops.einsum", "test.TestCase.evaluate", "framework.constant_op.constant", "numpy.einsum"], "numpy.random.RandomState": [], "numpy.array": [], "numpy.einsum": [], "ops.special_math_ops.einsum": [], "ops.special_math_ops_test.EinsumTest.test_invalid_keyword_arguments": ["test.TestCase.assertRaises", "numpy.random.RandomState", "ops.special_math_ops.einsum", "ops.array_ops.placeholder_with_default"], "ops.array_ops.placeholder_with_default": [], "test.TestCase.assertRaises": [], "ops.special_math_ops_test.EinsumTest.test_unary": ["ops.array_ops.placeholder_with_default"], "ops.special_math_ops_test.EinsumTest.test_unary_ellipsis": ["ops.array_ops.placeholder_with_default"], "ops.special_math_ops_test.EinsumTest.test_binary_simple": ["ops.array_ops.placeholder_with_default"], "ops.special_math_ops_test.EinsumTest.test_reduced_indices": ["ops.array_ops.placeholder_with_default"], "ops.special_math_ops_test.EinsumTest.test_repeated_indices": ["ops.array_ops.placeholder_with_default"], "ops.special_math_ops_test.EinsumTest.test_binary_ellipsis": ["ops.array_ops.placeholder_with_default"], "ops.special_math_ops_test.EinsumTest.test_broadcasting": ["ops.array_ops.placeholder_with_default"], "ops.special_math_ops_test.EinsumTest.test_dtypes": ["ops.array_ops.placeholder_with_default"], "ops.special_math_ops_test.EinsumTest.test_multiple_inputs": ["ops.array_ops.placeholder_with_default"], "framework.test_util.disable_xla": [], "ops.special_math_ops_test.EinsumTest": ["framework.test_util.run_in_graph_and_eager_modes", "framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumTest.test_placeholder": ["framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumTest.test_placeholder.check": ["numpy.array", "numpy.random.RandomState", "ops.array_ops.placeholder_with_default", "test.TestCase.assertAllClose", "ops.special_math_ops.einsum", "test.TestCase.evaluate", "numpy.einsum"], "ops.special_math_ops_test.EinsumTest.test_numpy_input": ["numpy.random.RandomState", "test.TestCase.assertAllClose", "ops.special_math_ops.einsum", "test.TestCase.evaluate", "numpy.einsum"], "ops.special_math_ops_test.EinsumTest.test_long_cases": ["<builtin>.tuple", "<builtin>.dict", "test.TestCase.evaluate", "<builtin>.ord"], "<builtin>.ord": [], "<builtin>.dict": [], "<builtin>.tuple": [], "ops.special_math_ops_test.EinsumTest.test_opt_einsum_cached": ["test.TestCase.evaluate", "eager.context.executing_eagerly", "mock.patch.object", "special_math_ops._get_opt_einsum_contract_path.cache_clear", "test.TestCase.assertEqual"], "eager.context.executing_eagerly": [], "mock.patch.object": [], "special_math_ops._get_opt_einsum_contract_path.cache_clear": [], "ops.special_math_ops_test.EinsumTest.test_long_cases_with_repeated_labels": ["<builtin>.tuple", "<builtin>.dict", "test.TestCase.assertEqual", "<builtin>.ord"], "ops.special_math_ops_test.EinsumTest.test_invalid_equation": ["numpy.random.RandomState", "ops.array_ops.placeholder_with_default", "ops.special_math_ops.einsum", "test.TestCase.evaluate", "test.TestCase.assertRaises"], "ops.special_math_ops_test.EinsumTest.test_empty": ["test.TestCase.assertRaises"], "ops.special_math_ops_test.EinsumTest.test_empty.check": ["numpy.array", "numpy.random.RandomState", "test.TestCase.assertAllClose", "ops.special_math_ops.einsum", "test.TestCase.evaluate", "framework.constant_op.constant", "numpy.zeros"], "numpy.zeros": [], "ops.special_math_ops_test.EinsumGradTest._check_gradient": ["numpy.array", "numpy.random.RandomState", "test.TestCase.assertLess", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error"], "test.TestCase.cached_session": [], "ops.special_math_ops_test.EinsumGradTest._check_gradient.<lambda1>": ["ops.special_math_ops.einsum"], "ops.special_math_ops_test.EinsumGradTest": ["framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumGradTest.test_unary": ["framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumGradTest.test_unary_ellipsis": ["framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumGradTest.test_binary_simple": ["framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumGradTest.test_empty": ["framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumGradTest.test_reduced_indices": ["framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumGradTest.test_repeated_indices": ["framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumGradTest.test_empty_with_repeated_indices": ["framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumGradTest.test_broadcasting": ["framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumGradTest.test_long_cases": ["<builtin>.tuple", "<builtin>.dict", "<builtin>.ord", "framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumGradTest.test_long_cases_with_repeated_labels": ["<builtin>.tuple", "<builtin>.dict", "<builtin>.ord", "framework.test_util.disable_xla"], "ops.special_math_ops_test.EinsumBenchmark.benchmark_einsum": ["numpy.array", "framework.ops.device", "numpy.random.RandomState", "platform.benchmark.benchmark_config", "test.Benchmark.evaluate", "client.session.Session", "ops.special_math_ops.einsum", "framework.ops.Graph", "<builtin>.len", "test.Benchmark.run_op_benchmark", "ops.variables.Variable", "ops.variables.global_variables_initializer"], "framework.ops.Graph": [], "platform.benchmark.benchmark_config": [], "client.session.Session": [], "framework.ops.device": [], "<builtin>.len": [], "ops.variables.Variable": [], "ops.variables.global_variables_initializer": [], "test.Benchmark.evaluate": [], "test.Benchmark.run_op_benchmark": [], "platform.test.main": []}