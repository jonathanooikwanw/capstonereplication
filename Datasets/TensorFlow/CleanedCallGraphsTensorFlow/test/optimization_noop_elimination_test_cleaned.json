{"optimization.noop_elimination_test": ["platform.test.main"], "optimization.noop_elimination_test._test_combinations": ["functools.reduce"], "optimization.noop_elimination_test._test_combinations.make_range": ["dataset_ops.Dataset.range"], "dataset_ops.Dataset.range": [], "optimization.noop_elimination_test._test_combinations.fn_with_side_effect": ["ops.logging_ops.print_v2"], "ops.logging_ops.print_v2": [], "optimization.noop_elimination_test._test_combinations.apply_map_with_capture": ["framework.constant_op.constant"], "framework.constant_op.constant": [], "optimization.noop_elimination_test._test_combinations.apply_map_with_capture.<lambda1>": [], "optimization.noop_elimination_test._test_combinations.apply_map_with_multiple_components": [], "optimization.noop_elimination_test._test_combinations.apply_map_with_multiple_components.<lambda1>": [], "optimization.noop_elimination_test._test_combinations.apply_map_with_multiple_components.<lambda2>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda1>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda2>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda3>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda4>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda5>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda6>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda7>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda8>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda9>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda9>.<lambda1>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda10>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda10>.<lambda1>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda11>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda12>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda12>.<lambda1>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda13>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda13>.<lambda1>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda14>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda14>.<lambda1>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda15>": [], "optimization.noop_elimination_test._test_combinations.<list1>.<lambda16>": [], "optimization.noop_elimination_test._test_combinations.reduce_fn": ["framework.combinations.NamedObject", "framework.combinations.combine"], "framework.combinations.NamedObject": [], "framework.combinations.combine": [], "functools.reduce": [], "kernel_tests.test_base.default_test_combinations": [], "optimization.noop_elimination_test.NoopEliminationTest": ["framework.combinations.times", "framework.combinations.generate", "kernel_tests.test_base.default_test_combinations", "kernel_tests.test_base.default_test_combinations"], "framework.combinations.times": [], "framework.combinations.generate": [], "optimization.noop_elimination_test.NoopEliminationTest.testNoopElimination": ["ops.testing.assert_next", "test_base.DatasetTestBase.evaluate", "ops.options.Options", "test_base.DatasetTestBase.getNext"], "ops.testing.assert_next": [], "ops.options.Options": [], "test_base.DatasetTestBase.getNext": [], "test_base.DatasetTestBase.evaluate": [], "platform.test.main": []}