{"tests.binary_ops_test": ["platform.googletest.main"], "tests.binary_ops_test.BinaryOpsTest._testBinary": ["ops.array_ops.broadcast_to", "ops.math_ops.logical_and", "ops.gen_nn_ops.elu_grad", "ops.gen_math_ops.reciprocal_grad", "ops.math_ops.multiply", "tests.binary_ops_test.BinaryOpsTest.testSplit.splitvOp", "ops.array_ops.conjugate_transpose", "ops.math_ops.equal", "tests.binary_ops_test.BinaryOpsTest.ListsAreClose", "ops.gen_nn_ops.relu6_grad", "ops.array_ops.transpose", "ops.gen_nn_ops.softmax_cross_entropy_with_logits", "ops.array_ops.reshape", "tests.binary_ops_test.BinaryOpsTest.DISABLED_testSparseMatMul.SparseMatmulWrapperTT", "ops.math_ops.squared_difference", "tests.binary_ops_test.BinaryOpsTest.DISABLED_testSparseMatMul.SparseMatmulWrapperTF", "ops.array_ops.broadcast_dynamic_shape", "tests.binary_ops_test.BinaryOpsTest.testNextAfter.NextAfterEqualityTest", "ops.gen_nn_ops.softplus_grad", "ops.math_ops.not_equal", "ops.math_ops.div", "ops.array_ops.tile", "ops.gen_math_ops.xdivy", "ops.gen_nn_ops.relu_grad", "ops.gen_math_ops.floor_div", "ops.math_ops.minimum", "ops.array_ops.fill", "ops.math_ops.maximum", "ops.nn_ops.bias_add", "ops.array_ops.placeholder", "ops.gen_math_ops.sigmoid_grad", "ops.bitwise_ops.bitwise_or", "tests.binary_ops_test.BinaryOpsTest.testSymmetricMirrorPad.<lambda1>", "tests.binary_ops_test.BinaryOpsTest.testReflectMirrorPadGrad.<lambda1>", "ops.bitwise_ops.right_shift", "ops.gen_math_ops.xlogy", "ops.gen_math_ops.cross", "ops.bitwise_ops.left_shift", "tests.binary_ops_test.BinaryOpsTest.testReflectMirrorPad.<lambda1>", "ops.math_ops.subtract", "ops.gen_nn_ops.selu_grad", "ops.gen_nn_ops.leaky_relu_grad", "ops.gen_math_ops.rsqrt_grad", "xla_test.XLATestCase.assertAllCloseAccordingToType", "tests.binary_ops_test.BinaryOpsTest.testSymmetricMirrorPadGrad.<lambda1>", "xla_test.XLATestCase.test_scope", "ops.math_ops.sparse_matmul", "xla_test.XLATestCase.session", "ops.gen_nn_ops.sparse_softmax_cross_entropy_with_logits", "ops.bitwise_ops.bitwise_xor", "ops.gen_math_ops.div_no_nan", "ops.array_ops.expand_dims", "ops.gen_math_ops.sqrt_grad", "ops.gen_math_ops.real_div", "ops.math_ops.pow", "ops.math_ops.logical_or", "ops.gen_math_ops.xlog1py", "ops.gen_math_ops.truncate_mod", "ops.math_ops.atan2", "ops.gen_nn_ops.softsign_grad", "ops.math_ops.matmul", "ops.math_ops.nextafter", "framework.dtypes.as_dtype", "ops.gen_math_ops.floor_mod", "ops.bitwise_ops.bitwise_and", "tests.binary_ops_test.BinaryOpsTest.DISABLED_testSparseMatMul.SparseMatmulWrapperFT", "ops.array_ops.pad", "ops.gen_math_ops.tanh_grad", "ops.math_ops.add", "ops.gen_math_ops.truncate_div", "ops.math_ops.complex"], "xla_test.XLATestCase.session": [], "xla_test.XLATestCase.test_scope": [], "framework.dtypes.as_dtype": [], "ops.array_ops.placeholder": [], "ops.array_ops.broadcast_to": [], "ops.math_ops.logical_and": [], "ops.gen_math_ops.reciprocal_grad": [], "ops.gen_nn_ops.relu6_grad": [], "ops.array_ops.transpose": [], "tests.binary_ops_test.BinaryOpsTest.DISABLED_testSparseMatMul.SparseMatmulWrapperTT": ["ops.math_ops.sparse_matmul"], "ops.array_ops.broadcast_dynamic_shape": [], "ops.gen_nn_ops.softplus_grad": [], "ops.math_ops.not_equal": [], "ops.math_ops.div": [], "ops.gen_math_ops.floor_div": [], "ops.math_ops.minimum": [], "ops.array_ops.fill": [], "ops.gen_math_ops.sigmoid_grad": [], "ops.bitwise_ops.bitwise_or": [], "tests.binary_ops_test.BinaryOpsTest.testSymmetricMirrorPad.<lambda1>": ["ops.array_ops.pad"], "ops.bitwise_ops.right_shift": [], "ops.gen_math_ops.xlogy": [], "ops.gen_math_ops.cross": [], "ops.bitwise_ops.left_shift": [], "ops.gen_nn_ops.leaky_relu_grad": [], "ops.math_ops.sparse_matmul": [], "ops.array_ops.expand_dims": [], "ops.gen_math_ops.real_div": [], "ops.math_ops.pow": [], "ops.gen_nn_ops.softsign_grad": [], "ops.gen_math_ops.floor_mod": [], "ops.bitwise_ops.bitwise_and": [], "ops.array_ops.pad": [], "ops.math_ops.add": [], "ops.gen_nn_ops.elu_grad": [], "ops.math_ops.multiply": [], "tests.binary_ops_test.BinaryOpsTest.testSplit.splitvOp": ["ops.array_ops.split"], "ops.array_ops.conjugate_transpose": [], "ops.math_ops.equal": [], "ops.gen_nn_ops.softmax_cross_entropy_with_logits": [], "ops.array_ops.reshape": [], "ops.math_ops.squared_difference": [], "tests.binary_ops_test.BinaryOpsTest.DISABLED_testSparseMatMul.SparseMatmulWrapperTF": ["ops.math_ops.sparse_matmul"], "ops.array_ops.tile": [], "ops.gen_math_ops.xdivy": [], "ops.gen_nn_ops.relu_grad": [], "ops.math_ops.maximum": [], "ops.nn_ops.bias_add": [], "ops.gen_math_ops.tanh_grad": [], "tests.binary_ops_test.BinaryOpsTest.testReflectMirrorPadGrad.<lambda1>": ["ops.gen_array_ops.mirror_pad_grad"], "tests.binary_ops_test.BinaryOpsTest.testReflectMirrorPad.<lambda1>": ["ops.array_ops.pad"], "ops.math_ops.subtract": [], "ops.gen_nn_ops.selu_grad": [], "ops.gen_math_ops.rsqrt_grad": [], "tests.binary_ops_test.BinaryOpsTest.testSymmetricMirrorPadGrad.<lambda1>": ["ops.gen_array_ops.mirror_pad_grad"], "ops.gen_nn_ops.sparse_softmax_cross_entropy_with_logits": [], "ops.bitwise_ops.bitwise_xor": [], "ops.gen_math_ops.sqrt_grad": [], "ops.math_ops.logical_or": [], "ops.gen_math_ops.xlog1py": [], "ops.gen_math_ops.truncate_mod": [], "ops.math_ops.atan2": [], "ops.gen_math_ops.truncate_div": [], "ops.math_ops.matmul": [], "tests.binary_ops_test.BinaryOpsTest.DISABLED_testSparseMatMul.SparseMatmulWrapperFT": ["ops.math_ops.sparse_matmul"], "ops.math_ops.nextafter": [], "ops.gen_math_ops.div_no_nan": [], "ops.math_ops.complex": [], "xla_test.XLATestCase.assertAllCloseAccordingToType": [], "tests.binary_ops_test.BinaryOpsTest.ListsAreClose": ["xla_test.XLATestCase.assertAllCloseAccordingToType", "xla_test.XLATestCase.assertEqual", "<builtin>.len", "<builtin>.range"], "tests.binary_ops_test.BinaryOpsTest.testNextAfter.NextAfterEqualityTest": ["xla_test.XLATestCase.assertAllEqual"], "tests.binary_ops_test.BinaryOpsTest._testSymmetricBinary": ["tests.binary_ops_test.BinaryOpsTest._testBinary"], "<builtin>.len": [], "xla_test.XLATestCase.assertEqual": [], "<builtin>.range": [], "tests.binary_ops_test.BinaryOpsTest.testFloatOps": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.sqrt", "<builtin>.float"], "tests.binary_ops_test.BinaryOpsTest.testFloatOps.<lambda1>": ["ops.math_ops.approximate_equal"], "ops.math_ops.approximate_equal": [], "numpy.array": [], "<builtin>.float": [], "numpy.sqrt": [], "tests.binary_ops_test.BinaryOpsTest.testIntOps": ["numpy.iinfo", "numpy.log", "numpy.ceil", "numpy.left_shift", "tests.binary_ops_test.BinaryOpsTest._testBinary", "<builtin>.zip", "numpy.array", "numpy.right_shift", "numpy.sign", "tests.binary_ops_test.BinaryOpsTest._testSymmetricBinary"], "numpy.left_shift": [], "numpy.right_shift": [], "numpy.iinfo": [], "numpy.log": [], "numpy.ceil": [], "numpy.sign": [], "<builtin>.zip": [], "tests.binary_ops_test.BinaryOpsTest.testAdd": ["xla_test.XLATestCase.numeric_types", "numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "xla_test.XLATestCase.numeric_types": [], "tests.binary_ops_test.BinaryOpsTest.testMultiply": ["xla_test.XLATestCase.numeric_types", "numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "tests.binary_ops_test.BinaryOpsTest.testPow": ["xla_test.XLATestCase.float_types", "numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.zeros"], "xla_test.XLATestCase.float_types": [], "numpy.zeros": [], "tests.binary_ops_test.BinaryOpsTest.testNumericOps": ["xla_test.XLATestCase.numeric_types", "numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "tests.binary_ops_test.BinaryOpsTest.testNextAfter": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.nextafter"], "numpy.nextafter": [], "xla_test.XLATestCase.assertAllEqual": [], "tests.binary_ops_test.BinaryOpsTest.testComplexOps": ["numpy.zeros", "numpy.ones", "tests.binary_ops_test.BinaryOpsTest._testBinary", "xla_test.XLATestCase.complex_types", "numpy.power", "numpy.array"], "tests.binary_ops_test.BinaryOpsTest.testComplexOps.<lambda1>": ["ops.math_ops.approximate_equal"], "xla_test.XLATestCase.complex_types": [], "numpy.power": [], "numpy.ones": [], "tests.binary_ops_test.BinaryOpsTest.testComplexMath": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "xla_test.XLATestCase.complex_types"], "tests.binary_ops_test.BinaryOpsTest._testDivision": ["numpy.true_divide", "xla_test.XLATestCase.float_types", "numpy.iinfo", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.array", "xla_test.XLATestCase.signed_int_types", "numpy.arange"], "xla_test.XLATestCase.signed_int_types": [], "numpy.arange": [], "numpy.true_divide": [], "tests.binary_ops_test.BinaryOpsTest.testIntDivision": ["tests.binary_ops_test.BinaryOpsTest._testDivision"], "tests.binary_ops_test.BinaryOpsTest.testFloatDivision": ["tests.binary_ops_test.BinaryOpsTest._testDivision"], "tests.binary_ops_test.BinaryOpsTest._testRemainder": ["numpy.iinfo", "numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "tests.binary_ops_test.BinaryOpsTest.testIntRemainder": ["tests.binary_ops_test.BinaryOpsTest._testRemainder"], "tests.binary_ops_test.BinaryOpsTest.testFloatRemainder": ["tests.binary_ops_test.BinaryOpsTest._testRemainder"], "tests.binary_ops_test.BinaryOpsTest.testLogicalOps": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "tests.binary_ops_test.BinaryOpsTest.testComparisons": ["numpy.array", "numpy.float32", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.int64"], "numpy.float32": [], "tests.binary_ops_test.BinaryOpsTest.testComparisons.<list15>.<lambda1>": [], "tests.binary_ops_test.BinaryOpsTest.testComparisons.<list23>.<lambda1>": [], "tests.binary_ops_test.BinaryOpsTest.testComparisons.<list31>.<lambda1>": [], "numpy.int64": [], "tests.binary_ops_test.BinaryOpsTest.testComparisons.<list41>.<lambda1>": [], "tests.binary_ops_test.BinaryOpsTest.testS64Comparisons": ["numpy.array", "numpy.int64", "tests.binary_ops_test.BinaryOpsTest._testBinary", "<builtin>.zip"], "tests.binary_ops_test.BinaryOpsTest.testS64Comparisons.<list1>.<lambda1>": [], "tests.binary_ops_test.BinaryOpsTest.testS64Comparisons.<list1>.<lambda2>": [], "tests.binary_ops_test.BinaryOpsTest.testS64Comparisons.<list1>.<lambda3>": [], "tests.binary_ops_test.BinaryOpsTest.testS64Comparisons.<list1>.<lambda4>": [], "tests.binary_ops_test.BinaryOpsTest.testBroadcasting": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "tests.binary_ops_test.BinaryOpsTest.testFill": ["xla_test.XLATestCase.numeric_types", "numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "tests.binary_ops_test.BinaryOpsTest._testMatMul": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "tests.binary_ops_test.BinaryOpsTest.testMatMul": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "tests.binary_ops_test.BinaryOpsTest._testMatMul"], "tests.binary_ops_test.BinaryOpsTest.DISABLED_testSparseMatMul": ["tests.binary_ops_test.BinaryOpsTest._testMatMul"], "tests.binary_ops_test.BinaryOpsTest.testBatchMatMul": ["<builtin>.hasattr", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.array", "numpy.arange", "numpy.matmul", "platform.test.is_built_with_rocm"], "<builtin>.hasattr": [], "platform.test.is_built_with_rocm": [], "tests.binary_ops_test.BinaryOpsTest.testBatchMatMul.<lambda1>": ["ops.math_ops.matmul"], "numpy.matmul": [], "tests.binary_ops_test.BinaryOpsTest.testBatchMatMulMixedPrecision": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.tile"], "tests.binary_ops_test.BinaryOpsTest.testBatchMatMulMixedPrecision.<lambda1>": ["ops.math_ops.matmul"], "numpy.tile": [], "tests.binary_ops_test.BinaryOpsTest.testExpandDims": ["xla_test.XLATestCase.numeric_types", "numpy.array", "numpy.int32", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "numpy.int32": [], "tests.binary_ops_test.BinaryOpsTest.testBatchMatMulBroadcast": ["numpy.full", "numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.ones"], "tests.binary_ops_test.BinaryOpsTest.testBatchMatMulBroadcast.<lambda1>": ["ops.math_ops.matmul"], "tests.binary_ops_test.BinaryOpsTest.testBatchMatMulBroadcast.<lambda2>": ["ops.math_ops.matmul"], "tests.binary_ops_test.BinaryOpsTest.testBatchMatMulBroadcast.<lambda3>": ["ops.math_ops.matmul"], "numpy.full": [], "tests.binary_ops_test.BinaryOpsTest.testPad": ["itertools.product", "numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "itertools.product": [], "tests.binary_ops_test.BinaryOpsTest.testPad.<lambda1>": ["ops.array_ops.pad"], "tests.binary_ops_test.BinaryOpsTest.testSymmetricMirrorPad": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "tests.binary_ops_test.BinaryOpsTest.testReflectMirrorPad": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "tests.binary_ops_test.BinaryOpsTest.testSymmetricMirrorPadGrad": ["numpy.broadcast_to", "numpy.arange", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.array"], "ops.gen_array_ops.mirror_pad_grad": [], "numpy.broadcast_to": [], "tests.binary_ops_test.BinaryOpsTest.testReflectMirrorPadGrad": ["numpy.broadcast_to", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.reshape", "numpy.array", "numpy.arange"], "numpy.reshape": [], "tests.binary_ops_test.BinaryOpsTest.testReshape": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.zeros"], "tests.binary_ops_test.BinaryOpsTest.testSplit": ["numpy.int32", "numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "tests.binary_ops_test.BinaryOpsTest.testSplit.<lambda1>": ["ops.array_ops.split"], "ops.array_ops.split": [], "tests.binary_ops_test.BinaryOpsTest.testSplit.<lambda2>": ["ops.array_ops.split"], "tests.binary_ops_test.BinaryOpsTest.testTile": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.empty"], "numpy.empty": [], "tests.binary_ops_test.BinaryOpsTest.testTranspose": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.zeros"], "tests.binary_ops_test.BinaryOpsTest.testConjugateTranspose": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.zeros"], "tests.binary_ops_test.BinaryOpsTest.testCross": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.zeros"], "tests.binary_ops_test.BinaryOpsTest.testBroadcastArgs": ["numpy.array", "tests.binary_ops_test.BinaryOpsTest._testBinary"], "framework.test_util.disable_mlir_bridge": [], "tests.binary_ops_test.BinaryOpsTest": ["framework.test_util.disable_mlir_bridge"], "tests.binary_ops_test.BinaryOpsTest.testBroadcastArgsError": ["xla_test.XLATestCase.assertRaisesIncompatibleShapesError", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.array"], "xla_test.XLATestCase.assertRaisesIncompatibleShapesError": [], "tests.binary_ops_test.BinaryOpsTest.testBroadcastTo": ["numpy.zeros", "tests.binary_ops_test.BinaryOpsTest._testBinary", "numpy.random.randint", "numpy.array", "numpy.arange", "numpy.tile"], "numpy.random.randint": [], "platform.googletest.main": []}