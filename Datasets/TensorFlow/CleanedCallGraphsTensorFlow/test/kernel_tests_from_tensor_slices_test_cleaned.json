{"kernel_tests.from_tensor_slices_test": ["platform.test.main"], "kernel_tests.test_base.default_test_combinations": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest": ["framework.combinations.generate", "kernel_tests.test_base.default_test_combinations"], "framework.combinations.generate": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesEmptyComponent": ["dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertRaises"], "test_base.DatasetTestBase.assertRaises": [], "dataset_ops.Dataset.from_tensor_slices": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlices": ["numpy.array", "test_base.DatasetTestBase.assertAllEqual", "<builtin>.zip", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertRaises", "numpy.tile", "<builtin>.range", "ops.dataset_ops.get_legacy_output_shapes"], "numpy.array": [], "numpy.tile": [], "test_base.DatasetTestBase.getNext": [], "ops.dataset_ops.get_legacy_output_shapes": [], "test_base.DatasetTestBase.assertEqual": [], "<builtin>.range": [], "test_base.DatasetTestBase.evaluate": [], "<builtin>.zip": [], "test_base.DatasetTestBase.assertAllEqual": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesDataset": ["<builtin>.range", "<builtin>.list", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.from_tensor_slices"], "dataset_ops.Dataset.range": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesDataset.<lambda1>": [], "<builtin>.list": [], "test_base.DatasetTestBase.assertDatasetProduces": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesDatasetOfOrderedDict": ["test_base.DatasetTestBase.assertDatasetProduces", "collections.OrderedDict", "<builtin>.list", "dataset_ops.Dataset.range", "<builtin>.range", "dataset_ops.Dataset.from_tensor_slices"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesDatasetOfOrderedDict.<lambda1>": ["collections.OrderedDict"], "collections.OrderedDict": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesDatasetOfOrderedDict.<lambda2>": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesDatasetInFunction": ["dataset_ops.Dataset.from_tensors", "<builtin>.range", "<builtin>.list", "dataset_ops.Dataset.range", "test_base.DatasetTestBase.assertDatasetProduces"], "dataset_ops.Dataset.from_tensors": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesDatasetInFunction.<lambda1>": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesSparse": ["numpy.array", "framework.sparse_tensor.SparseTensorValue", "test_base.DatasetTestBase.assertEqual", "dataset_ops.Dataset.from_tensor_slices", "framework.tensor_shape.TensorShape", "test_base.DatasetTestBase.assertDatasetProduces", "ops.dataset_ops.get_legacy_output_shapes"], "framework.sparse_tensor.SparseTensorValue": [], "framework.tensor_shape.TensorShape": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesMixed": ["numpy.array", "framework.sparse_tensor.SparseTensorValue", "test_base.DatasetTestBase.assertValuesEqual", "<builtin>.zip", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.getNext", "ops.dataset_ops.get_legacy_output_shapes", "test_base.DatasetTestBase.assertRaises", "numpy.tile", "framework.sparse_tensor.is_sparse", "<builtin>.list", "framework.tensor_shape.TensorShape", "<builtin>.range", "dataset_ops.Dataset.from_tensor_slices"], "framework.sparse_tensor.is_sparse": [], "test_base.DatasetTestBase.assertValuesEqual": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesWithDict": ["ops.dataset_ops.get_legacy_output_types", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.getNext", "dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertRaises", "<builtin>.range", "ops.dataset_ops.get_legacy_output_shapes"], "ops.dataset_ops.get_legacy_output_types": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesRagged": ["test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.from_tensor_slices", "ragged.ragged_factory_ops.constant_value"], "ragged.ragged_factory_ops.constant_value": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesMixedRagged": ["numpy.array", "framework.sparse_tensor.SparseTensorValue", "test_base.DatasetTestBase.assertValuesEqual", "<builtin>.zip", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.getNext", "test_base.DatasetTestBase.assertRaises", "numpy.tile", "<builtin>.list", "<builtin>.range", "dataset_ops.Dataset.from_tensor_slices", "ragged.ragged_factory_ops.constant_value"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesTest.testFromTensorSlicesWithUintDtypes": ["numpy.array", "test_base.DatasetTestBase.assertDatasetProduces", "ops.dataset_ops.get_legacy_output_types", "test_base.DatasetTestBase.assertEqual", "<builtin>.tuple", "numpy.tile", "<builtin>.range", "dataset_ops.Dataset.from_tensor_slices"], "<builtin>.tuple": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesRandomAccessTest": ["framework.combinations.generate", "kernel_tests.test_base.default_test_combinations"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesRandomAccessTest.testInvalidIndex": ["test_base.DatasetTestBase.evaluate", "ops.random_access.at", "dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertRaises"], "ops.random_access.at": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesRandomAccessTest.testOneDimensionalArray": ["test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.evaluate", "<builtin>.len", "<builtin>.range", "dataset_ops.Dataset.from_tensor_slices", "ops.random_access.at"], "<builtin>.len": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesRandomAccessTest.testTwoDimensionalArray": ["test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.evaluate", "<builtin>.range", "dataset_ops.Dataset.from_tensor_slices", "ops.random_access.at"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesRandomAccessTest.testMultipleComponents": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertEqual", "dataset_ops.Dataset.from_tensor_slices", "ops.random_access.at"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesRandomAccessTest.testDictionary": ["test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertEqual", "dataset_ops.Dataset.from_tensor_slices", "ops.random_access.at"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesRandomAccessTest.testNumpy": ["numpy.array", "test_base.DatasetTestBase.assertAllEqual", "test_base.DatasetTestBase.evaluate", "<builtin>.tuple", "numpy.tile", "<builtin>.range", "dataset_ops.Dataset.from_tensor_slices", "ops.random_access.at"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesRandomAccessTest.testName": ["test_base.DatasetTestBase.assertDatasetProduces", "dataset_ops.Dataset.from_tensor_slices"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesCheckpointTest._build_tensor_slices_dataset": ["dataset_ops.Dataset.from_tensor_slices"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesCheckpointTest": ["framework.combinations.generate", "kernel_tests.test_base.default_test_combinations", "framework.combinations.times", "kernel_tests.checkpoint_test_base.default_test_combinations"], "kernel_tests.checkpoint_test_base.default_test_combinations": [], "framework.combinations.times": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesCheckpointTest.test": ["numpy.array", "numpy.tile"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesCheckpointTest.test.<lambda1>": ["kernel_tests.checkpoint_test_base.default_test_combinations"], "kernel_tests.from_tensor_slices_test.FromTensorSlicesCheckpointTest.testDict": [], "kernel_tests.from_tensor_slices_test.FromTensorSlicesCheckpointTest.testDict.<lambda1>": ["kernel_tests.checkpoint_test_base.default_test_combinations"], "platform.test.main": []}