{"layers.recurrent_test": ["platform.test.main", "collections.namedtuple"], "collections.namedtuple": [], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_non_layer": ["platform.test.main", "python.keras.Input", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "numpy.zeros"], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_non_layer.MinimalRNNCell.__init__": ["keras.backend.variable", "numpy.random.random"], "numpy.random.random": [], "keras.backend.variable": [], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_non_layer.MinimalRNNCell.call": ["keras.backend.dot"], "keras.backend.dot": [], "python.keras.Input": [], "keras.layers.RNN": [], "keras.models.Model": [], "keras.testing_utils.should_run_eagerly": [], "numpy.zeros": [], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_non_layer_multiple_states": ["python.keras.Input", "python.keras.Input", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertEqual", "numpy.zeros"], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_non_layer_multiple_states.MinimalRNNCell.__init__": ["keras.backend.variable", "numpy.random.random"], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_non_layer_multiple_states.MinimalRNNCell.call": ["keras.backend.dot"], "keras_parameterized.TestCase.assertEqual": [], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_layer": ["keras_parameterized.TestCase.assertAllClose", "python.keras.Input", "numpy.random.random", "layers.RNN.from_config", "utils.generic_utils.CustomObjectScope", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "keras.layers.RNN", "numpy.zeros"], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_layer.MinimalRNNCell.__init__": ["<builtin>.super"], "<builtin>.super": [], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_layer.MinimalRNNCell.build": ["layers.Layer.add_weight"], "layers.Layer.add_weight": [], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_layer.MinimalRNNCell.call": ["keras.backend.dot"], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_layer.MinimalRNNCell.get_config": ["<builtin>.list", "<builtin>.dict", "<builtin>.super"], "<builtin>.list": [], "<builtin>.dict": [], "utils.generic_utils.CustomObjectScope": [], "layers.RNN.from_config": [], "keras_parameterized.TestCase.assertAllClose": [], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_abstract_rnn_cell": ["python.keras.Input", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "numpy.zeros", "keras.layers.RNN"], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_abstract_rnn_cell.MinimalRNNCell.__init__": ["<builtin>.super"], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_abstract_rnn_cell.MinimalRNNCell.state_size": [], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_abstract_rnn_cell.MinimalRNNCell.build": ["layers.AbstractRNNCell.add_weight"], "layers.AbstractRNNCell.add_weight": [], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_abstract_rnn_cell.MinimalRNNCell.call": ["keras.backend.dot"], "layers.recurrent_test.RNNTest.test_minimal_rnn_cell_abstract_rnn_cell.MinimalRNNCell.output_size": [], "layers.recurrent_test.RNNTest.test_rnn_with_time_major": ["keras.layers.SimpleRNNCell", "keras.layers.Lambda", "<builtin>.range", "keras.layers.Masking", "python.keras.Input", "numpy.random.random", "keras.testing_utils.should_run_eagerly", "keras.layers.SimpleRNN", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertAllClose", "keras_parameterized.TestCase.assertEqual", "numpy.zeros"], "layers.recurrent_test.RNNTest.test_rnn_with_time_major.<lambda1>": ["ops.array_ops.transpose"], "ops.array_ops.transpose": [], "keras.layers.Lambda": [], "keras.layers.SimpleRNN": [], "layers.recurrent_test.RNNTest.test_rnn_with_time_major.<lambda2>": ["ops.array_ops.transpose"], "layers.recurrent_test.RNNTest.test_rnn_with_time_major.<lambda3>": ["ops.array_ops.transpose"], "keras.layers.SimpleRNNCell": [], "<builtin>.range": [], "layers.recurrent_test.RNNTest.test_rnn_with_time_major.<lambda4>": ["ops.array_ops.transpose"], "layers.recurrent_test.RNNTest.test_rnn_with_time_major.<lambda5>": ["ops.array_ops.transpose"], "keras.layers.Masking": [], "layers.recurrent_test.RNNTest.test_rnn_with_time_major.<lambda6>": ["ops.array_ops.transpose"], "layers.recurrent_test.RNNTest.test_rnn_with_time_major.<lambda7>": ["ops.array_ops.transpose"], "layers.recurrent_test.RNNTest.test_rnn_with_time_major.<lambda8>": ["ops.array_ops.transpose"], "layers.recurrent_test.RNNTest.test_rnn_cell_with_constants_layer": ["python.keras.Input", "python.keras.Input", "numpy.random.random", "layers.RNN.from_config", "utils.generic_utils.CustomObjectScope", "layers.recurrent.RNN", "recurrent.RNN.from_config", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertAllClose", "numpy.zeros", "layers.recurrent.GRUCell"], "layers.recurrent_test.RNNCellWithConstants.__init__": ["<builtin>.super"], "layers.recurrent.GRUCell": [], "layers.recurrent.RNN": [], "recurrent.RNN.from_config": [], "layers.recurrent_test.RNNTest.test_rnn_cell_with_non_keras_constants": ["ops.array_ops.zeros", "python.keras.Input", "python.keras.Input", "layers.recurrent.RNN", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "numpy.zeros", "layers.recurrent.GRUCell"], "ops.array_ops.zeros": [], "layers.recurrent_test.RNNTest.test_rnn_cell_with_constants_layer_passing_initial_state": ["python.keras.Input", "python.keras.Input", "numpy.random.random", "layers.RNN.from_config", "keras_parameterized.TestCase.assertRaises", "utils.generic_utils.CustomObjectScope", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertAllClose", "numpy.zeros"], "keras_parameterized.TestCase.assertRaises": [], "layers.recurrent_test.RNNTest.test_rnn_cell_with_non_keras_constants_and_initial_state": ["ops.array_ops.zeros", "python.keras.Input", "python.keras.Input", "layers.recurrent.RNN", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "numpy.zeros", "layers.recurrent.GRUCell"], "layers.recurrent_test.RNNTest.test_stacked_rnn_attributes": ["ops.state_ops.assign_add", "engine.base_layer_utils.call_context", "keras.layers.LSTMCell", "eager.context.executing_eagerly", "keras_parameterized.TestCase.skipTest", "python.keras.Input", "ops.math_ops.reduce_sum", "<builtin>.len", "keras.layers.RNN", "keras_parameterized.TestCase.assertEqual", "ops.array_ops.ones_like"], "eager.context.executing_eagerly": [], "keras_parameterized.TestCase.skipTest": [], "keras.layers.LSTMCell": [], "<builtin>.len": [], "ops.math_ops.reduce_sum": [], "ops.state_ops.assign_add": [], "ops.array_ops.ones_like": [], "engine.base_layer_utils.call_context": [], "layers.recurrent_test.RNNTest.test_rnn_dynamic_trainability": ["keras.layers.SimpleRNN", "keras_parameterized.TestCase.assertEqual", "<builtin>.len"], "absl.testing.parameterized.parameters": [], "layers.recurrent_test.RNNTest": ["absl.testing.parameterized.named_parameters", "absl.testing.parameterized.parameters", "keras.testing_utils.generate_combinations_with_testcase_name"], "layers.recurrent_test.RNNTest.test_rnn_cell_trainability": ["keras_parameterized.TestCase.assertFalse", "keras_parameterized.TestCase.assertTrue"], "keras_parameterized.TestCase.assertFalse": [], "keras_parameterized.TestCase.assertTrue": [], "layers.recurrent_test.RNNTest.test_state_reuse_with_dropout": ["keras.layers.SimpleRNN", "python.keras.Model", "python.keras.Input", "numpy.random.random"], "python.keras.Model": [], "layers.recurrent_test.RNNTest.test_builtin_and_custom_rnn_cell_serialization": ["python.keras.Input", "numpy.random.random", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertAllClose", "layers.RNN.from_config"], "layers.recurrent_test.RNNTest.test_builtin_and_custom_rnn_cell_serialization.CustomRNNCell.__init__": ["<builtin>.super"], "layers.recurrent_test.RNNTest.test_builtin_and_custom_rnn_cell_serialization.CustomRNNCell.build": ["layers.Layer.add_weight"], "layers.recurrent_test.RNNTest.test_builtin_and_custom_rnn_cell_serialization.CustomRNNCell.call": ["keras.backend.dot"], "layers.recurrent_test.RNNTest.test_builtin_and_custom_rnn_cell_serialization.CustomRNNCell.get_config": ["<builtin>.list", "<builtin>.dict", "<builtin>.super"], "keras.testing_utils.generate_combinations_with_testcase_name": [], "absl.testing.parameterized.named_parameters": [], "layers.recurrent_test.RNNTest.test_rnn_dropout": ["keras.testing_utils.should_run_eagerly", "keras.models.Model", "python.keras.Input", "numpy.random.random"], "layers.recurrent_test.RNNTest.test_stacked_rnn_dropout": ["python.keras.Input", "numpy.random.random", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN"], "layers.recurrent_test.RNNTest.test_dropout_mask_reuse": ["keras.layers.SimpleRNNCell", "keras.layers.RNN", "keras.layers.SimpleRNN", "keras.layers.SimpleRNN"], "layers.recurrent_test.RNNTest.test_dropout_mask_reuse.verify": ["eager.context.executing_eagerly", "keras_parameterized.TestCase.evaluate", "keras_parameterized.TestCase.assertNotAllClose", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "keras_parameterized.TestCase.assertAllClose"], "framework.constant_op.constant": [], "ops.variables.global_variables_initializer": [], "keras_parameterized.TestCase.evaluate": [], "keras_parameterized.TestCase.assertNotAllClose": [], "layers.recurrent_test.RNNTest.test_stacked_rnn_compute_output_shape": ["keras.layers.LSTMCell", "<builtin>.tuple", "keras.layers.StackedRNNCells", "keras.layers.RNN", "keras_parameterized.TestCase.assertEqual"], "<builtin>.tuple": [], "keras.layers.StackedRNNCells": [], "layers.recurrent_test.RNNTest.test_stacked_rnn_with_training_param": ["keras.layers.LSTMCell", "numpy.ones", "keras.layers.StackedRNNCells", "keras.layers.RNN", "keras.layers.RNN"], "layers.recurrent_test.RNNTest.test_stacked_rnn_with_training_param.CellWrapper.__init__": ["<builtin>.super"], "layers.recurrent_test.RNNTest.test_stacked_rnn_with_training_param.CellWrapper.state_size": [], "layers.recurrent_test.RNNTest.test_stacked_rnn_with_training_param.CellWrapper.output_size": [], "layers.recurrent_test.RNNTest.test_stacked_rnn_with_training_param.CellWrapper.build": ["keras.layers.RNN"], "layers.recurrent_test.RNNTest.test_stacked_rnn_with_training_param.CellWrapper.get_initial_state": ["keras.layers.RNN"], "layers.recurrent_test.RNNTest.test_stacked_rnn_with_training_param.CellWrapper.call": ["keras.layers.RNN"], "numpy.ones": [], "layers.recurrent_test.RNNTest.test_trackable_dependencies": ["numpy.random.random", "tracking.util.list_objects", "keras.testing_utils.should_run_eagerly", "keras_parameterized.TestCase.assertIn", "keras.layers.SimpleRNN", "keras.models.Sequential", "<builtin>.id"], "keras.models.Sequential": [], "<builtin>.id": [], "tracking.util.list_objects": [], "keras_parameterized.TestCase.assertIn": [], "layers.recurrent_test.RNNTest.test_high_dimension_RNN": ["eager.context.executing_eagerly", "python.keras.Input", "python.keras.Input", "<builtin>.len", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertEqual", "numpy.zeros"], "layers.recurrent_test.Minimal2DRNNCell.__init__": ["framework.tensor_shape.TensorShape", "<builtin>.super"], "layers.recurrent_test.RNNTest.test_high_dimension_RNN_with_init_state": ["keras_parameterized.TestCase.assertRaisesWithPredicateMatch", "python.keras.Input", "python.keras.Input", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertEqual", "numpy.zeros"], "keras_parameterized.TestCase.assertRaisesWithPredicateMatch": [], "layers.recurrent_test.RNNTest.test_inconsistent_output_state_size": ["keras_parameterized.TestCase.assertEqual", "eager.context.executing_eagerly", "python.keras.Input", "<builtin>.len", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertEqual", "numpy.zeros"], "layers.recurrent_test.PlusOneRNNCell.__init__": ["<builtin>.super"], "layers.recurrent_test.RNNTest.test_get_initial_state": ["keras.layers.SimpleRNNCell", "eager.context.executing_eagerly", "python.keras.Input", "numpy.random.random", "keras_parameterized.TestCase.assertRaisesRegex", "keras_parameterized.TestCase.assertEqual", "ops.array_ops.shape"], "keras_parameterized.TestCase.assertRaisesRegex": [], "ops.array_ops.shape": [], "layers.recurrent_test.RNNTest.test_nested_input_output": ["python.keras.Input", "<builtin>.len", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertEqual", "numpy.zeros"], "layers.recurrent_test.NestedCell.__init__": ["framework.tensor_shape.TensorShape", "<builtin>.super"], "layers.recurrent_test.RNNTest.test_nested_input_output_with_state": ["python.keras.Input", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertEqual", "numpy.zeros"], "layers.recurrent_test.RNNTest.test_nest_input_output_with_init_state": ["python.keras.Input", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertEqual", "numpy.zeros"], "layers.recurrent_test.RNNTest.test_peephole_lstm_cell": ["keras_parameterized.TestCase.assertAllClose", "keras_parameterized.TestCase.assertNotAllClose", "framework.random_seed.set_random_seed", "framework.random_seed.set_random_seed"], "layers.recurrent_test.RNNTest.test_peephole_lstm_cell._run_cell": ["keras.layers.LSTMCell", "eager.context.executing_eagerly", "keras_parameterized.TestCase.evaluate", "ops.array_ops.one_hot", "ops.variables.global_variables_initializer", "keras.layers.PeepholeLSTMCell", "legacy_rnn.rnn_cell_impl.LSTMCell"], "ops.array_ops.one_hot": [], "keras.layers.PeepholeLSTMCell": [], "legacy_rnn.rnn_cell_impl.LSTMCell": [], "framework.random_seed.set_random_seed": [], "layers.recurrent_test.RNNTest.test_masking_rnn_with_output_and_states": ["python.keras.Input", "keras.testing_utils.should_run_eagerly", "keras.testing_utils.should_run_eagerly", "numpy.array", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertAllClose", "keras.layers.Masking"], "layers.recurrent_test.RNNTest.test_masking_rnn_with_output_and_states.Cell.__init__": ["<builtin>.super"], "layers.recurrent_test.RNNTest.test_masking_rnn_with_output_and_states.Cell.build": [], "layers.recurrent_test.RNNTest.test_masking_rnn_with_output_and_states.Cell.call": [], "numpy.array": [], "layers.recurrent_test.RNNTest.test_zero_output_for_masking": ["keras.layers.SimpleRNNCell", "python.keras.Input", "keras.testing_utils.should_run_eagerly", "numpy.ones", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertAllClose", "keras.layers.Masking"], "layers.recurrent_test.RNNTest.test_unroll_single_step": ["keras.layers.SimpleRNNCell", "python.keras.Input", "keras.testing_utils.should_run_eagerly", "numpy.ones", "keras.models.Model", "keras.layers.RNN", "keras_parameterized.TestCase.assertEqual"], "layers.recurrent_test.RNNTest.test_unroll_zero_step": ["keras.layers.SimpleRNNCell", "keras.layers.RNN", "keras_parameterized.TestCase.assertRaisesRegex", "python.keras.Input"], "layers.recurrent_test.RNNTest.test_full_input_spec": ["keras.layers.Input", "keras.layers.LSTM", "keras_parameterized.TestCase.assertNotAllClose", "python.keras.Model", "keras_parameterized.TestCase.assertAllClose"], "keras.layers.Input": [], "keras.layers.LSTM": [], "layers.recurrent_test.RNNTest.test_reset_states": ["keras_parameterized.TestCase.assertRaisesRegex", "keras.layers.RNN", "keras.layers.SimpleRNN", "keras.layers.SimpleRNN"], "layers.recurrent_test.RNNTest.test_stateful_rnn_with_stacking": ["python.keras.Input", "python.keras.Model", "keras.testing_utils.should_run_eagerly", "numpy.ones", "util.nest.map_structure", "keras.layers.RNN", "numpy.zeros"], "layers.recurrent_test.RNNTest.test_stateful_rnn_with_stacking.<lambda1>": ["numpy.ones"], "util.nest.map_structure": [], "layers.recurrent_test.RNNTest.test_stateful_rnn_with_initial_state": ["numpy.full", "keras_parameterized.TestCase.assertNotAllClose", "keras_parameterized.TestCase.assertNotAllClose", "keras_parameterized.TestCase.assertAllClose"], "numpy.full": [], "layers.recurrent_test.RNNTest.test_stateful_rnn_with_initial_state.make_model": ["python.keras.Input", "python.keras.Model", "keras.testing_utils.should_run_eagerly", "numpy.ones", "keras.layers.GRU", "keras.backend.constant"], "keras.backend.constant": [], "keras.layers.GRU": [], "layers.recurrent_test.RNNTest.test_stateful_rnn_with_customized_get_initial_state": ["python.keras.Input", "python.keras.Model", "layers.AbstractRNNCell.__init__", "numpy.ones", "keras.layers.RNN", "keras_parameterized.TestCase.assertAllClose"], "layers.recurrent_test.RNNTest.test_stateful_rnn_with_customized_get_initial_state.TestCell.get_initial_state": ["numpy.ones"], "layers.recurrent_test.RNNTest.test_stateful_rnn_with_customized_get_initial_state.TestCell.call": [], "layers.AbstractRNNCell.__init__": [], "layers.recurrent_test.RNNTest.test_input_dim_length": ["keras.layers.SimpleRNN", "keras_parameterized.TestCase.assertEqual"], "layers.recurrent_test.RNNTest.test_state_spec_with_stack_cell": ["python.keras.Input", "keras.testing_utils.should_run_eagerly", "numpy.ones", "keras.models.Model", "keras.models.Model", "keras.layers.RNN", "numpy.zeros"], "layers.recurrent_test.RNNTest.test_state_spec_with_stack_cell.create_cell": [], "layers.recurrent_test.RNNTest.test_rnn_with_ragged_input": ["keras.backend.convert_inputs_if_ragged", "ragged.ragged_factory_ops.constant", "numpy.random.seed", "python.keras.Input", "ragged_tensor.RaggedTensor.from_tensor", "keras.backend.reverse", "keras.testing_utils.should_run_eagerly", "numpy.array", "keras.models.Model", "keras_parameterized.TestCase.assertRaisesRegex", "keras_parameterized.TestCase.assertAllClose", "keras.layers.Masking"], "ragged.ragged_factory_ops.constant": [], "numpy.random.seed": [], "keras.backend.convert_inputs_if_ragged": [], "ragged_tensor.RaggedTensor.from_tensor": [], "keras.backend.reverse": [], "layers.recurrent_test.RNNTest.test_stateless_rnn_cell": ["python.keras.Input", "python.keras.Input", "util.nest.map_structure", "keras.testing_utils.should_run_eagerly", "keras.models.Model", "keras.layers.RNN", "numpy.zeros"], "layers.recurrent_test.RNNTest.test_stateless_rnn_cell.StatelessCell.__init__": ["<builtin>.super"], "layers.recurrent_test.RNNTest.test_stateless_rnn_cell.StatelessCell.build": [], "layers.recurrent_test.RNNTest.test_stateless_rnn_cell.StatelessCell.call": [], "layers.recurrent_test.RNNTest.test_stateless_rnn_cell.<lambda1>": [], "layers.recurrent_test.RNNTest.test_for_enable_caching_device_for_layer": ["keras_parameterized.TestCase.assertNotIn", "keras_parameterized.TestCase.assertEqual", "framework.ops.executing_eagerly_outside_functions"], "framework.ops.executing_eagerly_outside_functions": [], "keras_parameterized.TestCase.assertNotIn": [], "layers.recurrent_test.RNNTest.test_for_enable_caching_device_for_cell": ["keras_parameterized.TestCase.assertNotIn", "keras_parameterized.TestCase.assertEqual", "framework.ops.executing_eagerly_outside_functions"], "layers.recurrent_test.RNNCellWithConstants.build": ["layers.Layer.add_weight"], "layers.recurrent_test.RNNCellWithConstants.call": ["keras.backend.dot"], "layers.recurrent_test.RNNCellWithConstants.get_config": ["<builtin>.list", "<builtin>.dict", "<builtin>.super"], "framework.tensor_shape.TensorShape": [], "layers.recurrent_test.Minimal2DRNNCell.build": ["layers.Layer.add_weight"], "layers.recurrent_test.Minimal2DRNNCell.call": ["ops.array_ops.expand_dims", "ops.special_math_ops.einsum"], "ops.special_math_ops.einsum": [], "ops.array_ops.expand_dims": [], "layers.recurrent_test.PlusOneRNNCell.build": [], "layers.recurrent_test.PlusOneRNNCell.call": [], "layers.recurrent_test.NestedCell.build": ["layers.Layer.add_weight"], "layers.recurrent_test.NestedCell.call": ["util.nest.flatten", "ops.special_math_ops.einsum", "ops.math_ops.matmul"], "util.nest.flatten": [], "ops.math_ops.matmul": [], "platform.test.main": []}