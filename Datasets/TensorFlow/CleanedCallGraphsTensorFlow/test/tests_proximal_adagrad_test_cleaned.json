{"tests.proximal_adagrad_test": ["platform.test.main"], "tests.proximal_adagrad_test.ProximalAdagradOptimizerTest.testResourceProximalAdagradwithoutRegularization": ["xla_test.XLATestCase.session", "ops.variables.global_variables_initializer", "framework.constant_op.constant", "xla_test.XLATestCase.evaluate", "<builtin>.range", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.assertStartsWith", "training.proximal_adagrad.ProximalAdagradOptimizer", "ops.resource_variable_ops.ResourceVariable", "<builtin>.len", "xla_test.XLATestCase.assertEqual", "xla_test.XLATestCase.assertAllClose", "numpy.array", "<builtin>.zip"], "xla_test.XLATestCase.session": [], "xla_test.XLATestCase.test_scope": [], "ops.resource_variable_ops.ResourceVariable": [], "framework.constant_op.constant": [], "training.proximal_adagrad.ProximalAdagradOptimizer": [], "<builtin>.zip": [], "ops.variables.global_variables_initializer": [], "xla_test.XLATestCase.evaluate": [], "xla_test.XLATestCase.assertAllClose": [], "<builtin>.range": [], "numpy.array": [], "xla_test.XLATestCase.assertStartsWith": [], "<builtin>.len": [], "xla_test.XLATestCase.assertEqual": [], "tests.proximal_adagrad_test.ProximalAdagradOptimizerTest.testProximalAdagradwithoutRegularization2": ["xla_test.XLATestCase.session", "ops.variables.global_variables_initializer", "framework.constant_op.constant", "xla_test.XLATestCase.evaluate", "<builtin>.range", "xla_test.XLATestCase.test_scope", "training.proximal_adagrad.ProximalAdagradOptimizer", "ops.resource_variable_ops.ResourceVariable", "xla_test.XLATestCase.assertAllClose", "numpy.array", "<builtin>.zip"], "tests.proximal_adagrad_test.ProximalAdagradOptimizerTest.testProximalAdagradWithL1": ["xla_test.XLATestCase.session", "ops.variables.global_variables_initializer", "framework.constant_op.constant", "xla_test.XLATestCase.evaluate", "<builtin>.range", "xla_test.XLATestCase.test_scope", "training.proximal_adagrad.ProximalAdagradOptimizer", "ops.resource_variable_ops.ResourceVariable", "xla_test.XLATestCase.assertAllClose", "numpy.array", "<builtin>.zip"], "tests.proximal_adagrad_test.ProximalAdagradOptimizerTest.testProximalAdagradWithL1_L2": ["xla_test.XLATestCase.session", "ops.variables.global_variables_initializer", "framework.constant_op.constant", "xla_test.XLATestCase.evaluate", "<builtin>.range", "xla_test.XLATestCase.test_scope", "training.proximal_adagrad.ProximalAdagradOptimizer", "ops.resource_variable_ops.ResourceVariable", "xla_test.XLATestCase.assertAllClose", "numpy.array", "<builtin>.zip"], "tests.proximal_adagrad_test.ProximalAdagradOptimizerTest.applyOptimizer": ["ops.variables.global_variables_initializer", "framework.constant_op.constant", "<builtin>.range", "<builtin>.zip", "ops.resource_variable_ops.ResourceVariable", "xla_test.XLATestCase.assertAllClose", "xla_test.XLATestCase.evaluate"], "tests.proximal_adagrad_test.ProximalAdagradOptimizerTest.testEquivAdagradwithoutRegularization": ["xla_test.XLATestCase.session", "training.adagrad.AdagradOptimizer", "tests.proximal_adagrad_test.ProximalAdagradOptimizerTest.applyOptimizer", "xla_test.XLATestCase.test_scope", "training.proximal_adagrad.ProximalAdagradOptimizer", "xla_test.XLATestCase.assertAllClose"], "training.adagrad.AdagradOptimizer": [], "platform.test.main": []}