{"ops.sparse_ops_test": ["platform.googletest.main"], "ops.sparse_ops_test.SparseOpsTest.testSparseEye": ["platform.googletest.main", "<builtin>.range"], "ops.sparse_ops_test.SparseOpsTest.testSparseEye.test_one": ["ops.sparse_ops.sparse_to_dense", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "numpy.eye", "ops.sparse_ops.sparse_eye"], "numpy.eye": [], "framework.constant_op.constant": [], "ops.sparse_ops.sparse_eye": [], "ops.sparse_ops.sparse_to_dense": [], "test_util.TensorFlowTestCase.evaluate": [], "test_util.TensorFlowTestCase.assertAllEqual": [], "<builtin>.range": [], "ops.sparse_ops_test.SparseOpsTest.testDenseFromConstantToSparse": ["ops.sparse_ops.from_dense", "ops.sparse_ops.sparse_to_dense", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.reshape", "framework.constant_op.constant", "numpy.arange", "test_util.TensorFlowTestCase.evaluate"], "numpy.arange": [], "numpy.reshape": [], "ops.sparse_ops.from_dense": [], "ops.sparse_ops_test.SparseOpsTest.testTransposePreservesShape": ["framework.ops.Graph", "test_util.TensorFlowTestCase.assertTrue", "test_util.TensorFlowTestCase.assertAllEqual", "framework.sparse_tensor.SparseTensor", "ops.sparse_ops.sparse_transpose"], "framework.ops.Graph": [], "framework.sparse_tensor.SparseTensor": [], "test_util.TensorFlowTestCase.assertTrue": [], "ops.sparse_ops.sparse_transpose": [], "ops.sparse_ops_test.SparseOpsTest.testSparseExpandDims": ["ops.sparse_ops.sparse_to_dense", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.expand_dims", "framework.sparse_tensor.SparseTensor", "numpy.array", "numpy.prod", "numpy.where", "ops.sparse_ops.sparse_expand_dims", "<builtin>.range", "framework.constant_op.constant", "numpy.arange", "test_util.TensorFlowTestCase.evaluate", "numpy.random.binomial"], "numpy.prod": [], "numpy.random.binomial": [], "numpy.where": [], "numpy.array": [], "numpy.expand_dims": [], "ops.sparse_ops.sparse_expand_dims": [], "absl.testing.parameterized.parameters": [], "ops.sparse_ops_test.SparseOpsTest": ["absl.testing.parameterized.parameters"], "ops.sparse_ops_test.SparseOpsTest.testUnarySparseDispatch": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.evaluate", "framework.sparse_tensor.SparseTensor"], "ops.sparse_ops_test.SparseOpsTest.testSparseToDenseGradient": ["ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.max_error", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertLess"], "ops.sparse_ops_test.SparseOpsTest.testSparseToDenseGradient.f": ["ops.sparse_ops.sparse_tensor_to_dense", "framework.sparse_tensor.SparseTensor"], "ops.sparse_ops.sparse_tensor_to_dense": [], "ops.gradient_checker_v2.compute_gradient": [], "ops.gradient_checker_v2.max_error": [], "test_util.TensorFlowTestCase.assertLess": [], "ops.sparse_ops_test.SparseOpsTest.testSparseTensorToDenseString": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.evaluate", "ops.sparse_ops.sparse_tensor_to_dense", "framework.sparse_tensor.SparseTensor"], "ops.sparse_ops_test.SparseOpsTest.testDenseSparseTensorMatMul": ["ops.sparse_ops.sparse_to_dense", "test_util.TensorFlowTestCase.assertAllEqual", "framework.sparse_tensor.SparseTensor", "ops.sparse_ops.sparse_tensor_dense_matmul", "numpy.random.rand", "numpy.random.seed", "ops.math_ops.matmul", "framework.constant_op.constant", "ops.array_ops.transpose"], "numpy.random.seed": [], "numpy.random.rand": [], "ops.sparse_ops.sparse_tensor_dense_matmul": [], "ops.math_ops.matmul": [], "ops.array_ops.transpose": [], "ops.sparse_ops_test.SparseOpsTest.testMapValues": ["ops.sparse_ops.from_dense", "framework.sparse_tensor.SparseTensor", "test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertRaises", "ops.sparse_ops.map_values", "test_util.TensorFlowTestCase.evaluate"], "test_util.TensorFlowTestCase.assertRaises": [], "ops.sparse_ops.map_values": [], "ops.sparse_ops_test.SparseOpsTest.testMapValues.assert_sparse_equal": ["test_util.TensorFlowTestCase.assertAllEqual"], "ops.sparse_ops_test.SparseOpsTest.testMapValues.mapping": ["test_util.TensorFlowTestCase.assertEqual"], "test_util.TensorFlowTestCase.assertEqual": [], "ops.sparse_ops_test.SparseOpsTest.testConstantStringToSparse": ["ops.sparse_ops.from_dense", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "<builtin>.list"], "<builtin>.list": [], "ops.sparse_ops_test.RawOpsTest.testSparseFillEmptyRowsGrad": ["test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.evaluate", "ops.gen_sparse_ops.SparseFillEmptyRowsGrad"], "ops.gen_sparse_ops.SparseFillEmptyRowsGrad": [], "ops.sparse_ops_test.RawOpsTest.testSparseFillEmptyRowsGradNegativeIndexMapValue": ["test_util.TensorFlowTestCase.assertRaisesRegex", "test_util.TensorFlowTestCase.evaluate", "ops.gen_sparse_ops.SparseFillEmptyRowsGrad"], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "ops.sparse_ops_test.RawOpsTest.testSparseFillEmptyRowsGradLargeIndexMapValue": ["test_util.TensorFlowTestCase.assertRaisesRegex", "test_util.TensorFlowTestCase.evaluate", "ops.gen_sparse_ops.SparseFillEmptyRowsGrad"], "ops.sparse_ops_test.RawOpsTest.testSparseFillEmptyRowsGradMatrix": ["eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertRaisesRegex", "test_util.TensorFlowTestCase.evaluate", "ops.gen_sparse_ops.SparseFillEmptyRowsGrad"], "eager.context.executing_eagerly": [], "ops.sparse_ops_test.RawOpsTest.testSparseConcatStaticShape": ["eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertEqual", "ops.array_ops.sparse_placeholder", "ops.sparse_ops.sparse_concat_v2", "test_util.TensorFlowTestCase.skipTest"], "test_util.TensorFlowTestCase.skipTest": [], "ops.array_ops.sparse_placeholder": [], "ops.sparse_ops.sparse_concat_v2": [], "platform.googletest.main": []}