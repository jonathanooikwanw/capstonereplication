{"saved_model.load_v1_in_v2_test": ["eager.test.main"], "saved_model.load_v1_in_v2_test.LoadTest._v1_single_metagraph_saved_model": ["ops.array_ops.placeholder", "framework.ops.Graph", "os.path.join", "saved_model.simple_save.simple_save", "ops.resource_variable_ops.ResourceVariable", "ops.variables.VariableV1", "framework.ops.uid", "ops.variables.RefVariable", "<builtin>.str", "test.TestCase.get_temp_dir", "ops.array_ops.identity", "client.session.Session"], "framework.ops.Graph": [], "ops.array_ops.placeholder": [], "ops.variables.RefVariable": [], "ops.resource_variable_ops.ResourceVariable": [], "ops.variables.VariableV1": [], "ops.array_ops.identity": [], "client.session.Session": [], "test.TestCase.get_temp_dir": [], "framework.ops.uid": [], "<builtin>.str": [], "os.path.join": [], "saved_model.simple_save.simple_save": [], "saved_model.load_v1_in_v2_test.LoadTest": ["framework.test_util.run_in_graph_and_eager_modes"], "framework.test_util.run_in_graph_and_eager_modes": [], "saved_model.load_v1_in_v2_test.LoadTest.test_resource_variable_import": ["framework.test_util.run_in_graph_and_eager_modes", "<builtin>.list", "saved_model.load.load", "test.TestCase.evaluate", "test.TestCase.assertAllEqual", "test.TestCase.assertFalse", "test.TestCase.assertTrue", "ops.variables.local_variables_initializer", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "eager.backprop.GradientTape"], "saved_model.load.load": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "ops.variables.local_variables_initializer": [], "framework.constant_op.constant": [], "test.TestCase.assertEqual": [], "test.TestCase.assertAllEqual": [], "test.TestCase.assertTrue": [], "test.TestCase.assertFalse": [], "eager.backprop.GradientTape": [], "<builtin>.list": [], "saved_model.load_v1_in_v2_test.LoadTest.test_ref_variable_import": ["framework.ops.get_collection", "framework.ops.get_collection", "ops.lookup_ops.tables_initializer", "saved_model.load.load", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertEqual"], "ops.lookup_ops.tables_initializer": [], "framework.ops.get_collection": [], "saved_model.load_v1_in_v2_test.LoadTest._v1_output_shape_saved_model": ["ops.array_ops.placeholder", "framework.ops.Graph", "os.path.join", "framework.ops.uid", "saved_model.builder_impl.SavedModelBuilder", "<builtin>.str", "test.TestCase.get_temp_dir", "ops.array_ops.identity", "client.session.Session"], "saved_model.builder_impl.SavedModelBuilder": [], "saved_model.load_v1_in_v2_test.LoadTest.test_restore_output_shapes": ["test.TestCase.assertEqual", "saved_model.load.load", "framework.tensor_shape.TensorShape", "framework.tensor_shape.TensorShape"], "framework.tensor_shape.TensorShape": [], "saved_model.load_v1_in_v2_test.LoadTest._v1_multi_metagraph_saved_model": ["ops.array_ops.placeholder", "framework.ops.Graph", "os.path.join", "ops.resource_variable_ops.ResourceVariable", "framework.ops.uid", "saved_model.builder_impl.SavedModelBuilder", "<builtin>.str", "test.TestCase.get_temp_dir", "ops.array_ops.identity", "client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest.test_multi_meta_graph_loading": ["client.session.Session", "saved_model.load.load", "test.TestCase.evaluate", "<builtin>.set", "test.TestCase.assertRaisesRegex", "framework.constant_op.constant", "test.TestCase.assertEqual"], "test.TestCase.assertRaisesRegex": [], "<builtin>.set": [], "saved_model.load_v1_in_v2_test.LoadTest._v1_asset_saved_model": ["ops.array_ops.placeholder", "ops.lookup_ops.TextFileInitializer", "framework.ops.Graph", "os.path.join", "<builtin>.open", "saved_model.simple_save.simple_save", "io.file_io.delete_file", "framework.ops.uid", "<builtin>.str", "test.TestCase.get_temp_dir", "ops.lookup_ops.HashTable", "client.session.Session"], "<builtin>.open": [], "ops.lookup_ops.TextFileInitializer": [], "ops.lookup_ops.HashTable": [], "io.file_io.delete_file": [], "saved_model.load_v1_in_v2_test.LoadTest.test_asset_loading": ["ops.lookup_ops.tables_initializer", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "saved_model.load.load", "test.TestCase.evaluate", "shutil.rmtree", "os.path.join", "framework.ops.uid", "framework.constant_op.constant", "framework.ops.get_collection_ref", "saved_model.save.save", "<builtin>.str", "test.TestCase.get_temp_dir"], "test.TestCase.assertAllClose": [], "saved_model.save.save": [], "shutil.rmtree": [], "framework.ops.get_collection_ref": [], "saved_model.load_v1_in_v2_test.LoadTest.test_node_name_sharing": ["ops.lookup_ops.tables_initializer", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "saved_model.load.load", "test.TestCase.evaluate", "framework.constant_op.constant"], "saved_model.load_v1_in_v2_test.LoadTest._v1_cond_saved_model": ["ops.control_flow_ops.cond", "ops.array_ops.placeholder", "framework.ops.Graph", "os.path.join", "saved_model.simple_save.simple_save", "framework.ops.uid", "<builtin>.str", "test.TestCase.get_temp_dir", "client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest._v1_cond_saved_model.<lambda1>": ["ops.array_ops.ones"], "ops.array_ops.ones": [], "saved_model.load_v1_in_v2_test.LoadTest._v1_cond_saved_model.<lambda2>": ["ops.array_ops.zeros"], "ops.array_ops.zeros": [], "ops.control_flow_ops.cond": [], "saved_model.load_v1_in_v2_test.LoadTest.test_cond": ["ops.array_ops.zeros", "saved_model.load.load", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "saved_model.load_v1_in_v2_test.LoadTest._v1_while_saved_model": ["ops.array_ops.placeholder", "ops.control_flow_ops.while_loop", "framework.ops.Graph", "os.path.join", "saved_model.simple_save.simple_save", "framework.ops.uid", "framework.constant_op.constant", "<builtin>.str", "test.TestCase.get_temp_dir", "client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest._v1_while_saved_model.<lambda1>": [], "saved_model.load_v1_in_v2_test.LoadTest._v1_while_saved_model.<lambda2>": [], "ops.control_flow_ops.while_loop": [], "saved_model.load_v1_in_v2_test.LoadTest.test_while": ["test.TestCase.assertAllClose", "saved_model.load.load", "framework.constant_op.constant", "framework.constant_op.constant"], "saved_model.load_v1_in_v2_test.LoadTest._v1_nested_while_saved_model": ["ops.array_ops.placeholder", "ops.control_flow_ops.while_loop", "framework.ops.Graph", "os.path.join", "saved_model.simple_save.simple_save", "framework.ops.uid", "framework.constant_op.constant", "<builtin>.str", "test.TestCase.get_temp_dir", "client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest._v1_nested_while_saved_model._inner_while": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "saved_model.load_v1_in_v2_test.LoadTest._v1_nested_while_saved_model._inner_while.<lambda1>": [], "saved_model.load_v1_in_v2_test.LoadTest._v1_nested_while_saved_model._inner_while.<lambda2>": [], "saved_model.load_v1_in_v2_test.LoadTest._v1_nested_while_saved_model.<lambda1>": [], "saved_model.load_v1_in_v2_test.LoadTest._v1_nested_while_saved_model.<lambda2>": ["framework.constant_op.constant"], "saved_model.load_v1_in_v2_test.LoadTest.test_nested_while": ["saved_model.load.load", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "saved_model.load_v1_in_v2_test.LoadTest._no_signatures_model": ["framework.ops.get_collection", "ops.array_ops.placeholder", "framework.ops.Graph", "os.path.join", "framework.ops.uid", "saved_model.builder_impl.SavedModelBuilder", "<builtin>.str", "test.TestCase.get_temp_dir", "ops.array_ops.identity", "client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest.test_no_signature": ["test.TestCase.assertEqual", "<builtin>.list", "test.TestCase.assertEqual", "saved_model.load.load"], "saved_model.load_v1_in_v2_test.LoadTest._signature_with_no_inputs": ["ops.array_ops.placeholder", "ops.random_ops.random_normal", "framework.ops.Graph", "os.path.join", "framework.ops.uid", "saved_model.builder_impl.SavedModelBuilder", "<builtin>.str", "test.TestCase.get_temp_dir", "client.session.Session"], "ops.random_ops.random_normal": [], "saved_model.load_v1_in_v2_test.LoadTest.test_signature_with_no_inputs": ["saved_model.load.load", "saved_model.load.load", "test.TestCase.assertEqual"], "saved_model.load_v1_in_v2_test.LoadTest.test_version_info": ["saved_model.load.load", "saved_model.load.load", "test.TestCase.assertEqual"], "saved_model.load_v1_in_v2_test.LoadTest._unfed_placeholder_signature": ["ops.array_ops.placeholder", "ops.random_ops.random_normal", "framework.ops.Graph", "os.path.join", "framework.ops.uid", "saved_model.builder_impl.SavedModelBuilder", "<builtin>.str", "test.TestCase.get_temp_dir", "client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest.test_unfed_placeholder_exception": ["client.session.Session", "test.TestCase.assertRaisesRegex", "saved_model.load.load"], "saved_model.load_v1_in_v2_test.LoadTest.test_custom_pruning": ["ops.array_ops.ones", "saved_model.load.load", "test.TestCase.evaluate", "test.TestCase.evaluate", "test.TestCase.assertEqual"], "saved_model.load_v1_in_v2_test.LoadTest._no_trainable_variable_attribute": ["framework.ops.Graph", "os.path.join", "framework.ops.uid", "saved_model.builder_impl.SavedModelBuilder", "<builtin>.str", "test.TestCase.get_temp_dir", "resource_variable_ops.ResourceVariable.__init__", "client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest._no_trainable_variable_attribute._MissingFieldsVariable.to_proto": ["framework.variable_pb2.VariableDef", "<builtin>.super"], "<builtin>.super": [], "framework.variable_pb2.VariableDef": [], "resource_variable_ops.ResourceVariable.__init__": [], "saved_model.load_v1_in_v2_test.LoadTest.test_trainable_not_set_in_proto": ["test.TestCase.assertTrue", "test.TestCase.assertTrue", "saved_model.load.load", "test.TestCase.assertFalse"], "saved_model.load_v1_in_v2_test.LoadTest._export_variable": ["framework.ops.Graph", "os.path.join", "ops.resource_variable_ops.ResourceVariable", "framework.ops.uid", "saved_model.builder_impl.SavedModelBuilder", "<builtin>.str", "test.TestCase.get_temp_dir", "client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest.test_trainable_in_proto": ["test.TestCase.assertTrue", "test.TestCase.assertTrue", "saved_model.load.load", "test.TestCase.assertFalse"], "saved_model.load_v1_in_v2_test.LoadTest._model_with_sparse_output": ["ops.array_ops.placeholder", "framework.ops.Graph", "framework.sparse_tensor.SparseTensor", "os.path.join", "saved_model.simple_save.simple_save", "framework.ops.uid", "<builtin>.str", "test.TestCase.get_temp_dir", "client.session.Session"], "framework.sparse_tensor.SparseTensor": [], "saved_model.load_v1_in_v2_test.LoadTest.test_load_sparse_outputs": ["test.TestCase.assertEqual", "saved_model.load.load", "framework.constant_op.constant", "framework.constant_op.constant"], "saved_model.load_v1_in_v2_test.LoadTest._model_with_sparse_input": ["framework.ops.Graph", "framework.sparse_tensor.SparseTensor", "os.path.join", "saved_model.simple_save.simple_save", "framework.ops.uid", "<builtin>.str", "test.TestCase.get_temp_dir", "ops.array_ops.sparse_placeholder", "client.session.Session"], "ops.array_ops.sparse_placeholder": [], "saved_model.load_v1_in_v2_test.LoadTest.test_load_sparse_inputs": ["saved_model.load.load", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertAllEqual"], "saved_model.load_v1_in_v2_test.LoadTest._model_with_ragged_input": ["framework.ops.Graph", "os.path.join", "saved_model.simple_save.simple_save", "framework.ops.uid", "ragged.ragged_factory_ops.placeholder", "<builtin>.str", "test.TestCase.get_temp_dir", "client.session.Session"], "ragged.ragged_factory_ops.placeholder": [], "saved_model.load_v1_in_v2_test.LoadTest.test_load_ragged_inputs": ["client.session.Session", "saved_model.load.load", "ragged.ragged_factory_ops.constant", "test.TestCase.assertAllEqual"], "ragged.ragged_factory_ops.constant": [], "saved_model.load_v1_in_v2_test.LoadTest._model_with_defun": ["ops.array_ops.placeholder", "ops.array_ops.placeholder", "framework.ops.Graph", "os.path.join", "saved_model.simple_save.simple_save", "framework.ops.uid", "<builtin>.str", "framework.function.Defun", "test.TestCase.get_temp_dir", "client.session.Session"], "framework.function.Defun": [], "saved_model.load_v1_in_v2_test.LoadTest._model_with_defun.z": [], "saved_model.load_v1_in_v2_test.LoadTest._model_with_defun.g": ["client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest._model_with_defun.f": ["client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest.test_load_defun": ["framework.constant_op.constant", "saved_model.load.load", "saved_model.load.load", "test.TestCase.assertEqual"], "saved_model.load_v1_in_v2_test.LoadTest.test_load_and_restore_partitioned_variables": ["ops.array_ops.placeholder", "test.TestCase.assertAllClose", "framework.ops.Graph", "saved_model.load.load", "test.TestCase.evaluate", "os.path.join", "ops.partitioned_variables.fixed_size_partitioner", "saved_model.simple_save.simple_save", "ops.variable_scope.get_variable", "ops.init_ops.constant_initializer", "framework.ops.uid", "ops.variables.global_variables_initializer", "training.saver.Saver", "<builtin>.str", "framework.constant_op.constant", "test.TestCase.get_temp_dir", "client.session.Session"], "ops.init_ops.constant_initializer": [], "ops.partitioned_variables.fixed_size_partitioner": [], "ops.variable_scope.get_variable": [], "training.saver.Saver": [], "saved_model.load_v1_in_v2_test.LoadTest.test_structured_input_signature": ["client.session.Session", "framework.tensor_spec.TensorSpec", "saved_model.load.load", "test.TestCase.assertAllEqual", "test.TestCase.assertEqual"], "framework.tensor_spec.TensorSpec": [], "saved_model.load_v1_in_v2_test.LoadTest._v1_multi_input_saved_model": ["ops.array_ops.placeholder", "framework.ops.Graph", "os.path.join", "ops.resource_variable_ops.ResourceVariable", "framework.ops.uid", "saved_model.builder_impl.SavedModelBuilder", "<builtin>.str", "test.TestCase.get_temp_dir", "ops.array_ops.identity", "client.session.Session"], "saved_model.load_v1_in_v2_test.LoadTest.test_v1_input_ordered": ["saved_model.load.load", "test.TestCase.assertEqual", "test.TestCase.assertEqual"], "eager.test.main": []}