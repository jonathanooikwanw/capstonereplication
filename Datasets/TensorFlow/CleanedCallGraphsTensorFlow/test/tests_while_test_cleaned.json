{"tests.while_test": ["os.environ.get", "platform.test.main"], "tests.while_test.WhileTest.testSingletonLoopHandrolled": ["framework.function.Defun", "xla_test.XLATestCase.session", "xla_test.XLATestCase.assertAllClose", "ops.array_ops.placeholder", "xla_test.XLATestCase.test_scope", "python.xla.while_loop"], "framework.function.Defun": [], "tests.while_test.WhileTest.testSingletonLoopHandrolled.loop_body": ["framework.constant_op.constant"], "framework.constant_op.constant": [], "tests.while_test.WhileTest.testSingletonLoopHandrolled.loop_cond": [], "xla_test.XLATestCase.session": [], "ops.array_ops.placeholder": [], "xla_test.XLATestCase.test_scope": [], "python.xla.while_loop": [], "xla_test.XLATestCase.assertAllClose": [], "tests.while_test.WhileTest.testCountingLoopHandrolled": ["framework.function.Defun", "xla_test.XLATestCase.session", "xla_test.XLATestCase.assertAllClose", "ops.array_ops.placeholder", "xla_test.XLATestCase.test_scope", "python.xla.while_loop"], "tests.while_test.WhileTest.testCountingLoopHandrolled.loop_body": ["framework.constant_op.constant"], "tests.while_test.WhileTest.testCountingLoopHandrolled.loop_cond": [], "tests.while_test.WhileTest.testCountingLoopHandrolledC64": ["framework.function.Defun", "xla_test.XLATestCase.session", "xla_test.XLATestCase.assertAllClose", "ops.array_ops.placeholder", "numpy.complex64", "xla_test.XLATestCase.test_scope", "python.xla.while_loop"], "tests.while_test.WhileTest.testCountingLoopHandrolledC64.loop_body": ["framework.constant_op.constant"], "tests.while_test.WhileTest.testCountingLoopHandrolledC64.loop_cond": [], "numpy.complex64": [], "tests.while_test.WhileTest.testLoopWithConstantOutput": ["framework.function.Defun", "xla_test.XLATestCase.session", "xla_test.XLATestCase.assertAllClose", "ops.array_ops.placeholder", "xla_test.XLATestCase.test_scope", "python.xla.while_loop"], "tests.while_test.WhileTest.testLoopWithConstantOutput.loop_body": ["framework.constant_op.constant"], "tests.while_test.WhileTest.testLoopWithConstantOutput.loop_cond": [], "tests.while_test.WhileTest._testMaxItersSimple": ["xla_test.XLATestCase.session", "ops.control_flow_ops.XLAControlFlowContext", "tests.while_test.is_compile_on_demand", "ops.gradients_impl.gradients", "xla_test.XLATestCase.skipTest", "ops.array_ops.placeholder", "xla_test.XLATestCase.test_scope", "framework.constant_op.constant", "tests.while_test.WhileTest._testMaxItersSimple.create_while_loop", "<builtin>.print"], "tests.while_test.is_compile_on_demand": [], "xla_test.XLATestCase.skipTest": [], "ops.control_flow_ops.XLAControlFlowContext": [], "tests.while_test.WhileTest._testMaxItersSimple.create_while_loop": ["ops.control_flow_ops.while_loop", "ops.array_ops.identity", "ops.array_ops.size"], "ops.array_ops.size": [], "tests.while_test.WhileTest._testMaxItersSimple.create_while_loop.<lambda1>": [], "tests.while_test.WhileTest._testMaxItersSimple.create_while_loop.<lambda2>": [], "ops.control_flow_ops.while_loop": [], "ops.array_ops.identity": [], "ops.gradients_impl.gradients": [], "<builtin>.print": [], "tests.while_test.WhileTest.testMaxItersSimple": ["xla_test.XLATestCase.skipTest"], "tests.while_test.WhileTest": ["framework.test_util.enable_control_flow_v2"], "framework.test_util.enable_control_flow_v2": [], "tests.while_test.WhileTest.testMaxItersSimpleV2": ["tests.while_test.WhileTest._testMaxItersSimple"], "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext": ["xla_test.XLATestCase.session", "ops.control_flow_ops.XLAControlFlowContext", "tests.while_test.is_compile_on_demand", "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext.create_while_loop", "xla_test.XLATestCase.skipTest", "ops.array_ops.placeholder", "xla_test.XLATestCase.test_scope", "framework.constant_op.constant"], "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext.mid_body_builder": [], "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext.mid_body_builder.mid_body": ["ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients"], "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext.mid_body_builder.mid_body.<lambda1>": [], "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext.mid_body_builder.mid_body.<lambda2>": [], "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext.outer_body": ["ops.control_flow_ops.while_loop", "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext.mid_body_builder", "ops.array_ops.size"], "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext.outer_body.<lambda1>": [], "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext.create_while_loop": ["ops.control_flow_ops.while_loop", "ops.array_ops.identity"], "tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext.create_while_loop.<lambda1>": [], "tests.while_test.WhileTest.testNestedWhileLoopWithMaxItersFromOuterContext": ["tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext"], "tests.while_test.WhileTest.testNestedWhileLoopWithMaxItersFromOuterContextV2": ["tests.while_test.WhileTest._testNestedWhileLoopWithMaxItersFromOuterContext"], "tests.while_test.WhileTest.testMap": ["xla_test.XLATestCase.session", "ops.control_flow_ops.XLAControlFlowContext", "tests.while_test.is_compile_on_demand", "xla_test.XLATestCase.skipTest", "xla_test.XLATestCase.test_scope", "framework.constant_op.constant", "ops.map_fn.map_fn", "numpy.array", "xla_test.XLATestCase.assertAllEqual"], "tests.while_test.WhileTest.testMap.<lambda1>": ["ops.math_ops.add", "ops.math_ops.multiply"], "ops.math_ops.add": [], "ops.math_ops.multiply": [], "ops.map_fn.map_fn": [], "numpy.array": [], "xla_test.XLATestCase.assertAllEqual": [], "tests.while_test.WhileTest.testMapBackPropFalse": ["xla_test.XLATestCase.session", "ops.control_flow_ops.XLAControlFlowContext", "tests.while_test.is_compile_on_demand", "xla_test.XLATestCase.skipTest", "xla_test.XLATestCase.test_scope", "framework.constant_op.constant", "ops.map_fn.map_fn", "numpy.array", "xla_test.XLATestCase.assertAllEqual"], "tests.while_test.WhileTest.testMapBackPropFalse.<lambda1>": ["ops.math_ops.add", "ops.math_ops.multiply"], "os.environ.get": [], "platform.test.main": []}