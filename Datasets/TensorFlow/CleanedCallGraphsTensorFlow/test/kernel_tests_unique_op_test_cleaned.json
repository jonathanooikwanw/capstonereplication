{"kernel_tests.unique_op_test": ["platform.test.main"], "kernel_tests.unique_op_test.UniqueTest.testInt32": ["numpy.unique", "numpy.random.randint", "ops.array_ops.unique", "test.TestCase.assertEqual", "test.TestCase.evaluate", "<builtin>.len", "<builtin>.range"], "numpy.random.randint": [], "ops.array_ops.unique": [], "test.TestCase.evaluate": [], "<builtin>.len": [], "test.TestCase.assertEqual": [], "numpy.unique": [], "<builtin>.range": [], "kernel_tests.unique_op_test.UniqueTest.testInt32OutIdxInt64": ["numpy.unique", "numpy.random.randint", "ops.array_ops.unique", "test.TestCase.assertEqual", "test.TestCase.evaluate", "<builtin>.len", "<builtin>.range"], "kernel_tests.unique_op_test.UniqueTest.testString": ["<builtin>.chr", "numpy.unique", "numpy.random.randint", "ops.array_ops.unique", "test.TestCase.assertEqual", "test.TestCase.evaluate", "<builtin>.len", "<builtin>.range"], "<builtin>.chr": [], "kernel_tests.unique_op_test.UniqueTest.testInt32Axis": ["ops.gen_array_ops.unique_v2", "numpy.array", "test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.evaluate", "test.TestCase.subTest"], "test.TestCase.subTest": [], "numpy.array": [], "ops.gen_array_ops.unique_v2": [], "test.TestCase.assertAllEqual": [], "kernel_tests.unique_op_test.UniqueTest.testInt32V2": ["ops.gen_array_ops.unique_v2", "numpy.array", "numpy.unique", "numpy.random.randint", "test.TestCase.assertEqual", "test.TestCase.evaluate", "<builtin>.len", "<builtin>.range"], "kernel_tests.unique_op_test.UniqueTest.testBool": ["numpy.unique", "ops.array_ops.unique", "test.TestCase.assertEqual", "test.TestCase.evaluate", "numpy.random.choice", "<builtin>.len", "<builtin>.range"], "numpy.random.choice": [], "kernel_tests.unique_op_test.UniqueTest.testBoolV2": ["ops.gen_array_ops.unique_v2", "numpy.array", "numpy.unique", "test.TestCase.assertEqual", "test.TestCase.evaluate", "numpy.random.choice", "<builtin>.len", "<builtin>.range"], "kernel_tests.unique_op_test.UniqueTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "kernel_tests.unique_op_test.UniqueTest.testShapeInferenceV2": ["ops.gen_array_ops.unique_v2", "numpy.arange", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "test.TestCase.assertRaisesRegexp"], "numpy.arange": [], "test.TestCase.assertRaisesRegexp": [], "ops.array_ops.placeholder": [], "kernel_tests.unique_op_test.UniqueTest.testEmpty": ["numpy.unique", "numpy.random.randint", "ops.array_ops.unique", "test.TestCase.assertEqual", "test.TestCase.evaluate", "<builtin>.len"], "kernel_tests.unique_op_test.UniqueTest.testOrderedByAppearance": ["test.TestCase.assertAllEqual", "ops.array_ops.unique", "test.TestCase.evaluate", "numpy.array"], "kernel_tests.unique_op_test.UniqueWithCountsTest.testInt32": ["numpy.unique", "numpy.random.randint", "<builtin>.zip", "test.TestCase.assertEqual", "numpy.sum", "test.TestCase.evaluate", "ops.array_ops.unique_with_counts", "<builtin>.len", "<builtin>.range"], "ops.array_ops.unique_with_counts": [], "<builtin>.zip": [], "numpy.sum": [], "kernel_tests.unique_op_test.UniqueWithCountsTest.testInt32OutIdxInt64": ["numpy.unique", "numpy.random.randint", "<builtin>.zip", "test.TestCase.assertEqual", "numpy.sum", "test.TestCase.evaluate", "ops.array_ops.unique_with_counts", "<builtin>.len", "<builtin>.range"], "kernel_tests.unique_op_test.UniqueWithCountsTest.testString": ["<builtin>.chr", "numpy.unique", "numpy.random.randint", "<builtin>.zip", "<builtin>.sum", "test.TestCase.assertEqual", "test.TestCase.evaluate", "ops.array_ops.unique_with_counts", "test.TestCase.subTest", "<builtin>.len", "<builtin>.range"], "<builtin>.sum": [], "kernel_tests.unique_op_test.UniqueWithCountsTest.testInt32Axis": ["numpy.array", "test.TestCase.assertAllEqual", "ops.gen_array_ops.unique_with_counts_v2", "test.TestCase.assertEqual", "test.TestCase.evaluate", "test.TestCase.subTest"], "ops.gen_array_ops.unique_with_counts_v2": [], "kernel_tests.unique_op_test.UniqueWithCountsTest.testInt32V2": ["numpy.array", "numpy.unique", "numpy.random.randint", "<builtin>.zip", "ops.gen_array_ops.unique_with_counts_v2", "test.TestCase.assertEqual", "numpy.sum", "test.TestCase.evaluate", "<builtin>.len", "<builtin>.range"], "kernel_tests.unique_op_test.UniqueWithCountsTest.testBool": ["numpy.unique", "<builtin>.zip", "test.TestCase.assertEqual", "numpy.sum", "test.TestCase.evaluate", "ops.array_ops.unique_with_counts", "numpy.random.choice", "<builtin>.len", "<builtin>.range"], "kernel_tests.unique_op_test.UniqueWithCountsTest.testBoolV2": ["numpy.array", "numpy.unique", "<builtin>.zip", "ops.gen_array_ops.unique_with_counts_v2", "test.TestCase.assertEqual", "numpy.sum", "test.TestCase.evaluate", "numpy.random.choice", "<builtin>.len", "<builtin>.range"], "kernel_tests.unique_op_test.UniqueWithCountsTest.testFloat": ["numpy.isnan", "numpy.array", "<builtin>.zip", "ops.gen_array_ops.unique_with_counts_v2", "test.TestCase.assertTrue", "test.TestCase.assertEqual", "numpy.sum", "test.TestCase.evaluate", "<builtin>.len", "<builtin>.range"], "numpy.isnan": [], "test.TestCase.assertTrue": [], "kernel_tests.unique_op_test.UniqueWithCountsTest.testEmpty": ["ops.array_ops.unique_with_counts", "numpy.random.randint", "test.TestCase.assertEqual", "test.TestCase.evaluate"], "kernel_tests.unique_op_test.UniqueWithCountsTest.testOrderedByAppearance": ["ops.array_ops.unique_with_counts", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "numpy.array"], "platform.test.main": []}