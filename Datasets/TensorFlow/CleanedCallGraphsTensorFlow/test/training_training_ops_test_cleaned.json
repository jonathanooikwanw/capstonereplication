{"training.training_ops_test": ["platform.googletest.main"], "training.training_ops_test.TrainingOpsTest._toType": [], "training.training_ops_test.TrainingOpsTest._testTypes": ["test_util.TensorFlowTestCase.evaluate", "ops.variables.VariableV1", "test_util.TensorFlowTestCase.assertShapeEqual", "test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "test_util.TensorFlowTestCase.setUp", "training.training_ops.apply_gradient_descent", "ops.variables.global_variables_initializer", "test_util.TensorFlowTestCase.session"], "test_util.TensorFlowTestCase.setUp": [], "test_util.TensorFlowTestCase.session": [], "ops.variables.VariableV1": [], "ops.variables.global_variables_initializer": [], "test_util.TensorFlowTestCase.evaluate": [], "test_util.TensorFlowTestCase.assertAllCloseAccordingToType": [], "training.training_ops.apply_gradient_descent": [], "test_util.TensorFlowTestCase.assertShapeEqual": [], "framework.test_util.run_v1_only": [], "training.training_ops_test.TrainingOpsTest": ["framework.test_util.run_v1_only"], "training.training_ops_test.TrainingOpsTest.testApplyGradientDescent": ["numpy.arange", "training.training_ops_test.TrainingOpsTest._testTypes", "itertools.product", "numpy.array"], "itertools.product": [], "numpy.arange": [], "numpy.array": [], "training.training_ops_test.TrainingOpsTest._testTypesForAdagrad": ["test_util.TensorFlowTestCase.evaluate", "ops.variables.VariableV1", "test_util.TensorFlowTestCase.assertShapeEqual", "test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "training.training_ops.apply_adagrad", "test_util.TensorFlowTestCase.setUp", "ops.variables.global_variables_initializer", "test_util.TensorFlowTestCase.session"], "training.training_ops.apply_adagrad": [], "training.training_ops_test.TrainingOpsTest._testTypesForFtrl": ["numpy.sign", "<builtin>.range", "numpy.array", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "ops.variables.VariableV1", "test_util.TensorFlowTestCase.assertShapeEqual", "training.training_ops.apply_ftrl", "test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "numpy.abs", "test_util.TensorFlowTestCase.setUp", "ops.variables.global_variables_initializer", "test_util.TensorFlowTestCase.session"], "training.training_ops.apply_ftrl": [], "numpy.abs": [], "numpy.sign": [], "<builtin>.range": [], "test_util.TensorFlowTestCase.assertAllClose": [], "training.training_ops_test.TrainingOpsTest._testTypesForFtrlMultiplyLinearByLr": ["numpy.sign", "<builtin>.range", "numpy.array", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "ops.variables.VariableV1", "test_util.TensorFlowTestCase.assertShapeEqual", "training.training_ops.apply_ftrl", "test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "numpy.abs", "test_util.TensorFlowTestCase.setUp", "ops.variables.global_variables_initializer", "test_util.TensorFlowTestCase.session"], "training.training_ops_test.TrainingOpsTest.testApplyAdagrad": ["numpy.arange", "training.training_ops_test.TrainingOpsTest._testTypesForAdagrad", "itertools.product", "numpy.array"], "training.training_ops_test.TrainingOpsTest.testApplyFtrl": ["training.training_ops_test.TrainingOpsTest._testTypesForFtrl", "numpy.arange", "numpy.array"], "training.training_ops_test.TrainingOpsTest.testApplyFtrlMultiplyLinearByLr": ["numpy.arange", "training.training_ops_test.TrainingOpsTest._testTypesForFtrlMultiplyLinearByLr", "numpy.array"], "training.training_ops_test.TrainingOpsTest._testTypesForSparseAdagrad": ["framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "training.training_ops.sparse_apply_adagrad", "ops.variables.VariableV1", "test_util.TensorFlowTestCase.assertShapeEqual", "<builtin>.enumerate", "test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "test_util.TensorFlowTestCase.setUp", "training.training_ops_test.TrainingOpsTest._toType", "ops.variables.global_variables_initializer", "test_util.TensorFlowTestCase.session"], "framework.constant_op.constant": [], "training.training_ops.sparse_apply_adagrad": [], "<builtin>.enumerate": [], "training.training_ops_test.TrainingOpsTest._testTypesForSparseFtrl": ["framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "training.training_ops.sparse_apply_ftrl", "ops.variables.VariableV1", "test_util.TensorFlowTestCase.assertShapeEqual", "<builtin>.enumerate", "test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "test_util.TensorFlowTestCase.setUp", "training.training_ops_test.TrainingOpsTest._toType", "ops.variables.global_variables_initializer", "test_util.TensorFlowTestCase.session"], "training.training_ops.sparse_apply_ftrl": [], "training.training_ops_test.TrainingOpsTest._testTypesForSparseFtrlMultiplyLinearByLr": ["framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "training.training_ops.sparse_apply_ftrl", "ops.variables.VariableV1", "test_util.TensorFlowTestCase.assertShapeEqual", "<builtin>.enumerate", "test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "test_util.TensorFlowTestCase.setUp", "training.training_ops_test.TrainingOpsTest._toType", "ops.variables.global_variables_initializer", "test_util.TensorFlowTestCase.session"], "training.training_ops_test.TrainingOpsTest.testSparseApplyAdagrad": ["numpy.array", "numpy.arange", "training.training_ops_test.TrainingOpsTest._testTypesForSparseAdagrad", "itertools.product", "numpy.zeros"], "numpy.zeros": [], "training.training_ops_test.TrainingOpsTest.testSparseApplyAdagradDim1": ["numpy.array", "training.training_ops_test.TrainingOpsTest._testTypesForSparseAdagrad", "itertools.product"], "training.training_ops_test.TrainingOpsTest.testSparseApplyFtrlDim1": ["numpy.array", "training.training_ops_test.TrainingOpsTest._testTypesForSparseFtrl", "numpy.zeros", "itertools.product"], "training.training_ops_test.TrainingOpsTest.testSparseApplyFtrlMultiplyLinearByLrDim1": ["numpy.array", "training.training_ops_test.TrainingOpsTest._testTypesForSparseFtrlMultiplyLinearByLr", "itertools.product"], "training.training_ops_test.TrainingOpsTest.testApplyAdam": ["numpy.arange", "training.training_ops_test.TrainingOpsTest._testTypesForAdam", "itertools.product"], "training.training_ops_test.TrainingOpsTest._testTypesForAdam": ["numpy.array", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "ops.variables.VariableV1", "test_util.TensorFlowTestCase.assertShapeEqual", "test_util.TensorFlowTestCase.assertAllCloseAccordingToType", "training.training_ops_test.TrainingOpsTest._adamUpdateNumpy", "training.training_ops.apply_adam", "test_util.TensorFlowTestCase.setUp", "training.training_ops_test.TrainingOpsTest._toType", "ops.variables.global_variables_initializer", "test_util.TensorFlowTestCase.session"], "training.training_ops_test.TrainingOpsTest._adamUpdateNumpy": ["numpy.sqrt"], "training.training_ops.apply_adam": [], "numpy.sqrt": [], "platform.googletest.main": []}