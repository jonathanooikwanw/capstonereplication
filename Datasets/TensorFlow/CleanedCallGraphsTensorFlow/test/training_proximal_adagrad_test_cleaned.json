{"training.proximal_adagrad_test": ["platform.test.main"], "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.doTestProximalAdagradwithoutRegularization": ["ops.variables.global_variables_initializer", "numpy.array", "test.TestCase.cached_session", "framework.ops.Graph", "training.proximal_adagrad.ProximalAdagradOptimizer", "<builtin>.zip", "framework.constant_op.constant", "ops.variables.Variable", "test.TestCase.assertEqual", "test.TestCase.assertAllClose", "<builtin>.range", "<builtin>.len", "test.TestCase.evaluate", "test.TestCase.assertStartsWith"], "framework.ops.Graph": [], "test.TestCase.cached_session": [], "ops.variables.Variable": [], "framework.constant_op.constant": [], "training.proximal_adagrad.ProximalAdagradOptimizer": [], "<builtin>.zip": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "<builtin>.range": [], "numpy.array": [], "test.TestCase.assertStartsWith": [], "<builtin>.len": [], "test.TestCase.assertEqual": [], "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.testProximalAdagradwithoutRegularization": ["training.proximal_adagrad_test.ProximalAdagradOptimizerTest.doTestProximalAdagradwithoutRegularization"], "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.testResourceProximalAdagradwithoutRegularization": ["training.proximal_adagrad_test.ProximalAdagradOptimizerTest.doTestProximalAdagradwithoutRegularization"], "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.testProximalAdagradwithoutRegularization2": ["ops.variables.global_variables_initializer", "numpy.array", "test.TestCase.cached_session", "framework.ops.Graph", "training.proximal_adagrad.ProximalAdagradOptimizer", "<builtin>.zip", "framework.constant_op.constant", "ops.variables.Variable", "test.TestCase.assertAllClose", "<builtin>.range", "test.TestCase.evaluate"], "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.testMinimizeSparseResourceVariable": ["ops.resource_variable_ops.ResourceVariable", "ops.embedding_ops.embedding_lookup", "ops.variables.global_variables_initializer", "test.TestCase.cached_session", "framework.ops.Graph", "training.proximal_adagrad.ProximalAdagradOptimizer", "framework.constant_op.constant", "ops.math_ops.matmul", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate"], "ops.resource_variable_ops.ResourceVariable": [], "ops.embedding_ops.embedding_lookup": [], "ops.math_ops.matmul": [], "test.TestCase.assertAllCloseAccordingToType": [], "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.testProximalAdagradWithL1": ["ops.variables.global_variables_initializer", "numpy.array", "test.TestCase.cached_session", "framework.ops.Graph", "training.proximal_adagrad.ProximalAdagradOptimizer", "<builtin>.zip", "framework.constant_op.constant", "ops.variables.Variable", "test.TestCase.assertAllClose", "<builtin>.range", "test.TestCase.evaluate"], "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.testProximalAdagradWithL1_L2": ["ops.variables.global_variables_initializer", "numpy.array", "test.TestCase.cached_session", "framework.ops.Graph", "training.proximal_adagrad.ProximalAdagradOptimizer", "<builtin>.zip", "framework.constant_op.constant", "ops.variables.Variable", "test.TestCase.assertAllClose", "<builtin>.range", "test.TestCase.evaluate"], "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.applyOptimizer": ["ops.variables.global_variables_initializer", "framework.ops.get_default_session", "<builtin>.zip", "framework.constant_op.constant", "ops.variables.Variable", "framework.ops.IndexedSlices", "test.TestCase.assertAllClose", "<builtin>.range", "test.TestCase.evaluate"], "framework.ops.IndexedSlices": [], "framework.ops.get_default_session": [], "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.testEquivAdagradwithoutRegularization": ["test.TestCase.cached_session", "framework.ops.Graph", "training.proximal_adagrad.ProximalAdagradOptimizer", "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.applyOptimizer", "training.adagrad.AdagradOptimizer", "test.TestCase.assertAllClose"], "training.adagrad.AdagradOptimizer": [], "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.testEquivSparseAdagradwithoutRegularization": ["test.TestCase.cached_session", "framework.ops.Graph", "training.proximal_adagrad.ProximalAdagradOptimizer", "training.proximal_adagrad_test.ProximalAdagradOptimizerTest.applyOptimizer", "training.adagrad.AdagradOptimizer", "test.TestCase.assertAllClose"], "platform.test.main": []}