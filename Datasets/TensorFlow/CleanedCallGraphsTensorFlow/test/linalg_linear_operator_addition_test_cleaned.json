{"linalg.linear_operator_addition_test": ["platform.test.main", "numpy.random.RandomState"], "numpy.random.RandomState": [], "linalg.linear_operator_addition_test._BadAdder.can_add": ["<builtin>.AssertionError"], "<builtin>.AssertionError": [], "linalg.linear_operator_addition_test._BadAdder._add": ["<builtin>.AssertionError"], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest.test_one_operator_is_returned_unchanged": ["test.TestCase.assertEqual", "linalg.linear_operator_addition.add_operators", "<builtin>.len", "test.TestCase.assertIs", "linalg.linalg.LinearOperatorDiag"], "linalg.linalg.LinearOperatorDiag": [], "linalg.linear_operator_addition.add_operators": [], "<builtin>.len": [], "test.TestCase.assertEqual": [], "test.TestCase.assertIs": [], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest.test_at_least_one_operators_required": ["linalg.linear_operator_addition.add_operators", "test.TestCase.assertRaisesRegex"], "test.TestCase.assertRaisesRegex": [], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest.test_attempting_to_add_numbers_raises": ["linalg.linear_operator_addition.add_operators", "test.TestCase.assertRaisesRegex"], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest.test_two_diag_operators": ["test.TestCase.assertEqual", "linalg.linear_operator_addition.add_operators", "<builtin>.len", "test.TestCase.cached_session", "test.TestCase.assertTrue", "test.TestCase.assertIsInstance", "linalg.linalg.LinearOperatorDiag", "test.TestCase.assertAllClose"], "test.TestCase.cached_session": [], "test.TestCase.assertIsInstance": [], "test.TestCase.assertAllClose": [], "test.TestCase.assertTrue": [], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest.test_three_diag_operators": ["test.TestCase.assertEqual", "linalg.linear_operator_addition.add_operators", "<builtin>.isinstance", "<builtin>.len", "test.TestCase.cached_session", "test.TestCase.assertTrue", "linalg.linalg.LinearOperatorDiag", "test.TestCase.assertAllClose"], "<builtin>.isinstance": [], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest.test_diag_tril_diag": ["test.TestCase.assertEqual", "linalg.linear_operator_addition.add_operators", "<builtin>.len", "test.TestCase.cached_session", "test.TestCase.assertTrue", "test.TestCase.assertIsInstance", "linalg.linalg.LinearOperatorDiag", "linalg.linalg.LinearOperatorLowerTriangular", "test.TestCase.assertAllClose"], "linalg.linalg.LinearOperatorLowerTriangular": [], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest.test_matrix_diag_tril_diag_uses_custom_name": ["test.TestCase.assertEqual", "linalg.linear_operator_addition.add_operators", "<builtin>.len", "test.TestCase.cached_session", "linalg.linalg.LinearOperatorFullMatrix", "test.TestCase.assertIsInstance", "linalg.linalg.LinearOperatorDiag", "linalg.linalg.LinearOperatorLowerTriangular", "test.TestCase.assertAllClose"], "linalg.linalg.LinearOperatorFullMatrix": [], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest.test_incompatible_domain_dimensions_raises": ["linalg.linalg.LinearOperatorDiag", "linalg.linear_operator_addition.add_operators", "test.TestCase.assertRaisesRegex", "linalg.linalg.LinearOperatorFullMatrix"], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest.test_incompatible_range_dimensions_raises": ["linalg.linalg.LinearOperatorDiag", "linalg.linear_operator_addition.add_operators", "test.TestCase.assertRaisesRegex", "linalg.linalg.LinearOperatorFullMatrix"], "linalg.linear_operator_addition_test.LinearOperatorAdditionCorrectnessTest.test_non_broadcastable_batch_shape_raises": ["linalg.linalg.LinearOperatorDiag", "linalg.linear_operator_addition.add_operators", "test.TestCase.assertRaisesRegex", "linalg.linalg.LinearOperatorFullMatrix"], "linalg.linear_operator_addition_test.LinearOperatorOrderOfAdditionTest.test_tier_0_additions_done_in_tier_0": ["test.TestCase.assertEqual", "linalg.linear_operator_addition.add_operators", "<builtin>.len", "linear_operator_addition._Adder.__init__", "test.TestCase.assertIsInstance", "linalg.linalg.LinearOperatorDiag", "linalg.linear_operator_addition._AddAndReturnDiag"], "linalg.linear_operator_addition._AddAndReturnDiag": [], "linear_operator_addition._Adder.__init__": [], "linalg.linear_operator_addition_test.LinearOperatorOrderOfAdditionTest.test_tier_1_additions_done_by_tier_1": ["test.TestCase.assertEqual", "linalg.linear_operator_addition.add_operators", "<builtin>.len", "linear_operator_addition._Adder.__init__", "test.TestCase.assertIsInstance", "linalg.linalg.LinearOperatorDiag", "linalg.linear_operator_addition._AddAndReturnTriL", "linalg.linalg.LinearOperatorLowerTriangular", "linalg.linear_operator_addition._AddAndReturnDiag"], "linalg.linear_operator_addition._AddAndReturnTriL": [], "linalg.linear_operator_addition_test.LinearOperatorOrderOfAdditionTest.test_tier_1_additions_done_by_tier_1_with_order_flipped": ["test.TestCase.assertEqual", "linalg.linear_operator_addition.add_operators", "<builtin>.len", "linear_operator_addition._Adder.__init__", "test.TestCase.assertIsInstance", "linalg.linalg.LinearOperatorDiag", "linalg.linear_operator_addition._AddAndReturnTriL", "linalg.linalg.LinearOperatorLowerTriangular", "linalg.linear_operator_addition._AddAndReturnDiag"], "linalg.linear_operator_addition_test.LinearOperatorOrderOfAdditionTest": ["framework.test_util.run_deprecated_v1"], "linalg.linear_operator_addition_test.LinearOperatorOrderOfAdditionTest.test_cannot_add_everything_so_return_more_than_one_operator": ["test.TestCase.assertEqual", "linalg.linear_operator_addition.add_operators", "<builtin>.isinstance", "<builtin>.len", "test.TestCase.cached_session", "test.TestCase.assertTrue", "linalg.linalg.LinearOperatorDiag", "linalg.linalg.LinearOperatorLowerTriangular", "test.TestCase.assertAllClose", "linalg.linear_operator_addition._AddAndReturnDiag"], "linalg.linear_operator_addition_test.LinearOperatorOrderOfAdditionTest.test_intermediate_tier_is_not_skipped": ["linalg.linear_operator_addition.add_operators", "linear_operator_addition._Adder.__init__", "test.TestCase.assertRaisesRegex", "linalg.linalg.LinearOperatorDiag", "linalg.linear_operator_addition._AddAndReturnTriL", "linalg.linalg.LinearOperatorLowerTriangular", "linalg.linear_operator_addition._AddAndReturnDiag"], "linalg.linear_operator_addition_test.AddAndReturnScaledIdentityTest.setUp": ["linalg.linear_operator_addition._AddAndReturnScaledIdentity"], "linalg.linear_operator_addition._AddAndReturnScaledIdentity": [], "linalg.linear_operator_addition_test.AddAndReturnScaledIdentityTest": ["framework.test_util.run_deprecated_v1"], "linalg.linear_operator_addition_test.AddAndReturnScaledIdentityTest.test_identity_plus_identity": ["test.TestCase.assertEqual", "test.TestCase.cached_session", "linalg.linear_operator_addition._Hints", "test.TestCase.assertTrue", "test.TestCase.assertIsInstance", "ops.linalg_ops.eye", "linalg.linalg.LinearOperatorIdentity", "test.TestCase.assertAllClose"], "linalg.linalg.LinearOperatorIdentity": [], "linalg.linear_operator_addition._Hints": [], "ops.linalg_ops.eye": [], "linalg.linear_operator_addition_test.AddAndReturnScaledIdentityTest.test_identity_plus_scaled_identity": ["test.TestCase.assertEqual", "test.TestCase.cached_session", "linalg.linear_operator_addition._Hints", "test.TestCase.assertTrue", "linalg.linalg.LinearOperatorScaledIdentity", "test.TestCase.assertIsInstance", "ops.linalg_ops.eye", "linalg.linalg.LinearOperatorIdentity", "test.TestCase.assertAllClose"], "linalg.linalg.LinearOperatorScaledIdentity": [], "linalg.linear_operator_addition_test.AddAndReturnScaledIdentityTest.test_scaled_identity_plus_scaled_identity": ["test.TestCase.assertEqual", "test.TestCase.cached_session", "linalg.linear_operator_addition._Hints", "test.TestCase.assertTrue", "linalg.linalg.LinearOperatorScaledIdentity", "test.TestCase.assertIsInstance", "ops.linalg_ops.eye", "test.TestCase.assertAllClose"], "linalg.linear_operator_addition_test.AddAndReturnDiagTest.setUp": ["linalg.linear_operator_addition._AddAndReturnDiag"], "linalg.linear_operator_addition_test.AddAndReturnDiagTest": ["framework.test_util.run_deprecated_v1"], "linalg.linear_operator_addition_test.AddAndReturnDiagTest.test_identity_plus_identity_returns_diag": ["test.TestCase.assertEqual", "test.TestCase.cached_session", "linalg.linear_operator_addition._Hints", "test.TestCase.assertTrue", "test.TestCase.assertIsInstance", "ops.linalg_ops.eye", "linalg.linalg.LinearOperatorIdentity", "test.TestCase.assertAllClose"], "linalg.linear_operator_addition_test.AddAndReturnDiagTest.test_diag_plus_diag": ["test.TestCase.assertEqual", "test.TestCase.cached_session", "linalg.linear_operator_addition._Hints", "test.TestCase.assertTrue", "test.TestCase.assertIsInstance", "linalg.linalg.LinearOperatorDiag", "test.TestCase.assertAllClose"], "linalg.linear_operator_addition_test.AddAndReturnTriLTest.setUp": ["linalg.linear_operator_addition._AddAndReturnTriL"], "linalg.linear_operator_addition_test.AddAndReturnTriLTest": ["framework.test_util.run_deprecated_v1"], "linalg.linear_operator_addition_test.AddAndReturnTriLTest.test_diag_plus_tril": ["test.TestCase.assertEqual", "test.TestCase.cached_session", "linalg.linear_operator_addition._Hints", "test.TestCase.assertTrue", "test.TestCase.assertIsInstance", "linalg.linalg.LinearOperatorDiag", "linalg.linalg.LinearOperatorLowerTriangular", "test.TestCase.assertAllClose"], "linalg.linear_operator_addition_test.AddAndReturnMatrixTest.setUp": ["linalg.linear_operator_addition._AddAndReturnMatrix"], "linalg.linear_operator_addition._AddAndReturnMatrix": [], "linalg.linear_operator_addition_test.AddAndReturnMatrixTest": ["framework.test_util.run_deprecated_v1"], "linalg.linear_operator_addition_test.AddAndReturnMatrixTest.test_diag_plus_diag": ["test.TestCase.assertEqual", "test.TestCase.assertFalse", "test.TestCase.cached_session", "linalg.linear_operator_addition._Hints", "test.TestCase.assertTrue", "test.TestCase.assertIsInstance", "linalg.linalg.LinearOperatorDiag", "test.TestCase.assertAllClose"], "test.TestCase.assertFalse": [], "platform.test.main": []}