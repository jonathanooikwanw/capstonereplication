{"kernel_tests.control_flow_ops_py_test": ["platform.test.main"], "kernel_tests.control_flow_ops_py_test.check_consumers": ["<builtin>.len"], "<builtin>.len": [], "kernel_tests.control_flow_ops_py_test.all_fetchables": ["framework.ops.get_default_graph"], "framework.ops.get_default_graph": [], "kernel_tests.control_flow_ops_py_test.all_feedables": ["framework.ops.get_default_graph"], "kernel_tests.control_flow_ops_py_test.opt_cfg": ["protobuf.config_pb2.GraphOptions", "protobuf.config_pb2.ConfigProto", "protobuf.config_pb2.OptimizerOptions"], "protobuf.config_pb2.OptimizerOptions": [], "protobuf.config_pb2.GraphOptions": [], "protobuf.config_pb2.ConfigProto": [], "kernel_tests.control_flow_ops_py_test.isum": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "framework.constant_op.constant": [], "kernel_tests.control_flow_ops_py_test.isum.<lambda1>": ["ops.math_ops.less"], "ops.math_ops.less": [], "kernel_tests.control_flow_ops_py_test.isum.<lambda2>": ["ops.math_ops.add"], "ops.math_ops.add": [], "ops.control_flow_ops.while_loop": [], "kernel_tests.control_flow_ops_py_test.enqueue_print_op": ["ops.logging_ops.print_v2"], "ops.logging_ops.print_v2": [], "kernel_tests.control_flow_ops_py_test.filter_test_messages": ["<builtin>.len"], "kernel_tests.control_flow_ops_py_test.tf_function_in_tf2": ["eager.def_function.function", "python.tf2.enabled"], "python.tf2.enabled": [], "eager.def_function.function": [], "framework.test_util.run_v1_only": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest": ["framework.test_util.disable_control_flow_v2", "framework.test_util.deprecated_graph_mode_only", "framework.test_util.run_v1_only", "framework.test_util.run_in_graph_and_eager_modes", "framework.test_util.build_as_function_and_v1_graph", "framework.test_util.run_gpu_only", "absl.testing.parameterized.parameters", "framework.test_util.run_deprecated_v1", "framework.test_util.enable_control_flow_v2", "framework.test_util.disable_tfrt", "framework.test_util.enable_output_all_intermediates"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testRefIdentity": ["<builtin>.isinstance", "test.TestCase.evaluate", "test.TestCase.assertTrue", "ops.variables.VariableV1", "ops.variables.global_variables_initializer", "ops.state_ops.assign", "ops.control_flow_ops._Identity", "test.TestCase.assertEqual", "test.TestCase.cached_session", "ops.control_flow_ops.with_dependencies"], "test.TestCase.cached_session": [], "ops.variables.VariableV1": [], "ops.control_flow_ops._Identity": [], "ops.state_ops.assign": [], "ops.control_flow_ops.with_dependencies": [], "<builtin>.isinstance": [], "test.TestCase.assertTrue": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertEqual": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testRefEnter": ["test.TestCase.evaluate", "test.TestCase.cached_session", "ops.variables.VariableV1", "ops.variables.global_variables_initializer", "ops.gen_control_flow_ops.enter", "ops.state_ops.assign", "test.TestCase.assertEqual", "ops.control_flow_ops.exit", "ops.control_flow_ops._Enter", "framework.constant_op.constant", "ops.control_flow_ops.with_dependencies"], "ops.control_flow_ops._Enter": [], "ops.gen_control_flow_ops.enter": [], "ops.control_flow_ops.exit": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testRefSwitch": ["test.TestCase.evaluate", "ops.variables.VariableV1", "ops.variables.global_variables_initializer", "ops.state_ops.assign", "test.TestCase.assertEqual", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.control_flow_ops._SwitchRefOrTensor"], "ops.control_flow_ops._SwitchRefOrTensor": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEnterMulExit": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.gen_control_flow_ops.enter", "ops.math_ops.multiply", "numpy.array", "ops.control_flow_ops.exit", "test.TestCase.cached_session", "framework.constant_op.constant"], "ops.math_ops.multiply": [], "numpy.array": [], "test.TestCase.assertAllEqual": [], "framework.test_util.run_deprecated_v1": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEnterShapePropagation": ["test.TestCase.assertEqual", "test.TestCase.cached_session", "ops.gen_control_flow_ops.enter", "ops.variables.Variable"], "ops.variables.Variable": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchMergeIndexedSlices": ["framework.ops.convert_to_tensor", "framework.ops.IndexedSlices", "test.TestCase.assertAllEqual", "ops.control_flow_ops.merge", "test.TestCase.cached_session", "ops.control_flow_ops.switch", "numpy.arange", "framework.constant_op.constant"], "framework.ops.IndexedSlices": [], "framework.ops.convert_to_tensor": [], "ops.control_flow_ops.switch": [], "ops.control_flow_ops.merge": [], "numpy.arange": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchDeadBranch": ["test.TestCase.evaluate", "framework.ops.convert_to_tensor", "test.TestCase.assertRaisesWithPredicateMatch", "test.TestCase.cached_session", "ops.control_flow_ops.switch", "framework.constant_op.constant", "ops.array_ops.identity"], "ops.array_ops.identity": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchDeadBranch.<lambda1>": ["<builtin>.str"], "<builtin>.str": [], "test.TestCase.assertRaisesWithPredicateMatch": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchMergeLess": ["ops.math_ops.less", "test.TestCase.evaluate", "framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "ops.control_flow_ops.merge", "test.TestCase.cached_session", "ops.control_flow_ops.switch", "numpy.arange", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchMergeAddIdentity": ["test.TestCase.evaluate", "framework.ops.convert_to_tensor", "ops.math_ops.add", "test.TestCase.assertAllEqual", "ops.control_flow_ops.merge", "numpy.array", "test.TestCase.cached_session", "ops.control_flow_ops.switch", "framework.constant_op.constant", "ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchMergeAddMul": ["test.TestCase.evaluate", "framework.ops.convert_to_tensor", "ops.math_ops.add", "test.TestCase.assertAllEqual", "ops.control_flow_ops.merge", "ops.math_ops.multiply", "numpy.array", "test.TestCase.cached_session", "ops.control_flow_ops.switch", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testLoop_false": ["test.TestCase.evaluate", "framework.ops.convert_to_tensor", "ops.control_flow_ops.next_iteration", "test.TestCase.assertAllEqual", "ops.gen_control_flow_ops.enter", "ops.control_flow_ops.merge", "ops.control_flow_ops.exit", "test.TestCase.cached_session", "ops.control_flow_ops.switch", "framework.constant_op.constant"], "ops.control_flow_ops.next_iteration": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testLoop_1": ["ops.math_ops.less", "test.TestCase.evaluate", "framework.ops.device", "ops.control_flow_ops.loop_cond", "ops.math_ops.add", "ops.control_flow_ops.next_iteration", "test.TestCase.assertAllEqual", "ops.gen_control_flow_ops.enter", "ops.control_flow_ops.merge", "platform.test.gpu_device_name", "ops.control_flow_ops.exit", "test.TestCase.cached_session", "ops.control_flow_ops.switch", "framework.constant_op.constant"], "platform.test.gpu_device_name": [], "framework.ops.device": [], "ops.control_flow_ops.loop_cond": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testLoop_2": ["ops.math_ops.less", "test.TestCase.evaluate", "framework.ops.device", "ops.control_flow_ops.loop_cond", "ops.math_ops.add", "ops.control_flow_ops.next_iteration", "test.TestCase.assertAllEqual", "ops.gen_control_flow_ops.enter", "ops.control_flow_ops.merge", "platform.test.gpu_device_name", "ops.control_flow_ops.exit", "test.TestCase.cached_session", "ops.control_flow_ops.switch", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testDifferentFrame": ["test.TestCase.assertRaisesOpError", "test.TestCase.cached_session", "ops.math_ops.add", "ops.gen_control_flow_ops.enter", "ops.array_ops.placeholder"], "ops.array_ops.placeholder": [], "test.TestCase.assertRaisesOpError": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondBool": ["test.TestCase.assertRaisesRegex", "ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondBool.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondBool.<lambda2>": ["ops.math_ops.subtract"], "ops.math_ops.subtract": [], "test.TestCase.assertRaisesRegex": [], "ops.control_flow_ops.cond": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondInt": ["test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "ops.gradients_impl.gradients", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondInt.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondInt.<lambda2>": ["ops.math_ops.subtract"], "ops.gradients_impl.gradients": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondOutputShape": ["test.TestCase.assertEqual", "framework.tensor_shape.TensorShape", "ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondOutputShape.<lambda1>": ["ops.math_ops.square"], "ops.math_ops.square": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondOutputShape.<lambda2>": ["ops.math_ops.subtract"], "framework.tensor_shape.TensorShape": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testFetchable": ["test.TestCase.cached_session", "test.TestCase.assertRaisesRegex", "ops.control_flow_ops.cond", "framework.ops.get_default_graph", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testFetchable.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testFetchable.<lambda2>": [], "framework.test_util.disable_control_flow_v2": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testFeedable": ["test.TestCase.assertRaisesRegex", "ops.control_flow_ops.while_loop", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "framework.ops.get_default_graph", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testFeedable.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testFeedable.<lambda2>": ["ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondIndexedSlices": ["ops.math_ops.less", "framework.ops.IndexedSlices", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondIndexedSlices.<lambda1>": ["framework.ops.IndexedSlices", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondIndexedSlices.<lambda2>": ["framework.ops.IndexedSlices", "ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondMismatchedIndexedSlices": ["ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondMismatchedIndexedSlices.foo": ["test.TestCase.assertRaisesRegex", "framework.ops.IndexedSlices", "ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondMismatchedIndexedSlices.foo.<lambda1>": ["framework.ops.IndexedSlices", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondMismatchedIndexedSlices.foo.<lambda2>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSparseTensor": ["ops.math_ops.less", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "framework.sparse_tensor.SparseTensor": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSparseTensor.<lambda1>": ["framework.sparse_tensor.SparseTensor"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSparseTensor.<lambda2>": ["framework.sparse_tensor.SparseTensor"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondRaggedTensor": ["test.TestCase.assertAllEqual", "ops.math_ops.less", "ops.control_flow_ops.cond", "ragged.ragged_factory_ops.constant"], "ragged.ragged_factory_ops.constant": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondRaggedTensor.<lambda1>": ["ops.array_ops.concat"], "ops.array_ops.concat": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondRaggedTensor.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondResource": ["test.TestCase.evaluate", "framework.ops.convert_to_tensor", "ops.variables.global_variables_initializer", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "test.TestCase.cached_session", "ops.resource_variable_ops.ResourceVariable"], "ops.resource_variable_ops.ResourceVariable": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondResource.case": ["ops.array_ops.identity", "framework.ops.control_dependencies", "ops.resource_variable_ops.assign_variable_op"], "ops.resource_variable_ops.assign_variable_op": [], "framework.ops.control_dependencies": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondResource.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondResourceGradShape": ["test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "ops.gradients_impl.gradients", "ops.resource_variable_ops.ResourceVariable", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondResourceGradShape.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondResourceGradShape.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWithTensorArrayGrad": ["framework.ops.device", "test.TestCase.cached_session", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "platform.test.gpu_device_name", "ops.gradients_impl.gradients", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWithTensorArrayGrad.<lambda1>": ["ops.map_fn.map_fn"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWithTensorArrayGrad.<lambda1>.<lambda1>": [], "ops.map_fn.map_fn": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWithTensorArrayGrad.<lambda2>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondIndexedSlicesDifferentTypes": ["ops.math_ops.less", "framework.ops.convert_to_tensor", "framework.ops.IndexedSlices", "test.TestCase.assertTrue", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondIndexedSlicesDifferentTypes.<lambda1>": ["framework.ops.IndexedSlices", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondIndexedSlicesDifferentTypes.<lambda2>": ["framework.ops.IndexedSlices", "ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondColocation": ["test.TestCase.assertDeviceEqual", "ops.math_ops.less", "framework.ops.device", "ops.control_flow_ops.cond", "test.TestCase.session", "ops.variables.Variable", "framework.constant_op.constant"], "test.TestCase.session": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondColocation.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondColocation.<lambda2>": ["ops.math_ops.subtract"], "test.TestCase.assertDeviceEqual": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testCond_1": ["test.TestCase.evaluate", "ops.math_ops.less", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testCond_1.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testCond_1.<lambda2>": ["ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_1": ["ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_2": ["test.TestCase.evaluate", "ops.math_ops.less", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_2.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_2.<lambda2>": ["ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_3": ["test.TestCase.evaluate", "ops.math_ops.less", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_3.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_3.<lambda2>": ["ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_3.<lambda3>": ["ops.math_ops.add", "ops.control_flow_ops.cond"], "framework.test_util.run_in_graph_and_eager_modes": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondPruning": ["test.TestCase.evaluate", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.cached_session", "eager.function.defun"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondPruning.f": ["<builtin>.len", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "ops.math_ops.greater", "framework.constant_op.constant"], "ops.math_ops.greater": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondPruning.f.<lambda1>": ["ops.state_ops.assign"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondPruning.f.<lambda2>": ["ops.state_ops.assign", "framework.constant_op.constant"], "eager.function.defun": [], "eager.context.executing_eagerly": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_5": ["framework.constant_op.constant", "test.TestCase.evaluate", "test.TestCase.assertAllEqual", "<builtin>.range", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_5.body": ["ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_5.body.<lambda1>": ["ops.math_ops.less", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_5.body.<lambda2>": [], "<builtin>.range": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_6": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "ops.control_flow_ops.cond", "ops.math_ops.greater", "numpy.array", "ops.variables.Variable", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_6.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_6.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_7": ["test.TestCase.evaluate", "ops.math_ops.less", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_7.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_7.<lambda2>": [], "absl.testing.parameterized.parameters": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondResourceGrad": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "ops.control_flow_ops.cond", "ops.math_ops.greater", "ops.gradients_impl.gradients", "ops.variables.Variable", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondResourceGrad.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondResourceGrad.<lambda2>": [], "framework.test_util.run_gpu_only": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_Device": ["protobuf.config_pb2.RunMetadata", "framework.ops.device", "<builtin>.len", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "test.TestCase.assertIn", "client.session.Session", "protobuf.config_pb2.RunOptions", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_Device.true_fn": ["ops.math_ops.exp"], "ops.math_ops.exp": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCond_Device.<lambda1>": [], "test.TestCase.assertIn": [], "client.session.Session": [], "protobuf.config_pb2.RunOptions": [], "protobuf.config_pb2.RunMetadata": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._count_matching_switch_nodes_on_device": ["test.TestCase.assertLen", "<builtin>.len"], "test.TestCase.assertLen": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchColocatedWithInputWhenInputExplicitlyPlacedOnCPU": ["protobuf.config_pb2.RunMetadata", "test.TestCase.assertLen", "framework.ops.device", "protobuf.config_pb2.ConfigProto", "ops.control_flow_ops.cond", "ops.control_flow_ops.cond", "test.TestCase.session", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "protobuf.config_pb2.RunOptions", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchColocatedWithInputWhenInputExplicitlyPlacedOnCPU.true_fn": ["framework.ops.device"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchColocatedWithInputWhenInputExplicitlyPlacedOnCPU.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchColocatedWithInputWhenInputPlacedOnCPU": ["protobuf.config_pb2.RunMetadata", "test.TestCase.assertLen", "protobuf.config_pb2.ConfigProto", "ops.control_flow_ops.cond", "dataset_ops.Dataset.range", "dataset_ops.Dataset.range", "test.TestCase.assertEqual", "client.session.Session", "ops.array_ops.placeholder", "protobuf.config_pb2.RunOptions", "framework.constant_op.constant"], "dataset_ops.Dataset.range": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchColocatedWithInputWhenInputPlacedOnCPU.true_fn": ["ops.cardinality.cardinality"], "ops.cardinality.cardinality": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchColocatedWithInputWhenInputPlacedOnCPU.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchColocatedWithInputWhenInputOnGPU": ["protobuf.config_pb2.RunMetadata", "protobuf.config_pb2.ConfigProto", "<builtin>.len", "ops.control_flow_ops.cond", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "client.session.Session", "ops.array_ops.placeholder", "protobuf.config_pb2.RunOptions", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchColocatedWithInputWhenInputOnGPU.true_fn": ["framework.ops.device"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchColocatedWithInputWhenInputOnGPU.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAccessTrueBranchTensorInFalseBranchRaises": ["test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex", "eager.context.executing_eagerly"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAccessTrueBranchTensorInFalseBranchRaises.f": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAccessTrueBranchTensorInFalseBranchRaises.f.true_fn": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAccessTrueBranchTensorInFalseBranchRaises.f.false_fn": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAccessTrueBranchTensorInFalseBranchRaises.f.<lambda1>": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAccessTrueBranchTensorInFalseBranchRaises.f.<lambda2>": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchCaseAccessBranch1TensorInBranch4Raises": ["test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex", "eager.context.executing_eagerly"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchCaseAccessBranch1TensorInBranch4Raises.f": ["ops.control_flow_ops.switch_case", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchCaseAccessBranch1TensorInBranch4Raises.f.br1_fn": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchCaseAccessBranch1TensorInBranch4Raises.f.br4_fn": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchCaseAccessBranch1TensorInBranch4Raises.f.other_fn": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchCaseAccessBranch1TensorInBranch4Raises.f.<list1>.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchCaseAccessBranch1TensorInBranch4Raises.f.<lambda1>": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchCaseAccessBranch1TensorInBranch4Raises.f.<list1>.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchCaseAccessBranch1TensorInBranch4Raises.f.<lambda2>": ["ops.array_ops.identity"], "ops.control_flow_ops.switch_case": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondListOutput": ["test.TestCase.evaluate", "ops.math_ops.less", "ops.control_flow_ops.cond", "test.TestCase.assertListEqual", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondListOutput.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondListOutput.<lambda2>": [], "test.TestCase.assertListEqual": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testTupleOutput": ["test.TestCase.evaluate", "ops.math_ops.less", "test.TestCase.assertTupleEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testTupleOutput.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testTupleOutput.<lambda2>": [], "test.TestCase.assertTupleEqual": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testDictOutput": ["test.TestCase.evaluate", "ops.math_ops.less", "ops.control_flow_ops.cond", "test.TestCase.assertDictEqual", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testDictOutput.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testDictOutput.<lambda2>": [], "test.TestCase.assertDictEqual": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEmbeddedListOutput": ["test.TestCase.evaluate", "ops.math_ops.less", "ops.control_flow_ops.cond", "test.TestCase.assertListEqual", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEmbeddedListOutput.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEmbeddedListOutput.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEmbeddedTupleOutput": ["test.TestCase.evaluate", "ops.math_ops.less", "test.TestCase.assertTupleEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEmbeddedTupleOutput.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEmbeddedTupleOutput.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEmbeddedDictOutput": ["test.TestCase.evaluate", "ops.math_ops.less", "ops.control_flow_ops.cond", "test.TestCase.assertDictEqual", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEmbeddedDictOutput.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testEmbeddedDictOutput.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCheckNestedOutputStruct": ["ops.math_ops.less", "test.TestCase.assertRaisesRegex", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCheckNestedOutputStruct.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCheckNestedOutputStruct.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondRef": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.gen_state_ops.variable"], "ops.gen_state_ops.variable": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondRef.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondRef.<lambda2>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWithControl": ["test.TestCase.cached_session", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWithControl.true_branch": ["framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWithControl.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testUninitializedRefIdentity": ["test.TestCase.evaluate", "ops.array_ops.identity", "framework.ops.control_dependencies", "ops.state_ops.is_variable_initialized", "test.TestCase.assertAllEqual", "ops.control_flow_ops.merge", "ops.state_ops.assign", "ops.gen_array_ops.ref_identity", "test.TestCase.cached_session", "ops.control_flow_ops.ref_switch", "ops.gen_state_ops.variable"], "ops.state_ops.is_variable_initialized": [], "ops.control_flow_ops.ref_switch": [], "ops.gen_array_ops.ref_identity": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchIdentity": ["test.TestCase.evaluate", "ops.control_flow_ops.cond", "client.session.Session", "client.session.Session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchIdentity.fn1": ["ops.control_flow_ops.no_op"], "ops.control_flow_ops.no_op": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondSwitchIdentity.fn2": ["ops.control_flow_ops.Assert"], "ops.control_flow_ops.Assert": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondRecvIdentity": ["test.TestCase.evaluate", "framework.ops.device", "ops.control_flow_ops.cond", "platform.test.gpu_device_name", "client.session.Session", "client.session.Session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondRecvIdentity.fn1": ["ops.control_flow_ops.no_op"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondRecvIdentity.fn2": ["framework.ops.device", "ops.control_flow_ops.Assert"], "framework.test_util.enable_control_flow_v2": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testDisableLoweringSwitchMerge": ["protobuf.config_pb2.RunMetadata", "<builtin>.any", "<builtin>.all", "test.TestCase.assertTrue", "ops.array_ops.placeholder_with_default", "ops.control_flow_ops.cond", "framework.test_util.is_gpu_available", "test.TestCase.skipTest", "test.TestCase.assertEqual", "client.session.Session", "protobuf.config_pb2.RunOptions", "protobuf.config_pb2.RunOptions", "framework.constant_op.constant"], "framework.test_util.is_gpu_available": [], "test.TestCase.skipTest": [], "ops.array_ops.placeholder_with_default": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testDisableLoweringSwitchMerge.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testDisableLoweringSwitchMerge.<lambda2>": [], "<builtin>.any": [], "<builtin>.all": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_1": ["ops.math_ops.less", "test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_1.<lambda1>": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_1.<lambda2>": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondComputeGradAfterSessRunFails": ["ops.math_ops.less", "test.TestCase.evaluate", "test.TestCase.assertAllEqual", "test.TestCase.assertRaisesRegex", "ops.control_flow_ops.cond", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondComputeGradAfterSessRunFails.true_fn": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondComputeGradAfterSessRunFails.false_fn": [], "framework.test_util.enable_output_all_intermediates": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondComputeGradAfterSessRun": ["ops.math_ops.less", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondComputeGradAfterSessRun.true_fn": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondComputeGradAfterSessRun.false_fn": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCondComputeGradAfterSessRun": ["ops.math_ops.less", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCondComputeGradAfterSessRun.true_fn": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCondComputeGradAfterSessRun.true_fn.inner_true_fn": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCondComputeGradAfterSessRun.true_fn.inner_false_fn": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCondComputeGradAfterSessRun.false_fn": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_2": ["ops.math_ops.less", "test.TestCase.cached_session", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "ops.gradients_impl.gradients", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_2.<lambda1>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_2.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_3": ["ops.math_ops.less", "test.TestCase.cached_session", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "ops.math_ops.multiply", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_3.fn1": ["ops.gradients_impl.gradients"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_3.<lambda1>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_3.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGradMultiDevice": ["framework.ops.device", "test.TestCase.assertIsNone", "test.TestCase.cached_session", "protobuf.config_pb2.ConfigProto", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "ops.array_ops.placeholder"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGradMultiDevice.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGradMultiDevice.<lambda2>": [], "test.TestCase.assertIsNone": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCond_Simple": ["test.TestCase.evaluate", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCond_Simple.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCond_Simple.<lambda2>": ["ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCond_Simple.<lambda2>.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCond_Simple.<lambda2>.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCond_Simple.<lambda3>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCond_Simple.<lambda4>": ["ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCond_Simple.<lambda4>.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedCond_Simple.<lambda4>.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_Gather": ["ops.math_ops.less", "test.TestCase.evaluate", "test.TestCase.assertIsInstance", "test.TestCase.cached_session", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "ops.control_flow_ops.cond", "ops.gradient_checker_v2._to_numpy", "ops.gradients_impl.gradients", "ops.variables.Variable", "ops.array_ops.placeholder"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_Gather.<lambda1>": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_Gather.<lambda2>": ["ops.array_ops.gather"], "ops.array_ops.gather": [], "test.TestCase.assertIsInstance": [], "ops.gradient_checker_v2._to_numpy": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_ResourceVarSparseRead": ["test.TestCase.evaluate", "test.TestCase.assertIsInstance", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "ops.control_flow_ops.cond", "numpy.ones", "ops.gradient_checker_v2._to_numpy", "ops.gradients_impl.gradients", "ops.resource_variable_ops.ResourceVariable", "framework.constant_op.constant"], "numpy.ones": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_ResourceVarSparseRead.<lambda1>": ["ops.math_ops.reduce_sum"], "ops.math_ops.reduce_sum": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_ResourceVarSparseRead.<lambda2>": ["numpy.zeros", "framework.constant_op.constant"], "numpy.zeros": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_MultiGather": ["test.TestCase.evaluate", "test.TestCase.assertIsInstance", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "numpy.ones", "ops.gradient_checker_v2._to_numpy", "test.TestCase.assertEqual", "framework.constant_op.constant", "ops.resource_variable_ops.ResourceVariable", "ops.resource_variable_ops.ResourceVariable"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_MultiGather.true_fn": ["ops.array_ops.gather"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_MultiGather.false_fn": ["numpy.zeros", "ops.array_ops.gather"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGrad_MultiGather.foo": ["ops.gradients_impl.gradients", "ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondPredicateTensor": ["test.TestCase.evaluate", "test.TestCase.evaluate", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "eager.function.defun"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondPredicateTensor.foo": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondPredicateTensor.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondPredicateTensor.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondFeedConstantPredicate": ["ops.control_flow_ops.cond", "test.TestCase.assertEqual", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondFeedConstantPredicate.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondFeedConstantPredicate.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondFeedPlaceholderWithDefaultPredicate": ["test.TestCase.assertAllEqual", "ops.array_ops.placeholder_with_default", "ops.control_flow_ops.cond", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondFeedPlaceholderWithDefaultPredicate.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondFeedPlaceholderWithDefaultPredicate.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondTensorDeps": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondTensorDeps.f": ["ops.array_ops.identity", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAutoControlDeps": ["test.TestCase.evaluate", "test.TestCase.evaluate", "test.TestCase.evaluate", "test.TestCase.evaluate", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "framework.test_util.is_gpu_available", "test.TestCase.skipTest", "test.TestCase.assertEqual", "test.TestCase.captureWritesToStream", "test.TestCase.cached_session", "eager.wrap_function.wrap_function", "eager.wrap_function.wrap_function", "eager.wrap_function.wrap_function", "eager.function.defun"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAutoControlDeps.branch_fn": ["eager.function.defun", "framework.constant_op.constant", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAutoControlDeps.build_cond": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAutoControlDeps.build_cond.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAutoControlDeps.build_nested_cond": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAutoControlDeps.build_nested_cond.<lambda1>": [], "test.TestCase.captureWritesToStream": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAutoControlDeps.cond": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAutoControlDeps.nested_cond": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAutoControlDeps.pruned_cond": ["framework.constant_op.constant"], "eager.wrap_function.wrap_function": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondAutoControlDeps.pruned_nested_cond": ["framework.constant_op.constant"], "framework.test_util.disable_tfrt": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAutoControlDeps": ["test.TestCase.evaluate", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "test.TestCase.assertEqual", "test.TestCase.assertEqual", "test.TestCase.captureWritesToStream", "test.TestCase.cached_session", "eager.wrap_function.wrap_function", "eager.wrap_function.wrap_function", "eager.function.defun"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAutoControlDeps.cond": ["eager.function.defun"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAutoControlDeps.body": ["eager.function.defun", "ops.array_ops.identity", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAutoControlDeps.build_while": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAutoControlDeps.build_nested_while": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAutoControlDeps.build_nested_while.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAutoControlDeps.while_loop": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAutoControlDeps.nested_while_loop": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAutoControlDeps.pruned_while": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAutoControlDeps.pruned_nested_while": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_1": ["test.TestCase.evaluate", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_1.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_1.<lambda2>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileExternalControlDependencies": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "ops.variables.Variable", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileExternalControlDependencies.body_fn": ["framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileExternalControlDependencies.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileExternalControlDependenciesNoInput": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "ops.variables.Variable", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileExternalControlDependenciesNoInput.body_fn": ["framework.constant_op.constant", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileExternalControlDependenciesNoInput.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithRefs_1": ["test.TestCase.evaluate", "ops.variables.VariableV1", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithRefs_1.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithRefs_1.b": ["test.TestCase.assertEqual", "ops.gen_array_ops.ref_identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_2": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "test.TestCase.cached_session", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithMaximumIterations": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "test.TestCase.cached_session", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithMaximumIterationsAndSingleArgument": ["test.TestCase.assertEqual", "test.TestCase.evaluate", "test.TestCase.cached_session", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithMaximumIterationsAndSingleArgument.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithMaximumIterationsAndSingleArgument.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testXLAGradInLoop": ["ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "ops.array_ops.placeholder", "ops.control_flow_ops.XLAControlFlowContext"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testXLAGradInLoop.cond": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testXLAGradInLoop.body": ["ops.math_ops.add"], "ops.control_flow_ops.XLAControlFlowContext": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSingleNestedMaximumIterationsWhileLoopGradientInXLAContext": ["test.TestCase.evaluate", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "framework.constant_op.constant", "ops.control_flow_ops.XLAControlFlowContext", "ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSingleNestedMaximumIterationsWhileLoopGradientInXLAContext.training_loop_with_gradient": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSingleNestedMaximumIterationsWhileLoopGradientInXLAContext.training_loop_with_gradient.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSingleNestedMaximumIterationsWhileLoopGradientInXLAContext.training_loop_with_gradient.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSingleNestedMaximumIterationsWhileLoopGradientInXLAContext.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsWhileLoopGradientInXLAContext": ["ops.control_flow_ops.XLAControlFlowContext", "test.TestCase.evaluate", "test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex", "test.TestCase.skipTest", "ops.gradients_impl.gradients", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsWhileLoopGradientInXLAContext.inner_body": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsWhileLoopGradientInXLAContext.inner_body.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsWhileLoopGradientInXLAContext.inner_body.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsWhileLoopGradientInXLAContext.create_while_loop": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsWhileLoopGradientInXLAContext.create_while_loop.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsFromSiblingContextWhileLoopInXLAContext": ["test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex", "ops.gradients_impl.gradients", "framework.constant_op.constant", "ops.control_flow_ops.XLAControlFlowContext"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsFromSiblingContextWhileLoopInXLAContext.create_while_loop": ["ops.control_flow_ops.while_loop", "ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsFromSiblingContextWhileLoopInXLAContext.create_while_loop.create_mi": ["ops.array_ops.placeholder"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsFromSiblingContextWhileLoopInXLAContext.create_while_loop.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testInvalidMaximumIterationsFromSiblingContextWhileLoopInXLAContext.create_while_loop.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileLoopWithMaxItersFromOuterContextInXLAContext": ["protobuf.config_pb2.RunMetadata", "test.TestCase.assertAllClose", "<builtin>.len", "protobuf.config_pb2.RunOptions", "test.TestCase.session", "framework.test_util.is_gpu_available", "test.TestCase.skipTest", "test.TestCase.skipTest", "re.match", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "framework.constant_op.constant", "<builtin>.str", "ops.control_flow_ops.XLAControlFlowContext"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileLoopWithMaxItersFromOuterContextInXLAContext.mid_body_builder": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileLoopWithMaxItersFromOuterContextInXLAContext.mid_body_builder.mid_body": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileLoopWithMaxItersFromOuterContextInXLAContext.mid_body_builder.mid_body.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileLoopWithMaxItersFromOuterContextInXLAContext.mid_body_builder.mid_body.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileLoopWithMaxItersFromOuterContextInXLAContext.outer_body": ["ops.control_flow_ops.while_loop", "ops.control_flow_ops.while_loop", "ops.array_ops.size"], "ops.array_ops.size": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileLoopWithMaxItersFromOuterContextInXLAContext.outer_body.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileLoopWithMaxItersFromOuterContextInXLAContext.create_while_loop": ["framework.ops.device", "ops.control_flow_ops.while_loop", "ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileLoopWithMaxItersFromOuterContextInXLAContext.create_while_loop.<lambda1>": [], "re.match": [], "test.TestCase.assertAllClose": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_3": ["test.TestCase.assertAllEqual", "test.TestCase.cached_session", "framework.ops.convert_to_tensor", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_3.compute": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_3.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_4": ["framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "ops.array_ops.size", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_4.compute": ["ops.math_ops.add", "ops.array_ops.gather"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_4.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_5": ["framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "framework.tensor_shape.unknown_shape", "ops.array_ops.size", "test.TestCase.cached_session", "numpy.array"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_5.compute": ["ops.array_ops.expand_dims", "ops.array_ops.strided_slice", "ops.math_ops.add", "ops.array_ops.concat"], "ops.array_ops.expand_dims": [], "ops.array_ops.strided_slice": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_5.<lambda1>": ["ops.math_ops.less"], "framework.tensor_shape.unknown_shape": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_Device": ["protobuf.config_pb2.RunMetadata", "framework.ops.device", "<builtin>.len", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "test.TestCase.assertIn", "client.session.Session", "protobuf.config_pb2.RunOptions", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_Device.body": ["ops.math_ops.exp"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_Device.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testBufferForwarding": ["protobuf.config_pb2.RunMetadata", "<builtin>.set", "framework.ops.device", "test.TestCase.assertTrue", "<builtin>.len", "test.TestCase.assertLess", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "test.TestCase.cached_session", "protobuf.config_pb2.RunOptions", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testBufferForwarding.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testBufferForwarding.<lambda2>": ["ops.math_ops.square"], "<builtin>.set": [], "test.TestCase.assertLess": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhile_Gpu_1": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhile_Gpu_1.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhile_Gpu_1.<lambda2>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_Gpu_1": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhile_Gpu_2": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhile_Gpu_2.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhile_Gpu_2.b": ["framework.ops.device", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_Gpu_2": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShape": ["ops.array_ops.ones", "test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "framework.tensor_shape.unknown_shape", "numpy.ones", "test.TestCase.cached_session", "framework.constant_op.constant"], "ops.array_ops.ones": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShape.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShape._b": ["ops.array_ops.tile", "ops.math_ops.add"], "ops.array_ops.tile": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadShape": ["test.TestCase.assertRaisesRegex", "ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadShape.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadShape.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadBodyReturn": ["test.TestCase.assertRaisesRegex", "ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadBodyReturn.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadBodyReturn.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithNonTensorInput_Scalar": ["test.TestCase.assertEqual", "test.TestCase.evaluate", "test.TestCase.cached_session", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithNonTensorInput_Scalar.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithNonTensorInput_Scalar.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithNonTensorInput_Vector": ["test.TestCase.evaluate", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "test.TestCase.cached_session", "numpy.array"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithNonTensorInput_Vector.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithNonTensorInput_Vector.<lambda2>": ["ops.array_ops.stack"], "ops.array_ops.stack": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInference": ["ops.array_ops.ones", "test.TestCase.assertTrue", "ops.control_flow_ops.while_loop", "framework.tensor_shape.TensorShape", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInference.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInference.b": ["ops.math_ops.add", "ops.array_ops.concat"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceBadShape": ["ops.array_ops.ones", "test.TestCase.assertRaisesRegex", "ops.control_flow_ops.while_loop", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceBadShape.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceBadShape.<lambda2>": ["ops.array_ops.concat"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceSparseTensor": ["ops.control_flow_ops.while_loop", "framework.tensor_shape.TensorShape", "framework.tensor_shape.TensorShape", "framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceSparseTensor.c": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceSparseTensor.b1": ["framework.sparse_tensor.SparseTensor"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceSparseTensor.b2": ["framework.sparse_tensor.SparseTensor", "ops.math_ops.cast", "ops.array_ops.fill", "ops.sparse_ops.sparse_add"], "ops.array_ops.fill": [], "ops.math_ops.cast": [], "ops.sparse_ops.sparse_add": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceSparseTensor.b3": ["framework.sparse_tensor.SparseTensor", "ops.array_ops.concat"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceSparseTensor.check_shapes": ["test.TestCase.assertTrue"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadShapeSparseTensor": ["test.TestCase.assertRaisesRegex", "ops.control_flow_ops.while_loop", "test.TestCase.assertRaises", "framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadShapeSparseTensor.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadShapeSparseTensor.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadShapeSparseTensor.b2": ["framework.sparse_tensor.SparseTensor", "ops.array_ops.concat"], "test.TestCase.assertRaises": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceIndexedSlices": ["framework.ops.IndexedSlices", "test.TestCase.assertTrue", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "framework.tensor_shape.TensorShape", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceIndexedSlices.c": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceIndexedSlices.b": ["framework.ops.IndexedSlices"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadShapeIndexedSlices": ["test.TestCase.assertRaisesRegex", "framework.sparse_tensor.SparseTensor", "ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadShapeIndexedSlices.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileBadShapeIndexedSlices.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceRaggedTensor": ["eager.context.executing_eagerly", "ragged.ragged_tensor.RaggedTensorSpec", "ops.control_flow_ops.while_loop", "ragged.ragged_factory_ops.constant", "ragged.ragged_factory_ops.constant", "test.TestCase.assertRaises", "framework.tensor_shape.TensorShape", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceRaggedTensor.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceRaggedTensor.b1": ["ops.array_ops.concat"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceRaggedTensor.b2": ["ops.array_ops.concat"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceRaggedTensor.check_shapes": ["test.TestCase.assertTrue"], "ragged.ragged_tensor.RaggedTensorSpec": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceRaggedTensorRaggedRank2": ["test.TestCase.assertTrue", "ops.control_flow_ops.while_loop", "ragged.ragged_factory_ops.constant", "test.TestCase.assertEqual", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceRaggedTensorRaggedRank2.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInferenceRaggedTensorRaggedRank2.b": ["ops.array_ops.concat"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInvariantTensorSpec": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant", "framework.tensor_spec.TensorSpec"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInvariantTensorSpec.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInvariantTensorSpec.<lambda2>": ["ops.array_ops.stack"], "framework.tensor_spec.TensorSpec": [], "framework.test_util.build_as_function_and_v1_graph": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInvariantWrongTypeSpecType": ["framework.sparse_tensor.SparseTensorSpec", "framework.tensor_spec.TensorSpec", "ops.control_flow_ops.while_loop", "ragged.ragged_factory_ops.constant", "test.TestCase.assertRaises", "framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInvariantWrongTypeSpecType.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInvariantWrongTypeSpecType.<lambda2>": [], "framework.sparse_tensor.SparseTensorSpec": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInvariantBadType": ["test.TestCase.assertRaises", "ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInvariantBadType.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileShapeInvariantBadType.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_1": ["test.TestCase.evaluate", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_1.cpu_sum": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_1.cpu_sum.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_1.cpu_sum.b": ["framework.ops.device", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_1.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_1.<lambda2>": ["ops.math_ops.less", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhile_1": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_2": ["test.TestCase.evaluate", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_2.inner_loop": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_2.inner_loop.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_2.inner_loop.b": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_2.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhile_2.outer_b": ["ops.math_ops.less", "framework.ops.device", "ops.logging_ops.Print", "ops.math_ops.square"], "ops.logging_ops.Print": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhile_2": ["ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_1": ["test.TestCase.assertAllEqual", "test.TestCase.cached_session", "ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_1.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_1.body": ["ops.math_ops.add", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_2": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_2.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_2.body": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_3": ["test.TestCase.cached_session", "framework.ops.control_dependencies", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_3.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_3.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_4": ["test.TestCase.cached_session", "framework.ops.control_dependencies", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_4.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_4.<lambda2>": ["ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_5": ["test.TestCase.cached_session", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_5.body": ["framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithControl_5.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl": ["test.TestCase.evaluate", "framework.ops.control_dependencies", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "test.TestCase.cached_session", "ops.control_flow_ops.no_op", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl.<lambda2>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl.<lambda3>": ["ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl.<lambda4>": ["ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl.<lambda4>.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl.<lambda4>.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl_1": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.variable_scope.get_variable", "framework.ops.control_dependencies", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.init_ops.constant_initializer"], "ops.init_ops.constant_initializer": [], "ops.variable_scope.get_variable": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl_1.loop_condition": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl_1.loop_body": ["ops.control_flow_ops.cond", "framework.constant_op.constant", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl_1.loop_body.<lambda1>": ["ops.state_ops.assign", "ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondWithControl_1.loop_body.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondExitControl": ["test.TestCase.evaluate", "ops.variables.global_variables_initializer", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondExitControl.false_branch": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondExitControl.false_branch.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondExitControl.false_branch.body": ["ops.state_ops.assign"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondExitControl.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_1": ["test.TestCase.evaluate", "ops.math_ops.less", "framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_1.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_1.<lambda2>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_1.<lambda3>": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_1.<lambda4>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_2": ["test.TestCase.evaluate", "ops.math_ops.less", "framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "ops.control_flow_ops.cond", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_2.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_2.<lambda2>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_2.<lambda3>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_2.<lambda4>": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testCondWhile_3": ["test.TestCase.cached_session", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testCondWhile_3.c": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testCondWhile_3.b": ["framework.ops.device", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testCondWhile_3.<lambda1>": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testCondWhile_3.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondWhile_3": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_1": ["test.TestCase.evaluate", "framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_1.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_1.<lambda2>": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_1.<lambda2>.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_1.<lambda2>.<lambda2>": ["ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_2": ["test.TestCase.evaluate", "framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_2.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_2.<lambda2>": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_2.<lambda2>.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_2.<lambda2>.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_3": ["test.TestCase.evaluate", "framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_3.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_3.<lambda2>": ["ops.math_ops.less", "ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_3.<lambda2>.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCond_3.<lambda2>.<lambda2>": ["ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGradMultiDevice": ["framework.ops.device", "test.TestCase.cached_session", "protobuf.config_pb2.ConfigProto", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGradMultiDevice.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGradMultiDevice.<lambda2>": ["ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGradMultiDevice.<lambda2>.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGradMultiDevice.<lambda2>.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_1": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "numpy.array", "ops.variables.Variable", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_1.loop_iterator": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_1.loop_body": ["ops.state_ops.scatter_update", "ops.control_flow_ops.group", "ops.math_ops.add", "ops.control_flow_ops.with_dependencies"], "ops.state_ops.scatter_update": [], "ops.control_flow_ops.group": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_2": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "numpy.array", "ops.variables.Variable", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_2.loop_iterator": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_2.loop_body": ["ops.state_ops.scatter_update", "ops.control_flow_ops.group", "ops.math_ops.add", "ops.control_flow_ops.with_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_3": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "numpy.array", "ops.variables.Variable", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_3.loop_iterator": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_3.loop_body": ["ops.state_ops.scatter_update", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_4": ["test.TestCase.evaluate", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.cached_session", "ops.state_ops.assign_add", "framework.constant_op.constant"], "ops.state_ops.assign_add": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_4.pred": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_4.loop_body": ["ops.math_ops.add", "ops.state_ops.assign_add", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_5": ["test.TestCase.evaluate", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_5.pred": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_5.loop_body": ["ops.array_ops.identity", "ops.state_ops.assign_add", "framework.constant_op.constant", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_6": ["test.TestCase.evaluate", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_6.pred": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileUpdateVariable_6.loop_body": ["ops.math_ops.add", "ops.state_ops.assign_add", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileQueue_1": ["test.TestCase.evaluate", "six.moves.xrange", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "ops.data_flow_ops.FIFOQueue", "test.TestCase.cached_session", "framework.constant_op.constant"], "ops.data_flow_ops.FIFOQueue": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileQueue_1.c": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileQueue_1.b": ["ops.math_ops.add", "ops.control_flow_ops.with_dependencies"], "six.moves.xrange": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileTimeOut": ["ops.control_flow_ops.while_loop", "test.TestCase.assertRaises", "test.TestCase.cached_session", "protobuf.config_pb2.RunOptions", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileTimeOut.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileTimeOut.<lambda2>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileStack_1": ["test.TestCase.evaluate", "ops.control_flow_ops.while_loop", "framework.tensor_shape.unknown_shape", "test.TestCase.assertEqual", "test.TestCase.cached_session", "ops.gen_data_flow_ops.stack_v2", "framework.constant_op.constant"], "ops.gen_data_flow_ops.stack_v2": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileStack_1.c": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileStack_1.b": ["ops.gen_data_flow_ops.stack_push_v2", "ops.math_ops.add", "ops.control_flow_ops.with_dependencies"], "ops.gen_data_flow_ops.stack_push_v2": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileStack_1.c1": ["ops.math_ops.greater"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileStack_1.b1": ["ops.math_ops.subtract", "ops.gen_data_flow_ops.stack_pop_v2"], "ops.gen_data_flow_ops.stack_pop_v2": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileGrad_ColocateGradients": ["framework.ops.Graph", "<builtin>.any", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertTrue", "test.TestCase.assertFalse", "ops.control_flow_ops.while_loop", "platform.test.is_gpu_available", "test.TestCase.session", "platform.test.gpu_device_name", "ops.gradients_impl.gradients", "framework.constant_op.constant"], "platform.test.is_gpu_available": [], "framework.ops.Graph": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileGrad_ColocateGradients.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileGrad_ColocateGradients.b": ["framework.ops.device", "ops.math_ops.square"], "test.TestCase.assertFalse": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ColocateGradients": ["ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Square": ["ops.math_ops.less", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.control_flow_ops.cond", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Square.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Square.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Square.<lambda3>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Shape": ["test.TestCase.assertAllClose", "test.TestCase.cached_session", "ops.control_flow_ops.while_loop", "framework.tensor_shape.unknown_shape", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Shape.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Shape.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_BaseShape": ["test.TestCase.assertAllClose", "test.TestCase.cached_session", "ops.control_flow_ops.while_loop", "ops.math_ops.square", "ops.gradients_impl.gradients", "ops.array_ops.placeholder", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_BaseShape.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_BaseShape.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradAfterSessionRun": ["test.TestCase.assertAllClose", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradAfterSessionRun.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradAfterSessionRun.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGradAfterSessionRun": ["test.TestCase.assertAllClose", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGradAfterSessionRun.body": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGradAfterSessionRun.body.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGradAfterSessionRun.body.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGradAfterSessionRun.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_MultipleUses": ["test.TestCase.evaluate", "ops.control_flow_ops.while_loop", "ops.math_ops.multiply", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_MultipleUses.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_LoopAdd": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.math_ops.add", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_LoopAdd.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileGrad_Mul": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileGrad_Mul.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileGrad_Mul.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Mul": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInControlDeps": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInControlDeps.f": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop", "framework.constant_op.constant", "framework.ops.control_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInControlDeps.f.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInControlDeps.f.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testTfFunctionInV1WhileLoop": ["ops.control_flow_ops.while_loop", "client.session.Session", "client.session.Session", "test.TestCase.assertAllEqual"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testTfFunctionInV1WhileLoop.loop_body": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testTfFunctionInV1WhileLoop.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileCondWhileGrad": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileCondWhileGrad.inner_loop": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileCondWhileGrad.inner_loop.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileCondWhileGrad.inner_loop.<lambda2>": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileCondWhileGrad.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileCondWhileGrad.b": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileCondWhileGrad.b.<lambda1>": ["framework.constant_op.constant", "ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileCondWhileGrad.b.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileCondWhileGrad": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileCondWhileGradGpu": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Variable": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "ops.variables.Variable", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Variable.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Variable.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVariable": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "ops.resource_variable_ops.ResourceVariable", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVariable.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVariable.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_EagerResourceVariable": ["test.TestCase.evaluate", "eager.context.eager_mode", "eager.context.eager_mode", "numpy.ones", "test.TestCase.assertEqual", "ops.resource_variable_ops.ResourceVariable", "framework.constant_op.constant", "eager.function.defun"], "eager.context.eager_mode": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_EagerResourceVariable.fn": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_EagerResourceVariable.fn.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_EagerResourceVariable.fn.<lambda2>": ["ops.math_ops.reduce_sum"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInFunctionCall": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "ops.variables.global_variables_initializer", "ops.gradient_checker_v2._to_numpy", "ops.resource_variable_ops.ResourceVariable"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInFunctionCall.foo": ["ops.math_ops.reduce_sum"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInFunctionCall.bar": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInFunctionCall.bar.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInFunctionCall.bar.<lambda2>": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInNestedFunctionCall": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "ops.gradient_checker_v2._to_numpy", "ops.gradient_checker_v2._to_numpy", "ops.resource_variable_ops.ResourceVariable"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInNestedFunctionCall.foo": ["ops.math_ops.reduce_sum"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInNestedFunctionCall.foo2": ["ops.math_ops.reduce_sum"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInNestedFunctionCall.bar": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInNestedFunctionCall.bar.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInNestedFunctionCall.bar.<lambda2>": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInLoopInFunctionCall": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "platform.test.is_gpu_available", "ops.gradient_checker_v2._to_numpy", "test.TestCase.skipTest", "test.TestCase.skipTest", "ops.resource_variable_ops.ResourceVariable"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInLoopInFunctionCall.foo": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInLoopInFunctionCall.foo.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInLoopInFunctionCall.foo.<lambda2>": ["ops.math_ops.reduce_sum"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInLoopInFunctionCall.bar": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInLoopInFunctionCall.bar.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarInLoopInFunctionCall.bar.<lambda2>": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_ResourceVarInFunctionCall": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "ops.gradient_checker_v2._to_numpy", "ops.resource_variable_ops.ResourceVariable"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_ResourceVarInFunctionCall.foo": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_ResourceVarInFunctionCall.body": ["ops.control_flow_ops.cond", "ops.math_ops.equal"], "ops.math_ops.equal": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_ResourceVarInFunctionCall.body.<lambda1>": ["ops.math_ops.equal"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_ResourceVarInFunctionCall.body.<lambda2>": ["ops.math_ops.equal"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_ResourceVarInFunctionCall.bar": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_ResourceVarInFunctionCall.bar.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarSparseRead": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "numpy.ones", "ops.gradient_checker_v2._to_numpy", "ops.gradients_impl.gradients", "ops.resource_variable_ops.ResourceVariable", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarSparseRead.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ResourceVarSparseRead.<lambda2>": ["ops.math_ops.reduce_sum"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_MultiResourceVarSparseRead": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "numpy.ones", "ops.gradient_checker_v2._to_numpy", "ops.gradients_impl.gradients", "ops.resource_variable_ops.ResourceVariable", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_MultiResourceVarSparseRead.body": ["ops.math_ops.reduce_sum"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_MultiResourceVarSparseRead.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Gather": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertEqual", "test.TestCase.assertEqual"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Gather.fn": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Gather.fn.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Gather.fn.<lambda2>": ["ops.array_ops.gather"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_GatherNoFanOut": ["test.TestCase.evaluate", "test.TestCase.evaluate", "test.TestCase.assertAllEqual", "test.TestCase.assertEqual", "test.TestCase.assertEqual"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_GatherNoFanOut.fn": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_GatherNoFanOut.fn.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_GatherNoFanOut.fn.<lambda2>": ["ops.array_ops.gather"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInCond": ["ops.math_ops.less", "test.TestCase.assertAllClose", "framework.ops.convert_to_tensor", "test.TestCase.cached_session", "ops.control_flow_ops.cond", "ops.array_ops.placeholder"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInCond.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInCond.<lambda2>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInCond.fn1": ["ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "framework.tensor_shape.unknown_shape"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInCond.<lambda3>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGradInWhileWrtInitialLoopVal": ["ops.array_ops.placeholder", "test.TestCase.cached_session", "test.TestCase.assertRaisesRegex", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGradInWhileWrtInitialLoopVal.body": ["ops.gradients_impl.gradients"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGradInWhileWrtInitialLoopVal.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInWhile": ["test.TestCase.assertAllClose", "framework.ops.convert_to_tensor", "test.TestCase.cached_session", "framework.tensor_shape.unknown_shape", "ops.control_flow_ops.while_loop", "ops.array_ops.placeholder"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInWhile.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInWhile.<lambda2>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInWhile.b1": ["ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "framework.tensor_shape.unknown_shape"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradInWhile.<lambda3>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGradInNestedWhiles": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGradInNestedWhiles.outer_body": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGradInNestedWhiles.outer_body.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGradInNestedWhiles.inner_body": ["ops.math_ops.less", "ops.gradients_impl.gradients", "ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGradInNestedWhiles.inner_body.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGradInNestedWhiles.inner_body.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCondGradInNestedWhiles.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGpuResourceAccess": ["test.TestCase.evaluate", "framework.ops.device", "ops.variables.global_variables_initializer", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "platform.test.gpu_device_name", "ops.resource_variable_ops.ResourceVariable", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGpuResourceAccess.foo": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGpuResourceAccess.foo.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGpuResourceAccess.foo.<lambda2>": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGpuResourceAccess.foo.<lambda2>.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGpuResourceAccess.foo.<lambda2>.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedResourceAccess": ["test.TestCase.evaluate", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "test.TestCase.assertEqual", "ops.resource_variable_ops.ResourceVariable", "framework.constant_op.constant", "eager.function.defun"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedResourceAccess.test_fn": ["ops.gradients_impl.gradients", "ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedResourceAccess.test_fn.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedResourceAccess.test_fn.<lambda2>": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedResourceAccess.test_fn.<lambda2>.<lambda1>": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedResourceAccess.test_fn.<lambda2>.<lambda1>.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedResourceAccess.test_fn.<lambda2>.<lambda1>.<lambda2>": ["ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedResourceAccess.test_fn.<lambda2>.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_NestedInput": ["collections.namedtuple", "<builtin>.isinstance", "test.TestCase.evaluate", "test.TestCase.assertTrue", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "util.nest.flatten", "test.TestCase.cached_session", "framework.constant_op.constant"], "collections.namedtuple": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_NestedInput.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_NestedInput.b": [], "util.nest.flatten": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_NestedBadArityFails": ["collections.namedtuple", "test.TestCase.assertRaisesRegex", "ops.control_flow_ops.while_loop", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_NestedBadArityFails.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhile_NestedBadArityFails.b": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ys_xs": ["test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ys_xs.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ys_xs.b": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Dependency": ["test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Dependency.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Dependency.b": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_NoGradient": ["test.TestCase.assertAllClose", "ops.math_ops.add", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_NoGradient.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_NoDependency": ["ops.array_ops.ones", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "numpy.ones", "ops.math_ops.reduce_sum", "ops.gradients_impl.gradients", "ops.variables.Variable", "ops.array_ops.zeros", "test.TestCase.cached_session"], "ops.array_ops.zeros": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_NoDependency.cond": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_NoDependency.body": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Const": ["test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.math_ops.reduce_sum", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Const.cond": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Const.body": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_SerialTwoLoops": ["test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_SerialTwoLoops.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_SerialTwoLoops.b": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ParallelTwoLoops": ["test.TestCase.assertAllClose", "ops.math_ops.add", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ParallelTwoLoops.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_ParallelTwoLoops.b": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_OneOutputWithControlDependencyOnSecond": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertTrue", "framework.ops.control_dependencies", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_OneOutputWithControlDependencyOnSecond.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_OneOutputWithControlDependencyOnSecond.b": ["ops.math_ops.add", "ops.array_ops.identity"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileGrad_Simple": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileGrad_Simple.inner_loop": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileGrad_Simple.inner_loop.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileGrad_Simple.inner_loop.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileGrad_Simple.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testNestedWhileGrad_Simple.<lambda2>": ["ops.math_ops.less", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_Simple": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_SerialInner": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_SerialInner.inner_loop1": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_SerialInner.inner_loop1.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_SerialInner.inner_loop1.<lambda2>": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_SerialInner.inner_loop2": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_SerialInner.inner_loop2.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_SerialInner.inner_loop2.<lambda2>": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_SerialInner.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_SerialInner.<lambda2>": ["ops.math_ops.less", "ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelInner": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelInner.inner_loop1": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelInner.inner_loop1.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelInner.inner_loop1.<lambda2>": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelInner.inner_loop2": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelInner.inner_loop2.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelInner.inner_loop2.<lambda2>": ["ops.math_ops.add", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelInner.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelInner.<lambda2>": ["ops.math_ops.less", "ops.math_ops.less", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelIterations": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "ops.math_ops.reduce_mean", "ops.math_ops.square", "training.adam.AdamOptimizer", "ops.variables.Variable", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelIterations.inner_loop": ["ops.map_fn.map_fn"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelIterations.inner_loop.<lambda1>": ["ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileGrad_ParallelIterations.outer_loop": ["ops.map_fn.map_fn"], "training.adam.AdamOptimizer": [], "ops.math_ops.reduce_mean": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileCondGrad_Simple": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.ops.convert_to_tensor", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileCondGrad_Simple.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileCondGrad_Simple.<lambda2>": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileCondGrad_Simple.<lambda2>.<lambda1>": ["ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._testWhileCondGrad_Simple.<lambda2>.<lambda2>": ["ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_Simple": ["ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_UnknownShape": ["test.TestCase.assertAllClose", "framework.ops.convert_to_tensor", "test.TestCase.cached_session", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "ops.array_ops.placeholder"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_UnknownShape.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_UnknownShape.<lambda2>": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_UnknownShape.<lambda2>.<lambda1>": ["ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileCondGrad_UnknownShape.<lambda2>.<lambda2>": ["ops.math_ops.subtract"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Concat": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.variable_scope.get_variable", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "training.gradient_descent.GradientDescentOptimizer", "framework.tensor_shape.TensorShape", "ops.math_ops.reduce_sum", "ops.array_ops.zeros", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Concat.condition": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_Concat.body": ["ops.array_ops.concat"], "training.gradient_descent.GradientDescentOptimizer": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithRefsWithGradients_1": ["test.TestCase.evaluate", "ops.variables.VariableV1", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithRefsWithGradients_1.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileWithRefsWithGradients_1.body": ["test.TestCase.assertEqual", "ops.gen_array_ops.ref_identity"], "framework.test_util.deprecated_graph_mode_only": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_IndexedSlices": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.ops.IndexedSlices", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "numpy.array", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_IndexedSlices.c": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_IndexedSlices.b": ["framework.ops.IndexedSlices"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_SparseTensor": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "numpy.array", "test.TestCase.cached_session", "framework.sparse_tensor.SparseTensor", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_SparseTensor.c": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_SparseTensor.b": ["framework.sparse_tensor.SparseTensor"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCallGradInLoop": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.math_ops.square", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCallGradInLoop.c": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCallGradInLoop.b": ["ops.gradients_impl.gradients", "framework.constant_op.constant", "ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAndTensorArray": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAndTensorArray.c": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAndTensorArray.b": ["ops.map_fn.map_fn"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAndTensorArray.b.<list1>.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileAndTensorArray.b.<lambda1>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileAndTensorArray": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop", "ops.array_ops.reshape", "ops.tensor_array_ops.TensorArray", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileAndTensorArray.Body": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileAndTensorArray.Body.InnerBody": ["ops.math_ops.cast"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileAndTensorArray.Body.<lambda1>": [], "ops.tensor_array_ops.TensorArray": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testNestedWhileAndTensorArray.<lambda1>": [], "ops.array_ops.reshape": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_StopGrad": ["test.TestCase.evaluate", "ops.math_ops.add", "ops.array_ops.stop_gradient", "ops.control_flow_ops.while_loop", "ops.math_ops.square", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_StopGrad.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_StopGrad.b": ["ops.math_ops.add", "ops.math_ops.square"], "ops.array_ops.stop_gradient": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_StopGradInside": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_StopGradInside.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_StopGradInside.b": ["ops.array_ops.stop_gradient", "ops.math_ops.add", "ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_StopGradInsideNoShape": ["<builtin>.any", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "test.TestCase.assertFalse", "ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "ops.array_ops.placeholder"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_StopGradInsideNoShape.<lambda1>": ["ops.math_ops.less", "ops.math_ops.reduce_sum"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGrad_StopGradInsideNoShape.b": ["ops.array_ops.stop_gradient", "ops.math_ops.add", "ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradGradFail": ["test.TestCase.assertRaisesRegex", "ops.array_ops.stop_gradient", "ops.functional_ops.scan", "ops.gradients_impl.gradients", "ops.variables.Variable", "numpy.array"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradGradFail.fn": [], "ops.functional_ops.scan": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testStopGradOnWhileGrad": ["test.TestCase.evaluate", "ops.math_ops.add", "ops.array_ops.stop_gradient", "ops.control_flow_ops.while_loop", "ops.math_ops.square", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testStopGradOnWhileGrad.<lambda1>": ["ops.math_ops.less"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testStopGradOnWhileGrad.<lambda2>": ["ops.math_ops.multiply"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradientWithNontrainablePath1": ["ops.math_ops.argmin", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "test.TestCase.assertIsNotNone", "ops.gradients_impl.gradients", "ops.variables.Variable", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradientWithNontrainablePath1.cond": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradientWithNontrainablePath1.body": ["ops.math_ops.reduce_sum", "ops.math_ops.cast"], "ops.math_ops.argmin": [], "test.TestCase.assertIsNotNone": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradientWithNontrainablePath2": ["ops.math_ops.argmin", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.control_flow_ops.while_loop", "test.TestCase.assertIsNotNone", "ops.gradients_impl.gradients", "ops.variables.Variable", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradientWithNontrainablePath2.cond": ["ops.math_ops.equal"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileGradientWithNontrainablePath2.body": ["ops.math_ops.reduce_sum", "ops.math_ops.cast", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testIssue16504": ["ops.control_flow_ops.while_loop", "numpy.ones", "test.TestCase.assertIsNotNone", "ops.gradients_impl.gradients", "ops.variables.Variable", "numpy.arange", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testIssue16504.cond": ["ops.math_ops.logical_and"], "ops.math_ops.logical_and": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testIssue16504.body": ["ops.math_ops.abs", "ops.math_ops.exp", "ops.math_ops.reduce_sum", "ops.gradients_impl.gradients"], "ops.math_ops.abs": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testStopGradMultiFlows": ["ops.array_ops.ones", "test.TestCase.evaluate", "ops.variables.global_variables", "ops.math_ops.add", "ops.array_ops.stop_gradient", "ops.control_flow_ops.while_loop", "ops.variables.global_variables_initializer", "ops.linalg_ops.norm", "test.TestCase.assertEqual", "ops.math_ops.reduce_sum", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testStopGradMultiFlows.body": ["ops.variable_scope.get_variable", "ops.init_ops.ones_initializer", "ops.math_ops.reduce_sum"], "ops.init_ops.ones_initializer": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testStopGradMultiFlows.<lambda1>": [], "ops.variables.global_variables": [], "ops.linalg_ops.norm": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testOneValueCond": ["<builtin>.isinstance", "framework.ops.convert_to_tensor", "test.TestCase.assertTrue", "test.TestCase.cached_session", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "ops.math_ops.greater_equal", "ops.array_ops.placeholder"], "ops.math_ops.greater_equal": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testOneValueCond.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testOneValueCond.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testExampleCond": ["test.TestCase.assertAllClose", "framework.ops.convert_to_tensor", "test.TestCase.cached_session", "ops.control_flow_ops.cond", "math.sqrt", "ops.math_ops.equal", "ops.array_ops.placeholder"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testExampleCond.l2": ["ops.math_ops.sqrt", "ops.math_ops.reduce_sum", "ops.math_ops.square"], "ops.math_ops.sqrt": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testExampleCond.l1": ["ops.math_ops.abs", "ops.math_ops.reduce_sum"], "math.sqrt": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCase": ["test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual", "test.TestCase.cached_session", "ops.control_flow_ops.case", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCase.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCase.<lambda2>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCase.<lambda3>": ["framework.constant_op.constant"], "ops.control_flow_ops.case": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCase.break_run_twice": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCase.break_run_twice._break": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCase.<lambda4>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCaseSideEffects": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "ops.variables.Variable", "test.TestCase.cached_session", "ops.control_flow_ops.case", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCaseSideEffects.<lambda1>": ["ops.state_ops.assign", "ops.control_flow_ops.with_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCaseSideEffects.<lambda2>": ["ops.state_ops.assign", "ops.control_flow_ops.with_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testCaseSideEffects.<lambda3>": ["ops.state_ops.assign", "ops.control_flow_ops.with_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testOneOpCond": ["<builtin>.isinstance", "test.TestCase.evaluate", "framework.ops.convert_to_tensor", "test.TestCase.assertTrue", "ops.variables.global_variables_initializer", "ops.control_flow_ops.cond", "test.TestCase.assertEqual", "ops.variables.Variable", "ops.math_ops.greater_equal", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testOneOpCond.a": ["ops.state_ops.assign"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testOneOpCond.b": ["ops.state_ops.assign"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWithOpsDependencies": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertRaisesOpError", "test.TestCase.assertAllEqual", "ops.variables.VariableV1", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.control_flow_ops.with_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWithTensorDependencies": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertRaisesOpError", "test.TestCase.assertAllEqual", "ops.variables.VariableV1", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.control_flow_ops.with_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWithIndexedSlicesDependencies": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.ops.IndexedSlices", "test.TestCase.assertRaisesOpError", "test.TestCase.assertAllEqual", "ops.variables.VariableV1", "ops.array_ops.gather", "numpy.array", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.control_flow_ops.with_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testDependenciesDevice": ["framework.ops.Graph", "test.TestCase.assertDeviceEqual", "framework.ops.device", "test.TestCase.assertTrue", "ops.variables.VariableV1", "test.TestCase.assertEqual", "ops.control_flow_ops.with_dependencies"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGroup": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "test.TestCase.assertRaisesOpError", "ops.control_flow_ops.group", "ops.variables.VariableV1", "test.TestCase.cached_session"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testGroupEmpty": ["test.TestCase.assertEqual", "ops.control_flow_ops.group"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testMergeShapes": ["test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.control_flow_ops.merge", "test.TestCase.assertIs"], "test.TestCase.assertIs": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testRefSelect": ["ops.control_flow_ops.ref_select", "ops.variables.VariableV1", "test.TestCase.assertIs", "test.TestCase.assertEqual", "ops.array_ops.placeholder"], "ops.control_flow_ops.ref_select": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testRunLoopTensor": ["test.TestCase.evaluate", "ops.control_flow_ops.while_loop", "test.TestCase.assertRaises", "test.TestCase.assertEqual", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testRunLoopTensor.condition": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testRunLoopTensor.body": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhilePyFuncBasic": ["test.TestCase.evaluate", "ops.control_flow_ops.while_loop", "framework.tensor_shape.unknown_shape", "test.TestCase.assertEqual", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhilePyFuncBasic.func": ["numpy.square"], "numpy.square": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhilePyFuncBasic.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhilePyFuncBasic.<lambda2>": ["ops.script_ops.py_func"], "ops.script_ops.py_func": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileFuncBasic": ["test.TestCase.evaluate", "<builtin>.len", "ops.control_flow_ops.while_loop", "framework.function.Defun", "framework.tensor_shape.unknown_shape", "test.TestCase.assertEqual", "ops.gradients_impl.gradients", "test.TestCase.cached_session", "framework.constant_op.constant"], "framework.function.Defun": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileFuncBasic.func": ["ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileFuncBasic.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileFuncBasic.<lambda2>": ["ops.math_ops.square"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testQIntSwitchMerge": ["test.TestCase.evaluate", "ops.control_flow_ops.merge", "platform.test.is_gpu_available", "numpy.array", "test.TestCase.cached_session", "ops.control_flow_ops.switch", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testQIntRefSwitchMerge": ["ops.control_flow_ops.ref_merge", "test.TestCase.evaluate", "platform.test.is_gpu_available", "ops.state_ops.assign", "numpy.array", "test.TestCase.cached_session", "ops.control_flow_ops.ref_switch", "framework.constant_op.constant", "ops.gen_state_ops.variable"], "ops.control_flow_ops.ref_merge": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testUInt64SwitchMerge": ["test.TestCase.evaluate", "ops.control_flow_ops.merge", "platform.test.is_gpu_available", "numpy.array", "test.TestCase.cached_session", "ops.control_flow_ops.switch", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSwitchEagerMode": ["test.TestCase.assertAllEqual", "ops.control_flow_ops.switch", "eager.context.executing_eagerly"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testQIntArgAndRet": ["test.TestCase.evaluate", "framework.function.Defun", "framework.function.Defun", "platform.test.is_gpu_available", "numpy.array", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testQIntArgAndRet.func": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSparseIdentity": ["test.TestCase.assertAllEqual", "ops.control_flow_ops._Identity", "framework.sparse_tensor.SparseTensor"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testSparseEnterExit": ["test.TestCase.assertAllEqual", "ops.control_flow_ops._Enter", "framework.sparse_tensor.SparseTensor", "ops.control_flow_ops.exit"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._buildWhileWithShapeInvariants": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._buildWhileWithShapeInvariants.cond": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest._buildWhileWithShapeInvariants.body": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileOutputShapeWithShapeInvariantsUnknownRank": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileOutputShapeWithShapeInvariantsUnknownRank.runTest": ["framework.tensor_shape.TensorShape", "test.TestCase.assertIsNone", "test.TestCase.assertIsNone"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileOutputShapeWithShapeInvariantsPartialShape": ["test.TestCase.assertIsNone"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testWhileOutputShapeWithShapeInvariantsPartialShape.runTest": ["test.TestCase.assertAllEqual", "framework.tensor_shape.TensorShape", "framework.tensor_shape.TensorShape"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testFunctionInWhile": ["test.TestCase.assertAllEqual", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testFunctionInWhile.body": [], "kernel_tests.control_flow_ops_py_test.ControlFlowTest.testFunctionInWhile.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest._getWhileTensor": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest._getWhileTensor.body": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest._getWhileTensor.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest._getCondTensor": ["ops.math_ops.less", "ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest._getCondTensor.true_fn": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest._getCondTensor.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest": ["framework.test_util.run_v1_only"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidContext": ["test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidContextInCond": ["ops.math_ops.less", "test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex", "ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidContextInCond.<lambda1>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidContextInCond.<lambda2>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidContextInWhile": ["ops.control_flow_ops.while_loop", "test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidContextInWhile.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidContextInWhile.<lambda2>": ["ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidContextInWhile.<lambda3>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidContextInWhile.<lambda4>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidCondContext": ["ops.math_ops.add", "ops.math_ops.add"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidCondContextBranches": ["ops.math_ops.less", "ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidCondContextBranches.branch_fn": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidWhileContext": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidWhileContext.body": ["ops.control_flow_ops.while_loop", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidWhileContext.body.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidWhileContext.body.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidWhileContext.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidNestedContexts": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidNestedContexts.body": ["ops.control_flow_ops.while_loop", "ops.math_ops.less", "ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidNestedContexts.body.<lambda1>": ["ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidNestedContexts.body.<lambda1>.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidNestedContexts.body.<lambda1>.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidNestedContexts.body.<lambda2>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testValidNestedContexts.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidNestedContexts": ["ops.math_ops.less", "test.TestCase.assertRaisesRegex", "ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidNestedContexts.true_fn": ["ops.control_flow_ops.while_loop", "ops.control_flow_ops.while_loop"], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidNestedContexts.true_fn.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidNestedContexts.true_fn.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.ControlFlowContextCheckTest.testInvalidNestedContexts.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.TupleTest": ["framework.test_util.run_v1_only"], "kernel_tests.control_flow_ops_py_test.TupleTest.testTensors": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "ops.math_ops.add", "test.TestCase.assertRaisesOpError", "ops.variables.VariableV1", "ops.control_flow_ops.tuple", "test.TestCase.cached_session", "ops.control_flow_ops.with_dependencies"], "ops.control_flow_ops.tuple": [], "kernel_tests.control_flow_ops_py_test.TupleTest.testIndexedSlices": ["test.TestCase.evaluate", "test.TestCase.assertAllClose", "framework.ops.IndexedSlices", "test.TestCase.assertRaisesOpError", "ops.variables.VariableV1", "ops.array_ops.gather", "numpy.array", "ops.control_flow_ops.tuple", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.control_flow_ops.with_dependencies"], "kernel_tests.control_flow_ops_py_test.TupleTest.testAcceptTensorsAsControlInputs": ["test.TestCase.evaluate", "ops.variables.VariableV1", "ops.state_ops.assign", "test.TestCase.assertEqual", "ops.control_flow_ops.tuple", "test.TestCase.cached_session", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.AssertTest": ["framework.test_util.run_deprecated_v1"], "kernel_tests.control_flow_ops_py_test.AssertTest.testGuardedAssertDoesNotCopyWhenTrue": ["protobuf.config_pb2.RunMetadata", "framework.ops.device", "ops.control_flow_ops.Assert", "ops.gen_logging_ops._assert", "<builtin>.len", "test.TestCase.assertLess", "test.TestCase.session", "framework.test_util.is_gpu_available", "test.TestCase.skipTest", "test.TestCase.assertEqual", "platform.test.gpu_device_name", "client.device_lib.list_local_devices", "protobuf.config_pb2.RunOptions", "<builtin>.str", "framework.constant_op.constant"], "ops.gen_logging_ops._assert": [], "client.device_lib.list_local_devices": [], "kernel_tests.control_flow_ops_py_test.WhileOpBenchmark._getInitVariables": ["ops.random_ops.truncated_normal", "ops.variable_scope.get_variable", "framework.constant_op.constant", "ops.random_ops.random_normal"], "ops.random_ops.random_normal": [], "ops.random_ops.truncated_normal": [], "kernel_tests.control_flow_ops_py_test.WhileOpBenchmark._runOneBenchmark": ["framework.ops.device", "test.Benchmark.evaluate", "ops.control_flow_ops.group", "six.moves.xrange", "ops.variables.global_variables_initializer", "ops.control_flow_ops.while_loop", "framework.ops.reset_default_graph", "framework.ops.reset_default_graph", "ops.math_ops.reduce_sum", "ops.gradients_impl.gradients", "time.time", "client.session.Session", "client.session.Session"], "kernel_tests.control_flow_ops_py_test.WhileOpBenchmark._runOneBenchmark.loop_body": ["ops.nn_ops.conv2d", "framework.ops.device", "ops.math_ops.add"], "ops.nn_ops.conv2d": [], "framework.ops.reset_default_graph": [], "test.Benchmark.evaluate": [], "kernel_tests.control_flow_ops_py_test.WhileOpBenchmark._runOneBenchmark.<lambda1>": [], "time.time": [], "kernel_tests.control_flow_ops_py_test.WhileOpBenchmark.benchmarkWhileOpCrossDevicePlacement": ["ops.math_ops.add", "test.Benchmark.report_benchmark"], "test.Benchmark.report_benchmark": [], "kernel_tests.control_flow_ops_py_test.WhileOpBenchmark.benchmarkWhileOpSameDevicePlacement": ["test.Benchmark.report_benchmark", "test.Benchmark.report_benchmark"], "kernel_tests.control_flow_ops_py_test.WhileOpBenchmark.benchmarkWhileOpUnrollCrossDevicePlacement": ["test.Benchmark.report_benchmark", "test.Benchmark.report_benchmark"], "kernel_tests.control_flow_ops_py_test.WhileOpBenchmark.benchmarkWhileOpUnrollSameDevicePlacement": ["test.Benchmark.report_benchmark", "test.Benchmark.report_benchmark"], "kernel_tests.control_flow_ops_py_test.EagerTest.testCond": ["<builtin>.isinstance", "ops.math_ops.less", "test.TestCase.assertFalse", "test.TestCase.assertAllEqual", "eager.context.eager_mode", "ops.control_flow_ops.cond"], "kernel_tests.control_flow_ops_py_test.EagerTest.testCond.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest.testCond.<lambda2>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest.DISABLED_testCondInDefun": ["<builtin>.isinstance", "framework.constant_op.constant", "test.TestCase.assertFalse", "test.TestCase.assertAllEqual", "eager.context.eager_mode", "test.TestCase.assertNotIsInstance", "eager.function.defun"], "kernel_tests.control_flow_ops_py_test.EagerTest.DISABLED_testCondInDefun.foo": ["ops.control_flow_ops.cond", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest.DISABLED_testCondInDefun.foo.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest.DISABLED_testCondInDefun.foo.<lambda2>": ["framework.constant_op.constant"], "test.TestCase.assertNotIsInstance": [], "kernel_tests.control_flow_ops_py_test.EagerTest.testWhileLoop": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual", "eager.context.eager_mode", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest.testWhileLoopWithMaxIterations": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual", "eager.context.eager_mode", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest": ["framework.test_util.run_v1_only"], "kernel_tests.control_flow_ops_py_test.EagerTest.testWhileWithMaximumIterationsAndSingleArgument": ["ops.control_flow_ops.while_loop", "test.TestCase.assertEqual", "eager.context.eager_mode", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest.testWhileWithMaximumIterationsAndSingleArgument.<lambda1>": [], "kernel_tests.control_flow_ops_py_test.EagerTest.testWhileWithMaximumIterationsAndSingleArgument.<lambda2>": [], "kernel_tests.control_flow_ops_py_test.EagerTest.testWithDependencies": ["test.TestCase.assertAllEqual", "eager.context.eager_mode", "framework.constant_op.constant", "ops.control_flow_ops.with_dependencies"], "kernel_tests.control_flow_ops_py_test.EagerTest.testTuple": ["test.TestCase.assertAllEqual", "ops.control_flow_ops.tuple", "eager.context.eager_mode", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest.testCase": ["test.TestCase.assertAllEqual", "ops.control_flow_ops.case", "eager.context.eager_mode", "framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest.testCase.<lambda1>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest.testCase.<lambda2>": ["framework.constant_op.constant"], "kernel_tests.control_flow_ops_py_test.EagerTest.testCase.<lambda3>": ["framework.constant_op.constant"], "platform.test.main": []}