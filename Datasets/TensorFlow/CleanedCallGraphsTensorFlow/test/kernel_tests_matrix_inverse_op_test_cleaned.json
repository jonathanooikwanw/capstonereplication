{"kernel_tests.matrix_inverse_op_test": ["platform.test.main"], "kernel_tests.matrix_inverse_op_test.InverseOpTest._verifyInverse": ["<builtin>.list", "ops.linalg_ops.matrix_inverse", "numpy.identity", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "framework.test_util.matmul_without_tf32", "test.TestCase.evaluate", "test.TestCase.assertShapeEqual", "numpy.tile"], "test.TestCase.cached_session": [], "ops.linalg_ops.matrix_inverse": [], "framework.test_util.matmul_without_tf32": [], "numpy.identity": [], "<builtin>.list": [], "numpy.tile": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "test.TestCase.assertShapeEqual": [], "kernel_tests.matrix_inverse_op_test.InverseOpTest._verifyInverseReal": ["test.TestCase.assertShapeEqual"], "kernel_tests.matrix_inverse_op_test.InverseOpTest._verifyInverseComplex": ["test.TestCase.assertShapeEqual"], "kernel_tests.matrix_inverse_op_test.InverseOpTest._makeBatch": ["numpy.tile", "numpy.expand_dims", "numpy.concatenate"], "numpy.expand_dims": [], "numpy.concatenate": [], "kernel_tests.matrix_inverse_op_test.InverseOpTest.testNonsymmetric": ["test.TestCase.assertShapeEqual", "test.TestCase.assertShapeEqual", "numpy.array", "test.TestCase.assertShapeEqual"], "numpy.array": [], "kernel_tests.matrix_inverse_op_test.InverseOpTest.testSymmetricPositiveDefinite": ["test.TestCase.assertShapeEqual", "test.TestCase.assertShapeEqual", "numpy.array", "test.TestCase.assertShapeEqual"], "kernel_tests.matrix_inverse_op_test.InverseOpTest": ["framework.test_util.deprecated_graph_mode_only"], "framework.test_util.deprecated_graph_mode_only": [], "kernel_tests.matrix_inverse_op_test.InverseOpTest.testNonSquareMatrix": ["numpy.array", "ops.linalg_ops.matrix_inverse", "test.TestCase.assertRaises"], "test.TestCase.assertRaises": [], "kernel_tests.matrix_inverse_op_test.InverseOpTest.testWrongDimensions": ["framework.constant_op.constant", "ops.linalg_ops.matrix_inverse", "test.TestCase.assertRaises"], "framework.constant_op.constant": [], "kernel_tests.matrix_inverse_op_test.InverseOpTest.testNotInvertible": ["framework.constant_op.constant", "ops.linalg_ops.matrix_inverse", "test.TestCase.assertRaisesOpError", "test.TestCase.cached_session"], "test.TestCase.assertRaisesOpError": [], "kernel_tests.matrix_inverse_op_test.InverseOpTest.testEmpty": ["test.TestCase.cached_session", "numpy.empty"], "numpy.empty": [], "kernel_tests.matrix_inverse_op_test.InverseOpTest.testRandomSmallAndLarge": ["numpy.random.uniform", "numpy.random.seed", "test.TestCase.cached_session", "numpy.prod"], "numpy.random.seed": [], "numpy.prod": [], "numpy.random.uniform": [], "kernel_tests.matrix_inverse_op_test.InverseOpTest.testConcurrentExecutesWithoutError": ["test.TestCase.session", "ops.linalg_ops.matrix_inverse", "test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.random_ops.random_normal"], "test.TestCase.session": [], "ops.random_ops.random_normal": [], "test.TestCase.assertAllEqual": [], "kernel_tests.matrix_inverse_op_test.MatrixInverseBenchmark._GenerateMatrix": ["numpy.ones", "numpy.tile", "numpy.diag", "ops.variables.Variable"], "numpy.ones": [], "numpy.diag": [], "ops.variables.Variable": [], "kernel_tests.matrix_inverse_op_test.MatrixInverseBenchmark.benchmarkMatrixInverseOp": ["framework.ops.Graph", "framework.ops.Graph", "ops.variables.global_variables_initializer", "ops.linalg_ops.matrix_inverse", "ops.control_flow_ops.group", "test.Benchmark.evaluate", "client.session.Session", "framework.ops.device", "platform.test.is_gpu_available", "platform.benchmark.benchmark_config", "test.Benchmark.run_op_benchmark"], "framework.ops.Graph": [], "platform.benchmark.benchmark_config": [], "client.session.Session": [], "framework.ops.device": [], "ops.variables.global_variables_initializer": [], "test.Benchmark.evaluate": [], "ops.control_flow_ops.group": [], "test.Benchmark.run_op_benchmark": [], "platform.test.is_gpu_available": [], "platform.test.main": []}