{"parallel_for.math_test": ["platform.test.main"], "parallel_for.math_test.MathTest._test_unary_cwise_ops": ["test_util.PForTestCase._test_loop_fn", "eager.backprop.GradientTape", "ops.random_ops.random_uniform", "ops.math_ops.complex"], "eager.backprop.GradientTape": [], "ops.random_ops.random_uniform": [], "ops.math_ops.complex": [], "parallel_for.math_test.MathTest._test_unary_cwise_ops.loop_fn": ["ops.math_ops.cast", "ops.array_ops.gather"], "ops.array_ops.gather": [], "ops.math_ops.cast": [], "test_util.PForTestCase._test_loop_fn": [], "parallel_for.math_test.MathTest.test_unary_cwise_complex_ops": ["ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_unary_cwise_real_ops_1": ["ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_unary_cwise_real_ops_1.<list1>.<lambda1>": [], "ops.math_ops.square": [], "parallel_for.math_test.MathTest.test_unary_cwise_real_ops_1.<lambda1>": ["ops.math_ops.square", "ops.math_ops.acosh"], "ops.math_ops.acosh": [], "parallel_for.math_test.MathTest.test_unary_cwise_real_ops_2": ["ops.math_ops.acosh"], "parallel_for.math_test.MathTest.test_unary_cwise_real_ops_2.<list1>.<lambda1>": [], "ops.nn.leaky_relu": [], "parallel_for.math_test.MathTest.test_unary_cwise_real_ops_2.<lambda1>": ["ops.nn.leaky_relu"], "parallel_for.math_test.MathTest.test_unary_cwise_no_grad": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_unary_cwise_no_grad.loop_fn": ["ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_binary_cwise_ops": ["ops.random_ops.random_uniform", "framework.test_util.is_xla_enabled", "framework.ops.disable_tensor_equality", "framework.ops.enable_tensor_equality", "framework.test_util.is_gpu_available", "test_util.PForTestCase._test_loop_fn"], "framework.ops.enable_tensor_equality": [], "parallel_for.math_test.MathTest.test_binary_cwise_ops.safe_polygamma": ["ops.clip_ops.clip_by_value", "ops.math_ops.round", "ops.math_ops.polygamma"], "ops.clip_ops.clip_by_value": [], "ops.math_ops.round": [], "ops.math_ops.polygamma": [], "parallel_for.math_test.MathTest.test_binary_cwise_ops.safe_zeta": ["ops.math_ops.zeta"], "ops.math_ops.zeta": [], "parallel_for.math_test.MathTest.test_binary_cwise_ops.<list2>.<lambda1>": [], "framework.ops.convert_to_tensor": [], "parallel_for.math_test.MathTest.test_binary_cwise_ops.<lambda1>": ["framework.ops.convert_to_tensor"], "parallel_for.math_test.MathTest.test_binary_cwise_ops.<list2>.<lambda2>": [], "parallel_for.math_test.MathTest.test_binary_cwise_ops.<lambda2>": ["framework.ops.convert_to_tensor"], "framework.test_util.is_xla_enabled": [], "framework.test_util.is_gpu_available": [], "parallel_for.math_test.MathTest.test_binary_cwise_ops.loop_fn": ["ops.array_ops.gather"], "framework.ops.disable_tensor_equality": [], "parallel_for.math_test.MathTest.test_approximate_equal": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_approximate_equal.loop_fn": ["ops.math_ops.approximate_equal", "ops.array_ops.gather"], "ops.math_ops.approximate_equal": [], "parallel_for.math_test.MathTest.test_abs_complex": ["test_util.PForTestCase.assertAllEqual", "parallel_for.control_flow_ops.vectorized_map", "test_util.PForTestCase.evaluate", "ops.math_ops.cast"], "parallel_for.control_flow_ops.vectorized_map": [], "test_util.PForTestCase.evaluate": [], "test_util.PForTestCase.assertAllEqual": [], "parallel_for.math_test.MathTest.test_colocate_with": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_colocate_with.loop_fn": ["framework.ops.colocate_with", "ops.array_ops.gather"], "framework.ops.colocate_with": [], "parallel_for.math_test.MathTest.test_addn": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_addn.loop_fn": ["ops.math_ops.add_n", "ops.array_ops.gather"], "ops.math_ops.add_n": [], "parallel_for.math_test.MathTest.test_cross": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_cross.loop_fn": ["ops.math_ops.cross", "ops.array_ops.gather"], "ops.math_ops.cross": [], "framework.test_util.run_without_tensor_float_32": [], "parallel_for.math_test.MathTest": ["framework.test_util.run_without_tensor_float_32", "absl.testing.parameterized.parameters"], "parallel_for.math_test.MathTest.test_matmul": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_matmul.loop_fn": ["ops.math_ops.matmul", "ops.array_ops.gather"], "ops.math_ops.matmul": [], "parallel_for.math_test.MathTest.test_batch_matmul": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_batch_matmul.loop_fn": ["ops.math_ops.matmul", "ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_batch_matmul_broadcast": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_batch_matmul_broadcast.loop_fn": ["ops.math_ops.matmul", "ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_reduction": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform", "framework.constant_op.constant"], "framework.constant_op.constant": [], "parallel_for.math_test.MathTest.test_reduction.loop_fn": ["ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_boolean_reduction": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform", "framework.constant_op.constant"], "parallel_for.math_test.MathTest.test_boolean_reduction.loop_fn": ["ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_argmin_argmax": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_argmin_argmax.loop_fn": ["ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_bucketize": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_bucketize.loop_fn": ["ops.math_ops.bucketize", "ops.array_ops.gather"], "ops.math_ops.bucketize": [], "parallel_for.math_test.MathTest.test_clip_by_value": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_clip_by_value.loop_fn": ["ops.clip_ops.clip_by_value", "ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_cum_sum": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform", "framework.constant_op.constant"], "parallel_for.math_test.MathTest.test_cum_sum.loop_fn": ["ops.math_ops.cumsum", "ops.array_ops.gather"], "ops.math_ops.cumsum": [], "parallel_for.math_test.MathTest.test_cum_prod": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform", "framework.constant_op.constant"], "parallel_for.math_test.MathTest.test_cum_prod.loop_fn": ["ops.math_ops.cumprod", "ops.array_ops.gather"], "ops.math_ops.cumprod": [], "parallel_for.math_test.MathTest.test_bias_add": ["test_util.PForTestCase._test_loop_fn", "eager.backprop.GradientTape", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_bias_add.loop_fn": ["ops.math_ops.reduce_sum", "ops.nn.bias_add", "ops.array_ops.gather"], "ops.nn.bias_add": [], "ops.math_ops.reduce_sum": [], "absl.testing.parameterized.parameters": [], "parallel_for.math_test.MathTest.test_unsorted_segment_reduction": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform", "framework.constant_op.constant"], "parallel_for.math_test.MathTest.test_unsorted_segment_reduction.loop_fn": ["ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_sparse_segment": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform", "framework.constant_op.constant"], "parallel_for.math_test.MathTest.test_sparse_segment.loop_fn": ["ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_sparse_segment_grad": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform", "framework.constant_op.constant"], "parallel_for.math_test.MathTest.test_sparse_segment_grad.loop_fn": ["ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_cast": ["test_util.PForTestCase._test_loop_fn", "framework.constant_op.constant"], "parallel_for.math_test.MathTest.test_cast.loop_fn": ["ops.math_ops.cast", "ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_tanh_axpy": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform", "framework.constant_op.constant"], "parallel_for.math_test.MathTest.test_tanh_axpy.loop_fn": ["ops.math_ops.tanh", "ops.array_ops.gather"], "ops.math_ops.tanh": [], "parallel_for.math_test.MathTest.test_select": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_select.loop_fn": ["ops.array_ops.where", "ops.array_ops.gather"], "ops.array_ops.where": [], "parallel_for.math_test.MathTest.test_selectv2_cond_needs_broadcast": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_selectv2_cond_needs_broadcast.loop_fn": ["ops.array_ops.where_v2", "ops.array_ops.gather"], "ops.array_ops.where_v2": [], "parallel_for.math_test.MathTest.test_selectv2_args_need_broadcast": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_selectv2_args_need_broadcast.loop_fn": ["ops.array_ops.where_v2", "ops.array_ops.gather"], "parallel_for.math_test.MathTest.test_selectv2_cond_fixed": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.MathTest.test_selectv2_cond_fixed.loop_fn": ["ops.array_ops.where_v2", "ops.array_ops.gather"], "parallel_for.math_test.LinalgTest.test_cholesky": ["ops.math_ops.matmul", "ops.random_ops.random_normal", "test_util.PForTestCase._test_loop_fn", "ops.array_ops.matrix_transpose", "ops.linalg_ops.eye"], "ops.random_ops.random_normal": [], "ops.array_ops.matrix_transpose": [], "ops.linalg_ops.eye": [], "parallel_for.math_test.LinalgTest.test_cholesky.loop_fn": ["ops.linalg_ops.cholesky", "ops.array_ops.gather"], "ops.linalg_ops.cholesky": [], "parallel_for.math_test.LinalgTest.test_log_matrix_determinant": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_normal"], "parallel_for.math_test.LinalgTest.test_log_matrix_determinant.loop_fn": ["ops.linalg_ops.log_matrix_determinant", "ops.array_ops.gather"], "ops.linalg_ops.log_matrix_determinant": [], "parallel_for.math_test.LinalgTest.test_matrix_inverse": ["ops.linalg_ops.eye", "test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.LinalgTest.test_matrix_inverse.loop_fn": ["ops.linalg_ops.matrix_inverse", "ops.array_ops.gather"], "ops.linalg_ops.matrix_inverse": [], "parallel_for.math_test.LinalgTest.test_matrix_solve": ["ops.linalg_ops.eye", "test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.LinalgTest.test_matrix_solve.loop_fn": ["ops.linalg_ops.matrix_solve", "ops.array_ops.gather"], "ops.linalg_ops.matrix_solve": [], "parallel_for.math_test.LinalgTest.test_matrix_triangular_solve": ["ops.linalg_ops.eye", "ops.array_ops.matrix_band_part", "ops.random_ops.random_uniform", "test_util.PForTestCase._test_loop_fn"], "ops.array_ops.matrix_band_part": [], "parallel_for.math_test.LinalgTest.test_matrix_triangular_solve.loop_fn": ["ops.linalg_ops.matrix_triangular_solve", "ops.array_ops.gather"], "ops.linalg_ops.matrix_triangular_solve": [], "parallel_for.math_test.LinalgTest.test_self_adjoint_eig": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_normal", "ops.array_ops.matrix_transpose"], "parallel_for.math_test.LinalgTest.test_self_adjoint_eig.loop_fn": ["ops.linalg_ops.self_adjoint_eig", "ops.linalg_ops.self_adjoint_eigvals", "ops.array_ops.gather"], "ops.linalg_ops.self_adjoint_eig": [], "ops.linalg_ops.self_adjoint_eigvals": [], "parallel_for.math_test.LinalgTest": ["framework.test_util.run_without_tensor_float_32"], "parallel_for.math_test.LinalgTest.test_einsum": ["test_util.PForTestCase._test_loop_fn", "ops.random_ops.random_uniform"], "parallel_for.math_test.LinalgTest.test_einsum.loop_fn": ["ops.special_math_ops.einsum", "ops.array_ops.gather"], "ops.special_math_ops.einsum": [], "platform.test.main": []}