{"client.session_test": ["platform.googletest.main"], "client.session_test.SessionTest.setUp": ["<builtin>.super", "warnings.simplefilter"], "<builtin>.super": [], "warnings.simplefilter": [], "client.session_test.SessionTest.testUseExistingGraph": ["client.session.Session", "framework.ops.Graph", "framework.ops.device", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.matmul", "framework.constant_op.constant"], "framework.ops.Graph": [], "framework.ops.device": [], "framework.constant_op.constant": [], "ops.math_ops.matmul": [], "client.session.Session": [], "test_util.TensorFlowTestCase.assertAllEqual": [], "client.session_test.SessionTest.testUseDefaultGraph": ["client.session.Session", "framework.ops.Graph", "framework.ops.device", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.matmul", "framework.constant_op.constant"], "client.session_test.SessionTest.testCreate": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.asarray", "framework.constant_op.constant", "ops.array_ops.identity"], "ops.array_ops.identity": [], "numpy.asarray": [], "client.session_test.SessionTest.testManyCPUs": ["client.session.Session", "device.DeviceSpec.from_string", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "protobuf.config_pb2.ConfigProto", "test_util.TensorFlowTestCase.assertEqual"], "protobuf.config_pb2.ConfigProto": [], "device.DeviceSpec.from_string": [], "test_util.TensorFlowTestCase.assertEqual": [], "client.session_test.SessionTest.testPerSessionThreads": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "protobuf.config_pb2.ConfigProto", "framework.constant_op.constant"], "client.session_test.SessionTest.testSessionInterOpThreadPool": ["client.session.Session", "<builtin>.len", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "protobuf.config_pb2.RunOptions", "protobuf.config_pb2.ConfigProto"], "protobuf.config_pb2.RunOptions": [], "<builtin>.len": [], "client.session_test.SessionTest.testErrorsReported": ["client.session.Session", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaises"], "test_util.TensorFlowTestCase.assertRaises": [], "client.session_test.SessionTest.testErrorPayload": ["ops.array_ops.placeholder", "client.session.Session", "test_util.TensorFlowTestCase.assertRaisesOpError"], "ops.array_ops.placeholder": [], "client.session_test.SessionTest.testErrorPayload.<lambda1>": [], "test_util.TensorFlowTestCase.assertRaisesOpError": [], "client.session_test.SessionTest.testErrorCodeWithNoNodeDef": ["ops.array_ops.placeholder", "client.session.Session", "ops.math_ops.add", "test_util.TensorFlowTestCase.assertRaisesOpError"], "ops.math_ops.add": [], "client.session_test.SessionTest.testErrorCodeWithNoNodeDef.exc_predicate": [], "client.session_test.SessionTest.testErrorBasedOn": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaisesOpError", "framework.constant_op.constant", "ops.array_ops.identity", "ops.array_ops.placeholder"], "client.session_test.SessionTest.testErrorBasedOn.exc_predicate": [], "client.session_test.SessionTest.testFetchNone": ["client.session.Session", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaises"], "client.session_test.SessionTest.testFetchSingleton": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNone", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "test_util.TensorFlowTestCase.assertIsNone": [], "client.session_test.SessionTest.testFetchSingletonByName": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNone", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testFetchList": ["client.session.Session", "ops.variables.Variable", "test_util.TensorFlowTestCase.assertIsInstance", "ops.control_flow_ops.no_op", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "ops.control_flow_ops.no_op": [], "ops.variables.Variable": [], "test_util.TensorFlowTestCase.assertIsInstance": [], "client.session_test.SessionTest.testFetchTuple": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsInstance", "ops.control_flow_ops.no_op", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testFetchNamedTuple": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsInstance", "test_util.TensorFlowTestCase.assertIsNone", "ops.control_flow_ops.no_op", "collections.namedtuple", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "collections.namedtuple": [], "client.session_test.SessionTest.testFetchDict": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsInstance", "test_util.TensorFlowTestCase.assertIsNone", "ops.control_flow_ops.no_op", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testFetchOrderedDict": ["client.session.Session", "<builtin>.list", "test_util.TensorFlowTestCase.assertIsInstance", "test_util.TensorFlowTestCase.assertIsNone", "ops.control_flow_ops.no_op", "collections.OrderedDict", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "collections.OrderedDict": [], "<builtin>.list": [], "framework.test_util.run_v1_only": [], "client.session_test.SessionTest": ["framework.test_util.run_v1_only"], "client.session_test.SessionTest.testFetchAttrs": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsInstance", "test_util.TensorFlowTestCase.skipTest", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "framework.constant_op.constant"], "test_util.TensorFlowTestCase.skipTest": [], "attr.ib": [], "client.session_test.SessionTest.testFetchAttrs.SampleAttr": ["attr.ib"], "numpy.array": [], "client.session_test.SessionTest.testFetchNestedAttrs": ["client.session.Session", "<builtin>.len", "test_util.TensorFlowTestCase.assertIsInstance", "test_util.TensorFlowTestCase.skipTest", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertIn", "numpy.float64", "numpy.float32", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testFetchNestedAttrs.SampleAttr": ["attr.ib"], "numpy.float32": [], "numpy.float64": [], "test_util.TensorFlowTestCase.assertIn": [], "client.session_test.SessionTest.testFetchNestingEmptyOneLevel": ["client.session.Session", "<builtin>.len", "test_util.TensorFlowTestCase.assertIsInstance", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testFetchNestingOneLevel": ["client.session.Session", "<builtin>.len", "test_util.TensorFlowTestCase.assertIsInstance", "collections.defaultdict", "<builtin>.zip", "ops.control_flow_ops.no_op", "<builtin>.dict", "frozendict.frozendict", "collections.namedtuple", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "<builtin>.zip": [], "<builtin>.dict": [], "frozendict.frozendict": [], "collections.defaultdict": [], "client.session_test.SessionTest.testFetchTensorObject": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "ops.math_ops.matmul"], "client.session_test.SessionTest.testFetchScalar": ["client.session.Session", "<builtin>.type", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.add", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "<builtin>.type": [], "client.session_test.SessionTest.testFetchOperationObject": ["test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "ops.variables.Variable", "framework.constant_op.constant"], "client.session_test.SessionTest.testFetchSparseTensor": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "framework.sparse_tensor.SparseTensor", "numpy.array", "framework.constant_op.constant"], "framework.sparse_tensor.SparseTensor": [], "client.session_test.SessionTest.testFeedSparseTensor": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "framework.sparse_tensor.SparseTensor", "numpy.array", "ops.array_ops.identity", "ops.array_ops.placeholder"], "client.session_test.SessionTest.testFeedSparsePlaceholder": ["client.session.Session", "ops.array_ops.sparse_placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "framework.sparse_tensor.SparseTensor", "numpy.array", "ops.array_ops.identity"], "ops.array_ops.sparse_placeholder": [], "client.session_test.SessionTest.testFeedSparsePlaceholderPartialShape": ["client.session.Session", "ops.array_ops.sparse_placeholder", "test_util.TensorFlowTestCase.assertAllEqual", "framework.sparse_tensor.SparseTensor", "numpy.array", "ops.array_ops.identity"], "client.session_test.SessionTest.testFeedSparsePlaceholderConstantShape": ["client.session.Session", "ops.array_ops.sparse_placeholder", "framework.tensor_util.constant_value", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "ops.array_ops.identity"], "framework.tensor_util.constant_value": [], "client.session_test.SessionTest.testFetchIndexedSlices": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "framework.constant_op.constant", "framework.ops.IndexedSlices"], "framework.ops.IndexedSlices": [], "client.session_test.SessionTest.testFeedIndexedSlices": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "ops.array_ops.identity", "ops.array_ops.placeholder", "framework.ops.IndexedSlices"], "client.session_test.SessionTest.testFetchIndexedSlicesWithoutDenseShape": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "framework.constant_op.constant", "framework.ops.IndexedSlices"], "client.session_test.SessionTest.testFeedIndexedSlicesWithoutDenseShape": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.array", "ops.array_ops.identity", "ops.array_ops.placeholder", "framework.ops.IndexedSlices"], "client.session_test.SessionTest.testExtendWithStatelessOperations": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "ops.math_ops.matmul"], "client.session_test.SessionTest.testExtendWithStatefulOperations": ["client.session.Session", "ops.variables.Variable", "ops.state_ops.assign", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.matmul", "framework.constant_op.constant"], "ops.state_ops.assign": [], "client.session_test.SessionTest.testExtendWithGroupBy": ["client.session.Session", "ops.variables.Variable", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "ops.control_flow_ops.group"], "ops.control_flow_ops.group": [], "client.session_test.SessionTest.testTensorGetMethod": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "ops.math_ops.matmul"], "client.session_test.SessionTest.testOperationRunMethod": ["client.session.Session", "ops.state_ops.assign", "test_util.TensorFlowTestCase.assertAllEqual", "ops.variables.VariableV1", "framework.constant_op.constant"], "ops.variables.VariableV1": [], "client.session_test.SessionTest.testDefaultGraph": ["client.session.Session", "ops.variables.Variable", "ops.state_ops.assign", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.matmul", "framework.constant_op.constant", "framework.ops.get_default_graph", "test_util.TensorFlowTestCase.assertEqual"], "framework.ops.get_default_graph": [], "client.session_test.SessionTest._testDefaultGraphInThread": ["client.session.Session", "ops.variables.Variable", "ops.state_ops.assign", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.matmul", "framework.constant_op.constant", "framework.ops.get_default_graph", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testDefaultGraphWithThreads": ["threading.Event", "<builtin>.enumerate", "<builtin>.range", "test_util.TensorFlowTestCase.checkedThread"], "threading.Event": [], "<builtin>.range": [], "<builtin>.enumerate": [], "test_util.TensorFlowTestCase.checkedThread": [], "client.session_test.SessionTest.testParallelRun": ["client.session.Session", "test_util.TensorFlowTestCase.checkedThread", "<builtin>.range", "framework.constant_op.constant", "threading.Event"], "client.session_test.SessionTest.testParallelRun.run_step": ["test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest._build_graph": ["ops.control_flow_ops.while_loop", "ops.gradients_impl.gradients", "time.sleep", "framework.ops.device", "framework.importer.import_graph_def", "random.random", "<builtin>.range", "ops.array_ops.placeholder", "framework.ops.get_default_graph", "framework.ops.colocate_with"], "random.random": [], "time.sleep": [], "framework.ops.colocate_with": [], "client.session_test.SessionTest._build_graph.<lambda1>": [], "client.session_test.SessionTest._build_graph.<lambda2>": [], "ops.control_flow_ops.while_loop": [], "ops.gradients_impl.gradients": [], "framework.importer.import_graph_def": [], "client.session_test.SessionTest.testParallelRunAndSingleBuild": ["client.session.Session", "test_util.TensorFlowTestCase.checkedThread", "test_util.TensorFlowTestCase.checkedThread", "<builtin>.range", "framework.constant_op.constant", "threading.Event"], "client.session_test.SessionTest.testParallelRunAndSingleBuild.run_loop": ["random.random", "time.sleep", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testParallelRunAndParallelBuild": ["client.session.Session", "test_util.TensorFlowTestCase.checkedThread", "<builtin>.range", "framework.constant_op.constant", "threading.Event"], "client.session_test.SessionTest.testParallelRunAndParallelBuild.run_loop": ["random.random", "time.sleep", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testRunFeedDict": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.ones", "numpy.array", "ops.array_ops.zeros"], "ops.array_ops.zeros": [], "numpy.ones": [], "client.session_test.SessionTest.testGraphDef": ["client.session.Session", "<builtin>.len", "test_util.TensorFlowTestCase.assertProtoEquals", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "test_util.TensorFlowTestCase.assertProtoEquals": [], "client.session_test.SessionTest.testUseAfterClose": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaisesWithPredicateMatch"], "client.session_test.SessionTest.testUseAfterClose.<lambda1>": ["<builtin>.str"], "<builtin>.str": [], "test_util.TensorFlowTestCase.assertRaisesWithPredicateMatch": [], "client.session_test.SessionTest.testUseAfterCloseConcurrent": ["client.session.Session", "threading.Thread", "test_util.TensorFlowTestCase.assertAllEqual", "time.sleep", "framework.constant_op.constant"], "client.session_test.SessionTest.testUseAfterCloseConcurrent.update_thread": ["test_util.TensorFlowTestCase.assertRaisesWithPredicateMatch"], "client.session_test.SessionTest.testUseAfterCloseConcurrent.update_thread.<lambda1>": ["<builtin>.str"], "threading.Thread": [], "client.session_test.SessionTest.testUseEmptyGraph": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaisesRegex"], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "client.session_test.SessionTest.testNotEntered": ["client.session.Session", "test_util.TensorFlowTestCase.assertIsNone", "framework.ops.device", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaisesWithPredicateMatch", "ops._default_session_stack.get_default", "test_util.TensorFlowTestCase.assertEqual"], "ops._default_session_stack.get_default": [], "client.session_test.SessionTest.testNotEntered.<lambda1>": ["<builtin>.str"], "client.session_test.SessionTest.testInteractive": ["test_util.TensorFlowTestCase.assertAllEqual", "framework.ops.device", "ops.math_ops.matmul", "framework.constant_op.constant", "client.session.InteractiveSession"], "client.session.InteractiveSession": [], "client.session_test.SessionTest.testMultipleInteractiveSessionsWarning": ["<builtin>.len", "<builtin>.str", "test_util.TensorFlowTestCase.assertIn", "framework.constant_op.constant", "client.session.InteractiveSession", "warnings.catch_warnings", "test_util.TensorFlowTestCase.assertEqual"], "warnings.catch_warnings": [], "client.session_test.SessionTest.testInteractivePlacePrunedGraph": ["framework.ops.device", "test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant", "client.session.InteractiveSession"], "client.session_test.SessionTest.testDefaultSessionPlacePrunedGraph": ["client.session.Session", "framework.ops.device", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaises"], "client.session_test.SessionTest.testSharedGraph": ["client.session.Session", "framework.ops.Graph", "framework.ops.device", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.matmul", "framework.constant_op.constant"], "client.session_test.SessionTest.testDuplicatedInputs": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant"], "client.session_test.SessionTest.testFeedAndFetch": ["client.session.Session", "numpy.random.randint", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.sqrt", "ops.array_ops.identity", "ops.array_ops.placeholder"], "numpy.random.randint": [], "numpy.sqrt": [], "client.session_test.SessionTest.testMakeCallableOnTensorWithRunOptions": ["client.session.Session", "<builtin>.len", "test_util.TensorFlowTestCase.assertGreater", "framework.constant_op.constant", "protobuf.config_pb2.RunMetadata", "protobuf.config_pb2.RunOptions", "test_util.TensorFlowTestCase.assertEqual"], "protobuf.config_pb2.RunMetadata": [], "test_util.TensorFlowTestCase.assertGreater": [], "client.session_test.SessionTest.testMakeCallableOnOperationWithRunOptions": ["client.session.Session", "<builtin>.len", "ops.variables.Variable", "test_util.TensorFlowTestCase.assertGreater", "ops.state_ops.assign_add", "protobuf.config_pb2.RunMetadata", "protobuf.config_pb2.RunOptions", "test_util.TensorFlowTestCase.assertEqual"], "ops.state_ops.assign_add": [], "client.session_test.SessionTest.testMakeCallableWithFeedListAndRunOptions": ["client.session.Session", "<builtin>.len", "test_util.TensorFlowTestCase.assertGreater", "test_util.TensorFlowTestCase.assertAllClose", "ops.math_ops.add", "ops.array_ops.placeholder", "protobuf.config_pb2.RunMetadata", "protobuf.config_pb2.RunOptions", "test_util.TensorFlowTestCase.assertEqual"], "test_util.TensorFlowTestCase.assertAllClose": [], "client.session_test.SessionTest.testOptimizedMakeCallable": ["client.session.Session", "numpy.array", "<builtin>.range", "ops.math_ops.add", "protobuf.config_pb2.CallableOptions", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual"], "protobuf.config_pb2.CallableOptions": [], "client.session_test.SessionTest.testOptimizedMakeCallableWithRunMetadata": ["client.session.Session", "<builtin>.len", "test_util.TensorFlowTestCase.assertGreater", "numpy.array", "ops.math_ops.add", "protobuf.config_pb2.CallableOptions", "ops.array_ops.placeholder", "protobuf.config_pb2.RunMetadata", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testFeedError": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaisesRegex", "framework.constant_op.constant", "ops.array_ops.identity", "ops.array_ops.placeholder"], "client.session_test.SessionTest.testFeedPrecisionLossError": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaisesRegex", "framework.constant_op.constant", "numpy.iinfo"], "numpy.iinfo": [], "client.session_test.SessionTest.testStringFetch": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.str", "numpy.array", "util.compat.as_bytes", "framework.constant_op.constant", "six.moves.xrange"], "util.compat.as_bytes": [], "six.moves.xrange": [], "client.session_test.SessionTest.testStringFeed": ["client.session.Session", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.str", "numpy.array", "util.compat.as_bytes", "ops.array_ops.identity", "six.moves.xrange", "ops.array_ops.placeholder"], "client.session_test.SessionTest.testStringFeedWithNullCharacters": ["ops.array_ops.placeholder", "client.session.Session", "ops.array_ops.identity", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testStringFeedWithUnicode": ["client.session.Session", "<builtin>.len", "<builtin>.range", "ops.array_ops.identity", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testInvalidTargetFails": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaisesRegex"], "client.session_test.SessionTest.testFetchByNameDifferentStringTypes": ["client.session.Session", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertIsInstance"], "client.session_test.SessionTest.testIncorrectGraph": ["client.session.Session", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testFeedDictKeyException": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaisesRegex", "framework.constant_op.constant"], "client.session_test.SessionTest.testPerStepTrace": ["client.session.Session", "<builtin>.len", "test_util.TensorFlowTestCase.assertTrue", "test_util.TensorFlowTestCase.assertFalse", "framework.ops.device", "framework.constant_op.constant", "protobuf.config_pb2.RunMetadata", "protobuf.config_pb2.RunOptions", "test_util.TensorFlowTestCase.assertEqual"], "test_util.TensorFlowTestCase.assertFalse": [], "test_util.TensorFlowTestCase.assertTrue": [], "client.session_test.SessionTest.testRunOptionsRunMetadata": ["client.session.Session", "<builtin>.len", "test_util.TensorFlowTestCase.assertTrue", "test_util.TensorFlowTestCase.assertFalse", "framework.ops.device", "framework.constant_op.constant", "protobuf.config_pb2.RunMetadata", "protobuf.config_pb2.RunOptions", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testFeedShapeCompatibility": ["client.session.Session", "ops.array_ops.reshape", "test_util.TensorFlowTestCase.assertRaisesRegex", "framework.constant_op.constant"], "ops.array_ops.reshape": [], "client.session_test.SessionTest.testInferShapesFalse": ["client.session.Session", "framework.ops.Graph", "framework.ops.device", "test_util.TensorFlowTestCase.assertNotIn", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "test_util.TensorFlowTestCase.assertNotIn": [], "client.session_test.SessionTest.testInferShapesTrue": ["client.session.Session", "framework.ops.Graph", "framework.ops.device", "protobuf.config_pb2.GraphOptions", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertIn", "protobuf.config_pb2.ConfigProto", "test_util.TensorFlowTestCase.assertEqual"], "protobuf.config_pb2.GraphOptions": [], "client.session_test.SessionTest.testBuildCostModel": ["client.session.Session", "test_util.TensorFlowTestCase.assertTrue", "ops.math_ops.multiply", "test_util.TensorFlowTestCase.assertFalse", "framework.ops.device", "protobuf.config_pb2.GraphOptions", "ops.math_ops.add", "ops.array_ops.identity", "six.moves.xrange", "ops.array_ops.placeholder", "protobuf.config_pb2.RunMetadata", "protobuf.config_pb2.RunOptions", "protobuf.config_pb2.ConfigProto"], "ops.math_ops.multiply": [], "client.session_test.SessionTest.runTestOutputPartitionGraphs": ["<builtin>.len", "test_util.TensorFlowTestCase.assertGreater", "framework.constant_op.constant", "protobuf.config_pb2.RunMetadata", "protobuf.config_pb2.RunOptions", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testOutputPartitionGraphsDirect": ["client.session.Session", "client.session.Session"], "client.session_test.SessionTest.testOutputPartitionGraphsDistributed": ["client.session.Session", "client.session.Session", "server_lib.Server.create_local_server"], "server_lib.Server.create_local_server": [], "client.session_test.SessionTest.testNonInteractiveSessionNesting": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaisesRegex", "ops._default_session_stack.reset"], "ops._default_session_stack.reset": [], "client.session_test.SessionTest.testInteractiveSessionNesting": ["client.session.InteractiveSession"], "client.session_test.SessionTest.testAsDefault": ["client.session.Session", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testReentry": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaisesRegex"], "client.session_test.SessionTest.testInvalidArgument": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaisesRegex"], "client.session_test.SessionTest.testTimeoutWithShortOperations": ["client.session.Session", "ops.data_flow_ops.FIFOQueue", "<builtin>.range", "framework.constant_op.constant", "protobuf.config_pb2.ConfigProto", "test_util.TensorFlowTestCase.assertEqual"], "ops.data_flow_ops.FIFOQueue": [], "client.session_test.SessionTest.testRegisterFetchAndFeedConversionFunctions": ["test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertAllClose", "numpy.array", "test_util.TensorFlowTestCase.cached_session", "client.session.register_session_run_conversion_functions", "client.session.register_session_run_conversion_functions"], "client.session_test.SessionTest.testRegisterFetchAndFeedConversionFunctions.SquaredTensor.__init__": ["ops.math_ops.square"], "ops.math_ops.square": [], "client.session_test.SessionTest.testRegisterFetchAndFeedConversionFunctions.<lambda1>": [], "client.session_test.SessionTest.testRegisterFetchAndFeedConversionFunctions.<lambda1>.<lambda1>": [], "client.session_test.SessionTest.testRegisterFetchAndFeedConversionFunctions.<lambda2>": [], "client.session_test.SessionTest.testRegisterFetchAndFeedConversionFunctions.<lambda3>": [], "client.session.register_session_run_conversion_functions": [], "test_util.TensorFlowTestCase.cached_session": [], "client.session_test.SessionTest.testDefaultLogDevicePlacement": ["eager.context.executing_eagerly", "client.session.Session", "<builtin>.len", "eager.context.set_log_device_placement", "eager.context.set_log_device_placement", "test_util.TensorFlowTestCase.evaluate", "<builtin>.str", "server_lib.Server.create_local_server", "framework.constant_op.constant", "protobuf.config_pb2.ConfigProto", "test_util.TensorFlowTestCase.assertEqual", "framework.ops.executing_eagerly_outside_functions"], "client.session_test.SessionTest.testDefaultLogDevicePlacement.CaptureStderr.__enter__": ["os.dup", "sys.stderr.fileno", "os.dup2", "util.compat.as_str", "os.pipe"], "util.compat.as_str": [], "sys.stderr.fileno": [], "os.pipe": [], "os.dup": [], "os.dup2": [], "client.session_test.SessionTest.testDefaultLogDevicePlacement.CaptureStderr.__exit__": ["sys.stderr.write", "os.dup2", "os.close", "sys.stderr.flush", "util.compat.as_str"], "sys.stderr.write": [], "sys.stderr.flush": [], "client.session_test.SessionTest.testDefaultLogDevicePlacement.CaptureStderr.read": ["os.read", "util.compat.as_str"], "os.close": [], "os.read": [], "client.session_test.SessionTest.testDefaultLogDevicePlacement.CaptureStderr.__str__": [], "eager.context.set_log_device_placement": [], "eager.context.executing_eagerly": [], "framework.ops.executing_eagerly_outside_functions": [], "client.session_test.SessionTest.testDefaultLogDevicePlacement.fn": [], "test_util.TensorFlowTestCase.evaluate": [], "client.session_test.SessionTest.testLocalMasterSessionTimeout": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaises", "ops.data_flow_ops.FIFOQueue", "server_lib.Server.create_local_server", "protobuf.config_pb2.ConfigProto"], "client.session_test.SessionTest.testDefaultServerTimeout": ["client.session.Session", "test_util.TensorFlowTestCase.assertRaises", "ops.data_flow_ops.FIFOQueue", "server_lib.Server.create_local_server", "protobuf.config_pb2.ConfigProto"], "client.session_test.SessionTest.runTestBuildGraphError": ["ops.array_ops.placeholder", "ops.math_ops.add", "test_util.TensorFlowTestCase.assertRaisesOpError", "ops.gen_control_flow_ops.enter"], "ops.gen_control_flow_ops.enter": [], "client.session_test.SessionTest.testBuildGraphErrorDirect": ["client.session.Session", "client.session.Session"], "client.session_test.SessionTest.testBuildGraphErrorDist": ["client.session.Session", "client.session.Session", "server_lib.Server.create_local_server"], "client.session_test.SessionTest.testDeviceAttributes": ["client.session._DeviceAttributes", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertTrue"], "client.session._DeviceAttributes": [], "client.session_test.SessionTest.testDeviceAttributesCanonicalization": ["client.session._DeviceAttributes", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertTrue"], "client.session_test.SessionTest.runTestAddFunctionToSession": ["client.session.Session", "client.session.Session", "framework.constant_op.constant", "framework.function.Defun", "test_util.TensorFlowTestCase.assertEqual"], "framework.function.Defun": [], "client.session_test.SessionTest.runTestAddFunctionToSession.foo": [], "client.session_test.SessionTest.testAddFunctionToSession": ["test_util.TensorFlowTestCase.assertEqual"], "client.session_test.SessionTest.testAddFunctionToGrpcSession": ["test_util.TensorFlowTestCase.assertEqual", "server_lib.Server.create_local_server"], "client.session_test.SessionTest.testOpenAndCloseGrpcSession": ["client.session.Session", "server_lib.Server.create_local_server"], "client.session_test.SessionTest.testOpenAndCloseSession": ["client.session.Session"], "client.session_test.SessionTest.testAutoConvertAndCheckData": ["ops.array_ops.placeholder", "test_util.TensorFlowTestCase.cached_session", "test_util.TensorFlowTestCase.assertRaisesRegex"], "client.session_test.SessionTest.testOptimizerOptions": ["framework.ops.Graph", "client.session.Session", "test_util.TensorFlowTestCase.assertEqual", "framework.config.set_optimizer_experimental_options"], "framework.config.set_optimizer_experimental_options": [], "platform.googletest.main": []}