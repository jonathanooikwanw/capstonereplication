{"python.interpreter_test": ["platform.test.main", "sys.getdlopenflags", "sys.setdlopenflags", "<builtin>.hasattr"], "<builtin>.hasattr": [], "sys.getdlopenflags": [], "sys.setdlopenflags": [], "python.interpreter_test.InterpreterCustomOpsTest.testRegistererByName": ["testdata._pywrap_test_registerer.get_num_test_registerer_calls", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.InterpreterWithCustomOps", "test_util.TensorFlowTestCase.assertTrue", "platform.resource_loader.get_path_to_datafile"], "platform.resource_loader.get_path_to_datafile": [], "python.interpreter.InterpreterWithCustomOps": [], "test_util.TensorFlowTestCase.assertTrue": [], "testdata._pywrap_test_registerer.get_num_test_registerer_calls": [], "test_util.TensorFlowTestCase.assertEqual": [], "python.interpreter_test.InterpreterCustomOpsTest.testRegistererByFunc": ["testdata._pywrap_test_registerer.get_num_test_registerer_calls", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.InterpreterWithCustomOps", "test_util.TensorFlowTestCase.assertTrue", "platform.resource_loader.get_path_to_datafile"], "python.interpreter_test.InterpreterCustomOpsTest.testRegistererFailure": ["python.interpreter.InterpreterWithCustomOps", "test_util.TensorFlowTestCase.assertRaisesRegex", "platform.resource_loader.get_path_to_datafile"], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "python.interpreter_test.InterpreterCustomOpsTest.testNoCustomOps": ["platform.resource_loader.get_path_to_datafile", "python.interpreter.InterpreterWithCustomOps", "test_util.TensorFlowTestCase.assertTrue"], "python.interpreter_test.InterpreterTest.assertQuantizationParamsEqual": ["test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertAllEqual"], "test_util.TensorFlowTestCase.assertAllEqual": [], "python.interpreter_test.InterpreterTest.testThreads_NegativeValue": ["test_util.TensorFlowTestCase.assertRaisesRegex", "python.interpreter.Interpreter", "platform.resource_loader.get_path_to_datafile"], "python.interpreter.Interpreter": [], "python.interpreter_test.InterpreterTest.testThreads_WrongType": ["test_util.TensorFlowTestCase.assertRaisesRegex", "python.interpreter.Interpreter", "platform.resource_loader.get_path_to_datafile"], "python.interpreter_test.InterpreterTest.testNotSupportedOpResolverTypes": ["test_util.TensorFlowTestCase.assertRaisesRegex", "python.interpreter.Interpreter", "platform.resource_loader.get_path_to_datafile"], "python.interpreter_test.InterpreterTest.testFloatWithDifferentOpResolverTypes": ["numpy.array", "platform.resource_loader.get_path_to_datafile", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertTrue", "python.interpreter.Interpreter", "platform.resource_loader.get_path_to_datafile", "<builtin>.len"], "<builtin>.len": [], "numpy.array": [], "python.interpreter_test.InterpreterTest.testFloatWithTwoThreads": ["numpy.array", "platform.resource_loader.get_path_to_datafile", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertTrue"], "python.interpreter_test.InterpreterTest.testUint8": ["numpy.array", "test_util.TensorFlowTestCase.assertTrue", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertTrue", "io.open", "python.interpreter.Interpreter", "platform.resource_loader.get_path_to_datafile", "<builtin>.len"], "io.open": [], "python.interpreter_test.InterpreterTest.testString": ["numpy.array", "platform.resource_loader.get_path_to_datafile", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertTrue", "python.interpreter.Interpreter", "platform.resource_loader.get_path_to_datafile", "<builtin>.len"], "python.interpreter_test.InterpreterTest.testStringZeroDim": ["numpy.array", "<builtin>.bytes", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "platform.resource_loader.get_path_to_datafile", "<builtin>.len"], "<builtin>.bytes": [], "python.interpreter_test.InterpreterTest.testPerChannelParams": ["platform.resource_loader.get_path_to_datafile", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.len"], "python.interpreter_test.InterpreterTest.testDenseTensorAccess": ["platform.resource_loader.get_path_to_datafile", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertEqual"], "python.interpreter_test.InterpreterTest.testSparseTensorAccess": ["test_util.TensorFlowTestCase.assertEqual", "python.interpreter.InterpreterWithCustomOps", "platform.resource_loader.get_path_to_datafile", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.len"], "unittest.mock.patch.object": [], "python.interpreter_test.InterpreterTest": ["unittest.mock.patch.object"], "python.interpreter_test.InterpreterTest.testCreationCounter": ["platform.resource_loader.get_path_to_datafile", "python.interpreter.Interpreter"], "python.interpreter_test.InterpreterTestErrorPropagation.testInvalidModelContent": ["test_util.TensorFlowTestCase.assertRaisesRegex", "python.interpreter.Interpreter", "six.b"], "six.b": [], "python.interpreter_test.InterpreterTestErrorPropagation.testInvalidModelFile": ["test_util.TensorFlowTestCase.assertRaisesRegex", "python.interpreter.Interpreter"], "python.interpreter_test.InterpreterTestErrorPropagation.testInvokeBeforeReady": ["platform.resource_loader.get_path_to_datafile", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertRaisesRegex"], "python.interpreter_test.InterpreterTestErrorPropagation.testInvalidModelFileContent": ["test_util.TensorFlowTestCase.assertRaisesRegex", "python.interpreter.Interpreter"], "python.interpreter_test.InterpreterTestErrorPropagation.testInvalidIndex": ["platform.resource_loader.get_path_to_datafile", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertRaisesRegex"], "python.interpreter_test.InterpreterTensorAccessorTest.setUp": ["<builtin>.super", "platform.resource_loader.get_path_to_datafile", "python.interpreter.Interpreter", "numpy.array"], "<builtin>.super": [], "python.interpreter_test.InterpreterTensorAccessorTest.testTensorAccessor": ["test_util.TensorFlowTestCase.assertAllEqual", "numpy.copyto"], "numpy.copyto": [], "python.interpreter_test.InterpreterTensorAccessorTest.testGetTensorAccessor": ["numpy.add", "test_util.TensorFlowTestCase.assertAllEqual"], "numpy.add": [], "python.interpreter_test.InterpreterTensorAccessorTest.testBase": ["test_util.TensorFlowTestCase.assertFalse", "test_util.TensorFlowTestCase.assertTrue"], "test_util.TensorFlowTestCase.assertFalse": [], "python.interpreter_test.InterpreterTensorAccessorTest.testBaseProtectsFunctions": ["test_util.TensorFlowTestCase.assertRaisesRegex"], "python.interpreter_test.InterpreterDelegateTest.setUp": ["<builtin>.super", "platform.resource_loader.get_path_to_datafile", "ctypes.pydll.LoadLibrary"], "ctypes.pydll.LoadLibrary": [], "python.interpreter_test.InterpreterDelegateTest._TestInterpreter": ["python.interpreter.Interpreter", "python.interpreter.load_delegate"], "python.interpreter.load_delegate": [], "python.interpreter_test.InterpreterDelegateTest.testDelegate": ["test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEqual"], "python.interpreter_test.InterpreterDelegateTest.testMultipleInterpreters": ["test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "python.interpreter.load_delegate"], "python.interpreter_test.InterpreterDelegateTest.testDestructionOrder": ["test_util.TensorFlowTestCase.assertEqual", "ctypes.CFUNCTYPE", "python.interpreter.load_delegate", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.skipTest", "platform.resource_loader.get_path_to_datafile"], "test_util.TensorFlowTestCase.skipTest": [], "python.interpreter_test.InterpreterDelegateTest.testDestructionOrder.register_destruction": ["six.ensure_text", "<builtin>.isinstance"], "<builtin>.isinstance": [], "six.ensure_text": [], "python.interpreter_test.InterpreterDelegateTest.testDestructionOrder.InterpreterDestroyCallback.__del__": ["platform.resource_loader.get_path_to_datafile"], "ctypes.CFUNCTYPE": [], "python.interpreter_test.InterpreterDelegateTest.testOptions": ["test_util.TensorFlowTestCase.assertEqual", "python.interpreter.load_delegate"], "python.interpreter_test.InterpreterDelegateTest.testFail": ["test_util.TensorFlowTestCase.assertRaisesRegex", "python.interpreter.load_delegate"], "platform.test.main": []}