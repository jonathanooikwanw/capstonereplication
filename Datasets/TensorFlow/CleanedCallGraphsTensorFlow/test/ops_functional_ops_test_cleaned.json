{"ops.functional_ops_test": ["platform.test.main"], "ops.functional_ops_test.FunctionalOpsTest.testIfWithDefun": ["test.TestCase.evaluate", "framework.function.Defun", "test.TestCase.assertEqual", "framework.ops.Graph", "ops.functional_ops.If"], "framework.ops.Graph": [], "framework.function.Defun": [], "ops.functional_ops_test.FunctionalOpsTest.testIfWithDefun.Then": [], "ops.functional_ops_test.FunctionalOpsTest.testIfWithDefun.Else": [], "ops.functional_ops.If": [], "test.TestCase.evaluate": [], "test.TestCase.assertEqual": [], "ops.functional_ops_test.FunctionalOpsTest.testIfWithFunction": ["eager.def_function.function", "test.TestCase.evaluate", "test.TestCase.assertEqual", "framework.tensor_spec.TensorSpec", "ops.functional_ops.If"], "framework.tensor_spec.TensorSpec": [], "eager.def_function.function": [], "ops.functional_ops_test.FunctionalOpsTest.testIfWithFunction.Then": [], "ops.functional_ops_test.FunctionalOpsTest.testIfWithFunction.Else": [], "ops.functional_ops_test.FunctionalOpsTest.testIfWithFunctionComposite": ["eager.def_function.function", "framework.tensor_spec.TensorSpec", "test.TestCase.assertIsInstance", "ops.functional_ops.If", "test.TestCase.assertAllEqual"], "ops.functional_ops_test.FunctionalOpsTest.testIfWithFunctionComposite.Then": ["framework.sparse_tensor.SparseTensor"], "framework.sparse_tensor.SparseTensor": [], "ops.functional_ops_test.FunctionalOpsTest.testIfWithFunctionComposite.Else": ["framework.sparse_tensor.SparseTensor"], "test.TestCase.assertIsInstance": [], "test.TestCase.assertAllEqual": [], "platform.test.main": []}