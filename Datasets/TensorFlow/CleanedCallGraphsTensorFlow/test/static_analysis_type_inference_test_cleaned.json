{"static_analysis.type_inference_test": ["platform.test.main"], "static_analysis.type_inference_test.BasicTestResolver.res_name": ["<builtin>.type", "<builtin>.str"], "<builtin>.str": [], "<builtin>.type": [], "static_analysis.type_inference_test.BasicTestResolver.res_value": ["<builtin>.type"], "static_analysis.type_inference_test.BasicTestResolver.res_arg": ["<builtin>.str"], "static_analysis.type_inference_test.TestTranspiler.__init__": ["type_inference.Resolver.__init__", "<builtin>.super"], "<builtin>.super": [], "type_inference.Resolver.__init__": [], "static_analysis.type_inference_test.TestTranspiler.get_transformed_name": [], "static_analysis.type_inference_test.TestTranspiler.transform_ast": ["static_analysis.activity.resolve", "static_analysis.reaching_definitions.resolve", "pyct.cfg.build", "pyct.qual_names.resolve", "static_analysis.reaching_fndefs.resolve", "static_analysis.type_inference.resolve"], "pyct.qual_names.resolve": [], "static_analysis.activity.resolve": [], "pyct.cfg.build": [], "static_analysis.reaching_definitions.resolve": [], "static_analysis.reaching_fndefs.resolve": [], "static_analysis.type_inference.resolve": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes": ["<builtin>.isinstance", "test.TestCase.assertSetEqual", "pyct.anno.getanno", "<builtin>.set"], "<builtin>.isinstance": [], "pyct.anno.getanno": [], "<builtin>.set": [], "test.TestCase.assertSetEqual": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertClosureTypes": ["pyct.anno.getanno", "test.TestCase.assertEqual", "test.TestCase.assertIn", "<builtin>.str"], "test.TestCase.assertIn": [], "test.TestCase.assertEqual": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_no_inference_on_unknown_operand_types": ["test.TestCase.assertFalse", "transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "pyct.anno.hasanno"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_no_inference_on_unknown_operand_types.Resolver.res_arg": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_no_inference_on_unknown_operand_types.test_fn": [], "transpiler.GenericTranspiler.transform": [], "pyct.anno.hasanno": [], "test.TestCase.assertFalse": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_resolver_output_checked": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "test.TestCase.assertRaisesRegex"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_resolver_output_checked.Resolver.res_arg": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_resolver_output_checked.test_fn": [], "test.TestCase.assertRaisesRegex": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_argument": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_argument.Resolver.res_arg": ["test.TestCase.assertFalse", "pyct.qual_names.QN", "test.TestCase.assertEqual", "<builtin>.str"], "pyct.qual_names.QN": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_argument.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_argument_of_local_function": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_argument_of_local_function.Resolver.res_arg": ["test.TestCase.assertFalse", "test.TestCase.assertEqual", "test.TestCase.assertTrue", "<builtin>.str", "pyct.qual_names.QN", "test.TestCase.fail", "test.TestCase.assertIsNone"], "test.TestCase.assertTrue": [], "test.TestCase.assertIsNone": [], "test.TestCase.fail": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_argument_of_local_function.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_argument_of_local_function.test_fn.foo"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_argument_of_local_function.test_fn.foo": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_assign_straightline": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_assign_straightline.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_expr": ["test.TestCase.assertEqual", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes", "pyct.anno.getanno", "transpiler.GenericTranspiler.transform"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_expr.Resolver.res_value": ["test.TestCase.assertEqual"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_expr.Resolver.res_name": ["test.TestCase.assertEqual", "pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_expr.Resolver.res_call": ["test.TestCase.assertEqual"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_expr.TestClass.a": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_expr.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_expr.TestClass.a"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_assign_overwriting": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_assign_overwriting.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_static_value": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_static_value.TestClass.__init__", "test.TestCase.assertEqual", "test.TestCase.assertIs", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes", "pyct.anno.getanno", "transpiler.GenericTranspiler.transform"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_static_value.Resolver.res_value": ["test.TestCase.assertEqual"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_static_value.Resolver.res_name": ["test.TestCase.assertEqual", "pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_static_value.TestClass.__init__": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_static_value.test_fn": [], "test.TestCase.assertIs": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_static_attribute_of_typed_value": ["test.TestCase.assertFalse", "test.TestCase.assertEqual", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes", "pyct.anno.getanno", "transpiler.GenericTranspiler.transform", "pyct.anno.hasanno"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_static_attribute_of_typed_value.Resolver.res_name": ["test.TestCase.assertEqual", "pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_static_attribute_of_typed_value.Resolver.res_value": ["test.TestCase.assertIs"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_static_attribute_of_typed_value.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_static_attribute_of_ambiguous_type": ["test.TestCase.assertFalse", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes", "transpiler.GenericTranspiler.transform", "pyct.anno.hasanno"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_static_attribute_of_ambiguous_type.Resolver.res_name": ["test.TestCase.assertEqual", "pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_static_attribute_of_ambiguous_type.Resolver.res_value": ["test.TestCase.assertIn"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_static_attribute_of_ambiguous_type.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_property_of_typed_value": ["test.TestCase.assertFalse", "test.TestCase.assertEqual", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes", "pyct.anno.getanno", "transpiler.GenericTranspiler.transform", "pyct.anno.hasanno"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_property_of_typed_value.TestClass.a": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_property_of_typed_value.Resolver.res_name": ["test.TestCase.assertEqual", "pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_property_of_typed_value.Resolver.res_value": ["test.TestCase.assertIs", "test.TestCase.assertNotEqual"], "test.TestCase.assertNotEqual": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_property_of_typed_value.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_typed_value": ["test.TestCase.assertFalse", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_typed_value.TestClass.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes", "transpiler.GenericTranspiler.transform", "pyct.anno.hasanno"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_typed_value.TestClass.__init__": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_typed_value.Resolver.res_name": ["test.TestCase.assertEqual", "pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_dynamic_attribute_of_typed_value.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_value": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_value.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function.Resolver.res_name": ["test.TestCase.assertEqual", "pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function.Resolver.res_call": ["test.TestCase.assertEqual", "pyct.qual_names.QN", "pyct.anno.getanno"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function.g": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function.g"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function_side_effects": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function_side_effects.Resolver.res_name": ["test.TestCase.assertEqual", "pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function_side_effects.Resolver.res_arg": ["<builtin>.str"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function_side_effects.Resolver.res_call": ["pyct.qual_names.QN", "test.TestCase.assertIsNone"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function_side_effects.g": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function_side_effects.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_external_function_side_effects.g"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertClosureTypes", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure.test_fn.foo"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure.test_fn.foo": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_nested": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertClosureTypes", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_nested.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_nested.test_fn.foo"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_nested.test_fn.foo": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_nested.test_fn.foo.bar"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_nested.test_fn.foo.bar": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_mutable_var": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertClosureTypes", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_mutable_var.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_mutable_var.test_fn.foo"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_mutable_var.test_fn.foo": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_ignored_for_bound_symbols": ["test.TestCase.assertFalse", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertClosureTypes", "static_analysis.type_inference_test.TestTranspiler.__init__", "transpiler.GenericTranspiler.transform", "pyct.anno.hasanno"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_ignored_for_bound_symbols.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_ignored_for_bound_symbols.test_fn.foo"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_ignored_for_bound_symbols.test_fn.foo": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_uses_call_site_types": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertClosureTypes", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_uses_call_site_types.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_uses_call_site_types.test_fn.foo"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_closure_uses_call_site_types.test_fn.foo": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_hides_locals": ["test.TestCase.assertFalse", "transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "pyct.anno.hasanno"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_hides_locals.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_hides_locals.test_fn.local_fn"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_hides_locals.test_fn.local_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_type": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_type.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_type.test_fn.foo"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_local_function_type.test_fn.foo": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_side_effects_on_arg_function_closure": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_side_effects_on_arg_function_closure.Resolver.res_name": ["test.TestCase.assertEqual", "pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_side_effects_on_arg_function_closure.Resolver.res_value": ["test.TestCase.assertEqual"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_side_effects_on_arg_function_closure.Resolver.res_arg": ["<builtin>.str"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_side_effects_on_arg_function_closure.Resolver.res_call": ["test.TestCase.assertEqual", "pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_side_effects_on_arg_function_closure.g": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_side_effects_on_arg_function_closure.test_fn": ["static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_side_effects_on_arg_function_closure.g"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_side_effects_on_arg_function_closure.test_fn.foo": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_subscript": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_subscript.Resolver.res_arg": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_subscript.Resolver.res_value": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_subscript.Resolver.res_slice": ["test.TestCase.assertSetEqual"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_subscript.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking.Resolver.res_arg": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking.Resolver.res_value": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking.Resolver.res_slice": ["test.TestCase.assertSetEqual", "test.TestCase.assertIn"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_compare": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_compare.Resolver.res_arg": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_compare.Resolver.res_compare": ["test.TestCase.assertSetEqual", "test.TestCase.assertListEqual"], "test.TestCase.assertListEqual": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_compare.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_binop": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_binop.Resolver.res_arg": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_binop.Resolver.res_binop": ["test.TestCase.assertSetEqual"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_binop.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_unop": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_unop.Resolver.res_arg": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_unop.Resolver.res_unop": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_unop.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_literal": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_literal.Resolver.res_arg": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_literal.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_literal": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_literal.Resolver.res_arg": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_literal.Resolver.res_list_literal": ["<builtin>.set"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_literal.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking_syntactic": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking_syntactic.Resolver.res_arg": ["pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking_syntactic.Resolver.res_value": ["test.TestCase.assertIn"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking_syntactic.Resolver.res_slice": ["test.TestCase.assertSetEqual", "test.TestCase.assertIn", "test.TestCase.assertEqual"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking_syntactic.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking_operational": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking_operational.Resolver.res_arg": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking_operational.Resolver.res_value": ["test.TestCase.assertIn"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking_operational.Resolver.res_slice": ["test.TestCase.assertSetEqual", "test.TestCase.assertIn", "test.TestCase.assertEqual"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_tuple_unpacking_operational.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_expansion_syntactic": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_expansion_syntactic.Resolver.res_arg": ["pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_expansion_syntactic.Resolver.res_value": ["test.TestCase.assertIn"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_expansion_syntactic.Resolver.res_slice": ["test.TestCase.assertSetEqual", "test.TestCase.assertIn", "test.TestCase.assertEqual"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_expansion_syntactic.test_fn": [], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_expansion_operational": ["transpiler.GenericTranspiler.transform", "static_analysis.type_inference_test.TestTranspiler.__init__", "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.assertTypes"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_expansion_operational.Resolver.res_arg": ["pyct.qual_names.QN"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_expansion_operational.Resolver.res_value": ["test.TestCase.assertIn"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_expansion_operational.Resolver.res_slice": ["test.TestCase.assertSetEqual", "test.TestCase.assertIn", "test.TestCase.assertEqual"], "static_analysis.type_inference_test.TypeInferenceAnalyzerTest.test_list_expansion_operational.test_fn": [], "platform.test.main": []}