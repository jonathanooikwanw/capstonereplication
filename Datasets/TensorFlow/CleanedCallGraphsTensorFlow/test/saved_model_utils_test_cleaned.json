{"saved_model.utils_test": ["platform.test.main"], "framework.test_util.run_v1_only": [], "saved_model.utils_test.UtilsTest": ["framework.test_util.run_v1_only"], "saved_model.utils_test.UtilsTest.testBuildTensorInfoOp": ["<builtin>.len", "saved_model.utils.build_tensor_info_from_op", "ops.control_flow_ops.group", "test.TestCase.assertEqual", "framework.constant_op.constant"], "framework.constant_op.constant": [], "ops.control_flow_ops.group": [], "saved_model.utils.build_tensor_info_from_op": [], "test.TestCase.assertEqual": [], "<builtin>.len": [], "saved_model.utils_test.UtilsTest.testBuildTensorInfoDefunOp": ["<builtin>.len", "saved_model.utils.build_tensor_info_from_op", "saved_model.utils.build_tensor_info_from_op", "eager.function.defun", "test.TestCase.assertEqual", "framework.constant_op.constant"], "eager.function.defun": [], "saved_model.utils_test.UtilsTest.testBuildTensorInfoDefunOp.my_init_fn": [], "saved_model.utils_test.UtilsTest.testBuildTensorInfoDense": ["test.TestCase.assertEqual", "saved_model.utils.build_tensor_info", "<builtin>.len", "ops.array_ops.placeholder"], "ops.array_ops.placeholder": [], "saved_model.utils.build_tensor_info": [], "saved_model.utils_test.UtilsTest.testBuildTensorInfoSparse": ["ops.array_ops.sparse_placeholder", "test.TestCase.assertEqual", "saved_model.utils.build_tensor_info", "<builtin>.len"], "ops.array_ops.sparse_placeholder": [], "saved_model.utils_test.UtilsTest.testBuildTensorInfoRagged": ["saved_model.utils.build_tensor_info", "ragged.ragged_factory_ops.constant", "saved_model.nested_structure_coder.StructureCoder", "protobuf.struct_pb2.StructuredValue", "test.TestCase.assertEqual"], "ragged.ragged_factory_ops.constant": [], "saved_model.nested_structure_coder.StructureCoder": [], "protobuf.struct_pb2.StructuredValue": [], "saved_model.utils_test.UtilsTest.testBuildTensorInfoEager": ["eager.context.eager_mode", "test.TestCase.assertRaisesRegex", "saved_model.utils.build_tensor_info", "framework.constant_op.constant"], "eager.context.eager_mode": [], "test.TestCase.assertRaisesRegex": [], "saved_model.utils_test.UtilsTest.testGetTensorFromInfoDense": ["saved_model.utils.build_tensor_info", "saved_model.utils.get_tensor_from_tensor_info", "test.TestCase.assertIsInstance", "test.TestCase.assertEqual", "ops.array_ops.placeholder"], "saved_model.utils.get_tensor_from_tensor_info": [], "test.TestCase.assertIsInstance": [], "saved_model.utils_test.UtilsTest.testGetTensorFromInfoSparse": ["ops.array_ops.sparse_placeholder", "saved_model.utils.build_tensor_info", "saved_model.utils.get_tensor_from_tensor_info", "test.TestCase.assertIsInstance", "test.TestCase.assertEqual"], "saved_model.utils_test.UtilsTest.testGetTensorFromInfoRagged": ["saved_model.utils.build_tensor_info", "ragged.ragged_factory_ops.constant", "saved_model.utils.get_tensor_from_tensor_info", "test.TestCase.assertIsInstance", "test.TestCase.assertEqual"], "saved_model.utils_test.UtilsTest.testGetTensorFromInfoInOtherGraph": ["saved_model.utils.build_tensor_info", "test.TestCase.assertIs", "saved_model.utils.get_tensor_from_tensor_info", "framework.ops.Graph", "test.TestCase.assertIsInstance", "test.TestCase.assertEqual", "ops.array_ops.placeholder"], "framework.ops.Graph": [], "test.TestCase.assertIs": [], "saved_model.utils_test.UtilsTest.testGetTensorFromInfoInScope": ["saved_model.utils.build_tensor_info", "framework.ops.name_scope", "saved_model.utils.get_tensor_from_tensor_info", "framework.ops.Graph", "test.TestCase.assertEqual", "ops.array_ops.placeholder"], "framework.ops.name_scope": [], "saved_model.utils_test.UtilsTest.testGetTensorFromInfoRaisesErrors": ["saved_model.utils.get_tensor_from_tensor_info", "saved_model.utils.build_tensor_info", "test.TestCase.assertRaises", "ops.array_ops.placeholder"], "test.TestCase.assertRaises": [], "platform.test.main": []}