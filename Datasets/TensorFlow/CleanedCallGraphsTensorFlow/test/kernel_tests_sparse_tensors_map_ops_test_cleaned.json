{"kernel_tests.sparse_tensors_map_ops_test": ["platform.test.main"], "kernel_tests.sparse_tensors_map_ops_test.SparseTensorsMapTest._SparseTensorPlaceholder": ["framework.sparse_tensor.SparseTensor", "ops.array_ops.placeholder"], "ops.array_ops.placeholder": [], "framework.sparse_tensor.SparseTensor": [], "kernel_tests.sparse_tensors_map_ops_test.SparseTensorsMapTest._SparseTensorValue_5x6": ["framework.sparse_tensor.SparseTensorValue", "numpy.array"], "numpy.array": [], "framework.sparse_tensor.SparseTensorValue": [], "kernel_tests.sparse_tensors_map_ops_test.SparseTensorsMapTest._SparseTensorValue_3x4": ["framework.sparse_tensor.SparseTensorValue", "numpy.array"], "kernel_tests.sparse_tensors_map_ops_test.SparseTensorsMapTest._SparseTensorValue_1x1x1": ["framework.sparse_tensor.SparseTensorValue", "numpy.array"], "kernel_tests.sparse_tensors_map_ops_test.SparseTensorsMapTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "kernel_tests.sparse_tensors_map_ops_test.SparseTensorsMapTest.testAddTakeMany": ["framework.test_util.run_deprecated_v1", "ops.array_ops.stack", "test.TestCase.session", "numpy.arange", "test.TestCase.session", "test.TestCase.evaluate", "framework.ops.Graph", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual", "ops.sparse_ops._take_many_sparse_from_tensors_map", "ops.sparse_ops._add_sparse_to_tensors_map"], "framework.ops.Graph": [], "test.TestCase.session": [], "numpy.arange": [], "ops.sparse_ops._add_sparse_to_tensors_map": [], "test.TestCase.assertEqual": [], "ops.array_ops.stack": [], "ops.sparse_ops._take_many_sparse_from_tensors_map": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllEqual": [], "kernel_tests.sparse_tensors_map_ops_test.SparseTensorsMapTest.testFeedAddTakeMany": ["ops.sparse_ops._add_sparse_to_tensors_map", "test.TestCase.session", "numpy.arange", "test.TestCase.session", "test.TestCase.evaluate", "test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.sparse_ops._take_many_sparse_from_tensors_map", "ops.sparse_ops._add_sparse_to_tensors_map", "framework.ops.convert_to_tensor"], "framework.ops.convert_to_tensor": [], "kernel_tests.sparse_tensors_map_ops_test.SparseTensorsMapTest.testAddManyTakeManyRoundTrip": ["test.TestCase.session", "test.TestCase.assertEqual", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual", "ops.sparse_ops._add_many_sparse_to_tensors_map", "numpy.array", "ops.sparse_ops._take_many_sparse_from_tensors_map"], "ops.sparse_ops._add_many_sparse_to_tensors_map": [], "kernel_tests.sparse_tensors_map_ops_test.SparseTensorsMapTest.testDeserializeFailsInconsistentRank": ["ops.sparse_ops._take_many_sparse_from_tensors_map", "test.TestCase.session", "numpy.arange", "test.TestCase.assertRaisesOpError", "test.TestCase.evaluate", "test.TestCase.evaluate", "test.TestCase.evaluate", "ops.sparse_ops._take_many_sparse_from_tensors_map", "ops.sparse_ops._add_sparse_to_tensors_map", "framework.ops.convert_to_tensor"], "test.TestCase.assertRaisesOpError": [], "kernel_tests.sparse_tensors_map_ops_test.SparseTensorsMapTest.testTakeManyFailsWrongInputOp": ["framework.ops.convert_to_tensor", "test.TestCase.session", "numpy.arange", "test.TestCase.assertRaisesOpError", "ops.sparse_ops._take_many_sparse_from_tensors_map", "test.TestCase.evaluate", "ops.sparse_ops._add_sparse_to_tensors_map"], "kernel_tests.sparse_tensors_map_ops_test.BenchmarkSparseTensorsMapVsSerialization.benchmarkVeryLarge2DFloatSparseTensor": ["numpy.arange", "platform.benchmark.benchmark_config", "ops.sparse_ops.deserialize_many_sparse", "ops.variables.global_variables_initializer", "<builtin>.zip", "numpy.random.randint", "client.session.Session", "ops.sparse_ops.serialize_many_sparse", "ops.sparse_ops._add_many_sparse_to_tensors_map", "<builtin>.sorted", "test.Benchmark.run_op_benchmark", "numpy.random.seed", "ops.sparse_ops._take_many_sparse_from_tensors_map", "framework.ops.device", "numpy.asarray", "ops.variables.Variable", "numpy.testing.assert_equal", "test.Benchmark.evaluate", "framework.sparse_tensor.SparseTensor"], "numpy.random.seed": [], "numpy.random.randint": [], "<builtin>.zip": [], "<builtin>.sorted": [], "numpy.asarray": [], "platform.benchmark.benchmark_config": [], "client.session.Session": [], "framework.ops.device": [], "ops.variables.Variable": [], "ops.sparse_ops.serialize_many_sparse": [], "ops.sparse_ops.deserialize_many_sparse": [], "ops.variables.global_variables_initializer": [], "test.Benchmark.evaluate": [], "numpy.testing.assert_equal": [], "test.Benchmark.run_op_benchmark": [], "platform.test.main": []}