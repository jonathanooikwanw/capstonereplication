{"utils.metrics_utils_test": ["platform.test.main"], "absl.testing.parameterized.parameters": [], "utils.metrics_utils_test.RaggedSizeOpTest": ["absl.testing.parameterized.parameters"], "utils.metrics_utils_test.RaggedSizeOpTest.test_passing_dense_tensors": ["framework.constant_op.constant", "utils.metrics_utils.ragged_assert_compatible_and_get_flat_values"], "framework.constant_op.constant": [], "utils.metrics_utils.ragged_assert_compatible_and_get_flat_values": [], "utils.metrics_utils_test.RaggedSizeOpTest.test_passing_one_dense_tensor": ["framework.constant_op.constant", "utils.metrics_utils.ragged_assert_compatible_and_get_flat_values"], "utils.metrics_utils_test.RaggedSizeOpTest.test_passing_both_ragged": ["utils.metrics_utils.ragged_assert_compatible_and_get_flat_values", "ragged.ragged_factory_ops.constant"], "ragged.ragged_factory_ops.constant": [], "utils.metrics_utils_test.RaggedSizeOpTest.test_passing_one_ragged": ["utils.metrics_utils.ragged_assert_compatible_and_get_flat_values", "ragged.ragged_factory_ops.constant"], "utils.metrics_utils_test.RaggedSizeOpTest.test_passing_both_ragged_with_mask": ["utils.metrics_utils.ragged_assert_compatible_and_get_flat_values", "ragged.ragged_factory_ops.constant"], "utils.metrics_utils_test.RaggedSizeOpTest.test_passing_one_ragged_with_mask": ["utils.metrics_utils.ragged_assert_compatible_and_get_flat_values", "ragged.ragged_factory_ops.constant"], "utils.metrics_utils_test.RaggedSizeOpTest.test_failing_different_ragged_and_dense_ranks": ["utils.metrics_utils.ragged_assert_compatible_and_get_flat_values", "ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.assertRaises"], "test_util.TensorFlowTestCase.assertRaises": [], "utils.metrics_utils_test.RaggedSizeOpTest.test_failing_different_mask_ranks": ["utils.metrics_utils.ragged_assert_compatible_and_get_flat_values", "ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.assertRaises"], "utils.metrics_utils_test.RaggedSizeOpTest.test_failing_different_ragged_ranks": ["ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant", "utils.metrics_utils.ragged_assert_compatible_and_get_flat_values", "ragged_tensor.RaggedTensor.from_row_splits"], "ragged_tensor.RaggedTensor.from_row_splits": [], "utils.metrics_utils_test.FilterTopKTest.test_one_dimensional": ["framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllClose", "utils.metrics_utils._filter_top_k", "test_util.TensorFlowTestCase.evaluate"], "utils.metrics_utils._filter_top_k": [], "test_util.TensorFlowTestCase.evaluate": [], "test_util.TensorFlowTestCase.assertAllClose": [], "utils.metrics_utils_test.FilterTopKTest.test_three_dimensional": ["framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllClose", "utils.metrics_utils._filter_top_k", "test_util.TensorFlowTestCase.evaluate"], "utils.metrics_utils_test.FilterTopKTest.test_handles_dynamic_shapes": ["framework.constant_op.constant", "utils.metrics_utils_test.FilterTopKTest.test_handles_dynamic_shapes._filter_top_k", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate"], "utils.metrics_utils_test.FilterTopKTest.test_handles_dynamic_shapes._identity": [], "utils.metrics_utils_test.FilterTopKTest.test_handles_dynamic_shapes._filter_top_k": ["ops.script_ops.numpy_function", "utils.metrics_utils._filter_top_k"], "ops.script_ops.numpy_function": [], "platform.test.main": []}