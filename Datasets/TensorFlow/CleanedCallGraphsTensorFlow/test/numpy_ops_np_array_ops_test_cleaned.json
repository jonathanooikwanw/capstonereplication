{"numpy_ops.np_array_ops_test": ["numpy_ops.np_math_ops.enable_numpy_methods_on_tensor", "platform.test.main", "framework.ops.enable_eager_execution", "framework.ops.enable_numpy_style_type_promotion"], "numpy_ops.np_array_ops_test.set_up_virtual_devices": ["eager.context.LogicalDeviceConfiguration", "framework.config.set_logical_device_configuration", "framework.config.list_physical_devices"], "framework.config.list_physical_devices": [], "eager.context.LogicalDeviceConfiguration": [], "framework.config.set_logical_device_configuration": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.setUp": ["<builtin>.super", "<builtin>.list", "framework.config.list_physical_devices", "<builtin>.filter"], "<builtin>.super": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.setUp.<list2>.<lambda1>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.setUp.<list2>.<lambda2>": [], "numpy.array": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.setUp.<lambda2>": ["numpy.array"], "numpy_ops.np_array_ops_test.ArrayCreationTest.setUp.<list2>.<lambda3>": [], "numpy_ops.np_array_ops.array": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.setUp.<lambda3>": ["numpy_ops.np_array_ops.array"], "numpy_ops.np_array_ops_test.ArrayCreationTest.setUp.not_ndarray_scalar": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "<builtin>.filter": [], "<builtin>.list": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.setUp.<list6>.<lambda1>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testEmpty": ["numpy_ops.np_array_ops.array", "numpy_ops.np_array_ops.array", "numpy_ops.np_array_ops.empty", "itertools.product", "numpy.empty"], "numpy_ops.np_array_ops.empty": [], "numpy.empty": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.match_shape": ["test.TestCase.assertEqual"], "numpy_ops.np_array_ops_test.ArrayCreationTest.match_dtype": ["test.TestCase.assertEqual"], "itertools.product": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testEmptyLike": ["numpy_ops.np_array_ops.empty_like", "numpy_ops.np_array_ops.empty_like", "numpy_ops.np_array_ops.empty_like", "itertools.product", "numpy.empty_like"], "numpy_ops.np_array_ops.empty_like": [], "numpy.empty_like": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testZeros": ["itertools.product", "numpy.zeros", "numpy_ops.np_array_ops.zeros", "numpy_ops.np_array_ops.zeros"], "numpy_ops.np_array_ops.zeros": [], "numpy.zeros": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.match": ["numpy_ops.np_array_ops.zeros", "numpy_ops.np_array_ops.zeros", "test.TestCase.assertIsInstance", "numpy.testing.assert_almost_equal", "test.TestCase.assertSequenceEqual", "test.TestCase.assertEqual"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testZerosLike": ["numpy.zeros_like", "itertools.product", "test.TestCase.assertEqual", "numpy_ops.np_array_ops.zeros_like"], "numpy_ops.np_array_ops.zeros_like": [], "numpy.zeros_like": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testOnes": ["numpy_ops.np_array_ops.ones", "numpy.ones", "itertools.product", "numpy_ops.np_array_ops.ones"], "numpy_ops.np_array_ops.ones": [], "numpy.ones": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testOnesLike": ["numpy.ones_like", "itertools.product", "numpy_ops.np_array_ops.ones", "numpy_ops.np_array_ops.ones_like"], "numpy_ops.np_array_ops.ones_like": [], "numpy.ones_like": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testEye": ["six.moves.range", "numpy_ops.np_array_ops.eye", "numpy.eye", "numpy_ops.np_array_ops.eye"], "six.moves.range": [], "numpy_ops.np_array_ops.eye": [], "numpy.eye": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testIdentity": ["six.moves.range", "numpy.identity", "numpy_ops.np_array_ops.identity", "numpy_ops.np_array_ops.identity"], "numpy_ops.np_array_ops.identity": [], "numpy.identity": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testFull": ["numpy_ops.np_array_ops.full", "numpy.full", "itertools.product", "numpy_ops.np_array_ops.full"], "numpy_ops.np_array_ops.full": [], "numpy.full": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testFullLike": ["numpy_ops.np_array_ops.full_like", "numpy_ops.np_array_ops.full_like", "itertools.product", "numpy.full_like"], "numpy_ops.np_array_ops.full_like": [], "numpy.full_like": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testArray": ["test.TestCase.assertIn", "numpy.array", "itertools.product", "numpy_ops.np_array_ops.array", "numpy_ops.np_array_ops.array", "numpy_ops.np_array_ops.zeros", "framework.ops.device", "test.TestCase.assertNotIn", "test.TestCase.assertNotIn"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testArray.test_copy_equal_false": ["test.TestCase.assertIs", "numpy_ops.np_array_ops.array", "test.TestCase.assertIsNot"], "test.TestCase.assertIs": [], "test.TestCase.assertIsNot": [], "framework.ops.device": [], "test.TestCase.assertNotIn": [], "test.TestCase.assertIn": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testAsArray": ["test.TestCase.assertIsNot", "itertools.product", "numpy.asarray", "test.TestCase.assertIs", "framework.ops.device", "numpy_ops.np_array_ops.zeros", "numpy_ops.np_array_ops.asarray", "numpy_ops.np_array_ops.asarray"], "numpy_ops.np_array_ops.asarray": [], "numpy.asarray": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testAsAnyArray": ["numpy.asanyarray", "test.TestCase.assertIsNot", "itertools.product", "numpy_ops.np_array_ops.asanyarray", "test.TestCase.assertIs", "framework.ops.device", "numpy_ops.np_array_ops.zeros", "numpy_ops.np_array_ops.zeros"], "numpy_ops.np_array_ops.asanyarray": [], "numpy.asanyarray": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testAsContiguousArray": ["numpy_ops.np_array_ops.ascontiguousarray", "numpy.ascontiguousarray", "itertools.product", "numpy_ops.np_array_ops.ascontiguousarray"], "numpy_ops.np_array_ops.ascontiguousarray": [], "numpy.ascontiguousarray": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testARange": ["test.TestCase.assertRaises", "numpy.arange", "<builtin>.isinstance", "numpy_ops.np_array_ops.arange", "numpy_ops.np_array_ops.arange"], "numpy.arange": [], "numpy_ops.np_array_ops.arange": [], "test.TestCase.assertRaises": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag": ["numpy.arange", "numpy_ops.np_array_ops.arange"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag.<list1>.<lambda1>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag.<list1>.<lambda2>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag.<lambda2>": ["numpy.array"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag.<list1>.<lambda3>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag.<lambda3>": ["numpy.array"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag.<list1>.<lambda4>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag.<lambda4>": ["numpy_ops.np_array_ops.array"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag.<list1>.<lambda5>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag.<lambda5>": ["numpy_ops.np_array_ops.array"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiag.run_test": ["six.moves.range", "numpy_ops.np_array_ops.diag", "numpy_ops.np_array_ops.diag", "numpy.diag"], "numpy_ops.np_array_ops.diag": [], "numpy.diag": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat": ["numpy_ops.np_array_ops.diag", "numpy.arange"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat.<list1>.<lambda1>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat.<list1>.<lambda2>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat.<lambda2>": ["numpy.array"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat.<list1>.<lambda3>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat.<lambda3>": ["numpy.array"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat.<list1>.<lambda4>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat.<lambda4>": ["numpy_ops.np_array_ops.array"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat.<list1>.<lambda5>": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat.<lambda5>": ["numpy_ops.np_array_ops.array"], "numpy_ops.np_array_ops_test.ArrayCreationTest.testDiagFlat.run_test": ["six.moves.range", "numpy.diagflat", "numpy_ops.np_array_ops.diagflat", "numpy_ops.np_array_ops.diagflat"], "numpy_ops.np_array_ops.diagflat": [], "numpy.diagflat": [], "test.TestCase.assertEqual": [], "test.TestCase.assertIsInstance": [], "test.TestCase.assertSequenceEqual": [], "numpy.testing.assert_almost_equal": [], "numpy_ops.np_array_ops_test.ArrayCreationTest.testIndexedSlices": ["test.TestCase.assertAllEqual", "framework.indexed_slices.IndexedSlices", "framework.constant_op.constant", "numpy_ops.np_array_ops.ones", "numpy_ops.np_array_ops.array", "ops.array_ops.scatter_nd", "ops.array_ops.ones"], "framework.constant_op.constant": [], "framework.indexed_slices.IndexedSlices": [], "ops.array_ops.ones": [], "ops.array_ops.scatter_nd": [], "test.TestCase.assertAllEqual": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.setUp": ["<builtin>.super", "ops.array_ops.ones"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.setUp.<list1>.<lambda1>": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testAllAny": ["ops.array_ops.ones"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testAllAny.run_test": ["numpy.all", "numpy_ops.np_array_ops.all", "numpy_ops.np_array_ops.all", "numpy_ops.np_array_ops.any", "numpy.any"], "numpy_ops.np_array_ops.all": [], "numpy.all": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.match": ["test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "test.TestCase.assertIsInstance"], "numpy_ops.np_array_ops.any": [], "numpy.any": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testCompress": ["test.TestCase.assertIsInstance"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testCompress.run_test": ["numpy.compress", "numpy.asarray", "test.TestCase.assertIsInstance", "numpy_ops.np_array_ops.compress"], "numpy_ops.np_array_ops.compress": [], "numpy.compress": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testCopy": ["test.TestCase.assertIn", "numpy.array", "test.TestCase.assertIn", "numpy.arange", "test.TestCase.assertNotIn", "framework.ops.device", "numpy_ops.np_array_ops.array", "numpy_ops.np_array_ops.asarray"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testCopy.run_test": ["numpy.copy", "numpy_ops.np_array_ops.asarray", "numpy_ops.np_array_ops.copy"], "numpy_ops.np_array_ops.copy": [], "numpy.copy": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testCumProdAndSum": ["numpy_ops.np_array_ops.copy"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testCumProdAndSum.run_test": ["numpy.cumsum", "numpy.cumprod", "numpy_ops.np_array_ops.cumprod", "numpy_ops.np_array_ops.cumprod", "numpy_ops.np_array_ops.cumsum"], "numpy_ops.np_array_ops.cumprod": [], "numpy.cumprod": [], "numpy_ops.np_array_ops.cumsum": [], "numpy.cumsum": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testImag": ["numpy_ops.np_array_ops.cumsum"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testImag.run_test": ["numpy.array", "numpy.imag", "numpy_ops.np_array_ops.imag", "numpy_ops.np_array_ops.imag"], "numpy_ops.np_array_ops.imag": [], "numpy.imag": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testAMaxAMin": ["numpy.ones", "numpy.arange", "numpy_ops.np_array_ops.imag", "test.TestCase.assertRaises"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testAMaxAMin.run_test": ["numpy.amax", "test.TestCase.assertRaises", "numpy_ops.np_array_ops.amin", "numpy.amin", "numpy_ops.np_array_ops.amax"], "numpy_ops.np_array_ops.amax": [], "numpy.amax": [], "numpy_ops.np_array_ops.amin": [], "numpy.amin": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testMean": ["numpy.arange", "numpy_ops.np_array_ops.amax", "numpy.ones", "test.TestCase.assertRaises"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testMean.run_test": ["numpy_ops.np_array_ops.mean", "numpy.mean", "numpy_ops.np_array_ops.mean"], "numpy_ops.np_array_ops.mean": [], "numpy.mean": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testStd": ["numpy.arange", "numpy_ops.np_array_ops.mean"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testStd.run_test": ["numpy.std", "numpy_ops.np_array_ops.mean", "numpy_ops.np_array_ops.std"], "numpy_ops.np_array_ops.std": [], "numpy.std": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testVar": ["numpy.arange", "numpy_ops.np_array_ops.std", "numpy.ones", "test.TestCase.assertRaises"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testVar.run_test": ["test.TestCase.assertRaises", "numpy_ops.np_array_ops.var", "numpy.var"], "numpy_ops.np_array_ops.var": [], "numpy.var": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testProd": ["numpy.arange", "numpy.array", "numpy_ops.np_array_ops.var"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testProd.run_test": ["numpy_ops.np_array_ops.prod", "numpy_ops.np_array_ops.prod", "numpy.prod"], "numpy_ops.np_array_ops.prod": [], "numpy.prod": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest._testReduce": ["numpy_ops.np_array_ops.prod"], "numpy_ops.np_array_ops_test.ArrayMethodsTest._testReduce.<list1>.<lambda1>": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest._testReduce.<list1>.<lambda2>": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest._testReduce.<lambda2>": ["numpy_ops.np_array_ops.array"], "numpy_ops.np_array_ops_test.ArrayMethodsTest._testReduce.<list1>.<lambda3>": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest._testReduce.<lambda3>": ["numpy_ops.np_array_ops.array"], "numpy_ops.np_array_ops_test.ArrayMethodsTest._testReduce.run_test": ["numpy.amax", "numpy_ops.np_array_ops.array", "numpy.sum", "numpy_ops.np_array_ops.sum", "numpy_ops.np_array_ops.amax"], "numpy_ops.np_array_ops.sum": [], "numpy.sum": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testSum": ["numpy_ops.np_array_ops.amax"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testAmax": ["numpy_ops.np_array_ops.amax"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testSize": ["test.TestCase.assertRaises", "test.TestCase.assertRaises", "eager.def_function.function", "framework.constant_op.constant", "numpy_ops.np_array_ops.ones", "numpy_ops.np_array_ops.array", "numpy.ones", "numpy_ops.np_array_ops.zeros", "numpy_ops.np_array_ops.zeros", "test.TestCase.assertEqual"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testSize.run_test": ["numpy_ops.np_array_ops.size", "numpy.array", "test.TestCase.assertEqual", "numpy.size"], "numpy_ops.np_array_ops.size": [], "numpy.size": [], "eager.def_function.function": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testSize.f": ["numpy_ops.np_array_ops.size", "numpy_ops.np_array_ops.asarray"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testRavel": ["numpy.arange", "numpy_ops.np_array_ops.asarray"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testRavel.run_test": ["numpy_ops.np_array_ops.ravel", "numpy.ravel", "numpy_ops.np_array_ops.ravel"], "numpy_ops.np_array_ops.ravel": [], "numpy.ravel": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testReal": ["numpy_ops.np_array_ops.ravel"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testReal.run_test": ["numpy.real", "numpy_ops.np_array_ops.real", "numpy_ops.np_array_ops.real", "numpy.array"], "numpy_ops.np_array_ops.real": [], "numpy.real": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testRepeat": ["numpy_ops.np_array_ops.real"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testRepeat.run_test": ["numpy_ops.np_array_ops.repeat", "numpy_ops.np_array_ops.repeat", "numpy.repeat"], "numpy_ops.np_array_ops.repeat": [], "numpy.repeat": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testAround": ["numpy_ops.np_array_ops.repeat"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testAround.run_test": ["numpy.around", "numpy_ops.np_array_ops.around", "numpy_ops.np_array_ops.around"], "numpy_ops.np_array_ops.around": [], "numpy.around": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testReshape": ["numpy_ops.np_array_ops.around"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testReshape.run_test": ["numpy.reshape", "numpy_ops.np_array_ops.reshape", "numpy_ops.np_array_ops.reshape"], "numpy_ops.np_array_ops.reshape": [], "numpy.reshape": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testExpandDims": ["numpy_ops.np_array_ops.reshape"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testExpandDims.run_test": ["numpy_ops.np_array_ops.reshape", "numpy.expand_dims", "numpy_ops.np_array_ops.expand_dims"], "numpy_ops.np_array_ops.expand_dims": [], "numpy.expand_dims": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testSqueeze": ["numpy_ops.np_array_ops.expand_dims"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testSqueeze.run_test": ["numpy.squeeze", "numpy_ops.np_array_ops.squeeze", "numpy.array", "numpy_ops.np_array_ops.squeeze"], "numpy_ops.np_array_ops.squeeze": [], "numpy.squeeze": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testTranspose": ["numpy.arange", "numpy_ops.np_array_ops.squeeze"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testTranspose.run_test": ["numpy_ops.np_array_ops.transpose", "numpy.transpose", "numpy_ops.np_array_ops.transpose"], "numpy_ops.np_array_ops.transpose": [], "numpy.transpose": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.match_shape": ["test.TestCase.assertEqual"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.match_dtype": ["test.TestCase.assertEqual"], "test.TestCase.assertAllClose": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testPad": ["test.TestCase.assertAllEqual", "numpy_ops.np_array_ops.pad"], "numpy_ops.np_array_ops.pad": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testTake": ["numpy_ops.np_array_ops.take", "numpy.random.rand", "test.TestCase.assertAllEqual", "numpy.take"], "numpy_ops.np_array_ops.take": [], "numpy.random.rand": [], "numpy.take": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testWhere": ["test.TestCase.assertAllEqual", "numpy_ops.np_array_ops.where"], "numpy_ops.np_array_ops.where": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testShape": ["numpy_ops.np_array_ops.shape", "test.TestCase.assertAllEqual"], "numpy_ops.np_array_ops.shape": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testSwapaxes": ["numpy_ops.np_array_ops.swapaxes", "test.TestCase.assertAllEqual"], "numpy_ops.np_array_ops.swapaxes": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testMoveaxis": ["six.moves.range", "test.TestCase.assertAllEqual", "<builtin>.reversed", "<builtin>.tuple", "numpy.random.rand"], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testMoveaxis._test": ["numpy_ops.np_array_ops.moveaxis", "test.TestCase.assertAllEqual", "numpy.moveaxis"], "numpy.moveaxis": [], "numpy_ops.np_array_ops.moveaxis": [], "<builtin>.tuple": [], "<builtin>.reversed": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testNdim": ["numpy_ops.np_array_ops.ndim", "test.TestCase.assertAllEqual"], "numpy_ops.np_array_ops.ndim": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testIsscalar": ["test.TestCase.assertTrue", "numpy_ops.np_array_ops.isscalar", "test.TestCase.assertFalse"], "numpy_ops.np_array_ops.isscalar": [], "test.TestCase.assertTrue": [], "test.TestCase.assertFalse": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.assertListEqual": ["test.TestCase.assertAllEqual", "six.moves.zip", "<builtin>.len"], "<builtin>.len": [], "six.moves.zip": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testSplit": ["numpy_ops.np_array_ops.arange", "numpy_ops.np_array_ops.split", "numpy_ops.np_array_ops.split"], "numpy_ops.np_array_ops.split": [], "numpy_ops.np_array_ops_test.ArrayMethodsTest.testSign": ["numpy_ops.np_array_ops.sign", "numpy_ops.np_array_ops.sign", "numpy.asarray", "numpy.random.RandomState", "numpy.issubdtype", "numpy.sign"], "numpy.random.RandomState": [], "numpy.issubdtype": [], "numpy_ops.np_array_ops.sign": [], "numpy.sign": [], "numpy_ops.np_array_ops_test.ArrayManipulationTest.setUp": ["<builtin>.super"], "numpy_ops.np_array_ops_test.ArrayManipulationTest.setUp.<list1>.<lambda1>": [], "numpy_ops.np_array_ops_test.ArrayManipulationTest.testBroadcastTo": ["numpy_ops.np_array_ops.sign"], "numpy_ops.np_array_ops_test.ArrayManipulationTest.testBroadcastTo.run_test": ["numpy_ops.np_array_ops.sign", "numpy.broadcast_to", "numpy_ops.np_array_ops.broadcast_to"], "numpy_ops.np_array_ops.broadcast_to": [], "numpy.broadcast_to": [], "numpy_ops.np_array_ops_test.ArrayManipulationTest.match": ["numpy_ops.np_array_ops.broadcast_to", "test.TestCase.assertIsInstance", "test.TestCase.assertIsInstance", "test.TestCase.assertSequenceEqual", "test.TestCase.assertEqual"], "numpy_ops.np_array_ops_test.ArrayManipulationTest.testIx_": ["six.moves.range", "itertools.combinations_with_replacement", "numpy_ops.np_array_ops.ix_", "numpy.ix_", "six.moves.zip", "numpy_ops.np_array_ops.empty", "<builtin>.len", "numpy_ops.np_array_ops.empty", "<builtin>.list"], "itertools.combinations_with_replacement": [], "numpy_ops.np_array_ops.ix_": [], "numpy.ix_": [], "numpy_ops.np_array_ops_test.ArrayManipulationTest.match_shape": ["test.TestCase.assertEqual"], "numpy_ops.np_array_ops_test.ArrayManipulationTest.match_dtype": ["test.TestCase.assertEqual"], "absl.testing.parameterized.named_parameters": [], "numpy_ops.np_array_ops_test.ArrayMathTest": ["absl.testing.parameterized.named_parameters"], "numpy_ops.np_array_ops_test.ArrayMathTest.testConstantBinOp": ["numpy.issubdtype", "numpy_ops.np_array_ops.array", "test.TestCase.assertAllEqual", "test.TestCase.assertAllClose"], "numpy_ops.np_array_ops_test.StringArrayTest": ["test.TestCase.assertAllClose", "absl.testing.parameterized.named_parameters"], "numpy_ops.np_array_ops_test.StringArrayTest.StringParameters": [], "numpy_ops.np_array_ops_test.StringArrayTest.testArray": ["numpy_ops.np_array_ops.array", "test.TestCase.assertEqual", "test.TestCase.assertIsInstance"], "numpy_ops.np_array_ops_test.StringArrayTest.testAsArray": ["test.TestCase.assertEqual", "numpy_ops.np_array_ops.asarray", "test.TestCase.assertIsInstance"], "numpy_ops.np_array_ops_test.StringArrayTest.testZerosLike": ["test.TestCase.assertEqual", "test.TestCase.assertIsInstance", "numpy_ops.np_array_ops.zeros_like"], "numpy_ops.np_array_ops_test.StringArrayTest.testEmptyLike": ["numpy_ops.np_array_ops.empty_like", "test.TestCase.assertEqual", "test.TestCase.assertIsInstance"], "framework.ops.enable_eager_execution": [], "framework.ops.enable_numpy_style_type_promotion": [], "numpy_ops.np_math_ops.enable_numpy_methods_on_tensor": [], "platform.test.main": []}