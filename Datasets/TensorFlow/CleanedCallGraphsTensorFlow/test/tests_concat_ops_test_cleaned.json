{"tests.concat_ops_test": ["platform.googletest.main"], "tests.concat_ops_test.ConcatTest.testHStack": ["xla_test.XLATestCase.session", "ops.array_ops.placeholder", "ops.array_ops.concat", "xla_test.XLATestCase.test_scope", "numpy.random.rand", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.assertEqual"], "xla_test.XLATestCase.session": [], "ops.array_ops.placeholder": [], "xla_test.XLATestCase.test_scope": [], "ops.array_ops.concat": [], "numpy.random.rand": [], "xla_test.XLATestCase.assertEqual": [], "xla_test.XLATestCase.assertAllEqual": [], "tests.concat_ops_test.ConcatTest.testVStack": ["xla_test.XLATestCase.session", "ops.array_ops.placeholder", "ops.array_ops.concat", "xla_test.XLATestCase.test_scope", "numpy.random.rand", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.assertEqual"], "tests.concat_ops_test.ConcatTest.testInt32": ["xla_test.XLATestCase.session", "framework.constant_op.constant", "ops.array_ops.concat", "xla_test.XLATestCase.test_scope", "numpy.random.rand", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.evaluate"], "framework.constant_op.constant": [], "xla_test.XLATestCase.evaluate": [], "tests.concat_ops_test.ConcatTest._testRandom": ["numpy.arange", "numpy.random.randint", "xla_test.XLATestCase.session", "ops.array_ops.placeholder", "xla_test.XLATestCase.test_scope", "ops.array_ops.concat", "xla_test.XLATestCase.assertAllClose", "ops.math_ops.cast", "numpy.random.rand", "xla_test.XLATestCase.assertAllEqual", "<builtin>.slice", "xla_test.XLATestCase.assertEqual"], "numpy.random.randint": [], "numpy.arange": [], "ops.math_ops.cast": [], "<builtin>.slice": [], "xla_test.XLATestCase.assertAllClose": [], "tests.concat_ops_test.ConcatTest.testRandom": ["tests.concat_ops_test.ConcatTest._testRandom"], "tests.concat_ops_test.ConcatTest._testGradientsSimple": ["xla_test.XLATestCase.session", "framework.constant_op.constant", "xla_test.XLATestCase.test_scope", "ops.array_ops.concat", "<builtin>.float", "ops.gradients_impl.gradients", "numpy.random.rand", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.evaluate"], "<builtin>.float": [], "ops.gradients_impl.gradients": [], "tests.concat_ops_test.ConcatTest.testGradientsSimpleAll": ["tests.concat_ops_test.ConcatTest._testGradientsSimple"], "tests.concat_ops_test.ConcatTest._testGradientsFirstDim": ["xla_test.XLATestCase.session", "framework.constant_op.constant", "xla_test.XLATestCase.test_scope", "ops.array_ops.concat", "<builtin>.float", "ops.gradients_impl.gradients", "numpy.random.rand", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.evaluate"], "tests.concat_ops_test.ConcatTest.testGradientsFirstDimAll": ["tests.concat_ops_test.ConcatTest._testGradientsFirstDim"], "tests.concat_ops_test.ConcatTest._testGradientsLastDim": ["xla_test.XLATestCase.session", "framework.constant_op.constant", "xla_test.XLATestCase.test_scope", "ops.array_ops.concat", "<builtin>.float", "ops.gradients_impl.gradients", "numpy.random.rand", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.evaluate"], "tests.concat_ops_test.ConcatTest.testGradientsLastDimAll": ["tests.concat_ops_test.ConcatTest._testGradientsLastDim"], "tests.concat_ops_test.ConcatTest._RunAndVerifyGradientsRandom": ["numpy.random.randint", "xla_test.XLATestCase.session", "framework.constant_op.constant", "xla_test.XLATestCase.test_scope", "ops.array_ops.concat", "<builtin>.float", "ops.gradients_impl.gradients", "numpy.random.rand", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.evaluate"], "tests.concat_ops_test.ConcatTest.testGradientsRandom": ["tests.concat_ops_test.ConcatTest._RunAndVerifyGradientsRandom", "<builtin>.range"], "<builtin>.range": [], "tests.concat_ops_test.ConcatTest.DISABLED_testZeroSize": ["<builtin>.map", "numpy.random.seed", "xla_test.XLATestCase.session", "xla_test.XLATestCase.test_scope", "ops.array_ops.concat", "<builtin>.len", "ops.gradients_impl.gradients", "xla_test.XLATestCase.assertAllEqual", "numpy.random.randn", "numpy.concatenate", "<builtin>.list", "xla_test.XLATestCase.evaluate"], "numpy.random.seed": [], "<builtin>.len": [], "numpy.random.randn": [], "numpy.concatenate": [], "<builtin>.map": [], "<builtin>.list": [], "tests.concat_ops_test.ConcatTest.testConcatTuple": ["xla_test.XLATestCase.session", "ops.array_ops.concat", "xla_test.XLATestCase.test_scope", "numpy.random.rand", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.evaluate"], "tests.concat_ops_test.ConcatTest.testConcatNoScalars": ["xla_test.XLATestCase.session", "ops.array_ops.placeholder", "framework.constant_op.constant", "xla_test.XLATestCase.test_scope", "ops.array_ops.concat", "xla_test.XLATestCase.assertRaisesRegex"], "xla_test.XLATestCase.assertRaisesRegex": [], "tests.concat_ops_test.ConcatTest.testConcatLargeNumberOfTensors": ["numpy.arange", "xla_test.XLATestCase.session", "ops.array_ops.placeholder", "xla_test.XLATestCase.skipTest", "xla_test.XLATestCase.test_scope", "ops.array_ops.concat", "<builtin>.range", "numpy.random.rand", "numpy.array", "xla_test.XLATestCase.assertAllEqual", "<builtin>.slice", "xla_test.XLATestCase.assertEqual"], "xla_test.XLATestCase.skipTest": [], "numpy.array": [], "tests.concat_ops_test.ConcatOffsetTest.testBasic": ["xla_test.XLATestCase.session", "ops.gen_array_ops.concat_offset", "framework.constant_op.constant", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.evaluate"], "ops.gen_array_ops.concat_offset": [], "tests.concat_ops_test.PackTest.testBasic": ["xla_test.XLATestCase.session", "ops.array_ops.stack", "framework.constant_op.constant", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.evaluate"], "ops.array_ops.stack": [], "tests.concat_ops_test.PackTest.testScalars": ["xla_test.XLATestCase.session", "ops.array_ops.stack", "framework.constant_op.constant", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.evaluate"], "tests.concat_ops_test.PackTest.testEmpty": ["xla_test.XLATestCase.session", "ops.array_ops.stack", "framework.constant_op.constant", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.evaluate"], "platform.googletest.main": []}