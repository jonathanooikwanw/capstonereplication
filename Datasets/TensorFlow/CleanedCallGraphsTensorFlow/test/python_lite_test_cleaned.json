{"python.lite_test": ["platform.test.main"], "python.lite_test.TestModels.assertValidDebugInfo": ["test_util.TensorFlowTestCase.assertNotIn", "test_util.TensorFlowTestCase.assertIn", "<builtin>.set", "os.path.basename"], "<builtin>.set": [], "os.path.basename": [], "test_util.TensorFlowTestCase.assertIn": [], "test_util.TensorFlowTestCase.assertNotIn": [], "python.lite_test.FromConstructor.testInvalidConstructor": ["test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.str", "python.lite.TFLiteConverter"], "test_util.TensorFlowTestCase.assertRaises": [], "python.lite.TFLiteConverter": [], "<builtin>.str": [], "test_util.TensorFlowTestCase.assertEqual": [], "python.lite_test.FromConstructor.testValidConstructor": ["test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertEqual", "python.lite.TFLiteConverter", "test_util.TensorFlowTestCase.assertTrue", "test_util.TensorFlowTestCase.assertFalse", "<builtin>.str"], "test_util.TensorFlowTestCase.assertFalse": [], "test_util.TensorFlowTestCase.assertTrue": [], "python.lite_test.FromConstructor.testRedundantArgumentsWarning": ["io.BytesIO", "test_util.TensorFlowTestCase.assertIn", "framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "test_util.TensorFlowTestCase.assertIsNotNone", "python.lite.TFLiteConverter", "logging.StreamHandler", "logging.root.removeHandler", "client.session.Session", "logging.root.addHandler", "ops.math_ops.add", "framework.ops.Graph", "ops.array_ops.placeholder", "io.StringIO"], "framework.ops.Graph": [], "ops.array_ops.placeholder": [], "ops.math_ops.add": [], "client.session.Session": [], "framework.convert_to_constants.convert_variables_to_constants_from_session_graph": [], "io.BytesIO": [], "io.StringIO": [], "logging.StreamHandler": [], "logging.root.addHandler": [], "test_util.TensorFlowTestCase.assertIsNotNone": [], "logging.root.removeHandler": [], "python.lite_test.FromConstructor.testShapeOverriding": ["framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "python.lite.TFLiteConverter", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "ops.math_ops.add", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.interpreter.Interpreter": [], "test_util.TensorFlowTestCase.assertLen": [], "test_util.TensorFlowTestCase.assertAllEqual": [], "python.lite_test.FromConstructor.testPartialShapeOverriding": ["test_util.TensorFlowTestCase.assertRaises", "framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "python.lite.TFLiteConverter", "client.session.Session", "ops.math_ops.add", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromConstructor.testInvalidShapeOverriding": ["test_util.TensorFlowTestCase.assertRaises", "framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "python.lite.TFLiteConverter", "client.session.Session", "ops.math_ops.add", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromSessionTest.testFloatModel": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "lite.TFLiteConverter.from_session": [], "python.lite_test.FromSessionTest.testFloatModelQuantizedInput": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testForgottenCallToAllocateTensors": ["test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session", "numpy.ones", "python.interpreter.Interpreter", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "numpy.ones": [], "absl.testing.parameterized.named_parameters": [], "python.lite_test.FromSessionTest": ["absl.testing.parameterized.named_parameters", "framework.test_util.run_in_graph_and_eager_modes"], "python.lite_test.FromSessionTest.testIntegerQuantizationWithUnsupportedOps": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "client.session.Session", "ops.math_ops.tanh", "ops.math_ops.ceil", "ops.math_ops.add", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "ops.math_ops.ceil": [], "ops.math_ops.tanh": [], "python.lite_test.FromSessionTest.testIntegerQuantizationWithUnsupportedOps.calibration_gen": ["numpy.random.uniform", "six.moves.range"], "six.moves.range": [], "numpy.random.uniform": [], "python.lite_test.FromSessionTest.testDisablePerChannelQuantization": ["lite.TFLiteConverter.from_session", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "<builtin>.next", "client.session.Session", "client.session.Session", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest._getIntegerQuantizeModel": ["ops.nn_ops.conv2d", "numpy.random.seed", "ops.array_ops.ones", "ops.nn_ops.relu", "ops.array_ops.placeholder"], "<builtin>.next": [], "python.lite_test.FromSessionTest.testString": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "ops.array_ops.reshape", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "ops.array_ops.reshape": [], "python.lite_test.FromSessionTest.testIntermediateInputArray": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testSizeNoneInvalid": ["test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "client.session.Session", "<builtin>.str", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromSessionTest.testScalarValid": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "client.session.Session", "test_util.TensorFlowTestCase.assertEmpty", "numpy.array", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "test_util.TensorFlowTestCase.assertEmpty": [], "numpy.array": [], "python.lite_test.FromSessionTest.testSizeInvalid": ["test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "client.session.Session", "<builtin>.str", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromSessionTest.testSizeNone": ["test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertIn", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "<builtin>.str", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromSessionTest.testResizeTensorInputStrict": ["test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertIn", "lite.TFLiteConverter.from_session", "python.interpreter.Interpreter", "client.session.Session", "<builtin>.str", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testBatchSizeValid": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testBatchSizeNonZero": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "ops.math_ops.matmul", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "ops.math_ops.matmul": [], "python.lite_test.FromSessionTest.testFreezeGraph": ["ops.variable_scope.get_variable", "ops.variables.global_variables_initializer", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "ops.nn_ops.top_k", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "ops.variable_scope.get_variable": [], "ops.nn_ops.top_k": [], "ops.variables.global_variables_initializer": [], "python.lite_test.FromSessionTest.testGraphviz": ["lite.TFLiteConverter.from_session", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testDumpGraphviz": ["lite.TFLiteConverter.from_session", "os.path.exists", "test_util.TensorFlowTestCase.assertGreater", "python.interpreter.Interpreter", "<builtin>.len", "test_util.TensorFlowTestCase.get_temp_dir", "os.listdir", "client.session.Session", "os.path.join", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "test_util.TensorFlowTestCase.get_temp_dir": [], "os.listdir": [], "<builtin>.len": [], "os.path.join": [], "os.path.exists": [], "test_util.TensorFlowTestCase.assertGreater": [], "python.lite_test.FromSessionTest.testDumpConversionSummary": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertNotEmpty", "test_util.TensorFlowTestCase.get_temp_dir", "os.listdir", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "test_util.TensorFlowTestCase.assertNotEmpty": [], "python.lite_test.FromSessionTest.testDumpConversionSummaryWithOldConverter": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.len", "test_util.TensorFlowTestCase.get_temp_dir", "os.listdir", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testQuantizeDynamicRange": ["framework.constant_op.constant", "numpy.random.uniform", "lite.TFLiteConverter.from_session", "<builtin>.len", "client.session.Session", "numpy.random.seed", "ops.math_ops.matmul", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertLess", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "numpy.random.seed": [], "framework.constant_op.constant": [], "test_util.TensorFlowTestCase.assertLess": [], "python.lite_test.FromSessionTest.testQuantizeDynamicRangeDeprecatedPostTrainingQuantizeAttribute": ["framework.constant_op.constant", "numpy.random.uniform", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertFalse", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertTrue", "client.session.Session", "ops.math_ops.matmul", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "ops.array_ops.ones": [], "ops.nn_ops.conv2d": [], "ops.nn_ops.relu": [], "python.lite_test.FromSessionTest._getIntegerQuantizeModel.calibration_gen": ["numpy.random.uniform", "six.moves.range"], "python.lite_test.FromSessionTest.testQuantizeInt8AllowFloat": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "<builtin>.len", "test_util.TensorFlowTestCase.assertLen", "client.session.Session", "client.session.Session", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertLess", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testQuantizeInt8And16x8": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "<builtin>.len", "test_util.TensorFlowTestCase.assertLen", "client.session.Session", "client.session.Session", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertLess", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testQuantizeInt8InputOutput": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "<builtin>.len", "test_util.TensorFlowTestCase.assertLen", "client.session.Session", "client.session.Session", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertLess", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testInvalidQuantizeInt8": ["test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant", "numpy.random.uniform", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "client.session.Session", "numpy.random.seed", "ops.math_ops.matmul", "<builtin>.str", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromSessionTest.testQuantizeUInt8": ["ops.array_ops.fake_quant_with_min_max_args", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertGreater", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "ops.array_ops.fake_quant_with_min_max_args": [], "python.lite_test.FromSessionTest.testQuantizeUInt8UsingDefaultRangeStats": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertGreater", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testQuantizeFloat16": ["test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session", "<builtin>.ValueError", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "client.session.Session", "client.session.Session", "<builtin>.str", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertIsNotNone"], "<builtin>.ValueError": [], "python.lite_test.FromSessionTest.testInvalidQuantizeFloat16": ["test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "client.session.Session", "client.session.Session", "<builtin>.str", "framework.ops.Graph"], "python.lite_test.FromSessionTest.testInvalidQuantizeQATModelRequiresInputStats": ["test_util.TensorFlowTestCase.assertRaises", "ops.array_ops.fake_quant_with_min_max_args", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "client.session.Session", "<builtin>.str", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromSessionTest.testInvalidQuantizeQATModelMissingInputStats": ["test_util.TensorFlowTestCase.assertRaises", "ops.array_ops.fake_quant_with_min_max_args", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "client.session.Session", "<builtin>.str", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromSessionTest.testTrainingTimeAndPostTrainingCalibrateAndQuantize": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "<builtin>.len", "client.session.Session", "client.session.Session", "python.convert.mlir_quantize", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertLess", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.convert.mlir_quantize": [], "python.lite_test.FromSessionTest.testFloatTocoConverter": ["lite.TocoConverter.from_session", "python.interpreter.Interpreter", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "lite.TocoConverter.from_session": [], "python.lite_test.FromSessionTest.testMultipleOutputNodeNames": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "client.session.Session", "framework.ops.Graph", "numpy.asarray", "ops.array_ops.split", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "ops.array_ops.split": [], "numpy.asarray": [], "framework.test_util.run_in_graph_and_eager_modes": [], "python.lite_test.FromSessionTest.testFunctions": ["ops.variables.Variable", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "ops.variables.variables_initializer", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "ops.math_ops.multiply", "framework.ops.Graph", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testFunctions.plus_placeholder": [], "ops.variables.Variable": [], "ops.math_ops.multiply": [], "ops.variables.variables_initializer": [], "python.lite_test.FromSessionTest.testInferenceInputOutputTypeFloatDefault": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testInferenceInputOutputTypeQuantizedUint8Default": ["ops.array_ops.fake_quant_with_min_max_args", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testReusingConverterWithDifferentPostTrainingQuantization": ["ops.array_ops.fake_quant_with_min_max_args", "lite.TFLiteConverter.from_session", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSessionTest.testResizeWithShape": ["ops.array_ops.shape", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "ops.array_ops.reshape", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder"], "ops.array_ops.shape": [], "python.lite_test.FromSessionTest.testResizingIntermediateDynamicTensor": ["lite.TFLiteConverter.from_session", "python.interpreter.Interpreter", "ops.array_ops.pad", "client.session.Session", "numpy.array", "ops.math_ops.negative", "framework.ops.Graph", "ops.array_ops.placeholder"], "ops.math_ops.negative": [], "ops.array_ops.pad": [], "python.lite_test.FromSessionTest.testGraphDebugInfo": ["ops.variables.Variable", "test_util.TensorFlowTestCase.assertIn", "lite.TFLiteConverter.from_session", "lite.TFLiteConverter.from_session", "ops.variables.variables_initializer", "six.ensure_str", "client.session.Session", "client.session.Session", "ops.math_ops.multiply", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromSessionTest.testGraphDebugInfo.plus_placeholder": [], "six.ensure_str": [], "python.lite_test.FromSessionTest.testOutputOnlyModel": ["ops.random_ops.random_normal", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertTrue", "client.session.Session", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertIsNotNone"], "ops.random_ops.random_normal": [], "python.lite_test.FromFrozenGraphFile.testFloat": ["test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.get_temp_dir", "test_util.TensorFlowTestCase.assertAllEqual", "os.path.join", "client.session.Session", "training.training_util.write_graph", "lite.TFLiteConverter.from_frozen_graph", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "training.training_util.write_graph": [], "lite.TFLiteConverter.from_frozen_graph": [], "python.lite_test.FromFrozenGraphFile.testFloatWithShapesArray": ["python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.get_temp_dir", "test_util.TensorFlowTestCase.assertAllEqual", "os.path.join", "client.session.Session", "training.training_util.write_graph", "lite.TFLiteConverter.from_frozen_graph", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromFrozenGraphFile.testInvalidShapesArray": ["test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "client.session.Session", "training.training_util.write_graph", "lite.TFLiteConverter.from_frozen_graph", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromFrozenGraphFile.testPartialShapesArray": ["lite.TFLiteConverter.from_frozen_graph", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.get_temp_dir", "test_util.TensorFlowTestCase.assertAllEqual", "os.path.join", "client.session.Session", "training.training_util.write_graph", "ops.math_ops.add", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromFrozenGraphFile.testFreezeGraph": ["ops.variable_scope.get_variable", "test_util.TensorFlowTestCase.assertRaises", "<builtin>.str", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "client.session.Session", "training.training_util.write_graph", "lite.TFLiteConverter.from_frozen_graph", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.FromFrozenGraphFile.testPbtxt": ["test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.get_temp_dir", "test_util.TensorFlowTestCase.assertAllEqual", "os.path.join", "client.session.Session", "training.training_util.write_graph", "lite.TFLiteConverter.from_frozen_graph", "framework.ops.Graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromFrozenGraphFile.testInvalidFileNotFound": ["test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_frozen_graph", "<builtin>.str", "test_util.TensorFlowTestCase.assertEqual"], "python.lite_test.FromFrozenGraphFile.testInvalidFileBadData": ["test_util.TensorFlowTestCase.assertRaises", "platform.gfile.Open", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "<builtin>.str", "lite.TFLiteConverter.from_frozen_graph"], "platform.gfile.Open": [], "python.lite_test.FromFrozenGraphFile.testFloatTocoConverter": ["python.interpreter.Interpreter", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "client.session.Session", "training.training_util.write_graph", "framework.ops.Graph", "lite.TocoConverter.from_frozen_graph", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "lite.TocoConverter.from_frozen_graph": [], "python.lite_test.FromFrozenGraphFile.testGraphDebugInfo": ["test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "client.session.Session", "test_util.TensorFlowTestCase.assertFalse", "training.training_util.write_graph", "framework.ops.Graph", "lite.TocoConverter.from_frozen_graph", "ops.array_ops.placeholder"], "python.lite_test.FromFrozenGraphObjectDetection._initObjectDetectionArgs": ["platform.resource_loader.get_root_dir_with_all_resources", "os.path.exists", "os.path.join", "<builtin>.IOError", "platform.resource_loader.get_path_to_datafile"], "platform.resource_loader.get_path_to_datafile": [], "platform.resource_loader.get_root_dir_with_all_resources": [], "<builtin>.IOError": [], "python.lite_test.FromFrozenGraphObjectDetection.testTFLiteGraphDef": ["test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "lite.TFLiteConverter.from_frozen_graph", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromFrozenGraphObjectDetection.testTFLiteGraphDefWithControlOutput": ["python.lite.TFLiteConverter", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "python.util._convert_model_from_bytearray_to_object", "framework.ops.Graph", "ops.logging_ops.print_v2", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "ops.logging_ops.print_v2": [], "python.util._convert_model_from_bytearray_to_object": [], "python.lite_test.FromFrozenGraphObjectDetection.testModifyIOToUint8": ["python.util._convert_tflite_enum_type_to_tf_type", "test_util.TensorFlowTestCase.assertEqual", "python.util.get_quantize_opcode_idx", "python.util.get_quantize_opcode_idx", "python.util._convert_model_from_bytearray_to_object", "lite.TFLiteConverter.from_frozen_graph", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromFrozenGraphObjectDetection.testModifyIOToUint8.representative_dataset_gen": ["numpy.random.uniform", "six.moves.range"], "python.util.get_quantize_opcode_idx": [], "python.util._convert_tflite_enum_type_to_tf_type": [], "python.lite_test.FromSavedModelTest._createSavedModel": ["saved_model.saved_model.simple_save", "test_util.TensorFlowTestCase.get_temp_dir", "os.path.join", "client.session.Session", "framework.ops.Graph", "ops.array_ops.placeholder"], "saved_model.saved_model.simple_save": [], "python.lite_test.FromSavedModelTest.testSimpleModel": ["test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertStartsWith", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_saved_model", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertIsNotNone"], "lite.TFLiteConverter.from_saved_model": [], "test_util.TensorFlowTestCase.assertStartsWith": [], "python.lite_test.FromSavedModelTest.testOldConverterWarning": ["io.BytesIO", "test_util.TensorFlowTestCase.assertIn", "test_util.TensorFlowTestCase.assertIsNotNone", "lite.TFLiteConverter.from_saved_model", "lite.TFLiteConverter.from_saved_model", "logging.root.addHandler", "io.StringIO", "logging.root.removeHandler", "logging.StreamHandler"], "python.lite_test.FromSavedModelTest.testNewConverterOptOut": ["io.BytesIO", "test_util.TensorFlowTestCase.assertIn", "test_util.TensorFlowTestCase.assertIsNotNone", "lite.TFLiteConverter.from_saved_model", "lite.TFLiteConverter.from_saved_model", "logging.root.addHandler", "io.StringIO", "logging.root.removeHandler", "logging.StreamHandler"], "python.lite_test.FromSavedModelTest.testNoneBatchSize": ["test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertStartsWith", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_saved_model", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSavedModelTest.testOrderInputArrays": ["test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertStartsWith", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_saved_model", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSavedModelTest.testShapeOverriding": ["test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertStartsWith", "test_util.TensorFlowTestCase.assertLen", "lite.TFLiteConverter.from_saved_model", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromSavedModelTest.testWrongInputShapes": ["test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_saved_model"], "python.lite_test.FromSavedModelTest.testSubsetInputShaapes": ["test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_saved_model"], "python.lite_test.FromSavedModelTest.testSimpleModelTocoConverter": ["python.interpreter.Interpreter", "python.interpreter.Interpreter", "lite.TocoConverter.from_saved_model", "test_util.TensorFlowTestCase.assertIsNotNone"], "lite.TocoConverter.from_saved_model": [], "python.lite_test.FromSavedModelTest.testGraphDebugInfo": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertIsNotNone", "lite.TFLiteConverter.from_saved_model"], "python.lite_test.MyAddLayer.__init__": ["<builtin>.super"], "<builtin>.super": [], "python.lite_test.MyAddLayer.call": [], "python.lite_test.MyAddLayer.get_config": ["<builtin>.super"], "python.lite_test.FromKerasFile.setUp": ["<builtin>.super", "eager.context.executing_eagerly", "keras.backend.clear_session"], "eager.context.executing_eagerly": [], "keras.backend.clear_session": [], "python.lite_test.FromKerasFile.tearDown": ["<builtin>.super", "os.remove"], "os.remove": [], "python.lite_test.FromKerasFile._getSequentialModel": ["os.close", "keras.layers.RepeatVector", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.TimeDistributed", "numpy.random.random", "tempfile.mkstemp", "keras.models.save_model", "keras.models.Sequential"], "keras.models.Sequential": [], "keras.layers.Dense": [], "keras.layers.RepeatVector": [], "keras.layers.TimeDistributed": [], "numpy.random.random": [], "tempfile.mkstemp": [], "keras.models.save_model": [], "os.close": [], "python.lite_test.FromKerasFile": ["absl.testing.parameterized.named_parameters"], "python.lite_test.FromKerasFile.testSequentialModel": ["lite.TFLiteConverter.from_keras_model_file", "numpy.testing.assert_almost_equal", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "keras.models.load_model", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEndsWith", "numpy.array", "test_util.TensorFlowTestCase.assertIsNotNone"], "lite.TFLiteConverter.from_keras_model_file": [], "test_util.TensorFlowTestCase.assertEndsWith": [], "keras.models.load_model": [], "numpy.testing.assert_almost_equal": [], "python.lite_test.FromKerasFile.testCustomLayer": ["lite.TFLiteConverter.from_keras_model_file", "numpy.testing.assert_almost_equal", "lite.TFLiteConverter.from_keras_model_file", "python.interpreter.Interpreter", "keras.models.load_model", "numpy.array", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromKerasFile.testSequentialModelInputArray": ["test_util.TensorFlowTestCase.assertRaises", "<builtin>.str", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEqual", "framework.ops.disable_eager_execution", "test_util.TensorFlowTestCase.assertIsNotNone"], "framework.ops.disable_eager_execution": [], "python.lite_test.FromKerasFile.testSequentialModelInputShape": ["test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEndsWith", "<builtin>.str", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromKerasFile.testSequentialModelOutputArray": ["test_util.TensorFlowTestCase.assertRaises", "<builtin>.str", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEqual", "framework.ops.disable_eager_execution", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromKerasFile.testFunctionalModel": ["os.close", "lite.TFLiteConverter.from_keras_model_file", "numpy.testing.assert_almost_equal", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "keras.layers.Input", "test_util.TensorFlowTestCase.assertLen", "keras.models.Model", "keras.models.load_model", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.random.random", "tempfile.mkstemp", "keras.models.save_model", "numpy.array", "keras.layers.Dense", "test_util.TensorFlowTestCase.assertIsNotNone"], "keras.layers.Input": [], "keras.models.Model": [], "python.lite_test.FromKerasFile._getFunctionalModelMultipleInputs": ["os.close", "keras.layers.Dropout", "keras.layers.Input", "keras.models.Model", "numpy.random.random", "tempfile.mkstemp", "keras.models.save_model", "keras.layers.Dense"], "keras.layers.Dropout": [], "python.lite_test.FromKerasFile.testFunctionalModelMultipleInputs": ["lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromKerasFile.testShapeOverriding": ["lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromKerasFile.testPartialShapeOverriding": ["lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertEndsWith", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.FromKerasFile.testWrongShapeOverriding": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertRaises", "lite.TFLiteConverter.from_keras_model_file"], "python.lite_test.FromKerasFile.testFunctionalSequentialModel": ["lite.TFLiteConverter.from_keras_model_file", "keras.layers.RepeatVector", "keras.layers.TimeDistributed", "python.interpreter.Interpreter", "numpy.random.random", "keras.layers.Dense", "test_util.TensorFlowTestCase.assertEqual", "keras.models.Model", "tempfile.mkstemp", "keras.models.save_model", "keras.models.Sequential", "test_util.TensorFlowTestCase.assertIsNotNone", "os.close", "test_util.TensorFlowTestCase.assertLen", "keras.models.load_model", "numpy.testing.assert_almost_equal", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEndsWith", "numpy.array"], "python.lite_test.FromKerasFile.testSequentialModelTocoConverter": ["test_util.TensorFlowTestCase.assertEndsWith", "python.interpreter.Interpreter", "lite.TocoConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertIsNotNone"], "lite.TocoConverter.from_keras_model_file": [], "python.lite_test.FromKerasFile.testGraphDebugInfo": ["test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertIsNotNone", "lite.TFLiteConverter.from_keras_model_file"], "python.lite_test.FromKerasFile.testSparsifyModel": ["lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertTrue", "lite.TFLiteConverter.from_keras_model_file"], "python.lite_test.FromKerasFile.testSparsifyQuantizedModel": ["lite.TFLiteConverter.from_keras_model_file", "lite.TFLiteConverter.from_keras_model_file", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite_test.GrapplerTest.testConstantFolding": ["framework.constant_op.constant", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "ops.gen_array_ops.broadcast_to", "test_util.TensorFlowTestCase.assertAllEqual", "client.session.Session", "ops.math_ops.matmul", "framework.ops.disable_eager_execution", "framework.ops.Graph", "ops.array_ops.placeholder"], "ops.gen_array_ops.broadcast_to": [], "python.lite_test.GrapplerTest": ["absl.testing.parameterized.named_parameters"], "python.lite_test.GrapplerTest.testInputNodeIsNotFolded": ["framework.constant_op.constant", "lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "test_util.TensorFlowTestCase.assertLen", "client.session.Session", "framework.ops.disable_eager_execution", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.GrapplerTest.testGrapplerConstFolding": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEqual", "python.interpreter.Interpreter", "ops.array_ops.reshape", "test_util.TensorFlowTestCase.assertLen", "client.session.Session", "ops.array_ops.zeros", "framework.ops.Graph", "ops.array_ops.placeholder"], "python.lite_test.GrapplerTest.testGrapplerConstFolding.plus_placeholder": [], "ops.array_ops.zeros": [], "python.lite_test.DefaultConverterAttrsTest.testAttrs": ["lite.TFLiteConverter.from_session", "test_util.TensorFlowTestCase.assertEqual", "client.session.Session", "test_util.TensorFlowTestCase.assertFalse", "framework.ops.Graph", "test_util.TensorFlowTestCase.assertIsNone", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertIsNotNone"], "test_util.TensorFlowTestCase.assertIsNone": [], "python.lite_test.ControlFlowV1OpsTest.testConverterErrorOnControlFlowV1Ops": ["test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertIn", "<builtin>.str", "lite.TFLiteConverter.from_frozen_graph", "platform.resource_loader.get_path_to_datafile"], "python.lite_test.QuantizationModeTest": ["absl.testing.parameterized.named_parameters"], "python.lite_test.QuantizationModeTest.testDeprecatedOptionWarning": ["test_util.TensorFlowTestCase.assertIn", "python.lite.TargetSpec", "python.lite.QuantizationMode", "logging.root.addHandler", "io.StringIO", "logging.root.removeHandler", "logging.StreamHandler"], "python.lite.TargetSpec": [], "python.lite.QuantizationMode": [], "platform.test.main": []}