{"ragged.ragged_tensor_test": ["platform.googletest.main"], "ragged.ragged_tensor_test.int32array": ["numpy.array"], "numpy.array": [], "ragged.ragged_tensor_test.RaggedTensorTest.testClassDocStringExamples": ["ragged_tensor.RaggedTensor.from_row_splits", "ragged_tensor.RaggedTensor.from_row_lengths", "ragged_tensor.RaggedTensor.from_nested_row_splits", "ragged_tensor.RaggedTensor.from_row_limits", "ragged_tensor.RaggedTensor.from_value_rowids", "test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor.from_row_starts", "ops.array_ops.ones", "test_util.TensorFlowTestCase.assertEqual"], "ragged_tensor.RaggedTensor.from_row_splits": [], "test_util.TensorFlowTestCase.assertAllEqual": [], "ragged_tensor.RaggedTensor.from_row_lengths": [], "ragged_tensor.RaggedTensor.from_value_rowids": [], "ragged_tensor.RaggedTensor.from_row_starts": [], "ragged_tensor.RaggedTensor.from_row_limits": [], "test_util.TensorFlowTestCase.assertEqual": [], "ragged_tensor.RaggedTensor.from_nested_row_splits": [], "ops.array_ops.ones": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorValueConstruction": ["ragged.ragged_tensor_value.RaggedTensorValue", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "numpy.array"], "ragged.ragged_tensor_value.RaggedTensorValue": [], "test_util.TensorFlowTestCase.assertLen": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorConstruction": ["test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "ragged.ragged_tensor.RaggedTensor", "row_partition.RowPartition.from_row_splits"], "framework.constant_op.constant": [], "row_partition.RowPartition.from_row_splits": [], "ragged.ragged_tensor.RaggedTensor": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorConstructionErrors": ["framework.constant_op.constant", "ragged.ragged_tensor.RaggedTensor", "test_util.TensorFlowTestCase.assertRaisesRegex", "row_partition.RowPartition.from_row_splits", "<builtin>.range"], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "<builtin>.range": [], "ragged.ragged_tensor_test.RaggedTensorTest.testFromValueRowIdsWithDerivedNRows": ["test_util.TensorFlowTestCase.assertIs", "framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_value_rowids", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "test_util.TensorFlowTestCase.assertIs": [], "ragged.ragged_tensor_test.RaggedTensorTest.testFromValueRowIdsWithDerivedNRowsDynamic": ["ops.array_ops.placeholder_with_default", "test_util.TensorFlowTestCase.assertIs", "framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_value_rowids", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "ops.array_ops.placeholder_with_default": [], "eager.context.executing_eagerly": [], "ragged.ragged_tensor_test.RaggedTensorTest.testFromValueRowIdsWithExplicitNRows": ["test_util.TensorFlowTestCase.assertIs", "framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_value_rowids", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromValueRowIdsWithExplicitNRowsEqualToDefault": ["test_util.TensorFlowTestCase.assertIs", "framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_value_rowids", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromValueRowIdsWithEmptyValues": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor.from_value_rowids", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromRowSplits": ["test_util.TensorFlowTestCase.assertIs", "ragged_tensor.RaggedTensor.from_row_splits", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromRowSplitsWithDifferentSplitTypes": ["ragged_tensor.RaggedTensor.from_row_splits", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual", "numpy.array"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromRowSplitsWithEmptySplits": ["ragged_tensor.RaggedTensor.from_row_splits", "test_util.TensorFlowTestCase.assertRaisesRegex"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromRowStarts": ["test_util.TensorFlowTestCase.assertIs", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor.from_row_starts", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromRowLimits": ["test_util.TensorFlowTestCase.assertIs", "framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_row_limits", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromRowLengths": ["test_util.TensorFlowTestCase.assertIs", "ragged_tensor.RaggedTensor.from_row_lengths", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromRowLengthsInt32": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor.from_row_lengths", "framework.constant_op.constant"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromUniformRowLength": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor.from_uniform_row_length", "test_util.TensorFlowTestCase.assertEqual"], "ragged_tensor.RaggedTensor.from_uniform_row_length": [], "ragged.ragged_tensor_test.RaggedTensorTest.testFromUniformRowLengthWithEmptyValues": ["ragged_tensor.RaggedTensor.from_uniform_row_length", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromUniformRowLengthWithPlaceholders": ["ops.array_ops.placeholder_with_default", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertAllEqual", "ops.array_ops.zeros", "ragged_tensor.RaggedTensor.from_uniform_row_length", "test_util.TensorFlowTestCase.assertEqual"], "ops.array_ops.zeros": [], "ragged.ragged_tensor_test.RaggedTensorTest.testFromNestedValueRowIdsWithDerivedNRows": ["test_util.TensorFlowTestCase.assertIs", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor.from_nested_value_rowids", "test_util.TensorFlowTestCase.assertEqual"], "ragged_tensor.RaggedTensor.from_nested_value_rowids": [], "ragged.ragged_tensor_test.RaggedTensorTest.testFromNestedRowPartitions": ["ragged_tensor.RaggedTensor._from_nested_row_partitions", "framework.constant_op.constant", "row_partition.RowPartition.from_row_splits", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "ragged_tensor.RaggedTensor._from_nested_row_partitions": [], "ragged.ragged_tensor_test.RaggedTensorTest.testFromNestedValueRowIdsWithExplicitNRows": ["test_util.TensorFlowTestCase.assertIs", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor.from_nested_value_rowids", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromNestedValueRowIdsWithExplicitNRowsMismatch": ["framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_nested_value_rowids", "test_util.TensorFlowTestCase.assertRaisesRegex"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromNestedValueRowIdsWithNonListInput": ["framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_nested_value_rowids", "test_util.TensorFlowTestCase.assertRaisesRegex"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromNestedRowSplits": ["test_util.TensorFlowTestCase.assertIs", "framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_nested_row_splits", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testWithRowSplits": ["test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual", "ragged_tensor.RaggedTensor.from_nested_row_splits"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromNestedRowSplitsWithNonListInput": ["framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaisesRegex", "ragged_tensor.RaggedTensor.from_nested_row_splits"], "ragged.ragged_tensor_test.RaggedTensorTest.testFromValueRowIdsWithBadNRows": ["ops.array_ops.placeholder_with_default", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaisesRegex", "ragged_tensor.RaggedTensor.from_value_rowids", "ops.array_ops.expand_dims"], "ops.array_ops.expand_dims": [], "ragged.ragged_tensor_test.RaggedTensorTest.testCondWithTensorsFromValueIds": ["ops.array_ops.placeholder_with_default", "ragged_tensor.RaggedTensor.from_value_rowids", "test_util.TensorFlowTestCase.assertAllEqual", "ops.control_flow_ops.cond"], "ragged.ragged_tensor_test.RaggedTensorTest.testCondWithTensorsFromValueIds.<lambda1>": [], "ragged.ragged_tensor_test.RaggedTensorTest.testCondWithTensorsFromValueIds.<lambda2>": [], "ops.control_flow_ops.cond": [], "ragged.ragged_tensor_test.RaggedTensorTest.testGraphMismatch": ["ragged_tensor.RaggedTensor.from_row_splits", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaisesRegex", "framework.ops.Graph", "eager.context.executing_eagerly"], "framework.ops.Graph": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorAccessors_2d": ["ragged_tensor.RaggedTensor.from_row_splits", "framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_value_rowids", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorAccessors_3d_with_ragged_rank_1": ["ragged_tensor.RaggedTensor.from_row_splits", "framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_row_lengths", "ragged_tensor.RaggedTensor.from_value_rowids", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorAccessors_3d_with_ragged_rank_2": ["framework.constant_op.constant", "ragged_tensor.RaggedTensor.from_nested_row_splits", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertLen", "ragged_tensor.RaggedTensor.from_nested_value_rowids", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testShape": ["test_util.TensorFlowTestCase.assertIsNone", "ragged_tensor.RaggedTensor.from_row_splits", "eager.context.executing_eagerly", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual"], "ops.array_ops.placeholder": [], "test_util.TensorFlowTestCase.assertIsNone": [], "ragged.ragged_tensor_test.RaggedTensorTest.testGetShape": ["ragged_tensor.RaggedTensor.from_row_splits", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorStr": ["ragged_tensor.RaggedTensor.from_row_splits", "<builtin>.str", "<builtin>.repr", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertEqual"], "<builtin>.repr": [], "<builtin>.str": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorValueStr": ["<builtin>.str", "<builtin>.repr", "ragged.ragged_tensor_value.RaggedTensorValue", "test_util.TensorFlowTestCase.assertEqual", "numpy.array"], "ragged.ragged_tensor_test.RaggedTensorTest.testWithValues": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged.ragged_factory_ops.constant", "ops.array_ops.expand_dims"], "ragged.ragged_factory_ops.constant": [], "ragged.ragged_tensor_test.RaggedTensorTest.testSessionRun": ["ragged.ragged_factory_ops.constant", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertCountEqual", "test_util.TensorFlowTestCase.test_session", "test_util.TensorFlowTestCase.assertEqual"], "test_util.TensorFlowTestCase.test_session": [], "test_util.TensorFlowTestCase.assertCountEqual": [], "ragged.ragged_tensor_test.RaggedTensorTest.testSessionRunFeed": ["ragged_tensor.RaggedTensor.from_row_splits", "ragged_tensor.RaggedTensor.from_nested_row_splits", "ragged.ragged_factory_ops.constant_value", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertCountEqual", "test_util.TensorFlowTestCase.test_session", "ops.array_ops.placeholder", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_factory_ops.constant_value": [], "ragged.ragged_tensor_test.RaggedTensorTest.testSessionPartialRunFeed": ["ragged_tensor.RaggedTensor.from_row_splits", "ragged.ragged_factory_ops.constant_value", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.test_session", "ops.array_ops.placeholder", "ragged.ragged_math_ops.reduce_sum"], "ragged.ragged_math_ops.reduce_sum": [], "ragged.ragged_tensor_test.RaggedTensorTest.testEagerForLoop": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged.ragged_factory_ops.constant", "eager.context.executing_eagerly"], "ragged.ragged_tensor_test.RaggedTensorTest.testConsumers": ["ragged_tensor.RaggedTensor.from_row_splits", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertLen", "ops.array_ops.placeholder", "ragged.ragged_math_ops.reduce_sum"], "absl.testing.parameterized.parameters": [], "ragged.ragged_tensor_test.RaggedTensorTest": ["absl.testing.parameterized.parameters", "absl.testing.parameterized.named_parameters"], "ragged.ragged_tensor_test.RaggedTensorTest.testFactoryTypePreference": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testFactoryTypePreference.op_cast": ["framework.constant_op.constant"], "ragged.ragged_tensor_test.RaggedTensorTest.testFactoryValidation": ["test_util.TensorFlowTestCase.evaluate", "<builtin>.dict", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertRaises"], "test_util.TensorFlowTestCase.assertRaises": [], "test_util.TensorFlowTestCase.evaluate": [], "ragged.ragged_tensor_test.RaggedTensorTest.testFactoryValidation.wrap_arg": ["ops.array_ops.placeholder_with_default", "framework.constant_op.constant", "framework.tensor_shape.TensorShape"], "framework.tensor_shape.TensorShape": [], "<builtin>.dict": [], "absl.testing.parameterized.named_parameters": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedToVariant": ["ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedToBatchedVariant": ["ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorTest.testVariantRoundTrip": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor._from_variant", "ragged.ragged_factory_ops.constant"], "ragged_tensor.RaggedTensor._from_variant": [], "ragged.ragged_tensor_test.RaggedTensorTest.testBatchedVariantRoundTripInputRaggedRankInferred": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor._from_variant", "ragged.ragged_factory_ops.constant", "ops.array_ops.reshape"], "ops.array_ops.reshape": [], "ragged.ragged_tensor_test.RaggedTensorTest.testBatchedVariantRoundTripWithInputRaggedRank": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor._from_variant", "ragged.ragged_factory_ops.constant", "ops.array_ops.reshape"], "ragged.ragged_tensor_test.RaggedTensorTest.testUnbatchVariant": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged_tensor.RaggedTensor._from_variant", "ragged.ragged_factory_ops.constant", "<builtin>.range"], "ragged.ragged_tensor_test.RaggedTensorTest.testUnbatchVariantInDataset": ["<builtin>.enumerate", "test_util.TensorFlowTestCase.cached_session", "ragged.ragged_factory_ops.constant", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertAllEqual", "ops.dataset_ops.make_one_shot_iterator", "dataset_ops.Dataset.from_tensor_slices", "<builtin>.range"], "dataset_ops.Dataset.from_tensor_slices": [], "<builtin>.enumerate": [], "ops.dataset_ops.make_one_shot_iterator": [], "test_util.TensorFlowTestCase.cached_session": [], "ragged.ragged_tensor_test.RaggedTensorTest.testFromVariantInvalidParams": ["ragged_tensor.RaggedTensor._from_variant", "ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.assertRaisesRegex", "ops.array_ops.reshape"], "ragged.ragged_tensor_test.RaggedTensorTest._testRaggedVarientGradient": ["ops.array_ops.reshape", "ops.gradients_impl.gradients", "framework.constant_op.constant", "framework.constant_op.constant", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertAllClose", "eager.backprop.GradientTape", "eager.backprop.GradientTape"], "eager.backprop.GradientTape": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsViaMapFn.func": ["ops.map_fn.map_fn", "ops.math_ops.reduce_sum"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsViaMapFnReduce.func": ["ragged_tensor.RaggedTensor.from_row_splits", "ops.map_fn.map_fn", "framework.tensor_spec.TensorSpec"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradients.func": ["ragged_tensor.RaggedTensor._from_variant", "ragged_tensor.RaggedTensor.from_row_splits"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsRaggedRank0.func": ["ops.gen_ragged_conversion_ops.ragged_tensor_to_variant", "ragged_tensor.RaggedTensor._from_variant"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsRaggedRank3.func": ["ragged_tensor.RaggedTensor._from_variant", "ragged_tensor.RaggedTensor.from_nested_row_splits"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsBatched.func": ["ragged_tensor.RaggedTensor._from_variant", "ragged_tensor.RaggedTensor.from_row_splits"], "ops.gradients_impl.gradients": [], "test_util.TensorFlowTestCase.assertAllClose": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradients": ["ragged_tensor.RaggedTensor.from_row_splits"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsBatched": ["ragged_tensor.RaggedTensor.from_row_splits"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsBatchedAndSliced": ["ragged_tensor.RaggedTensor.from_row_splits", "functools.partial"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsBatchedAndSliced.func": ["ragged_tensor.RaggedTensor._from_variant", "ragged_tensor.RaggedTensor.from_row_splits"], "functools.partial": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsRaggedRank0": ["ragged_tensor.RaggedTensor.from_row_splits"], "ops.gen_ragged_conversion_ops.ragged_tensor_to_variant": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsRaggedRank3": ["ragged_tensor.RaggedTensor.from_row_splits"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsViaMapFn": ["ragged_tensor.RaggedTensor.from_row_splits", "ragged_tensor.RaggedTensor.from_row_splits"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsViaMapFn.func.transform_row": ["ops.math_ops.square", "ops.math_ops.sqrt", "ops.math_ops.reduce_mean"], "ops.math_ops.square": [], "ops.math_ops.reduce_mean": [], "ops.math_ops.sqrt": [], "ops.map_fn.map_fn": [], "ops.math_ops.reduce_sum": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsViaMapFnReduce": ["ops.math_ops.reduce_mean"], "framework.tensor_spec.TensorSpec": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedVariantGradientsErrors": ["ragged_tensor.RaggedTensor.from_row_splits", "ops.gradients_impl.gradients", "test_util.TensorFlowTestCase.assertRaisesRegex", "eager.context.executing_eagerly", "ops.array_ops.stack", "ragged_tensor.RaggedTensor._from_variant"], "ops.array_ops.stack": [], "ragged.ragged_tensor_test.RaggedTensorTest.assertNumpyObjectTensorsRecursivelyEqual": ["ragged_tensor.RaggedTensor._from_variant", "<builtin>.zip", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.len", "<builtin>.isinstance", "test_util.TensorFlowTestCase.assertEqual"], "<builtin>.isinstance": [], "<builtin>.len": [], "<builtin>.zip": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorNumpy": ["test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertRaisesRegex", "ragged.ragged_factory_ops.constant", "eager.context.executing_eagerly", "ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor", "<builtin>.isinstance"], "ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorSetShape": ["ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.assertIsNot", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.zip"], "test_util.TensorFlowTestCase.assertIsNot": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorSetShapeWithPlaceholders": ["ragged.ragged_factory_ops.constant", "test_util.TensorFlowTestCase.assertIsNot", "<builtin>.zip", "test_util.TensorFlowTestCase.assertEqual", "util.nest.map_structure"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorSetShapeWithPlaceholders.<lambda1>": ["ops.array_ops.placeholder_with_default"], "util.nest.map_structure": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorSetShapeUniformRowLength": ["ragged_tensor.RaggedTensor.from_tensor", "util.nest.map_structure"], "ragged_tensor.RaggedTensor.from_tensor": [], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorSetShapeUniformRowLength.<lambda1>": ["ops.array_ops.placeholder_with_default"], "ragged.ragged_tensor_test.RaggedTensorTest.testRaggedTensorSetShapeInconsistentShapeError": ["test_util.TensorFlowTestCase.assertRaises", "test_util.TensorFlowTestCase.assertEqual", "ragged_tensor.RaggedTensor.from_tensor", "test_util.TensorFlowTestCase.assertRaisesRegex"], "ragged.ragged_tensor_test.RaggedTensorSpecTest.assertAllTensorsEqual": ["test_util.TensorFlowTestCase.assertLen", "<builtin>.len", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.zip"], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testConstruction": ["test_util.TensorFlowTestCase.assertIsNone", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaisesRegex", "ragged.ragged_tensor.RaggedTensorSpec", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor.RaggedTensorSpec": [], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testValueType": ["ragged.ragged_tensor.RaggedTensorSpec", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorSpecTest": ["absl.testing.parameterized.parameters", "framework.test_util.run_v1_only", "absl.testing.parameterized.named_parameters"], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testSerialize": ["<builtin>.repr", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testComponentSpecs": ["test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testToFromComponents": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual", "ragged.ragged_factory_ops.constant"], "framework.test_util.run_v1_only": [], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testFromNumpyComponents": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged.ragged_tensor.RaggedTensorSpec", "test_util.TensorFlowTestCase.assertIsInstance", "numpy.array"], "test_util.TensorFlowTestCase.assertIsInstance": [], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testFlatTensorSpecs": ["framework.tensor_spec.TensorSpec", "test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testToFromTensorList": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged.ragged_factory_ops.constant"], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testToFromBatchedTensorList": ["test_util.TensorFlowTestCase.assertAllEqual", "ragged.ragged_factory_ops.constant"], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testToFromBatchedTensorListPreservesUniformRowLengths": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertTrue", "ops.array_ops.zeros", "ragged_tensor.RaggedTensor.from_tensor"], "test_util.TensorFlowTestCase.assertTrue": [], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testBatch": ["test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testUnbatch": ["test_util.TensorFlowTestCase.assertEqual"], "ragged.ragged_tensor_test.RaggedTensorSpecTest.testIsCompatibleWith": ["ragged.ragged_tensor.RaggedTensorSpec", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertTrue", "test_util.TensorFlowTestCase.assertFalse"], "test_util.TensorFlowTestCase.assertFalse": [], "platform.googletest.main": []}