{"kernel_tests.parsing_ops_test": ["platform.test.main"], "kernel_tests.parsing_ops_test.<lambda1>": ["example.feature_pb2.Features"], "example.feature_pb2.Features": [], "kernel_tests.parsing_ops_test.<lambda2>": ["example.feature_pb2.BytesList", "example.feature_pb2.Feature"], "example.feature_pb2.BytesList": [], "example.feature_pb2.Feature": [], "kernel_tests.parsing_ops_test.<lambda3>": ["example.feature_pb2.Int64List", "example.feature_pb2.Feature"], "example.feature_pb2.Int64List": [], "kernel_tests.parsing_ops_test.<lambda4>": ["example.feature_pb2.FloatList", "example.feature_pb2.Feature"], "example.feature_pb2.FloatList": [], "kernel_tests.parsing_ops_test.<lambda5>": ["example.feature_pb2.FeatureList"], "example.feature_pb2.FeatureList": [], "kernel_tests.parsing_ops_test.<lambda6>": ["example.feature_pb2.FeatureLists"], "example.feature_pb2.FeatureLists": [], "kernel_tests.parsing_ops_test.flatten": ["itertools.chain.from_iterable"], "itertools.chain.from_iterable": [], "kernel_tests.parsing_ops_test._compare_output_to_expected": ["<builtin>.isinstance", "test.TestCase.assertAllEqual", "test.TestCase.assertTrue", "<builtin>.set", "test.TestCase.assertEqual", "test.TestCase.assertLen", "platform.tf_logging.info"], "<builtin>.set": [], "test.TestCase.assertEqual": [], "platform.tf_logging.info": [], "<builtin>.isinstance": [], "test.TestCase.assertTrue": [], "test.TestCase.assertLen": [], "test.TestCase.assertAllEqual": [], "kernel_tests.parsing_ops_test.ParseExampleTest._test": ["test.TestCase.assertRaisesWithPredicateMatch", "test.TestCase.assertRaises", "<builtin>.isinstance", "test.TestCase.evaluate", "numpy.asarray", "test.TestCase.assertEqual", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "ops.parsing_ops.parse_example", "<builtin>.tuple"], "eager.context.executing_eagerly": [], "test.TestCase.assertRaisesWithPredicateMatch": [], "ops.parsing_ops.parse_example": [], "test.TestCase.evaluate": [], "test.TestCase.assertRaises": [], "numpy.asarray": [], "<builtin>.tuple": [], "kernel_tests.parsing_ops_test.ParseExampleTest.testEmptySerializedWithAllDefaults": ["numpy.random.rand", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "numpy.array", "numpy.empty", "framework.ops.convert_to_tensor"], "numpy.random.rand": [], "numpy.empty": [], "numpy.array": [], "framework.ops.convert_to_tensor": [], "ops.parsing_ops.VarLenFeature": [], "ops.parsing_ops.FixedLenFeature": [], "kernel_tests.parsing_ops_test.ParseExampleTest.testEmptySerializedWithoutDefaultsShouldFail": ["numpy.random.rand", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.VarLenFeature", "example.feature_pb2.Feature", "example.feature_pb2.Feature", "example.feature_pb2.Feature", "example.example_pb2.Example"], "example.example_pb2.Example": [], "kernel_tests.parsing_ops_test.ParseExampleTest.testDenseNotMatchingShapeShouldFail": ["example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.ParseExampleTest.testDenseDefaultNoShapeShouldFail": ["example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingSparse": ["example.example_pb2.Example", "example.feature_pb2.Feature", "ops.parsing_ops.VarLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "numpy.array", "framework.ops.convert_to_tensor", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingSparseFeature": ["example.example_pb2.Example", "example.feature_pb2.Feature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "numpy.array", "framework.ops.convert_to_tensor", "example.example_pb2.Example", "ops.parsing_ops.SparseFeature"], "ops.parsing_ops.SparseFeature": [], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingSparseFeatureReuse": ["ops.parsing_ops.SparseFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "numpy.array", "framework.ops.convert_to_tensor", "example.example_pb2.Example", "ops.parsing_ops.SparseFeature"], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContaining3DSparseFeature": ["ops.parsing_ops.SparseFeature", "example.feature_pb2.Feature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "numpy.array", "framework.ops.convert_to_tensor", "example.example_pb2.Example", "ops.parsing_ops.SparseFeature"], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingDense": ["ops.parsing_ops.SparseFeature", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "numpy.array", "framework.ops.convert_to_tensor", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingDenseWithConcat": ["example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "numpy.array", "framework.ops.convert_to_tensor", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingDenseScalar": ["example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "numpy.array", "framework.ops.convert_to_tensor", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingDenseWithDefaults": ["example.example_pb2.Example", "example.feature_pb2.Feature", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "numpy.array", "framework.ops.convert_to_tensor", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingSparseAndSparseFeatureAndDenseWithNoDefault": ["numpy.random.rand", "example.example_pb2.Example", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "ops.parsing_ops.SparseFeature", "ops.parsing_ops.SparseFeature", "numpy.array", "numpy.empty", "ops.parsing_ops.SparseFeature", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingSparseAndSparseFeatureWithReuse": ["ops.parsing_ops.VarLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "ops.parsing_ops.SparseFeature", "ops.parsing_ops.SparseFeature", "numpy.array", "ops.parsing_ops.SparseFeature", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.ParseExampleTest._testSerializedContainingVarLenDenseLargerBatch": ["numpy.random.rand", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.array", "copy.deepcopy", "ops.parsing_ops.FixedLenSequenceFeature", "<builtin>.range", "example.example_pb2.Example", "example.example_pb2.Example"], "<builtin>.range": [], "copy.deepcopy": [], "ops.parsing_ops.FixedLenSequenceFeature": [], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingVarLenDenseLargerBatch": ["numpy.random.seed", "example.example_pb2.Example"], "numpy.random.seed": [], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingVarLenDense": ["example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.array", "numpy.empty", "<builtin>.dict", "ops.parsing_ops.FixedLenSequenceFeature", "example.example_pb2.Example", "example.example_pb2.Example"], "<builtin>.dict": [], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingRaggedFeatureWithNoPartitions": ["ops.parsing_ops.RaggedFeature", "ops.parsing_ops.RaggedFeature", "example.feature_pb2.Feature", "ragged.ragged_concat_ops.concat", "ragged.ragged_factory_ops.constant", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "test.TestCase.assertEqual", "test.TestCase.assertEqual", "example.example_pb2.Example", "example.example_pb2.Example"], "ops.parsing_ops.RaggedFeature": [], "ragged.ragged_factory_ops.constant": [], "ragged.ragged_concat_ops.concat": [], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingRaggedFeature": ["ops.parsing_ops.RaggedFeature", "ops.parsing_ops.RaggedFeature", "example.feature_pb2.Feature", "parsing_ops.RaggedFeature.RowLengths", "ragged.ragged_factory_ops.constant", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "parsing_ops.RaggedFeature.RowStarts", "parsing_ops.RaggedFeature.RowStarts", "parsing_ops.RaggedFeature.ValueRowIds", "parsing_ops.RaggedFeature.ValueRowIds", "parsing_ops.RaggedFeature.UniformRowLength", "example.example_pb2.Example", "parsing_ops.RaggedFeature.RowSplits", "parsing_ops.RaggedFeature.RowLimits"], "parsing_ops.RaggedFeature.RowSplits": [], "parsing_ops.RaggedFeature.RowLengths": [], "parsing_ops.RaggedFeature.RowStarts": [], "parsing_ops.RaggedFeature.RowLimits": [], "parsing_ops.RaggedFeature.ValueRowIds": [], "parsing_ops.RaggedFeature.UniformRowLength": [], "kernel_tests.parsing_ops_test.ParseExampleTest.testSerializedContainingNestedRaggedFeature": ["ops.parsing_ops.RaggedFeature", "ops.parsing_ops.RaggedFeature", "parsing_ops.RaggedFeature.RowLengths", "ragged.ragged_factory_ops.constant", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "parsing_ops.RaggedFeature.UniformRowLength", "example.example_pb2.Example", "parsing_ops.RaggedFeature.RowSplits"], "kernel_tests.parsing_ops_test.ParseSingleExampleTest._test": ["test.TestCase.assertRaisesWithPredicateMatch", "<builtin>.isinstance", "test.TestCase.evaluate", "test.TestCase.assertEqual", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "<builtin>.tuple", "ops.parsing_ops.parse_single_example", "framework.tensor_shape.as_shape"], "ops.parsing_ops.parse_single_example": [], "framework.tensor_shape.as_shape": [], "kernel_tests.parsing_ops_test.ParseSingleExampleTest.testSingleExampleWithSparseAndSparseFeatureAndDense": ["numpy.random.rand", "framework.tensor_shape.as_shape", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "ops.parsing_ops.SparseFeature", "ops.parsing_ops.SparseFeature", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.array", "ops.parsing_ops.FixedLenSequenceFeature", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.ParseSingleExampleTest.testSingleExampleWithAllFeatureTypes": ["ops.parsing_ops.RaggedFeature", "ops.parsing_ops.RaggedFeature", "parsing_ops.RaggedFeature.UniformRowLength", "ops.parsing_ops.SparseFeature", "ragged_tensor.RaggedTensor.from_uniform_row_length", "framework.ops.convert_to_tensor", "parsing_ops.RaggedFeature.ValueRowIds", "parsing_ops.RaggedFeature.RowSplits", "numpy.random.rand", "ops.parsing_ops.FixedLenFeature", "parsing_ops.RaggedFeature.RowLengths", "ragged.ragged_factory_ops.constant", "ops.parsing_ops.FixedLenSequenceFeature", "parsing_ops.RaggedFeature.RowStarts", "numpy.array", "framework.constant_op.constant", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "example.example_pb2.Example", "example.example_pb2.Example", "parsing_ops.RaggedFeature.RowLimits"], "framework.constant_op.constant": [], "ragged_tensor.RaggedTensor.from_uniform_row_length": [], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testCreateSequenceExample": ["parsing_ops.RaggedFeature.RowLimits", "parsing_ops.RaggedFeature.RowLimits", "parsing_ops.RaggedFeature.RowLimits", "parsing_ops.RaggedFeature.RowLimits", "parsing_ops.RaggedFeature.RowLimits", "example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample"], "example.example_pb2.SequenceExample": [], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest._test": ["test.TestCase.assertRaisesWithPredicateMatch", "<builtin>.isinstance", "test.TestCase.evaluate", "test.TestCase.assertEqual", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "ops.parsing_ops.parse_sequence_example", "<builtin>.tuple", "ops.parsing_ops.parse_single_sequence_example"], "ops.parsing_ops.parse_sequence_example": [], "ops.parsing_ops.parse_single_sequence_example": [], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest._testBoth": ["<builtin>.isinstance", "ops.parsing_ops.parse_single_sequence_example", "numpy.expand_dims", "numpy.shape", "numpy.insert"], "numpy.expand_dims": [], "numpy.insert": [], "numpy.shape": [], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleWithSparseAndDenseContext": ["numpy.random.rand", "ops.parsing_ops.parse_single_sequence_example", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "numpy.array", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleWithMultipleSizeFeatureLists": ["example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.array", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.empty", "example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleWithoutDebugName": ["example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample", "ops.parsing_ops.VarLenFeature", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.array", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.empty", "example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleWithSparseAndDenseFeatureLists": ["example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample", "ops.parsing_ops.VarLenFeature", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.array", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.empty", "example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleWithEmptyFeatureInFeatureLists": ["example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample", "example.feature_pb2.Feature", "ops.parsing_ops.VarLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "numpy.array", "framework.ops.convert_to_tensor", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleListWithInconsistentDataFails": ["example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleListWithWrongDataTypeFails": ["example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleListWithWrongSparseDataTypeFails": ["example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleListWithWrongShapeFails": ["example.example_pb2.SequenceExample", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleListWithWrongShapeFails2": ["example.example_pb2.SequenceExample", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleWithMissingFeatureListFails": ["framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSequenceExampleBatch": ["example.example_pb2.SequenceExample", "example.example_pb2.SequenceExample", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.array", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.empty", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSerializedContainingRaggedFeatureWithNoPartitions": ["example.example_pb2.SequenceExample", "ops.parsing_ops.RaggedFeature", "ops.parsing_ops.RaggedFeature", "example.feature_pb2.Feature", "ragged.ragged_concat_ops.concat", "ragged.ragged_factory_ops.constant", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "<builtin>.dict", "example.example_pb2.SequenceExample"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSerializedContainingNestedRaggedFeature": ["example.example_pb2.SequenceExample", "ops.parsing_ops.RaggedFeature", "ops.parsing_ops.RaggedFeature", "parsing_ops.RaggedFeature.RowLengths", "ragged.ragged_factory_ops.constant", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "<builtin>.dict", "example.example_pb2.SequenceExample", "parsing_ops.RaggedFeature.UniformRowLength", "parsing_ops.RaggedFeature.RowSplits"], "kernel_tests.parsing_ops_test.ParseSequenceExampleTest.testSerializedContainingMisalignedNestedRaggedFeature": ["parsing_ops.RaggedFeature.RowSplits", "ops.parsing_ops.RaggedFeature", "ops.parsing_ops.RaggedFeature", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "<builtin>.dict", "example.example_pb2.SequenceExample", "parsing_ops.RaggedFeature.RowSplits"], "kernel_tests.parsing_ops_test.DecodeRawTest._decode_v1": ["ops.parsing_ops.decode_raw_v1", "test.TestCase.evaluate", "numpy.array", "test.TestCase.cached_session", "framework.constant_op.constant"], "test.TestCase.cached_session": [], "ops.parsing_ops.decode_raw_v1": [], "kernel_tests.parsing_ops_test.DecodeRawTest._decode_v2": ["numpy.array", "test.TestCase.cached_session", "test.TestCase.evaluate", "ops.parsing_ops.decode_raw"], "ops.parsing_ops.decode_raw": [], "kernel_tests.parsing_ops_test.DecodeRawTest._ordinalize": ["<builtin>.range", "numpy.array", "<builtin>.ord", "<builtin>.len"], "<builtin>.len": [], "<builtin>.ord": [], "kernel_tests.parsing_ops_test.DecodeRawTest.testDecodeRawV1EqualLength": ["ops.parsing_ops.decode_raw", "test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual"], "kernel_tests.parsing_ops_test.DecodeRawTest.testDecodeRawV2FallbackEqualLength": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual"], "kernel_tests.parsing_ops_test.DecodeRawTest.testDecodeRawV1VariableLength": ["test.TestCase.assertRaises", "test.TestCase.assertRaises"], "kernel_tests.parsing_ops_test.DecodeRawTest.testDecodeRawV2FallbackVariableLength": ["test.TestCase.assertRaises", "test.TestCase.assertRaises"], "kernel_tests.parsing_ops_test.DecodeRawTest.testDecodeRawV2VariableLength": ["test.TestCase.assertRaises", "test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual"], "kernel_tests.parsing_ops_test.DecodeJSONExampleTest._testRoundTrip": ["test.TestCase.evaluate", "test.TestCase.assertProtoEquals", "<builtin>.zip", "google.protobuf.json_format.MessageToJson", "numpy.array", "ops.parsing_ops.decode_json_example", "test.TestCase.assertShapeEqual", "framework.constant_op.constant", "example.example_pb2.Example"], "google.protobuf.json_format.MessageToJson": [], "ops.parsing_ops.decode_json_example": [], "test.TestCase.assertShapeEqual": [], "<builtin>.zip": [], "test.TestCase.assertProtoEquals": [], "kernel_tests.parsing_ops_test.DecodeJSONExampleTest.testEmptyTensor": ["example.example_pb2.Example"], "kernel_tests.parsing_ops_test.DecodeJSONExampleTest.testEmptyExamples": ["example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.DecodeJSONExampleTest.testDenseFeaturesScalar": ["example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.DecodeJSONExampleTest.testDenseFeaturesVector": ["example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.DecodeJSONExampleTest.testDenseFeaturesMatrix": ["example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.DecodeJSONExampleTest.testSparseFeatures": ["example.example_pb2.Example", "example.feature_pb2.Feature", "example.feature_pb2.Feature", "example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.DecodeJSONExampleTest.testSerializedContainingBytes": ["example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example"], "kernel_tests.parsing_ops_test.DecodeJSONExampleTest.testInvalidSyntax": ["test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "eager.context.executing_eagerly", "ops.parsing_ops.decode_json_example", "framework.constant_op.constant", "test.TestCase.assertRaisesRegex"], "test.TestCase.assertRaisesRegex": [], "test.TestCase.assertRaisesOpError": [], "kernel_tests.parsing_ops_test.ParseTensorOpTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "kernel_tests.parsing_ops_test.ParseTensorOpTest.testToFloat32": ["numpy.random.rand", "framework.tensor_util.make_tensor_proto", "test.TestCase.cached_session", "ops.array_ops.placeholder", "ops.parsing_ops.parse_tensor", "test.TestCase.assertAllEqual"], "framework.tensor_util.make_tensor_proto": [], "ops.array_ops.placeholder": [], "ops.parsing_ops.parse_tensor": [], "kernel_tests.parsing_ops_test.ParseTensorOpTest.testToUint8": ["numpy.random.rand", "framework.tensor_util.make_tensor_proto", "test.TestCase.cached_session", "ops.array_ops.placeholder", "ops.parsing_ops.parse_tensor", "test.TestCase.assertAllEqual"], "kernel_tests.parsing_ops_test.ParseTensorOpTest.testTypeMismatch": ["numpy.random.rand", "framework.tensor_util.make_tensor_proto", "test.TestCase.assertRaisesOpError", "test.TestCase.cached_session", "ops.array_ops.placeholder", "ops.parsing_ops.parse_tensor"], "kernel_tests.parsing_ops_test.ParseTensorOpTest.testInvalidInput": ["ops.array_ops.placeholder", "test.TestCase.assertRaisesOpError", "test.TestCase.cached_session", "ops.parsing_ops.parse_tensor"], "platform.test.main": []}