{"kernel_tests.qr_op_test": ["test.TestCase.assertRaisesRegex", "<builtin>.map", "test.TestCase.assertRaisesRegex", "platform.test.main", "platform.test.main", "<builtin>.max"], "kernel_tests.qr_op_test._AddTest": ["<builtin>.hasattr", "<builtin>.setattr", "<builtin>.RuntimeError"], "<builtin>.hasattr": [], "<builtin>.RuntimeError": [], "<builtin>.setattr": [], "framework.test_util.run_in_graph_and_eager_modes": [], "kernel_tests.qr_op_test.QrOpTest": ["framework.test_util.run_in_graph_and_eager_modes"], "kernel_tests.qr_op_test.QrOpTest.testWrongDimensions": ["test.TestCase.assertRaisesRegex", "framework.constant_op.constant", "ops.linalg_ops.qr"], "framework.constant_op.constant": [], "test.TestCase.assertRaisesRegex": [], "ops.linalg_ops.qr": [], "kernel_tests.qr_op_test.QrOpTest.testConcurrentExecutesWithoutError": ["test.TestCase.assertAllClose", "ops.linalg_ops.qr", "ops.stateless_random_ops.stateless_random_normal", "<builtin>.len", "<builtin>.range", "test.TestCase.assertAllEqual", "test.TestCase.evaluate"], "ops.stateless_random_ops.stateless_random_normal": [], "test.TestCase.assertAllEqual": [], "test.TestCase.evaluate": [], "<builtin>.len": [], "<builtin>.range": [], "test.TestCase.assertAllClose": [], "kernel_tests.qr_op_test._GetQrOpTest": ["framework.test_util.run_in_graph_and_eager_modes"], "kernel_tests.qr_op_test._GetQrOpTest.CompareOrthogonal": ["numpy.divide", "numpy.abs", "numpy.sum"], "numpy.divide": [], "numpy.sum": [], "numpy.abs": [], "kernel_tests.qr_op_test._GetQrOpTest.CheckApproximation": ["framework.test_util.matmul_without_tf32"], "framework.test_util.matmul_without_tf32": [], "kernel_tests.qr_op_test._GetQrOpTest.CheckUnitary": ["ops.array_ops.matrix_band_part", "framework.test_util.matmul_without_tf32", "ops.array_ops.ones_like"], "ops.array_ops.ones_like": [], "ops.array_ops.matrix_band_part": [], "kernel_tests.qr_op_test._GetQrOpTest.Test": ["ops.array_ops.ones_like", "eager.context.executing_eagerly", "numpy.prod", "ops.linalg_ops.qr", "ops.linalg_ops.qr", "ops.array_ops.placeholder", "<builtin>.min", "ops.array_ops.placeholder", "numpy.random.seed", "framework.constant_op.constant", "numpy.reshape", "numpy.linalg.qr", "<builtin>.range", "numpy.ndarray", "numpy.random.uniform"], "eager.context.executing_eagerly": [], "numpy.random.seed": [], "numpy.prod": [], "numpy.random.uniform": [], "ops.array_ops.placeholder": [], "numpy.ndarray": [], "numpy.reshape": [], "numpy.linalg.qr": [], "<builtin>.min": [], "kernel_tests.qr_op_test.QrGradOpTest": ["framework.test_util.run_in_graph_and_eager_modes"], "kernel_tests.qr_op_test.QrGradOpTest.testNotImplementedCheck": ["framework.test_util.run_in_graph_and_eager_modes", "test.TestCase.assertRaisesRegex", "numpy.random.seed", "framework.constant_op.constant", "numpy.random.uniform"], "kernel_tests.qr_op_test.QrGradOpTest.testNotImplementedCheck._NoGrad": ["ops.linalg_ops.qr", "eager.backprop.GradientTape"], "eager.backprop.GradientTape": [], "kernel_tests.qr_op_test._GetQrGradOpTest": ["framework.test_util.run_in_graph_and_eager_modes", "framework.test_util.run_without_tensor_float_32"], "kernel_tests.qr_op_test._GetQrGradOpTest.RandomInput": ["numpy.random.uniform"], "framework.test_util.run_without_tensor_float_32": [], "kernel_tests.qr_op_test._GetQrGradOpTest.Test": ["numpy.finfo", "ops.gradient_checker_v2.compute_gradient", "ops.gradient_checker_v2.compute_gradient", "numpy.random.seed"], "numpy.finfo": [], "kernel_tests.qr_op_test._GetQrGradOpTest.Test.<list2>.<lambda1>": [], "kernel_tests.qr_op_test._GetQrGradOpTest.Test.<lambda1>": ["ops.linalg_ops.qr"], "kernel_tests.qr_op_test._GetQrGradOpTest.Test.<list2>.<lambda2>": [], "kernel_tests.qr_op_test._GetQrGradOpTest.Test.<lambda2>": ["ops.linalg_ops.qr"], "ops.gradient_checker_v2.compute_gradient": [], "kernel_tests.qr_op_test.QRBenchmark.benchmarkQROp": ["framework.ops.device", "test.Benchmark.evaluate", "ops.linalg_ops.qr", "framework.ops.Graph", "client.session.Session", "ops.variables.Variable", "ops.control_flow_ops.group", "test.Benchmark.run_op_benchmark", "platform.benchmark.benchmark_config", "platform.test.is_gpu_available", "ops.variables.global_variables_initializer", "numpy.random.uniform"], "framework.ops.Graph": [], "platform.benchmark.benchmark_config": [], "client.session.Session": [], "framework.ops.device": [], "ops.variables.Variable": [], "ops.variables.global_variables_initializer": [], "test.Benchmark.evaluate": [], "ops.control_flow_ops.group": [], "test.Benchmark.run_op_benchmark": [], "platform.test.is_gpu_available": [], "<builtin>.max": [], "<builtin>.map": [], "platform.test.main": []}