{"kernel_tests.parse_example_dataset_test": ["platform.test.main"], "kernel_tests.parse_example_dataset_test.<lambda1>": ["example.feature_pb2.Features"], "example.feature_pb2.Features": [], "kernel_tests.parse_example_dataset_test.<lambda2>": ["example.feature_pb2.BytesList", "example.feature_pb2.Feature"], "example.feature_pb2.BytesList": [], "example.feature_pb2.Feature": [], "kernel_tests.parse_example_dataset_test.<lambda3>": ["example.feature_pb2.Int64List", "example.feature_pb2.Feature"], "example.feature_pb2.Int64List": [], "kernel_tests.parse_example_dataset_test.<lambda4>": ["example.feature_pb2.FloatList", "example.feature_pb2.Feature"], "example.feature_pb2.FloatList": [], "kernel_tests.parse_example_dataset_test.<lambda5>": ["example.feature_pb2.FeatureList"], "example.feature_pb2.FeatureList": [], "kernel_tests.parse_example_dataset_test.<lambda6>": ["example.feature_pb2.FeatureLists"], "example.feature_pb2.FeatureLists": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest._compare_output_to_expected": ["<builtin>.sorted", "test_base.DatasetTestBase.assertEqual", "<builtin>.set", "test_base.DatasetTestBase.assertValuesEqual"], "<builtin>.set": [], "test_base.DatasetTestBase.assertEqual": [], "<builtin>.sorted": [], "test_base.DatasetTestBase.assertValuesEqual": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest._test": ["numpy.asarray", "test_base.DatasetTestBase.assertRaises", "<builtin>.isinstance", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.evaluate", "test_base.DatasetTestBase.assertEqual", "test_base.DatasetTestBase.assertRaisesWithPredicateMatch", "test_base.DatasetTestBase.getNext", "ops.dataset_ops.get_legacy_output_shapes", "ops.parsing_ops.parse_example_dataset", "dataset_ops.Dataset.from_tensors"], "test_base.DatasetTestBase.assertRaisesWithPredicateMatch": [], "ops.parsing_ops.parse_example_dataset": [], "dataset_ops.Dataset.from_tensors": [], "test_base.DatasetTestBase.getNext": [], "test_base.DatasetTestBase.evaluate": [], "test_base.DatasetTestBase.assertRaises": [], "<builtin>.isinstance": [], "numpy.asarray": [], "ops.dataset_ops.get_legacy_output_shapes": [], "kernel_tests.test_base.default_test_combinations": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest": ["framework.combinations.generate", "kernel_tests.test_base.graph_only_combinations", "kernel_tests.test_base.default_test_combinations", "framework.combinations.combine", "framework.combinations.times"], "framework.combinations.generate": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testEmptySerializedWithAllDefaults": ["framework.sparse_tensor.SparseTensorValue", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "numpy.empty", "numpy.array", "framework.ops.convert_to_tensor", "numpy.random.rand"], "numpy.random.rand": [], "numpy.empty": [], "numpy.array": [], "framework.sparse_tensor.SparseTensorValue": [], "framework.ops.convert_to_tensor": [], "ops.parsing_ops.VarLenFeature": [], "ops.parsing_ops.FixedLenFeature": [], "kernel_tests.test_base.graph_only_combinations": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testEmptySerializedWithoutDefaultsShouldFail": ["example.example_pb2.Example", "example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "numpy.random.rand", "example.feature_pb2.Feature"], "example.example_pb2.Example": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testDenseNotMatchingShapeShouldFail": ["example.example_pb2.Example", "example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testDenseDefaultNoShapeShouldFail": ["example.example_pb2.Example", "example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingSparse": ["example.example_pb2.Example", "example.example_pb2.Example", "numpy.array", "framework.sparse_tensor.SparseTensorValue", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "framework.ops.convert_to_tensor", "example.feature_pb2.Feature"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingSparseFeature": ["example.feature_pb2.Feature", "example.example_pb2.Example", "example.example_pb2.Example", "numpy.array", "framework.sparse_tensor.SparseTensorValue", "framework.sparse_tensor.SparseTensorValue", "ops.parsing_ops.SparseFeature", "ops.parsing_ops.SparseFeature", "framework.ops.convert_to_tensor", "example.feature_pb2.Feature"], "ops.parsing_ops.SparseFeature": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingSparseFeatureReuse": ["example.feature_pb2.Feature", "example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "framework.sparse_tensor.SparseTensorValue", "framework.sparse_tensor.SparseTensorValue", "ops.parsing_ops.SparseFeature", "numpy.array", "framework.ops.convert_to_tensor"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContaining3DSparseFeature": ["framework.ops.convert_to_tensor", "example.example_pb2.Example", "example.example_pb2.Example", "numpy.array", "framework.sparse_tensor.SparseTensorValue", "framework.sparse_tensor.SparseTensorValue", "ops.parsing_ops.SparseFeature", "ops.parsing_ops.SparseFeature", "framework.ops.convert_to_tensor", "example.feature_pb2.Feature"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingDense": ["example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "numpy.array", "framework.ops.convert_to_tensor"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingDenseWithConcat": ["example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "numpy.array", "framework.ops.convert_to_tensor"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingDenseScalar": ["example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "numpy.array", "framework.ops.convert_to_tensor"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingDenseWithDefaults": ["example.example_pb2.Example", "example.example_pb2.Example", "numpy.array", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor", "example.feature_pb2.Feature"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedSparseAndSparseFeatureAndDenseWithNoDefault": ["example.feature_pb2.Feature", "example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "framework.sparse_tensor.SparseTensorValue", "ops.parsing_ops.SparseFeature", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "numpy.empty", "numpy.array", "framework.ops.convert_to_tensor", "numpy.random.rand"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingSparseAndSparseFeatureWithReuse": ["framework.ops.convert_to_tensor", "example.example_pb2.Example", "example.example_pb2.Example", "framework.sparse_tensor.SparseTensorValue", "ops.parsing_ops.SparseFeature", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "ops.parsing_ops.VarLenFeature", "numpy.array", "framework.ops.convert_to_tensor"], "framework.combinations.combine": [], "framework.combinations.times": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingVarLenDenseLargerBatch": ["framework.ops.convert_to_tensor", "example.example_pb2.Example", "ops.parsing_ops.FixedLenSequenceFeature", "<builtin>.range", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.random.seed", "ops.parsing_ops.FixedLenSequenceFeature", "copy.deepcopy", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.array", "framework.ops.convert_to_tensor", "numpy.random.rand"], "numpy.random.seed": [], "<builtin>.range": [], "copy.deepcopy": [], "ops.parsing_ops.FixedLenSequenceFeature": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedShapeMismatch": ["eager.context.executing_eagerly", "eager.context.executing_eagerly", "example.example_pb2.Example", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "ops.parsing_ops.FixedLenSequenceFeature", "framework.ops.convert_to_tensor"], "eager.context.executing_eagerly": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingVarLenDense": ["framework.ops.convert_to_tensor", "example.example_pb2.Example", "ops.parsing_ops.FixedLenSequenceFeature", "<builtin>.dict", "ops.parsing_ops.FixedLenSequenceFeature", "numpy.array", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "ops.parsing_ops.FixedLenFeature", "numpy.empty", "ops.parsing_ops.FixedLenFeature", "framework.ops.convert_to_tensor"], "<builtin>.dict": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingRaggedFeatureWithNoPartitions": ["ragged.ragged_factory_ops.constant_value", "ragged.ragged_factory_ops.constant_value", "example.example_pb2.Example", "example.example_pb2.Example", "example.example_pb2.Example", "ops.parsing_ops.RaggedFeature", "ops.parsing_ops.RaggedFeature", "framework.ops.convert_to_tensor", "example.feature_pb2.Feature"], "ragged.ragged_factory_ops.constant_value": [], "ops.parsing_ops.RaggedFeature": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingRaggedFeatureWithOnePartition": ["parsing_ops.RaggedFeature.RowStarts", "parsing_ops.RaggedFeature.ValueRowIds", "parsing_ops.RaggedFeature.ValueRowIds", "example.example_pb2.Example", "example.example_pb2.Example", "parsing_ops.RaggedFeature.RowLengths", "parsing_ops.RaggedFeature.RowLimits", "parsing_ops.RaggedFeature.UniformRowLength", "ragged.ragged_factory_ops.constant", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "ops.parsing_ops.RaggedFeature", "ops.parsing_ops.RaggedFeature", "parsing_ops.RaggedFeature.RowSplits", "example.feature_pb2.Feature"], "parsing_ops.RaggedFeature.RowSplits": [], "parsing_ops.RaggedFeature.RowLengths": [], "parsing_ops.RaggedFeature.RowStarts": [], "parsing_ops.RaggedFeature.RowLimits": [], "parsing_ops.RaggedFeature.ValueRowIds": [], "parsing_ops.RaggedFeature.UniformRowLength": [], "ragged.ragged_factory_ops.constant": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testSerializedContainingRaggedFeatureWithMultiplePartitions": ["example.feature_pb2.Feature", "example.example_pb2.Example", "example.example_pb2.Example", "parsing_ops.RaggedFeature.RowLengths", "parsing_ops.RaggedFeature.UniformRowLength", "ragged.ragged_factory_ops.constant", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "ops.parsing_ops.RaggedFeature", "ops.parsing_ops.RaggedFeature", "parsing_ops.RaggedFeature.RowSplits"], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetTest.testDeterminism": ["test_base.DatasetTestBase.assertAllEqual", "example.example_pb2.Example", "<builtin>.range", "example.example_pb2.Example", "ops.parsing_ops.FixedLenFeature", "ops.options.Options", "dataset_ops.Dataset.from_tensor_slices", "test_base.DatasetTestBase.assertCountEqual", "test_base.DatasetTestBase.assertCountEqual", "test_base.DatasetTestBase.getDatasetOutput", "ops.parsing_ops.parse_example_dataset", "<builtin>.list"], "dataset_ops.Dataset.from_tensor_slices": [], "ops.options.Options": [], "<builtin>.list": [], "test_base.DatasetTestBase.getDatasetOutput": [], "test_base.DatasetTestBase.assertAllEqual": [], "test_base.DatasetTestBase.assertCountEqual": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetCheckpointTest._parse_example_dataset": ["tf_record_test_base.FeaturesTestBase.make_batch_feature"], "tf_record_test_base.FeaturesTestBase.make_batch_feature": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetCheckpointTest": ["kernel_tests.test_base.default_test_combinations", "framework.combinations.generate", "kernel_tests.checkpoint_test_base.default_test_combinations", "framework.combinations.times"], "kernel_tests.checkpoint_test_base.default_test_combinations": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetCheckpointTest.test": [], "kernel_tests.parse_example_dataset_test.ParseExampleDatasetCheckpointTest.test.<lambda1>": ["framework.combinations.times"], "platform.test.main": []}