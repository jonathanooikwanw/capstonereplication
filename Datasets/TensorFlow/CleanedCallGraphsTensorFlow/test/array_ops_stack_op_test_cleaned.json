{"array_ops.stack_op_test": ["platform.test.main"], "array_ops.stack_op_test.np_split_squeeze": ["numpy.split", "numpy.squeeze"], "numpy.squeeze": [], "numpy.split": [], "array_ops.stack_op_test.StackOpTest.randn": ["numpy.random.randn"], "numpy.random.randn": [], "array_ops.stack_op_test.StackOpTest.testSimple": ["test.TestCase.subTest", "test.TestCase.subTest", "test.TestCase.subTest", "ops.array_ops.stack", "<builtin>.len", "<builtin>.range", "numpy.random.seed", "test.TestCase.assertAllEqual"], "numpy.random.seed": [], "<builtin>.len": [], "<builtin>.range": [], "test.TestCase.subTest": [], "ops.array_ops.stack": [], "test.TestCase.assertAllEqual": [], "array_ops.stack_op_test.StackOpTest.testSimpleParallelCPU": ["test.TestCase.subTest", "test.TestCase.subTest", "<builtin>.list", "framework.ops.Graph", "framework.test_util.device", "ops.array_ops.parallel_stack", "numpy.random.seed", "<builtin>.map", "test.TestCase.assertAllEqual"], "framework.ops.Graph": [], "framework.test_util.device": [], "<builtin>.map": [], "<builtin>.list": [], "ops.array_ops.parallel_stack": [], "array_ops.stack_op_test.StackOpTest.testParallelConcatShapeZero": ["test.TestCase.assertAllEqual", "python.tf2.enabled", "test.TestCase.assertRaisesRegex", "test.TestCase.skipTest"], "python.tf2.enabled": [], "test.TestCase.skipTest": [], "array_ops.stack_op_test.StackOpTest.testParallelConcatShapeZero.f": ["ops.gen_array_ops.parallel_concat"], "ops.gen_array_ops.parallel_concat": [], "test.TestCase.assertRaisesRegex": [], "array_ops.stack_op_test.StackOpTest.testSimpleParallelGPU": ["test.TestCase.subTest", "test.TestCase.subTest", "<builtin>.list", "framework.ops.Graph", "framework.test_util.device", "ops.array_ops.parallel_stack", "<builtin>.map", "test.TestCase.assertAllEqual"], "array_ops.stack_op_test.StackOpTest.testConst": ["ops.array_ops.reshape", "test.TestCase.subTest", "test.TestCase.subTest", "ops.array_ops.stack", "test.TestCase.assertEqual", "<builtin>.list", "eager.context.executing_eagerly", "<builtin>.len", "numpy.random.seed", "framework.test_util.use_gpu", "test.TestCase.assertAllEqual", "framework.constant_op.constant"], "framework.test_util.use_gpu": [], "framework.constant_op.constant": [], "ops.array_ops.reshape": [], "eager.context.executing_eagerly": [], "test.TestCase.assertEqual": [], "array_ops.stack_op_test.StackOpTest.testConstParallelCPU": ["test.TestCase.subTest", "test.TestCase.subTest", "<builtin>.list", "framework.ops.Graph", "<builtin>.len", "framework.test_util.device", "ops.array_ops.parallel_stack", "numpy.random.seed", "test.TestCase.assertAllEqual"], "array_ops.stack_op_test.StackOpTest.testConstParallelGPU": ["test.TestCase.subTest", "test.TestCase.subTest", "<builtin>.list", "framework.ops.Graph", "<builtin>.len", "framework.test_util.device", "ops.array_ops.parallel_stack", "numpy.random.seed", "test.TestCase.assertAllEqual"], "array_ops.stack_op_test.StackOpTest.testGradientsAxis0": ["test.TestCase.subTest", "test.TestCase.cached_session", "ops.gradient_checker_v2.compute_gradient", "<builtin>.list", "test.TestCase.assertAllClose", "numpy.random.seed", "<builtin>.map", "numpy.random.randn"], "test.TestCase.cached_session": [], "array_ops.stack_op_test.StackOpTest.testGradientsAxis0.func": ["ops.array_ops.stack"], "ops.gradient_checker_v2.compute_gradient": [], "test.TestCase.assertAllClose": [], "array_ops.stack_op_test.StackOpTest.testGradientsAxis1": ["test.TestCase.subTest", "test.TestCase.cached_session", "ops.gradient_checker_v2.compute_gradient", "<builtin>.list", "test.TestCase.assertAllClose", "numpy.random.seed", "<builtin>.map", "numpy.random.randn"], "array_ops.stack_op_test.StackOpTest.testGradientsAxis1.func": ["ops.array_ops.stack"], "array_ops.stack_op_test.StackOpTest.testZeroSizeCPU": ["test.TestCase.subTest", "ops.array_ops.stack", "<builtin>.list", "framework.ops.Graph", "test.TestCase.evaluate", "framework.test_util.device", "ops.array_ops.parallel_stack", "test.TestCase.assertAllEqual", "numpy.zeros"], "numpy.zeros": [], "test.TestCase.evaluate": [], "array_ops.stack_op_test.StackOpTest.testZeroSizeGPU": ["test.TestCase.subTest", "ops.array_ops.stack", "<builtin>.list", "framework.ops.Graph", "test.TestCase.evaluate", "framework.test_util.device", "ops.array_ops.parallel_stack", "test.TestCase.assertAllEqual", "numpy.zeros"], "array_ops.stack_op_test.StackOpTest.testAxis0DefaultCPU": ["ops.array_ops.stack", "numpy.array", "test.TestCase.evaluate", "framework.ops.Graph", "framework.test_util.device", "ops.array_ops.parallel_stack", "test.TestCase.assertAllEqual", "framework.constant_op.constant"], "numpy.array": [], "array_ops.stack_op_test.StackOpTest.testAxis0DefaultGPU": ["ops.array_ops.stack", "numpy.array", "test.TestCase.evaluate", "framework.ops.Graph", "framework.test_util.device", "ops.array_ops.parallel_stack", "test.TestCase.assertAllEqual", "framework.constant_op.constant"], "array_ops.stack_op_test.StackOpTest.testAgainstNumpy": ["test.TestCase.subTest", "test.TestCase.assertEqual", "test.TestCase.assertEqual", "test.TestCase.assertEqual", "ops.array_ops.stack", "test.TestCase.cached_session", "test.TestCase.evaluate", "test.TestCase.assertNDArrayNear", "<builtin>.len", "<builtin>.range"], "test.TestCase.assertNDArrayNear": [], "array_ops.stack_op_test.StackOpTest.testDimOutOfRange": ["test.TestCase.assertRaisesRegex", "ops.array_ops.stack", "framework.constant_op.constant"], "array_ops.stack_op_test.StackOpTest.testDimOutOfNegativeRange": ["test.TestCase.assertRaisesRegex", "ops.array_ops.stack", "framework.constant_op.constant"], "array_ops.stack_op_test.StackOpTest.testComplex": ["test.TestCase.subTest", "test.TestCase.subTest", "ops.array_ops.stack", "<builtin>.list", "test.TestCase.session", "test.TestCase.evaluate", "numpy.random.seed", "<builtin>.map", "test.TestCase.assertAllEqual"], "test.TestCase.session": [], "array_ops.stack_op_test.AutomaticStackingTest.testSimple": ["framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "framework.constant_op.constant"], "framework.ops.convert_to_tensor": [], "array_ops.stack_op_test.AutomaticStackingTest.testWithNDArray": ["numpy.array", "test.TestCase.session", "test.TestCase.evaluate", "framework.ops.convert_to_tensor", "test.TestCase.assertAllEqual", "framework.constant_op.constant"], "array_ops.stack_op_test.AutomaticStackingTest.testDtype": ["framework.ops.convert_to_tensor", "test.TestCase.assertEqual", "test.TestCase.assertRaises", "framework.constant_op.constant"], "test.TestCase.assertRaises": [], "array_ops.stack_op_test.AutomaticStackingTest.testDtypeConversionWhenTensorDtypeMismatch": ["framework.ops.convert_to_tensor", "test.TestCase.assertEqual"], "platform.test.main": []}