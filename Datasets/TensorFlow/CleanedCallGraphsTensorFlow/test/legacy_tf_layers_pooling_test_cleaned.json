{"legacy_tf_layers.pooling_test": ["platform.test.main"], "legacy_tf_layers.pooling_test.PoolingTest.testInvalidDataFormat": ["test.TestCase.assertRaisesRegex", "ops.random_ops.random_uniform", "legacy_tf_layers.pooling.max_pooling2d"], "ops.random_ops.random_uniform": [], "test.TestCase.assertRaisesRegex": [], "legacy_tf_layers.pooling.max_pooling2d": [], "legacy_tf_layers.pooling_test.PoolingTest.testInvalidStrides": ["test.TestCase.assertRaisesRegex", "ops.random_ops.random_uniform", "legacy_tf_layers.pooling.max_pooling2d"], "legacy_tf_layers.pooling_test.PoolingTest.testInvalidPoolSize": ["test.TestCase.assertRaisesRegex", "ops.random_ops.random_uniform", "legacy_tf_layers.pooling.max_pooling2d"], "legacy_tf_layers.pooling_test.PoolingTest.testCreateMaxPooling2D": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.MaxPooling2D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling.MaxPooling2D": [], "test.TestCase.assertListEqual": [], "legacy_tf_layers.pooling_test.PoolingTest.testCreateAveragePooling2D": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.AveragePooling2D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling.AveragePooling2D": [], "legacy_tf_layers.pooling_test.PoolingTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "legacy_tf_layers.pooling_test.PoolingTest.testCreateMaxPooling2DChannelsFirst": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.MaxPooling2D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling_test.PoolingTest.testCreateAveragePooling2DChannelsFirst": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.AveragePooling2D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling_test.PoolingTest.testCreateAveragePooling2DChannelsFirstWithNoneBatch": ["ops.array_ops.placeholder", "legacy_tf_layers.pooling.AveragePooling2D", "test.TestCase.assertListEqual"], "ops.array_ops.placeholder": [], "legacy_tf_layers.pooling_test.PoolingTest.testCreateMaxPooling1D": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.MaxPooling1D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling.MaxPooling1D": [], "legacy_tf_layers.pooling_test.PoolingTest.testCreateAveragePooling1D": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.AveragePooling1D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling.AveragePooling1D": [], "legacy_tf_layers.pooling_test.PoolingTest.testCreateMaxPooling1DChannelsFirst": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.MaxPooling1D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling_test.PoolingTest.testCreateAveragePooling1DChannelsFirst": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.AveragePooling1D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling_test.PoolingTest.testCreateMaxPooling3D": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.MaxPooling3D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling.MaxPooling3D": [], "legacy_tf_layers.pooling_test.PoolingTest.testCreateAveragePooling3D": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.AveragePooling3D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling.AveragePooling3D": [], "legacy_tf_layers.pooling_test.PoolingTest.testMaxPooling3DChannelsFirst": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.MaxPooling3D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling_test.PoolingTest.testAveragePooling3DChannelsFirst": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.AveragePooling3D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling_test.PoolingTest.testCreateMaxPooling2DIntegerPoolSize": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.MaxPooling2D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling_test.PoolingTest.testMaxPooling2DPaddingSame": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.MaxPooling2D", "test.TestCase.assertListEqual"], "legacy_tf_layers.pooling_test.PoolingTest.testCreatePooling2DWithStrides": ["ops.random_ops.random_uniform", "legacy_tf_layers.pooling.MaxPooling2D", "test.TestCase.assertListEqual"], "platform.test.main": []}