{"distribute.input_lib_test": ["distribute.test_util.main"], "distribute.input_lib_test.DistributedIteratorTestBase._wrap_iterator": ["distribute.input_lib.DatasetIterator", "distribute.input_lib.InputFunctionIterator", "<builtin>.range", "distribute.distribute_lib.InputContext", "test.TestCase.assertIsNone", "<builtin>.len"], "test.TestCase.assertIsNone": [], "<builtin>.range": [], "<builtin>.len": [], "distribute.distribute_lib.InputContext": [], "distribute.input_lib.InputFunctionIterator": [], "distribute.input_lib.DatasetIterator": [], "distribute.input_lib_test.DistributedIteratorTestBase._wrap_dataset": ["distribute.input_lib.DistributedDatasetV1", "distribute.input_lib.DistributedDataset", "python.tf2.enabled"], "python.tf2.enabled": [], "distribute.input_lib.DistributedDataset": [], "distribute.input_lib.DistributedDatasetV1": [], "distribute.input_lib_test.DistributedIteratorTestBase._assert_iterator_values": ["python.tf2.enabled", "<builtin>.range", "<builtin>.zip", "test.TestCase.assertAllEqual", "<builtin>.len", "distribute.distribute_utils.select_replica"], "distribute.distribute_utils.select_replica": [], "distribute.input_lib_test.DistributedIteratorTestBase._test_input_iteration.<lambda1>": ["test.TestCase.evaluate"], "<builtin>.zip": [], "test.TestCase.assertAllEqual": [], "distribute.input_lib_test.DistributedIteratorTestBase._assert_dataset_values_for_loop": ["test.TestCase.evaluate", "<builtin>.range", "<builtin>.zip", "test.TestCase.assertAllEqual", "<builtin>.len", "distribute.distribute_utils.select_replica"], "test.TestCase.evaluate": [], "distribute.input_lib_test.DistributedIteratorTestBase._test_input_iteration": ["distribute.distribute_utils.select_replica", "distribute.distribute_utils.select_replica", "util.nest.flatten", "<builtin>.isinstance", "distribute.input_lib.InputWorkers", "distribute.input_lib.InputWorkers", "test.TestCase.skipTest", "test.TestCase.skipTest", "ops.control_flow_ops.group", "util.nest.assert_same_structure", "python.tf2.enabled", "framework.ops.executing_eagerly_outside_functions", "framework.ops.executing_eagerly_outside_functions", "<builtin>.iter", "framework.ops.executing_eagerly_outside_functions", "eager.context.executing_eagerly"], "eager.context.executing_eagerly": [], "test.TestCase.skipTest": [], "util.nest.flatten": [], "distribute.input_lib.InputWorkers": [], "framework.ops.executing_eagerly_outside_functions": [], "<builtin>.iter": [], "<builtin>.isinstance": [], "util.nest.assert_same_structure": [], "ops.control_flow_ops.group": [], "distribute.input_lib_test.DistributedIteratorTestBase._test_input_iteration.test_get_next": ["eager.context.executing_eagerly", "eager.context.executing_eagerly", "test.TestCase.skipTest", "framework.ops.executing_eagerly_outside_functions", "ops.control_flow_ops.group", "<builtin>.iter", "test.TestCase.assertRaises"], "test.TestCase.assertRaises": [], "distribute.input_lib_test.DistributedIteratorTestBase._test_input_iteration.test_get_next_as_optional": ["test.TestCase.assertRaises", "test.TestCase.evaluate", "test.TestCase.assertFalse", "test.TestCase.assertRaises"], "test.TestCase.assertFalse": [], "distribute.input_lib_test.DistributedIteratorTestBase._create_dataset_or_input_fn": ["test.TestCase.assertRaises", "test.TestCase.assertRaises", "test.TestCase.assertRaises", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testMWMSPartialBatchWithLegacyRebatch.dataset_fn": ["dataset_ops.Dataset.from_tensor_slices", "ops.options.Options", "dataset_ops.Dataset.zip"], "distribute.input_lib_test.DistributedIteratorTest.testOneDeviceCPUMultiWorker.<lambda1>": ["dataset_ops.DatasetV1.range"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testMWMSWithDataSharding.dataset_fn": ["ops.options.Options", "dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testBatchSplitting.<lambda1>": ["dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testTwoDevicesOneGPUOneCPU.<lambda1>": ["dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testTupleDatasetMultiworker.dataset_fn": ["dataset_ops.Dataset.zip", "dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testAutoshardingOption.<lambda1>": ["dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testTupleDataset.dataset_fn": ["dataset_ops.Dataset.zip", "dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testMWMSPartialBatch.dataset_fn": ["ops.options.Options", "dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testUnevenDatasetBatchesMultiWorker.dataset_fn": ["dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testDifferentDatasetsMultiWorker.dataset_fn": ["dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testTPU.<lambda1>": ["dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testBatchSplittingMultiWorker.dataset_fn": ["dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse.dataset_fn": ["ragged_tensor.RaggedTensor.from_row_lengths", "numpy.mod", "distribute.distribute_lib.InputContext", "numpy.repeat", "dataset_ops.DatasetV2.from_tensor_slices", "numpy.arange"], "distribute.input_lib_test.DistributedIteratorTest.testUnevenDatasetBatches.<lambda1>": ["dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testUnevenDatasetBatchesMultiWorkerFourReplicas.dataset_fn": ["dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testOneDeviceCPU.<lambda1>": ["dataset_ops.Dataset.range"], "distribute.combinations.combine": [], "distribute.input_lib_test.DistributedIteratorTest": ["distribute.combinations.generate", "distribute.combinations.combine"], "distribute.combinations.generate": [], "distribute.input_lib_test.DistributedIteratorTest.testMultiDeviceIterInitialize": ["distribute.input_lib.InputWorkers", "test.TestCase.skipTest", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "distribute.input_lib.get_distributed_dataset", "ops.dataset_ops.make_one_shot_iterator", "python.tf2.enabled", "python.tf2.enabled"], "distribute.input_lib_test.DistributedIteratorTest.testMultiDeviceIterInitialize.<lambda1>": ["dataset_ops.DatasetV1.range"], "dataset_ops.DatasetV1.range": [], "distribute.input_lib.get_distributed_dataset": [], "ops.dataset_ops.make_one_shot_iterator": [], "distribute.input_lib_test.DistributedIteratorTest.testMultiDeviceIterInitialize.init_func_for_iter": ["test.TestCase.evaluate"], "distribute.input_lib_test.DistributedIteratorTest.testOneDeviceCPU": ["test.TestCase.evaluate", "test.TestCase.evaluate", "<builtin>.range"], "dataset_ops.Dataset.range": [], "distribute.input_lib_test.DistributedIteratorTest.testOneDeviceCPUMultiWorker": ["test.TestCase.evaluate", "test.TestCase.evaluate", "<builtin>.range"], "distribute.input_lib_test.DistributedIteratorTest.testTwoDevicesOneGPUOneCPU": ["test.TestCase.evaluate", "test.TestCase.evaluate", "<builtin>.range"], "distribute.input_lib_test.DistributedIteratorTest.testTPU": ["test.TestCase.evaluate", "<builtin>.range", "collections.OrderedDict", "test.TestCase.evaluate", "distribute.device_util.get_host_for_device"], "collections.OrderedDict": [], "distribute.device_util.get_host_for_device": [], "distribute.input_lib_test.DistributedIteratorTest.testTupleDataset": ["distribute.device_util.get_host_for_device", "distribute.device_util.get_host_for_device", "<builtin>.range"], "distribute.input_lib_test.DistributedIteratorTest.testTupleDataset.dataset_fn.<lambda1>": [], "dataset_ops.Dataset.zip": [], "distribute.input_lib_test.DistributedIteratorTest.testTupleDatasetMultiworker": ["distribute.device_util.get_host_for_device", "distribute.device_util.get_host_for_device", "<builtin>.range"], "distribute.input_lib_test.DistributedIteratorTest.testTupleDatasetMultiworker.dataset_fn.<lambda1>": [], "distribute.input_lib_test.DistributedIteratorTest.testIterableIterator": ["distribute.input_lib.InputWorkers", "distribute.input_lib.get_distributed_dataset", "<builtin>.enumerate", "dataset_ops.Dataset.range", "<builtin>.iter", "test.TestCase.assertAllEqual"], "<builtin>.enumerate": [], "distribute.input_lib_test.DistributedIteratorTest.testIterableIteratorError": ["<builtin>.next", "<builtin>.enumerate", "dataset_ops.Dataset.range", "<builtin>.iter", "test.TestCase.assertAllEqual", "test.TestCase.assertRaises"], "distribute.input_lib_test.DistributedIteratorTest.testIterableIteratorError.replica_fn1": ["<builtin>.next"], "<builtin>.next": [], "distribute.input_lib_test.DistributedIteratorTest.testIterableIteratorError.replica_fn2": [], "distribute.input_lib_test.DistributedIteratorTest.testUnevenDatasetBatches": ["test.TestCase.assertRaises", "test.TestCase.assertRaises"], "distribute.input_lib_test.DistributedIteratorTest.testUnevenDatasetBatchesMultiWorker": ["test.TestCase.assertRaises", "distribute.multi_worker_util.id_in_cluster", "distribute.multi_worker_util.worker_count", "distribute.multi_worker_util.worker_count", "test.TestCase.assertIsNotNone"], "test.TestCase.assertIsNotNone": [], "distribute.multi_worker_util.worker_count": [], "distribute.multi_worker_util.id_in_cluster": [], "distribute.input_lib_test.DistributedIteratorTest.testUnevenDatasetBatchesMultiWorkerFourReplicas": ["test.TestCase.assertIsNotNone", "distribute.multi_worker_util.id_in_cluster", "distribute.multi_worker_util.worker_count", "distribute.multi_worker_util.worker_count", "test.TestCase.assertIsNotNone"], "distribute.input_lib_test.DistributedIteratorTest.testBatchSplitting": ["test.TestCase.assertIsNotNone", "test.TestCase.assertIsNotNone", "<builtin>.range"], "distribute.input_lib_test.DistributedIteratorTest.testBatchSplittingMultiWorker": ["test.TestCase.assertIsNotNone", "test.TestCase.assertIsNotNone", "test.TestCase.assertIsNotNone", "<builtin>.range"], "distribute.input_lib_test.DistributedIteratorTest.testCacheAcrossIteration": ["test.TestCase.skipTest", "python.tf2.enabled", "<builtin>.list", "dataset_ops.Dataset.range", "test.TestCase.assertAllEqual"], "<builtin>.list": [], "distribute.input_lib_test.DistributedIteratorTest.testShuffleAcrossIterations": ["test.TestCase.skipTest", "python.tf2.enabled", "test.TestCase.assertNotAllEqual", "<builtin>.list", "dataset_ops.Dataset.range", "test.TestCase.assertAllEqual"], "test.TestCase.assertNotAllEqual": [], "distribute.input_lib_test.DistributedIteratorTest.testGetNextOptionalShapeFinite": ["test.TestCase.assertAllEqual", "dataset_ops.DatasetV2.from_tensor_slices", "ops.array_ops.ones"], "ops.array_ops.ones": [], "dataset_ops.DatasetV2.from_tensor_slices": [], "distribute.input_lib_test.DistributedIteratorTest.testGetNextOptionalShapeFinite.train_fn": ["util.nest.map_structure", "test.TestCase.assertEqual", "<builtin>.len", "<builtin>.range"], "util.nest.map_structure": [], "test.TestCase.assertEqual": [], "distribute.input_lib_test.DistributedIteratorTest.testGetNextOptionalShapeInfinite": ["dataset_ops.DatasetV2.from_tensor_slices", "dataset_ops.DatasetV2.from_tensor_slices", "ops.array_ops.ones"], "distribute.input_lib_test.DistributedIteratorTest.testGetNextOptionalShapeInfinite.train_fn": ["util.nest.map_structure", "test.TestCase.assertEqual", "<builtin>.range", "<builtin>.iter", "<builtin>.len"], "distribute.input_lib_test.DistributedIteratorTest.testGetNextOptionalShapeEmpty": ["test.TestCase.assertEqual", "dataset_ops.DatasetV2.from_tensor_slices", "ops.array_ops.ones"], "distribute.input_lib_test.DistributedIteratorTest.testGetNextOptionalShapeEmpty.train_fn": ["test.TestCase.assertEqual", "<builtin>.isinstance", "<builtin>.range", "<builtin>.iter", "<builtin>.len"], "distribute.input_lib_test.DistributedIteratorTest.testAutoshardingOption": ["ops.options.Options", "ops.options.Options", "distribute.multi_worker_util.id_in_cluster", "distribute.multi_worker_util.id_in_cluster", "test.TestCase.assertIsNotNone"], "ops.options.Options": [], "distribute.input_lib_test.DistributedIteratorTest.testDifferentDatasetsMultiWorker": ["test.TestCase.assertIsNotNone", "test.TestCase.assertIsNotNone", "distribute.multi_worker_util.id_in_cluster", "distribute.multi_worker_util.id_in_cluster"], "distribute.input_lib_test.DistributedIteratorTest.testLoopOverDatasetInTFFunction": ["ops.variables.Variable", "test.TestCase.assertEqual", "test.TestCase.assertEqual", "dataset_ops.Dataset.range"], "distribute.input_lib_test.DistributedIteratorTest.testLoopOverDatasetInTFFunction.<lambda1>": [], "ops.variables.Variable": [], "distribute.input_lib_test.DistributedIteratorTest.testLoopOverDatasetInTFFunction.iterator_fn": [], "distribute.input_lib_test.DistributedIteratorTest.testLoopOverDatasetInTFFunction.iterator_fn.assign_add_fn": ["ops.math_ops.reduce_sum"], "ops.math_ops.reduce_sum": [], "distribute.input_lib_test.DistributedIteratorTensorTypeTest": ["distribute.combinations.generate", "distribute.combinations.combine"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse": ["ops.sparse_ops.sparse_tensor_to_dense", "util.nest.flatten", "<builtin>.range", "test.TestCase.skipTest", "test.TestCase.skipTest", "test.TestCase.assertLen", "python.tf2.enabled", "python.tf2.enabled", "<builtin>.iter", "test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual", "distribute.distribute_utils.select_replica"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse.<dict1>.<lambda1>": [], "numpy.arange": [], "numpy.mod": [], "numpy.repeat": [], "ragged_tensor.RaggedTensor.from_row_lengths": [], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse.<lambda1>": ["<builtin>.next", "<builtin>.iter"], "test.TestCase.assertLen": [], "ops.sparse_ops.sparse_tensor_to_dense": [], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse.sum_batch": ["util.nest.map_structure"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse.sum_batch.map_fn": ["<builtin>.all", "<builtin>.map"], "<builtin>.map": [], "<builtin>.all": [], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse.sum_batch.map_fn.<lambda1>": ["ops.math_ops.reduce_sum"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse._reduce": ["ops.math_ops.reduce_sum"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse.sum_for_loop": ["ops.math_ops.reduce_sum"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse.sum_while_loop": [], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparse.<lambda2>": ["ops.math_ops.reduce_sum", "<builtin>.next"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparseGetNextAsOptional": ["test.TestCase.assertEqual", "test.TestCase.skipTest", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "python.tf2.enabled", "<builtin>.iter"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparseGetNextAsOptional.dataset_fn": ["ragged_tensor.RaggedTensor.from_row_lengths", "numpy.mod", "distribute.distribute_lib.InputContext", "numpy.repeat", "dataset_ops.DatasetV2.from_tensor_slices", "numpy.arange"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparseGetNextAsOptionalInLoop": ["util.nest.flatten", "distribute.distribute_lib.InputContext", "distribute.distribute_lib.InputContext", "eager.def_function.function", "test.TestCase.assertAllEqual"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparseGetNextAsOptionalInLoop.dataset_fn": ["ragged_tensor.RaggedTensor.from_row_lengths", "numpy.mod", "distribute.distribute_lib.InputContext", "numpy.repeat", "dataset_ops.DatasetV2.from_tensor_slices", "numpy.arange"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparseGetNextAsOptionalInLoop.sum_batch": ["util.nest.map_structure"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparseGetNextAsOptionalInLoop.sum_batch.map_fn": [], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparseGetNextAsOptionalInLoop.sum_batch.map_fn._sum": ["ops.math_ops.reduce_sum", "framework.sparse_tensor.is_sparse"], "framework.sparse_tensor.is_sparse": [], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparseGetNextAsOptionalInLoop._reduce": ["framework.sparse_tensor.is_sparse"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testRaggedSparseGetNextAsOptionalInLoop.sum_while_loop": ["framework.sparse_tensor.is_sparse", "framework.constant_op.constant", "<builtin>.iter"], "framework.constant_op.constant": [], "eager.def_function.function": [], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testMWMSPartialBatch": ["framework.constant_op.constant", "framework.constant_op.constant"], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testMWMSPartialBatchWithLegacyRebatch": ["framework.constant_op.constant", "framework.constant_op.constant"], "dataset_ops.Dataset.from_tensor_slices": [], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testMWMSPartialBatchWithLegacyRebatch.dataset_fn.map_fn": ["ops.math_ops.range"], "ops.math_ops.range": [], "distribute.input_lib_test.DistributedIteratorTensorTypeTest.testMWMSWithDataSharding": ["ops.math_ops.range", "distribute.multi_worker_util.id_in_cluster", "distribute.multi_worker_util.id_in_cluster"], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.setUp": ["eager.context._reset_context", "<builtin>.super", "distribute.strategy_combinations.set_virtual_cpus_to_at_least"], "eager.context._reset_context": [], "distribute.strategy_combinations.set_virtual_cpus_to_at_least": [], "<builtin>.super": [], "distribute.input_lib_test.DistributedIteratorPerDeviceTest": ["distribute.combinations.generate", "distribute.combinations.combine"], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testDevicePlacementForPerWorkerValuesWithPrefetch": [], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testDevicePlacementForPerWorkerValuesWithPrefetch.dataset_fn": ["dataset_ops.Dataset.from_tensor_slices"], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testDevicePlacementForPerWorkerValuesWithoutPrefetch": [], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testDevicePlacementForPerWorkerValuesWithoutPrefetch.dataset_fn": ["dataset_ops.Dataset.from_tensor_slices", "numpy.full"], "numpy.full": [], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testDevicePlacementForPerWorkerValuesWithoutPrefetch.<lambda1>": [], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testDevicePlacementForInvalidCombinations": ["test.TestCase.assertRaises"], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testDevicePlacementForInvalidCombinations.dataset_fn": ["dataset_ops.Dataset.from_tensor_slices", "numpy.full"], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testPrefetchBufferSizeInputOptions": ["numpy.array_equal", "numpy.array", "<builtin>.next", "<builtin>.iter"], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testPrefetchBufferSizeInputOptions.dataset_fn": ["dataset_ops.Dataset.from_tensor_slices", "numpy.arange"], "numpy.array": [], "numpy.array_equal": [], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testOutputValuesForPerWorkerInputOptions": ["numpy.array_equal", "numpy.array", "<builtin>.next", "<builtin>.iter"], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testOutputValuesForPerWorkerInputOptions.dataset_fn": ["dataset_ops.Dataset.from_tensor_slices", "numpy.arange"], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testOutputValuesForPerReplicaInputOptions": ["<builtin>.enumerate", "<builtin>.len", "numpy.array"], "distribute.input_lib_test.DistributedIteratorPerDeviceTest.testOutputValuesForPerReplicaInputOptions.dataset_fn": ["dataset_ops.Dataset.from_tensor_slices", "numpy.arange"], "distribute.input_lib_test.DistributedIteratorTfDataServiceTest.setUp": ["<builtin>.range", "service.server_lib.WorkerServer", "service.server_lib.WorkerConfig", "<builtin>.super", "distribute.combinations.in_main_process", "service.server_lib.DispatchServer", "distribute.combinations.env"], "distribute.combinations.in_main_process": [], "service.server_lib.DispatchServer": [], "service.server_lib.WorkerConfig": [], "service.server_lib.WorkerServer": [], "distribute.combinations.env": [], "distribute.input_lib_test.DistributedIteratorTfDataServiceTest": ["distribute.combinations.generate", "distribute.combinations.combine"], "distribute.input_lib_test.DistributedIteratorTfDataServiceTest.testTfDataService": ["framework.constant_op.constant", "distribute.input_lib.InputWorkers", "<builtin>.range", "ops.data_service_ops._distribute", "distribute.input_lib.get_distributed_dataset", "test.TestCase.assertNotEmpty", "test.TestCase.assertCountEqual", "<builtin>.list", "dataset_ops.Dataset.range", "<builtin>.iter", "distribute.combinations.env"], "ops.data_service_ops._distribute": [], "test.TestCase.assertNotEmpty": [], "test.TestCase.assertCountEqual": [], "distribute.test_util.main": []}