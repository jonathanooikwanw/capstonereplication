{"legacy_tf_layers.base_test": ["platform.test.main"], "keras.combinations.combine": [], "legacy_tf_layers.base_test.BaseLayerTest": ["keras.combinations.generate", "keras.combinations.combine"], "keras.combinations.generate": [], "legacy_tf_layers.base_test.BaseLayerTest.testLayerProperties": ["eager.context.executing_eagerly", "test.TestCase.assertFalse", "test.TestCase.assertEqual", "legacy_tf_layers.base.Layer"], "legacy_tf_layers.base.Layer": [], "test.TestCase.assertEqual": [], "eager.context.executing_eagerly": [], "test.TestCase.assertFalse": [], "legacy_tf_layers.base_test.BaseLayerTest.testInt64Layer": ["test.TestCase.assertEqual", "legacy_tf_layers.base.Layer"], "legacy_tf_layers.base_test.BaseLayerTest.testKerasStyleAddWeight": ["engine.base_layer.Layer", "test.TestCase.assertFalse", "test.TestCase.assertEqual", "legacy_tf_layers.base.keras_style_scope", "ops.init_ops.zeros_initializer", "keras.backend.name_scope", "legacy_tf_layers.base.Layer"], "engine.base_layer.Layer": [], "keras.backend.name_scope": [], "ops.init_ops.zeros_initializer": [], "legacy_tf_layers.base.keras_style_scope": [], "legacy_tf_layers.base_test.BaseLayerTest.testAddWeight": ["legacy_tf_layers.base.Layer", "framework.ops.get_collection", "<builtin>.len", "test.TestCase.assertEqual", "eager.context.executing_eagerly", "ops.init_ops.zeros_initializer", "legacy_tf_layers.base.Layer"], "framework.ops.get_collection": [], "<builtin>.len": [], "legacy_tf_layers.base_test.BaseLayerTest.testAddWeight.<lambda1>": ["ops.math_ops.reduce_sum"], "ops.math_ops.reduce_sum": [], "legacy_tf_layers.base_test.BaseLayerTest.testAddWeight.function_adds_weight": ["ops.init_ops.zeros_initializer"], "legacy_tf_layers.base_test.BaseLayerTest.testInvalidTrainableSynchronizationCombination": ["ops.init_ops.zeros_initializer", "test.TestCase.assertRaisesRegex", "legacy_tf_layers.base.Layer"], "test.TestCase.assertRaisesRegex": [], "legacy_tf_layers.base_test.BaseLayerTest.testReusePartitionedVariablesAndRegularizers": ["framework.ops.Graph", "ops.partitioned_variables.fixed_size_partitioner", "framework.ops.get_collection", "<builtin>.len", "ops.variable_scope.get_variable_scope", "test.TestCase.assertEqual", "ops.variable_scope.variable_scope", "ops.init_ops.zeros_initializer", "legacy_tf_layers.base.Layer"], "framework.ops.Graph": [], "legacy_tf_layers.base_test.BaseLayerTest.testReusePartitionedVariablesAndRegularizers.<lambda1>": ["ops.math_ops.reduce_sum"], "ops.partitioned_variables.fixed_size_partitioner": [], "ops.variable_scope.get_variable_scope": [], "ops.variable_scope.variable_scope": [], "legacy_tf_layers.base_test.BaseLayerTest.testCall": ["base.Layer.apply", "test.TestCase.assertEqual", "eager.context.executing_eagerly", "ops.random_ops.random_uniform", "base.Layer.__init__"], "legacy_tf_layers.base_test.BaseLayerTest.testCall.MyLayer.call": ["ops.math_ops.square"], "ops.math_ops.square": [], "base.Layer.__init__": [], "ops.random_ops.random_uniform": [], "base.Layer.apply": [], "legacy_tf_layers.base_test.BaseLayerTest.testDeepCopy": ["base.Layer.apply", "test.TestCase.assertEqual", "eager.context.executing_eagerly", "ops.random_ops.random_uniform", "copy.deepcopy", "base.Layer.__init__"], "legacy_tf_layers.base_test.BaseLayerTest.testDeepCopy.MyLayer.call": ["ops.math_ops.square"], "copy.deepcopy": [], "legacy_tf_layers.base_test.BaseLayerTest.testScopeNaming": ["base.Layer.apply", "test.TestCase.assertEqual", "base.Layer.__init__", "ops.variable_scope.variable_scope", "ops.random_ops.random_uniform", "keras.backend.name_scope"], "legacy_tf_layers.base_test.BaseLayerTest.testScopeNaming.PrivateLayer.call": [], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecNdimCheck": ["base.Layer.apply", "base.Layer.apply", "test.TestCase.assertRaisesRegex", "framework.constant_op.constant"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecNdimCheck.CustomerLayer.__init__": ["<builtin>.super"], "<builtin>.super": [], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecNdimCheck.CustomerLayer.call": [], "framework.constant_op.constant": [], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecMinNdimCheck": ["framework.constant_op.constant", "test.TestCase.assertRaisesRegex", "base.Layer.apply", "framework.constant_op.constant"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecMinNdimCheck.CustomLayer.__init__": ["<builtin>.super"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecMinNdimCheck.CustomLayer.call": [], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecMaxNdimCheck": ["framework.constant_op.constant", "test.TestCase.assertRaisesRegex", "base.Layer.apply", "framework.constant_op.constant"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecMaxNdimCheck.CustomerLayer.__init__": ["<builtin>.super"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecMaxNdimCheck.CustomerLayer.call": [], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecDtypeCheck": ["framework.constant_op.constant", "test.TestCase.assertRaisesRegex", "base.Layer.apply", "framework.constant_op.constant"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecDtypeCheck.CustomerLayer.__init__": ["<builtin>.super"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecDtypeCheck.CustomerLayer.call": [], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecAxesCheck": ["base.Layer.apply", "base.Layer.apply", "test.TestCase.assertRaisesRegex", "framework.constant_op.constant"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecAxesCheck.CustomerLayer.__init__": ["<builtin>.super"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecAxesCheck.CustomerLayer.call": [], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecShapeCheck": ["test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex", "base.Layer.apply", "framework.constant_op.constant"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecShapeCheck.CustomerLayer.__init__": ["<builtin>.super"], "legacy_tf_layers.base_test.BaseLayerTest.testInputSpecShapeCheck.CustomerLayer.call": [], "legacy_tf_layers.base_test.BaseLayerTest.testNoInputSpec": ["base.Layer.apply", "ops.array_ops.placeholder", "eager.context.executing_eagerly", "framework.constant_op.constant", "framework.constant_op.constant"], "legacy_tf_layers.base_test.BaseLayerTest.testNoInputSpec.CustomerLayer.__init__": ["<builtin>.super"], "legacy_tf_layers.base_test.BaseLayerTest.testNoInputSpec.CustomerLayer.call": [], "ops.array_ops.placeholder": [], "legacy_tf_layers.base_test.BaseLayerTest.test_count_params": ["legacy_tf_layers.core.Dense", "test.TestCase.assertRaises", "test.TestCase.assertEqual"], "legacy_tf_layers.core.Dense": [], "test.TestCase.assertRaises": [], "legacy_tf_layers.base_test.BaseLayerTest.testDictInputOutput": ["<builtin>.isinstance", "base.Layer.apply", "ops.array_ops.placeholder", "test.TestCase.assertEqual", "eager.context.executing_eagerly", "test.TestCase.assertTrue", "framework.constant_op.constant", "base.Layer.__init__", "<builtin>.set"], "legacy_tf_layers.base_test.BaseLayerTest.testDictInputOutput.DictLayer.call": [], "<builtin>.isinstance": [], "test.TestCase.assertTrue": [], "<builtin>.set": [], "legacy_tf_layers.base_test.BaseLayerTest.testActivityRegularizer": ["framework.ops.Graph", "ops.array_ops.placeholder", "<builtin>.len", "test.TestCase.assertEqual", "legacy_tf_layers.base.Layer"], "legacy_tf_layers.base_test.BaseLayerTest.testNameScopeIsConsistentWithVariableScope": ["ops.array_ops.placeholder", "test.TestCase.assertEqual", "framework.ops.Graph", "framework.ops.Graph"], "legacy_tf_layers.base_test.BaseLayerTest.testNameScopeIsConsistentWithVariableScope.MyLayer.build": ["base.Layer.add_variable"], "base.Layer.add_variable": [], "legacy_tf_layers.base_test.BaseLayerTest.testNameScopeIsConsistentWithVariableScope.MyLayer.call": ["ops.math_ops.multiply"], "ops.math_ops.multiply": [], "legacy_tf_layers.base_test.BaseLayerTest.testNameScopeIsConsistentWithVariableScope._gen_layer": ["base.Layer.__init__", "base.Layer.apply"], "legacy_tf_layers.base_test.BaseLayerTest.testVariablesAreLiftedFromFunctionBuildingGraphs": ["framework.ops.get_default_graph", "framework.ops.Graph", "base.Layer.apply", "ops.array_ops.placeholder", "<builtin>.len", "test.TestCase.assertEqual", "base.Layer.__init__"], "legacy_tf_layers.base_test.BaseLayerTest.testVariablesAreLiftedFromFunctionBuildingGraphs.MyLayer.build": ["base.Layer.add_variable"], "legacy_tf_layers.base_test.BaseLayerTest.testVariablesAreLiftedFromFunctionBuildingGraphs.MyLayer.call": [], "framework.ops.get_default_graph": [], "legacy_tf_layers.base_test.BaseLayerTest.testGetUpdateFor": ["framework.ops.Graph", "base.Layer.apply", "ops.array_ops.placeholder", "<builtin>.len", "test.TestCase.assertEqual", "base.Layer.get_updates_for", "base.Layer.__init__"], "legacy_tf_layers.base_test.BaseLayerTest.testGetUpdateFor.MyLayer.build": ["base.Layer.add_variable", "ops.state_ops.assign_add", "base.Layer.add_update"], "ops.state_ops.assign_add": [], "base.Layer.add_update": [], "legacy_tf_layers.base_test.BaseLayerTest.testGetUpdateFor.MyLayer.call": ["ops.state_ops.assign_add", "base.Layer.add_update"], "base.Layer.get_updates_for": [], "legacy_tf_layers.base_test.BaseLayerTest.testGetLossesFor": ["framework.ops.Graph", "base.Layer.apply", "ops.array_ops.placeholder", "<builtin>.len", "test.TestCase.assertEqual", "base.Layer.get_losses_for", "base.Layer.__init__"], "legacy_tf_layers.base_test.BaseLayerTest.testGetLossesFor.MyLayer.build": ["base.Layer.add_loss", "base.Layer.add_variable"], "base.Layer.add_loss": [], "legacy_tf_layers.base_test.BaseLayerTest.testGetLossesFor.MyLayer.call": ["base.Layer.add_loss"], "base.Layer.get_losses_for": [], "legacy_tf_layers.base_test.IdentityLayer.call": [], "legacy_tf_layers.base_test.DTypeTest._const": ["ops.array_ops.constant"], "ops.array_ops.constant": [], "legacy_tf_layers.base_test.DTypeTest.test_dtype_inferred_from_input": ["ops.array_ops.constant", "test.TestCase.assertEqual", "base.Layer.__init__", "numpy.array", "test.TestCase.assertIsNone"], "test.TestCase.assertIsNone": [], "numpy.array": [], "legacy_tf_layers.base_test.DTypeTest.test_passing_dtype_to_constructor": ["test.TestCase.assertIsNone", "base.Layer.__init__", "test.TestCase.assertEqual"], "legacy_tf_layers.base_test.DTypeTest.test_inputs_not_casted": ["test.TestCase.assertEqual", "base.Layer.__init__", "test.TestCase.assertEqual"], "platform.test.main": []}