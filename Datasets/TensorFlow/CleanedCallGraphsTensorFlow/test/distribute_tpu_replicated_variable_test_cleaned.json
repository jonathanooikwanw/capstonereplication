{"distribute.tpu_replicated_variable_test": ["eager.test.main"], "framework.combinations.combine": [], "distribute.tpu_replicated_variable_test.TPUReplicatedVariableTest": ["framework.combinations.generate", "framework.combinations.combine"], "framework.combinations.generate": [], "distribute.tpu_replicated_variable_test.TPUReplicatedVariableTest.test_tpu_replicated_variable_simple": ["ops.variables.global_variables_initializer", "test.TestCase.assertEqual", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.evaluate", "distribute.tpu_replicated_variable.TPUReplicatedVariable"], "ops.variables.Variable": [], "distribute.tpu_replicated_variable.TPUReplicatedVariable": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertEqual": [], "distribute.tpu_replicated_variable_test.TPUReplicatedVariableTest.check_replicated_variables_all_the_same": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual"], "distribute.tpu_replicated_variable_test.TPUReplicatedVariableTest.test_tpu_replicated_variable_update": ["ops.variables.global_variables_initializer", "numpy.random.rand", "ops.variables.Variable", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "numpy.subtract", "test.TestCase.evaluate", "numpy.add", "distribute.tpu_replicated_variable.TPUReplicatedVariable"], "numpy.random.rand": [], "test.TestCase.assertAllClose": [], "numpy.subtract": [], "numpy.add": [], "test.TestCase.assertAllEqual": [], "eager.test.main": []}