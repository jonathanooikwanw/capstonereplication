{"ops.math_ops_test": ["platform.googletest.main"], "ops.math_ops_test.ReduceTest.testReduceAllDims": ["test_util.TensorFlowTestCase.assertEqual", "ops.math_ops.reduce_sum", "framework.test_util.device", "numpy.array", "test_util.TensorFlowTestCase.evaluate"], "numpy.array": [], "framework.test_util.device": [], "ops.math_ops.reduce_sum": [], "test_util.TensorFlowTestCase.evaluate": [], "test_util.TensorFlowTestCase.assertEqual": [], "ops.math_ops_test.ReduceTest.testReduceExtendType": ["ops.math_ops.reduce_sum", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "ops.math_ops.cast", "numpy.random.randn"], "numpy.random.randn": [], "ops.math_ops.cast": [], "test_util.TensorFlowTestCase.assertAllClose": [], "ops.math_ops_test.ReduceTest.testReduceExplicitAxes": ["test_util.TensorFlowTestCase.assertEqual", "ops.math_ops.reduce_sum", "framework.test_util.device", "numpy.array", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllEqual"], "test_util.TensorFlowTestCase.assertAllEqual": [], "ops.math_ops_test.ReduceTest.testReduceInvalidAxis": ["ops.math_ops.reduce_sum", "test_util.TensorFlowTestCase.assertRaisesRegex", "eager.context.executing_eagerly", "numpy.array"], "eager.context.executing_eagerly": [], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "ops.math_ops_test.ReduceTest.testReduceVar": ["test_util.TensorFlowTestCase.assertEqual", "ops.math_ops.reduce_variance", "numpy.var", "numpy.array", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.assertRaisesRegex", "test_util.TensorFlowTestCase.evaluate", "ragged.ragged_factory_ops.constant"], "ops.math_ops.reduce_variance": [], "numpy.var": [], "ragged.ragged_factory_ops.constant": [], "ops.math_ops_test.ReduceTest.testReduceVarComplex": ["test_util.TensorFlowTestCase.assertEqual", "ops.math_ops.reduce_variance", "numpy.var", "numpy.array", "test_util.TensorFlowTestCase.evaluate"], "ops.math_ops_test.ReduceTest.testReduceStd": ["test_util.TensorFlowTestCase.assertEqual", "numpy.std", "numpy.array", "ops.math_ops.reduce_std", "test_util.TensorFlowTestCase.assertRaisesRegex", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllClose", "ragged.ragged_factory_ops.constant"], "ops.math_ops.reduce_std": [], "numpy.std": [], "ops.math_ops_test.ReduceTest.testReduceStdComplex": ["test_util.TensorFlowTestCase.assertEqual", "numpy.std", "numpy.array", "ops.math_ops.reduce_std", "test_util.TensorFlowTestCase.evaluate"], "ops.math_ops_test.LogSumExpTest.testReduceLogSumExp": ["ops.math_ops.reduce_logsumexp", "numpy.sum", "framework.test_util.use_gpu", "numpy.random.rand", "test_util.TensorFlowTestCase.assertAllClose", "numpy.log", "numpy.exp"], "numpy.random.rand": [], "framework.test_util.use_gpu": [], "ops.math_ops.reduce_logsumexp": [], "numpy.exp": [], "numpy.sum": [], "numpy.log": [], "ops.math_ops_test.LogSumExpTest.testReductionIndices": ["ops.math_ops.reduce_logsumexp", "numpy.sum", "framework.test_util.use_gpu", "numpy.random.rand", "test_util.TensorFlowTestCase.assertShapeEqual", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "numpy.log", "numpy.exp"], "test_util.TensorFlowTestCase.assertShapeEqual": [], "ops.math_ops_test.LogSumExpTest.testReductionIndices2": ["ops.math_ops.reduce_logsumexp", "numpy.sum", "framework.test_util.use_gpu", "numpy.random.rand", "test_util.TensorFlowTestCase.assertShapeEqual", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "numpy.log", "numpy.exp"], "ops.math_ops_test.LogSumExpTest.testKeepDims": ["ops.math_ops.reduce_logsumexp", "test_util.TensorFlowTestCase.assertEqual", "numpy.sum", "framework.test_util.use_gpu", "numpy.random.rand", "test_util.TensorFlowTestCase.assertAllClose", "numpy.log", "numpy.exp"], "ops.math_ops_test.LogSumExpTest.testOverflow": ["numpy.sum", "ops.math_ops.reduce_logsumexp", "framework.test_util.use_gpu", "numpy.array", "<builtin>.RuntimeWarning", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.assertRaisesRegex", "numpy.log", "numpy.max", "framework.constant_op.constant", "numpy.exp"], "numpy.max": [], "<builtin>.RuntimeWarning": [], "framework.constant_op.constant": [], "ops.math_ops_test.LogSumExpTest.testUnderflow": ["numpy.sum", "ops.math_ops.reduce_logsumexp", "framework.test_util.use_gpu", "numpy.array", "<builtin>.RuntimeWarning", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.assertRaisesRegex", "numpy.log", "numpy.max", "framework.constant_op.constant", "numpy.exp"], "ops.math_ops_test.LogSumExpTest.testInfinity": ["framework.test_util.use_gpu", "test_util.TensorFlowTestCase.assertEqual", "ops.math_ops.reduce_logsumexp", "test_util.TensorFlowTestCase.evaluate"], "ops.math_ops_test.LogSumExpTest.testRaggedTensor": ["ops.math_ops.reduce_logsumexp", "numpy.sum", "framework.test_util.use_gpu", "numpy.array", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "numpy.log", "numpy.max", "ragged.ragged_factory_ops.constant", "numpy.exp"], "ops.math_ops_test.RoundTest.testRounding": ["numpy.arange", "framework.test_util.device", "numpy.array", "ops.math_ops.round", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "numpy.round"], "numpy.arange": [], "ops.math_ops.round": [], "numpy.round": [], "ops.math_ops_test.MatMulTest.testMatMul2D": ["test_util.TensorFlowTestCase.assertAllClose", "ops.math_ops.matmul", "framework.constant_op.constant"], "ops.math_ops.matmul": [], "ops.math_ops_test.MatMulTest.testBatchMatMul": ["numpy.arange", "ops.math_ops.matmul", "test_util.TensorFlowTestCase.assertAllClose", "framework.constant_op.constant"], "ops.math_ops_test.MatMulTest.testUnsupportedtypeMatmul": ["ops.math_ops.matmul", "numpy.arange", "test_util.TensorFlowTestCase.assertRaisesRegex", "framework.constant_op.constant"], "absl.testing.parameterized.parameters": [], "ops.math_ops_test.MatMulTest": ["absl.testing.parameterized.parameters"], "ops.math_ops_test.MatMulTest.testInt8MatMul2D": ["test_util.TensorFlowTestCase.assertAllClose", "ops.math_ops.matmul", "framework.constant_op.constant"], "ops.math_ops_test.MatMulTest.testMixPrecMatMul2D": ["test_util.TensorFlowTestCase.assertAllClose", "ops.math_ops.matmul", "framework.constant_op.constant"], "ops.math_ops_test.MatMulTest.testInt8BatchMatmul": ["numpy.arange", "ops.math_ops.matmul", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual"], "ops.math_ops_test.MatMulTest.testMixPrecBatchMatmul": ["numpy.arange", "ops.math_ops.matmul", "test_util.TensorFlowTestCase.assertAllClose", "framework.constant_op.constant"], "ops.math_ops_test.MatMulTest.testInvalidOutputTypeMatmul": ["ops.math_ops.matmul", "eager.context.is_tfrt_enabled", "numpy.arange", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertRaisesRegex", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant"], "eager.context.is_tfrt_enabled": [], "ops.math_ops_test.ModTest.testFloat": ["ops.math_ops.mod", "framework.test_util.use_gpu", "numpy.array", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "numpy.fmod"], "ops.math_ops.mod": [], "numpy.fmod": [], "ops.math_ops_test.ModTest.testFixed": ["ops.math_ops.mod", "framework.test_util.use_gpu", "numpy.array", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "numpy.mod"], "numpy.mod": [], "ops.math_ops_test.SquaredDifferenceTest.testSquaredDifference": ["ops.math_ops.squared_difference", "framework.test_util.device", "numpy.array", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate"], "ops.math_ops.squared_difference": [], "ops.math_ops_test.SquaredDifferenceTest.testComplexSquaredDifference": ["ops.math_ops.squared_difference", "framework.test_util.device", "numpy.array", "numpy.conj", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate"], "numpy.conj": [], "ops.math_ops_test.ApproximateEqualTest.testApproximateEqual": ["framework.test_util.device", "numpy.array", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.approximate_equal"], "ops.math_ops.approximate_equal": [], "ops.math_ops_test.ApproximateEqualTest.testApproximateEqualShape": ["test_util.TensorFlowTestCase.assertRaisesRegex", "numpy.array", "ops.math_ops.approximate_equal"], "ops.math_ops_test.ApproximateEqualTest.testApproximateEqualShapeXla": ["eager.def_function.function", "eager.def_function.function", "test_util.TensorFlowTestCase.assertRaisesRegex", "numpy.array"], "eager.def_function.function": [], "ops.math_ops_test.ApproximateEqualTest.testApproximateEqualShapeXla.approximate_equal": ["ops.math_ops.approximate_equal"], "ops.math_ops_test.ScalarMulTest.testAcceptsRefs": ["ops.variables.global_variables_initializer", "ops.math_ops.scalar_mul", "ops.variables.Variable", "test_util.TensorFlowTestCase.assertEqual", "ops.resource_variable_ops.ResourceVariable", "eager.context.executing_eagerly", "framework.test_util.device", "test_util.TensorFlowTestCase.evaluate"], "ops.resource_variable_ops.ResourceVariable": [], "ops.variables.Variable": [], "ops.math_ops.scalar_mul": [], "ops.variables.global_variables_initializer": [], "ops.math_ops_test.ScalarMulTest.testAcceptsConstant": ["ops.math_ops.scalar_mul", "test_util.TensorFlowTestCase.assertEqual", "framework.test_util.device", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant"], "ops.math_ops_test.ScalarMulTest.testAcceptsTensor": ["ops.array_ops.ones", "ops.math_ops.scalar_mul", "framework.test_util.device", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllEqual"], "ops.array_ops.ones": [], "ops.math_ops_test.ScalarMulTest.testAcceptsIndexedSlices": ["ops.math_ops.scalar_mul", "framework.test_util.device", "framework.ops.IndexedSlices", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.ops.IndexedSlices": [], "ops.math_ops_test.AddNTest.testPartials": ["framework.test_util.use_gpu", "ops.math_ops.add_n", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.range"], "<builtin>.range": [], "ops.math_ops.add_n": [], "ops.math_ops_test.AddNTest.testFloat": ["framework.test_util.use_gpu", "ops.math_ops.add_n", "framework.ops.convert_n_to_tensor", "test_util.TensorFlowTestCase.assertAllClose", "numpy.random.seed", "<builtin>.range", "numpy.random.random", "<builtin>.sum"], "numpy.random.seed": [], "numpy.random.random": [], "framework.ops.convert_n_to_tensor": [], "<builtin>.sum": [], "ops.math_ops_test.AddNTest.testInt": ["numpy.random.randint", "framework.test_util.use_gpu", "ops.math_ops.add_n", "framework.ops.convert_n_to_tensor", "numpy.random.seed", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.range", "<builtin>.sum"], "numpy.random.randint": [], "ops.math_ops_test.AddNTest.testGrad": ["ops.variables.global_variables_initializer", "ops.variables.Variable", "framework.test_util.use_gpu", "ops.gradients.gradients", "eager.context.executing_eagerly", "ops.math_ops.add_n", "eager.backprop.GradientTape", "numpy.random.seed", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.range", "numpy.repeat", "numpy.random.random"], "eager.backprop.GradientTape": [], "ops.gradients.gradients": [], "numpy.repeat": [], "ops.math_ops_test.AddNTest.testIndexedSlices": ["framework.test_util.use_gpu", "numpy.array", "ops.math_ops.add_n", "framework.ops.IndexedSlices", "test_util.TensorFlowTestCase.assertAllEqual", "ops.array_ops.constant"], "ops.array_ops.constant": [], "ops.math_ops_test.AddNTest.test_iterable": ["framework.test_util.use_gpu", "framework.test_util.use_gpu", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.add_n"], "ops.math_ops_test.AddNTest.test_iterable.fn": [], "ops.math_ops_test.DivAndModTest.intTestData": ["numpy.arange"], "ops.math_ops_test.DivAndModTest.floatTestData": ["numpy.arange"], "ops.math_ops_test.DivAndModTest.numpySafeFloorDivInt": ["numpy.iinfo"], "numpy.iinfo": [], "ops.math_ops_test.DivAndModTest.numpySafeFloorModInt": ["ops.math_ops.add_n"], "ops.math_ops_test.DivAndModTest.numpySafeTruncateDivInt": ["ops.math_ops.add_n"], "ops.math_ops_test.DivAndModTest.numpySafeTruncateModInt": ["ops.math_ops.add_n"], "ops.math_ops_test.DivAndModTest.testFloorModInt": ["ops.math_ops.floormod", "ops.math_ops.floormod", "ops.math_ops.floormod", "test_util.TensorFlowTestCase.assertAllEqual", "ops.array_ops.constant"], "ops.math_ops.floormod": [], "ops.math_ops_test.DivAndModTest.testFloorModFloat": ["ops.array_ops.constant", "ops.array_ops.constant", "ops.math_ops.floormod", "test_util.TensorFlowTestCase.assertAllEqual"], "ops.math_ops_test.DivAndModTest.testFloorModBfloat16": ["ops.math_ops.floormod", "ops.math_ops.floormod", "ops.math_ops.cast", "test_util.TensorFlowTestCase.assertAllEqual"], "ops.math_ops_test.DivAndModTest.testTruncateModInt": ["numpy.fmod", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.truncatemod", "ops.math_ops.truncatemod"], "ops.math_ops.truncatemod": [], "ops.math_ops_test.DivAndModTest.testTruncateModFloat": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.fmod", "ops.math_ops.truncatemod"], "ops.math_ops_test.DivAndModTest.testFloorDivideInt": ["ops.math_ops.truncatemod", "ops.math_ops.truncatemod", "ops.math_ops.floor_div", "test_util.TensorFlowTestCase.assertAllEqual", "ops.array_ops.constant"], "ops.math_ops.floor_div": [], "ops.math_ops_test.DivAndModTest.testTruncateDivideInt": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.truncatediv", "ops.math_ops.truncatediv"], "ops.math_ops.truncatediv": [], "ops.math_ops_test.DivAndModTest": ["framework.test_util.disable_ubsan", "framework.test_util.deprecated_graph_mode_only", "framework.test_util.disable_asan"], "framework.test_util.deprecated_graph_mode_only": [], "ops.math_ops_test.DivAndModTest.testDivideName": ["ops.math_ops.divide", "ops.array_ops.constant", "test_util.TensorFlowTestCase.assertEqual"], "ops.math_ops.divide": [], "ops.math_ops_test.DivAndModTest.testRealDiv": ["ops.math_ops.realdiv", "numpy.divide", "ops.math_ops.realdiv", "test_util.TensorFlowTestCase.assertAllClose"], "ops.math_ops.realdiv": [], "numpy.divide": [], "ops.math_ops_test.DivAndModTest.testDivideType": ["ops.math_ops.divide", "ops.array_ops.constant", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.evaluate"], "ops.math_ops_test.DivAndModTest.testComplexDiv": ["ops.math_ops.divide", "ops.array_ops.constant", "ops.math_ops.div"], "ops.math_ops.div": [], "ops.math_ops_test.DivAndModTest.testFloorDivGrad": ["ops.variables.global_variables_initializer", "ops.variables.Variable", "ops.math_ops.floordiv", "ops.gradients.gradients", "eager.context.executing_eagerly", "eager.backprop.GradientTape", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.divide", "ops.math_ops.div"], "ops.math_ops.floordiv": [], "ops.math_ops_test.DivAndModTest.testConsistent": ["ops.math_ops.floormod", "ops.math_ops.floormod", "ops.math_ops.floor_div", "numpy.tile", "numpy.reshape", "ops.math_ops.truncatediv", "test_util.TensorFlowTestCase.assertAllEqual", "ops.array_ops.constant", "ops.math_ops.truncatemod"], "numpy.tile": [], "numpy.reshape": [], "ops.math_ops_test.DivAndModTest.testWithPythonValue": ["ops.math_ops.divide", "test_util.TensorFlowTestCase.assertIsInstance", "ops.array_ops.constant"], "test_util.TensorFlowTestCase.assertIsInstance": [], "ops.math_ops_test.DivAndModTest.intEdgeTestData": ["numpy.array"], "framework.test_util.disable_asan": [], "framework.test_util.disable_ubsan": [], "ops.math_ops_test.DivAndModTest.testFloorDivModIntEdges": ["ops.array_ops.constant", "ops.math_ops.floormod", "numpy.broadcast_to", "ops.math_ops.floor_div", "ops.math_ops.floor_div", "ops.math_ops.floor_div", "ops.math_ops.add", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.multiply"], "ops.math_ops.multiply": [], "ops.math_ops.add": [], "numpy.broadcast_to": [], "ops.math_ops_test.DivAndModTest.testTruncateDivModIntEdges": ["numpy.broadcast_to", "ops.math_ops.multiply", "ops.math_ops.multiply", "ops.math_ops.truncatediv", "ops.math_ops.add", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.multiply", "ops.math_ops.multiply", "ops.math_ops.truncatemod"], "ops.math_ops_test.DivNoNanTest": ["absl.testing.parameterized.parameters"], "ops.math_ops_test.DivNoNanTest.testBasic": ["framework.test_util.use_gpu", "numpy.arange", "ops.math_ops.div_no_nan", "numpy.true_divide", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllCloseAccordingToType"], "numpy.true_divide": [], "ops.math_ops.div_no_nan": [], "test_util.TensorFlowTestCase.assertAllCloseAccordingToType": [], "ops.math_ops_test.DivNoNanTest.testSmall": ["test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "ops.math_ops.div_no_nan"], "ops.math_ops_test.DivNoNanTest.testNonFiniteInNumerator": ["framework.test_util.use_gpu", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "ops.math_ops.div_no_nan"], "ops.math_ops_test.MultiplyNoNanTest.testBasic": ["framework.test_util.use_gpu", "numpy.zeros", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual", "ops.math_ops.multiply_no_nan", "numpy.ones"], "numpy.zeros": [], "numpy.ones": [], "ops.math_ops.multiply_no_nan": [], "ops.math_ops_test.XlogyTest.testXlogyNoZero": ["ops.math_ops.log", "framework.test_util.use_gpu", "ops.math_ops.xlogy", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant"], "ops.math_ops.xlogy": [], "ops.math_ops.log": [], "ops.math_ops_test.XlogyTest.testXlogyWithZero": ["framework.test_util.use_gpu", "numpy.zeros", "ops.math_ops.xlogy", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "ops.array_ops.zeros_like"], "ops.array_ops.zeros_like": [], "ops.math_ops_test.XlogyTest.testXlogyWithZeroBroadcast": ["ops.math_ops.log", "framework.test_util.use_gpu", "ops.math_ops.xlogy", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "ops.array_ops.zeros_like"], "ops.math_ops_test.Xlog1pyTest.testXlog1pyNoNeg1": ["ops.math_ops.log1p", "framework.test_util.use_gpu", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "ops.math_ops.xlog1py"], "ops.math_ops.xlog1py": [], "ops.math_ops.log1p": [], "ops.math_ops_test.Xlog1pyTest.testXlog1pyWithNegOne": ["framework.test_util.use_gpu", "numpy.zeros", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "ops.math_ops.xlog1py", "ops.array_ops.zeros_like"], "ops.math_ops_test.Xlog1pyTest.testXlog1pyWithZeroBroadcast": ["ops.math_ops.log1p", "framework.test_util.use_gpu", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "ops.math_ops.xlog1py", "ops.array_ops.zeros_like"], "ops.math_ops_test.XdivyTest.testXdivyNoZero": ["ops.math_ops.xdivy", "framework.test_util.use_gpu", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant"], "ops.math_ops.xdivy": [], "ops.math_ops_test.XdivyTest.testXdivyWithZero": ["ops.math_ops.xdivy", "framework.test_util.use_gpu", "numpy.zeros", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "ops.array_ops.zeros_like"], "ops.math_ops_test.XdivyTest.testXdivyWithZeroBroadcast": ["ops.math_ops.xdivy", "framework.test_util.use_gpu", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "ops.array_ops.zeros_like"], "ops.math_ops_test.NextAfterTest.testBasic": ["ops.math_ops.nextafter", "ops.math_ops.is_nan", "test_util.TensorFlowTestCase.assertAllLess", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual"], "ops.math_ops.nextafter": [], "test_util.TensorFlowTestCase.assertAllLess": [], "ops.math_ops.is_nan": [], "ops.math_ops_test.NextAfterTest.testBroadcasting": ["numpy.finfo", "ops.math_ops.nextafter", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual"], "numpy.finfo": [], "ops.math_ops_test.BinaryOpsTest.testErrorReceivedIfDtypeMismatchFromOp": ["ops.array_ops.ones", "test_util.TensorFlowTestCase.assertRaisesRegex", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.evaluate"], "ops.math_ops_test.BinaryOpsTest.testRHSDispatchingAndErrorRaising": ["ops.array_ops.ones", "test_util.TensorFlowTestCase.assertEqual", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.assertRaisesRegex", "test_util.TensorFlowTestCase.evaluate"], "ops.math_ops_test.BinaryOpsTest.testRHSDispatchingAndErrorRaising.RHSReturnsTrue.__radd__": [], "ops.math_ops_test.BinaryOpsTest.testRHSDispatchingAndErrorRaising.RHSRaisesError.__radd__": ["<builtin>.TypeError"], "<builtin>.TypeError": [], "ops.math_ops_test.BinaryOpsTest.testRHSDispatchingAndErrorRaising.RHSReturnsNotImplemented.__radd__": [], "ops.math_ops_test.SignTest.test_complex_sign_gradient": ["ops.math_ops.sign", "eager.context.eager_mode", "eager.backprop.GradientTape", "test_util.TensorFlowTestCase.assertAllClose", "ops.math_ops.complex"], "eager.context.eager_mode": [], "ops.math_ops.complex": [], "ops.math_ops.sign": [], "ops.math_ops_test.ReciprocalNoNanTest.testBasic": ["test_util.TensorFlowTestCase.assertEqual", "ops.math_ops.reciprocal_no_nan", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual"], "ops.math_ops.reciprocal_no_nan": [], "ops.math_ops_test.ReciprocalNoNanTest.testInverse": ["test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertAllClose", "framework.constant_op.constant", "numpy.random.choice", "ops.math_ops.reciprocal_no_nan"], "numpy.random.choice": [], "ops.math_ops_test.EqualityTest": ["framework.test_util.run_all_in_graph_and_eager_modes", "<builtin>.type", "absl.testing.parameterized.named_parameters"], "framework.test_util.run_all_in_graph_and_eager_modes": [], "ops.math_ops_test.EqualityTest.testEqualityNone": ["test_util.TensorFlowTestCase.assertFalse", "ops.math_ops.tensor_equals", "framework.constant_op.constant", "ops.math_ops.tensor_not_equals", "test_util.TensorFlowTestCase.assertTrue", "test_util.TensorFlowTestCase.assertNotEqual"], "test_util.TensorFlowTestCase.assertNotEqual": [], "ops.math_ops.tensor_equals": [], "test_util.TensorFlowTestCase.assertFalse": [], "ops.math_ops.tensor_not_equals": [], "test_util.TensorFlowTestCase.assertTrue": [], "<builtin>.type": [], "absl.testing.parameterized.named_parameters": [], "ops.math_ops_test.EqualityTest.testEqualityNoDowncast": ["test_util.TensorFlowTestCase.assertEqual", "ops.math_ops.tensor_equals", "<builtin>.isinstance", "python.tf2.enabled", "test_util.TensorFlowTestCase.skipTest", "framework.constant_op.constant", "test_util.TensorFlowTestCase.evaluate", "ops.math_ops.tensor_not_equals"], "python.tf2.enabled": [], "<builtin>.isinstance": [], "test_util.TensorFlowTestCase.skipTest": [], "ops.math_ops_test.RangeTest.testConvertToTensorRange": ["<builtin>.range", "framework.ops.convert_to_tensor", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.ops.convert_to_tensor": [], "ops.math_ops_test.ErfcinvTest.testErfcinv": ["<builtin>.int", "ops.math_ops.erfc", "test_util.TensorFlowTestCase.assertAllClose", "test_util.TensorFlowTestCase.evaluate", "ops.math_ops.erfcinv", "numpy.random.uniform"], "<builtin>.int": [], "numpy.random.uniform": [], "ops.math_ops.erfcinv": [], "ops.math_ops.erfc": [], "ops.math_ops_test.ArgMaxMinTest._generateRandomTensor": ["numpy.random.default_rng", "framework.constant_op.constant"], "numpy.random.default_rng": [], "ops.math_ops_test.ArgMaxMinTest._getValidDtypes": [], "ops.math_ops_test.ArgMaxMinTest.testArgMax": ["framework.constant_op.constant", "ops.math_ops.argmax", "ops.math_ops.argmax", "<builtin>.len", "numpy.argmax", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.range"], "<builtin>.len": [], "numpy.argmax": [], "ops.math_ops.argmax": [], "ops.math_ops_test.ArgMaxMinTest.testArgMaxReturnsFirstOccurence": ["test_util.TensorFlowTestCase.assertAllEqual", "ops.array_ops.zeros", "ops.math_ops.argmax", "numpy.argmax", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual"], "ops.array_ops.zeros": [], "ops.math_ops_test.ArgMaxMinTest.testArgMin": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.len", "ops.math_ops.argmin", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.assertAllEqual", "<builtin>.range", "numpy.argmin"], "numpy.argmin": [], "ops.math_ops.argmin": [], "ops.math_ops_test.ArgMaxMinTest.testArgMinReturnsFirstOccurence": ["test_util.TensorFlowTestCase.assertAllEqual", "ops.array_ops.zeros", "ops.math_ops.argmin", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual", "numpy.argmin"], "platform.googletest.main": []}