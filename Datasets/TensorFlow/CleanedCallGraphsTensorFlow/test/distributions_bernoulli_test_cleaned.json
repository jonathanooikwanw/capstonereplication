{"distributions.bernoulli_test": ["platform.test.main", "platform.test.main"], "distributions.bernoulli_test.try_import": ["importlib.import_module", "<builtin>.str", "platform.tf_logging.warning"], "importlib.import_module": [], "<builtin>.str": [], "platform.tf_logging.warning": [], "distributions.bernoulli_test.make_bernoulli": ["distributions.bernoulli.Bernoulli", "<builtin>.list", "numpy.random.uniform", "framework.constant_op.constant"], "<builtin>.list": [], "numpy.random.uniform": [], "framework.constant_op.constant": [], "distributions.bernoulli.Bernoulli": [], "distributions.bernoulli_test.entropy": ["numpy.log"], "numpy.log": [], "distributions.bernoulli_test.BernoulliTest": ["framework.test_util.run_deprecated_v1", "framework.test_util.run_in_graph_and_eager_modes"], "framework.test_util.run_in_graph_and_eager_modes": [], "distributions.bernoulli_test.BernoulliTest.testP": ["distributions.bernoulli.Bernoulli", "test.TestCase.assertAllClose", "test.TestCase.evaluate"], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "distributions.bernoulli_test.BernoulliTest.testLogits": ["distributions.bernoulli.Bernoulli", "test.TestCase.assertAllClose", "test.TestCase.evaluate"], "distributions.bernoulli_test.BernoulliTest.testInvalidP": ["distributions.bernoulli.Bernoulli", "test.TestCase.assertEqual", "test.TestCase.assertRaisesOpError", "test.TestCase.evaluate"], "test.TestCase.assertRaisesOpError": [], "test.TestCase.assertEqual": [], "distributions.bernoulli_test.BernoulliTest.testShapes": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual", "test.TestCase.evaluate"], "test.TestCase.assertAllEqual": [], "distributions.bernoulli_test.BernoulliTest.testDtype": ["test.TestCase.evaluate", "test.TestCase.assertEqual"], "distributions.bernoulli_test.BernoulliTest._testPmf": ["distributions.bernoulli.Bernoulli", "numpy.log", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "<builtin>.zip"], "<builtin>.zip": [], "framework.test_util.run_deprecated_v1": [], "distributions.bernoulli_test.BernoulliTest.testPmfCorrectBroadcastDynamicShape": ["test.TestCase.cached_session", "test.TestCase.assertAllClose", "distributions.bernoulli.Bernoulli", "ops.array_ops.placeholder"], "test.TestCase.cached_session": [], "ops.array_ops.placeholder": [], "distributions.bernoulli_test.BernoulliTest.testPmfInvalid": ["distributions.bernoulli.Bernoulli", "test.TestCase.assertRaisesOpError", "test.TestCase.evaluate"], "distributions.bernoulli_test.BernoulliTest.testPmfWithP": ["test.TestCase.evaluate"], "distributions.bernoulli_test.BernoulliTest.testPmfWithFloatArgReturnsXEntropy": ["numpy.log", "distributions.bernoulli.Bernoulli", "test.TestCase.assertAllClose", "numpy.float32", "test.TestCase.evaluate"], "numpy.float32": [], "distributions.bernoulli_test.BernoulliTest.testBroadcasting": ["numpy.log", "distributions.bernoulli.Bernoulli", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "ops.array_ops.placeholder"], "distributions.bernoulli_test.BernoulliTest.testPmfShapes": ["distributions.bernoulli.Bernoulli", "test.TestCase.assertEqual", "<builtin>.len", "test.TestCase.cached_session", "test.TestCase.evaluate", "ops.array_ops.placeholder"], "<builtin>.len": [], "distributions.bernoulli_test.BernoulliTest.testBoundaryConditions": ["distributions.bernoulli.Bernoulli", "test.TestCase.assertAllClose", "test.TestCase.evaluate"], "distributions.bernoulli_test.BernoulliTest.testEntropyNoBatch": ["distributions.bernoulli.Bernoulli", "distributions.bernoulli.Bernoulli", "test.TestCase.assertAllClose", "test.TestCase.evaluate"], "distributions.bernoulli_test.BernoulliTest.testEntropyWithBatch": ["distributions.bernoulli.Bernoulli", "distributions.bernoulli.Bernoulli", "test.TestCase.assertAllClose", "test.TestCase.evaluate"], "distributions.bernoulli_test.BernoulliTest.testSampleN": ["distributions.bernoulli.Bernoulli", "numpy.log", "test.TestCase.assertEqual", "test.TestCase.assertAllClose", "test.TestCase.assertAllEqual", "test.TestCase.assertTrue", "numpy.all", "test.TestCase.evaluate", "<builtin>.set", "numpy.mean"], "numpy.all": [], "test.TestCase.assertTrue": [], "numpy.mean": [], "<builtin>.set": [], "distributions.bernoulli_test.BernoulliTest.testNotReparameterized": ["distributions.bernoulli.Bernoulli", "test.TestCase.assertIsNone", "eager.backprop.GradientTape", "framework.constant_op.constant"], "eager.backprop.GradientTape": [], "test.TestCase.assertIsNone": [], "distributions.bernoulli_test.BernoulliTest.testSampleActsLikeSampleN": ["distributions.bernoulli.Bernoulli", "test.TestCase.assertAllEqual", "test.TestCase.cached_session", "test.TestCase.evaluate", "ops.array_ops.placeholder"], "distributions.bernoulli_test.BernoulliTest.testMean": ["distributions.bernoulli.Bernoulli", "test.TestCase.assertAllEqual", "numpy.array", "test.TestCase.evaluate"], "numpy.array": [], "distributions.bernoulli_test.BernoulliTest.testVarianceAndStd": ["distributions.bernoulli.Bernoulli", "test.TestCase.assertAllClose", "numpy.array", "test.TestCase.evaluate", "numpy.sqrt", "test.TestCase.evaluate"], "distributions.bernoulli_test.BernoulliTest.testVarianceAndStd.<lambda1>": [], "numpy.sqrt": [], "distributions.bernoulli_test.BernoulliTest.testBernoulliBernoulliKL": ["distributions.bernoulli.Bernoulli", "numpy.log", "test.TestCase.assertEqual", "test.TestCase.assertAllClose", "distributions.kullback_leibler.kl_divergence", "numpy.array", "test.TestCase.evaluate"], "distributions.kullback_leibler.kl_divergence": [], "platform.test.main": []}