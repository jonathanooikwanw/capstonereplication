{"framework.extension_type_test": ["contextlib.contextmanager", "platform.googletest.main"], "framework.extension_type_test.MaskedTensorV2.__repr__": ["platform.googletest.main", "<builtin>.super", "ExtensionType.mask.numpy", "ExtensionType.values.numpy", "<builtin>.hasattr"], "<builtin>.hasattr": [], "ExtensionType.values.numpy": [], "ExtensionType.mask.numpy": [], "framework.extension_type_test._masked_array_repr": ["<builtin>.repr", "ExtensionType.values.numpy", "<builtin>.zip", "<builtin>.len"], "<builtin>.super": [], "framework.extension_type_test.MaskedTensorV2.shape": [], "framework.extension_type_test.MaskedTensorV2.dtype": [], "framework.extension_type_test.MaskedTensorV2.from_full_tensor": ["ops.array_ops.ones_like", "extension_type.ExtensionType.__init__"], "ops.array_ops.ones_like": [], "extension_type.ExtensionType.__init__": [], "framework.extension_type_test.MaskedTensorV2.doc_link": [], "framework.extension_type_test.MaskedTensorV2.__validate__": ["values.shape.assert_is_compatible_with"], "values.shape.assert_is_compatible_with": [], "framework.extension_type_test.MaskedTensorV2.with_default": ["ops.array_ops.where_v2"], "ops.array_ops.where_v2": [], "<builtin>.len": [], "<builtin>.repr": [], "<builtin>.zip": [], "framework.extension_type_test.MaskedTensorV3.__init__": ["<builtin>.isinstance", "framework.ops.convert_to_tensor"], "<builtin>.isinstance": [], "framework.ops.convert_to_tensor": [], "framework.extension_type_test.MaskedTensorV3.shape": [], "framework.extension_type_test.MaskedTensorV3.dtype": [], "framework.extension_type_test.MaskedTensorV3.Spec._shape": [], "framework.extension_type_test.ExtensionTypeTest.testAttributeAccessors": ["test_util.TensorFlowTestCase.assertIsInstance", "framework.extension_type.pack", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type.pack": [], "test_util.TensorFlowTestCase.assertIsInstance": [], "test_util.TensorFlowTestCase.assertAllEqual": [], "framework.extension_type_test.ExtensionTypeTest.testAttributesAreImmutable": ["test_util.TensorFlowTestCase.assertRaisesRegex", "framework.extension_type.pack", "extension_type.ExtensionType.__init__", "framework.constant_op.constant"], "test_util.TensorFlowTestCase.assertRaisesRegex": [], "framework.constant_op.constant": [], "framework.extension_type_test.ExtensionTypeTest.testClassAndStaticMethod": ["framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "test_util.TensorFlowTestCase.assertEqual": [], "framework.extension_type_test.ExtensionTypeTest.testRepr": ["framework.constant_op.constant", "<builtin>.repr", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertEqual"], "framework.extension_type_test.ExtensionTypeTest.testEagerRepr": ["<builtin>.repr", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertEqual", "extension_type.ExtensionType.__init__", "eager.context.executing_eagerly"], "eager.context.executing_eagerly": [], "framework.extension_type_test.ExtensionTypeTest.testConstructorSignature": ["util.tf_inspect.Signature", "util.tf_inspect.Parameter", "util.tf_inspect.signature", "test_util.TensorFlowTestCase.assertEqual"], "util.tf_inspect.Parameter": [], "util.tf_inspect.Signature": [], "util.tf_inspect.signature": [], "framework.extension_type_test.ExtensionTypeTest.testConstructorSignatureWithKeywordOnlyArgs": ["util.tf_inspect.Signature", "util.tf_inspect.Parameter", "util.tf_inspect.signature", "test_util.TensorFlowTestCase.assertEqual"], "framework.extension_type_test.ExtensionTypeTest.testConstructorSignatureWithDefaultForTensorField": ["test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "util.tf_inspect.signature", "test_util.TensorFlowTestCase.assertIsInstance", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testEmptyType": ["<builtin>.repr", "extension_type.ExtensionType._tf_extension_type_fields", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEmpty", "extension_type.ExtensionType.__init__"], "extension_type.ExtensionType._tf_extension_type_fields": [], "test_util.TensorFlowTestCase.assertEmpty": [], "framework.extension_type_test.ExtensionTypeTest.testCustomConstrutor": ["extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.ExtensionTypeTest.testCustomConstrutor.SummarizedTensor.__init__": ["ops.math_ops.reduce_max", "ops.math_ops.reduce_mean", "framework.ops.convert_to_tensor"], "ops.math_ops.reduce_mean": [], "ops.math_ops.reduce_max": [], "framework.extension_type_test.ExtensionTypeTest.testConstructorWithDefaultValues": ["test_util.TensorFlowTestCase.assertIsNone", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual"], "test_util.TensorFlowTestCase.assertIsNone": [], "framework.extension_type_test.ExtensionTypeTest.testCustomConstrutorCantMutateNestedValues": ["test_util.TensorFlowTestCase.assertRaisesRegex", "extension_type.ExtensionType.__init__", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testCustomConstrutorCantMutateNestedValues.Bar.__init__": [], "framework.extension_type_test.ExtensionTypeTest.testCustomValidate": ["extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertRaises"], "framework.extension_type_test.ExtensionTypeTest.testCustomValidate.AlignedTensors.__validate__": ["x.shape.assert_is_compatible_with"], "x.shape.assert_is_compatible_with": [], "test_util.TensorFlowTestCase.assertRaises": [], "framework.extension_type_test.ExtensionTypeTest.testEquals": ["x.shape.assert_is_compatible_with", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.replace_tensors_with_placeholders": ["util.nest.map_structure"], "framework.extension_type_test.ExtensionTypeTest.testPassIntoTfFunction": ["framework.extension_type.pack", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.ExtensionTypeTest.testPassIntoTfFunction.fn": ["test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.ExtensionTypeTest.testReturnFromTfFunction": ["framework.extension_type.is_packed", "test_util.TensorFlowTestCase.assertTrue", "test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertIsInstance", "test_util.TensorFlowTestCase.assertIsInstance", "test_util.TensorFlowTestCase.assertIsInstance", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testReturnFromTfFunction.mask_neg_values": ["extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testReturnFromTfFunction.mask_neg_values_packed": ["framework.extension_type.pack", "extension_type.ExtensionType.__init__"], "framework.extension_type.is_packed": [], "test_util.TensorFlowTestCase.assertTrue": [], "framework.extension_type_test.ExtensionTypeTest.testCaptureByTfFunction": ["extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertIsInstance", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.ExtensionTypeTest.testCaptureByTfFunction.add_to_x": ["extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testTfFunctionArgMutationError": ["test_util.TensorFlowTestCase.assertRaisesRegex", "extension_type.ExtensionType.__init__", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testTfFunctionArgMutationError.fn_with_side_effect": ["extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testNestPackUnpack": ["util.nest.flatten", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllClose", "util.nest.pack_sequence_as", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertLen"], "util.nest.flatten": [], "util.nest.pack_sequence_as": [], "test_util.TensorFlowTestCase.assertLen": [], "test_util.TensorFlowTestCase.assertAllClose": [], "framework.extension_type_test.ExtensionTypeTest.testSimpleCond": ["framework.constant_op.constant", "extension_type.ExtensionType.__init__", "ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.ExtensionTypeTest.testSimpleCond.<lambda1>": [], "framework.extension_type_test.ExtensionTypeTest.testSimpleCond.<lambda2>": [], "ops.control_flow_ops.cond": [], "framework.extension_type_test.ExtensionTypeTest.testSimpleCond.<lambda3>": [], "framework.extension_type_test.ExtensionTypeTest.testSimpleCond.<lambda4>": [], "framework.extension_type_test.ExtensionTypeTest.testComplexCond": ["framework.constant_op.constant", "extension_type.ExtensionType.__init__", "ops.control_flow_ops.cond", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.ExtensionTypeTest.testComplexCond.true_fn": ["ops.array_ops.where_v2", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testComplexCond.false_fn": ["ops.array_ops.where_v2", "extension_type.ExtensionType.__init__", "ops.math_ops.logical_not"], "ops.math_ops.logical_not": [], "framework.extension_type_test.ExtensionTypeTest.testCondAutograph": ["extension_type.ExtensionType.__init__", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.ExtensionTypeTest.testCondAutograph.fn": ["ops.array_ops.where_v2", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testCondTypeMismatch": ["framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaisesRegex", "ops.control_flow_ops.cond"], "framework.extension_type_test.ExtensionTypeTest.testCondTypeMismatch.<lambda1>": ["extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testCondTypeMismatch.<lambda2>": ["extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testCondTypeMismatch.<lambda3>": ["extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testCondTypeMismatch.<lambda4>": ["framework.constant_op.constant"], "framework.extension_type_test.ExtensionTypeTest.testCondPacked": ["test_util.TensorFlowTestCase.assertAllEqual", "framework.constant_op.constant", "framework.extension_type.pack", "ops.control_flow_ops.cond", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testCondPacked.<lambda1>": [], "framework.extension_type_test.ExtensionTypeTest.testCondPacked.<lambda2>": [], "framework.extension_type_test.ExtensionTypeTest.testCondPacked.<lambda3>": [], "framework.extension_type_test.ExtensionTypeTest.testCondPacked.<lambda4>": [], "framework.extension_type_test.ExtensionTypeTest.testCondPacked.<lambda5>": ["ops.array_ops.size"], "ops.array_ops.size": [], "framework.extension_type_test.ExtensionTypeTest.testCondPacked.<lambda6>": ["ops.array_ops.size"], "framework.extension_type_test.ExtensionTypeTest.testCondPacked.<lambda7>": ["ops.array_ops.size"], "framework.extension_type_test.ExtensionTypeTest.testCondPacked.<lambda8>": ["ops.array_ops.size"], "framework.extension_type_test.ExtensionTypeTest.testWhileLoop": ["ops.control_flow_ops.while_loop_v2", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertIsInstance", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.ExtensionTypeTest.testWhileLoop.<lambda1>": [], "framework.extension_type_test.ExtensionTypeTest.testWhileLoop.<lambda2>": ["extension_type.ExtensionType.__init__"], "ops.control_flow_ops.while_loop_v2": [], "framework.extension_type_test.ExtensionTypeTest.testWhileLoopAutograph": ["test_util.TensorFlowTestCase.assertIsInstance", "extension_type.ExtensionType.__init__", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.ExtensionTypeTest.testWhileLoopAutograph.fn": ["ops.math_ops.range", "extension_type.ExtensionType.__init__"], "ops.math_ops.range": [], "framework.extension_type_test.ExtensionTypeTest.testWhileLoopTypeMismatch": ["ops.control_flow_ops.while_loop_v2", "test_util.TensorFlowTestCase.assertRaisesRegex", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testWhileLoopTypeMismatch.<lambda1>": [], "framework.extension_type_test.ExtensionTypeTest.testWhileLoopTypeMismatch.body": ["<builtin>.isinstance", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testWhileLoopPacked": ["test_util.TensorFlowTestCase.assertAllEqual", "ops.control_flow_ops.while_loop_v2", "framework.extension_type.pack", "test_util.TensorFlowTestCase.assertIsInstance", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testWhileLoopPacked.<lambda1>": [], "framework.extension_type_test.ExtensionTypeTest.testWhileLoopPacked.body": ["framework.extension_type.pack", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.ExtensionTypeTest.testNestedFields": ["<builtin>.repr", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertIsInstance", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.set", "ragged.ragged_factory_ops.constant", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertRegex"], "ragged.ragged_factory_ops.constant": [], "<builtin>.set": [], "test_util.TensorFlowTestCase.assertRegex": [], "framework.extension_type_test.ExtensionTypeTest.testNestedExtensionTypes": ["test_util.TensorFlowTestCase.assertRegex", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllClose"], "framework.extension_type_test.ExtensionTypeTest.testNestedExtensionTypes.fn": ["ops.math_ops.reduce_sum", "ops.array_ops.stack"], "ops.array_ops.stack": [], "ops.math_ops.reduce_sum": [], "framework.extension_type_test.ExtensionTypeTest.testNestedCustomConstructor": ["<builtin>.set", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertLen"], "framework.extension_type_test.ExtensionTypeTest.testNestedCustomConstructor.Toy.__init__": [], "framework.extension_type_test.ExtensionTypeTest.testNestedCustomConstructor.ToyBox.__init__": ["test_util.TensorFlowTestCase.assertLen"], "framework.extension_type_test.ExtensionTypeTest.testExtensionTypeWithMathOperators": ["extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type_test.ExtensionTypeTest.testExtensionTypeWithMathOperators.masked_add": ["<builtin>.isinstance", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.temporarily_add_dispatch": ["<builtin>.len", "util.dispatch.dispatch_for_types"], "framework.extension_type_test.ExtensionTypeTest.testGetExtensionTypeFields": ["test_util.TensorFlowTestCase.assertEqual", "extension_type.ExtensionType.__init__", "extension_type.ExtensionType._tf_extension_type_fields", "test_util.TensorFlowTestCase.assertLen"], "framework.extension_type_test.ExtensionTypeTest.testHasExtensionTypeField": ["extension_type.ExtensionType._tf_extension_type_has_field", "test_util.TensorFlowTestCase.assertTrue", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertFalse"], "extension_type.ExtensionType._tf_extension_type_has_field": [], "test_util.TensorFlowTestCase.assertFalse": [], "framework.extension_type_test.ExtensionTypeTest.testForwardReferences": ["extension_type.ExtensionType._tf_extension_type_fields", "test_util.TensorFlowTestCase.assertEqual", "util.tf_inspect.Parameter", "util.tf_inspect.signature", "framework.extension_type_field.ExtensionTypeField", "util.tf_inspect.Signature"], "framework.extension_type_field.ExtensionTypeField": [], "framework.extension_type_test.ExtensionTypeTest.testUnresolvedForwardReference": ["extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertRaises"], "framework.extension_type_test.ExtensionTypeTest.testUnsupportedAnnotations": ["test_util.TensorFlowTestCase.assertRaisesRegex"], "framework.extension_type_test.ExtensionTypeTest.testCantUseReservedName": ["test_util.TensorFlowTestCase.assertRaisesRegex"], "framework.extension_type_test.ExtensionTypeTest.testCantUseReservedName.MyType3.is_compatible_with": [], "framework.extension_type_test.ExtensionTypeTest.testExtensionTypeBaseClassHasNoSpec": ["test_util.TensorFlowTestCase.assertFalse", "<builtin>.hasattr"], "framework.extension_type_test.ExtensionTypeTest.testExtensionTypeBaseConstructorRaisesException": ["test_util.TensorFlowTestCase.assertRaisesRegex", "framework.extension_type.ExtensionType"], "framework.extension_type.ExtensionType": [], "framework.extension_type_test.ExtensionTypeTest.testSavedModelSupport": ["test_util.TensorFlowTestCase.assertAllEqual", "saved_model.save.save", "tempfile.mkdtemp", "platform.test.get_temp_dir", "saved_model.load.load", "extension_type.ExtensionType.__init__", "module.Module.__init__"], "framework.extension_type_test.ExtensionTypeTest.testSavedModelSupport.TestModule.f": [], "module.Module.__init__": [], "platform.test.get_temp_dir": [], "tempfile.mkdtemp": [], "saved_model.save.save": [], "saved_model.load.load": [], "framework.extension_type_test.ExtensionTypeTest.testPackedEncoding": ["test_util.TensorFlowTestCase.assertRaisesRegex", "util.nest.assert_same_structure", "util.nest.flatten", "test_util.TensorFlowTestCase.assertAllEqual", "framework.extension_type.pack", "framework.extension_type.unpack", "test_util.TensorFlowTestCase.assertIsInstance", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertLen"], "framework.extension_type.unpack": [], "util.nest.assert_same_structure": [], "framework.extension_type_test.ExtensionTypeTest.testSubclassing": ["test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.list", "util.tf_inspect.signature", "util.tf_inspect.Parameter", "extension_type.ExtensionType.__init__"], "<builtin>.list": [], "framework.extension_type_test.ExtensionTypeIntegrationTest": ["framework.test_util.run_v2_only"], "framework.test_util.run_v2_only": [], "framework.extension_type_test.ExtensionTypeIntegrationTest.testDataset": ["framework.test_util.run_v2_only", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.iter", "dataset_ops.DatasetV2.from_tensors", "<builtin>.next"], "dataset_ops.DatasetV2.from_tensors": [], "<builtin>.iter": [], "<builtin>.next": [], "framework.extension_type_test.ExtensionTypeIntegrationTest.testDatasetBatch": ["dataset_ops.DatasetV2.from_tensors", "dataset_ops.DatasetV2.from_tensor_slices", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.iter", "dataset_ops.DatasetV2.from_tensors", "<builtin>.next"], "dataset_ops.DatasetV2.from_tensor_slices": [], "framework.extension_type_test.ExtensionTypeIntegrationTest.testDatasetBatchRagged": ["dataset_ops.DatasetV2.from_tensors", "dataset_ops.DatasetV2.from_tensor_slices", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.iter", "dataset_ops.DatasetV2.from_tensors", "ragged.ragged_factory_ops.constant", "<builtin>.next"], "framework.extension_type_test.ExtensionTypeIntegrationTest.testKerasModel": ["test_util.TensorFlowTestCase.assertRaisesRegex", "ops.array_ops.identity", "saving.save.load_model", "test_util.TensorFlowTestCase.subTest", "test_util.TensorFlowTestCase.subTest", "engine.training.Model", "test_util.TensorFlowTestCase.assertEqual", "engine.input_layer.Input", "saved_model.load.load", "dataset_ops.DatasetV2.from_tensors", "framework.tensor_spec.TensorSpec", "test_util.TensorFlowTestCase.create_tempdir"], "framework.tensor_spec.TensorSpec": [], "engine.input_layer.Input": [], "ops.array_ops.identity": [], "engine.training.Model": [], "test_util.TensorFlowTestCase.subTest": [], "test_util.TensorFlowTestCase.create_tempdir": [], "saving.save.load_model": [], "framework.extension_type_test.ExtensionTypeSpecTest.testSpecConstructor": ["extension_type.ExtensionType.Spec", "framework.tensor_spec.TensorSpec", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertEqual"], "extension_type.ExtensionType.Spec": [], "framework.extension_type_test.ExtensionTypeSpecTest.testSpecConstructorSignature": ["util.tf_inspect.Signature", "util.tf_inspect.Parameter", "util.tf_inspect.signature", "test_util.TensorFlowTestCase.assertEqual"], "framework.extension_type_test.ExtensionTypeSpecTest.testSpecAttributesAreImmutable": ["framework.constant_op.constant", "test_util.TensorFlowTestCase.assertRaisesRegex", "extension_type.ExtensionType.__init__", "ExtensionType.Spec.from_value"], "ExtensionType.Spec.from_value": [], "framework.extension_type_test.ExtensionTypeSpecTest.testSpecFromValue": ["framework.tensor_spec.TensorSpec", "extension_type.ExtensionType.__init__", "ExtensionType.Spec.from_value", "test_util.TensorFlowTestCase.assertEqual"], "framework.extension_type_test.ExtensionTypeSpecTest.testSpecSerialize": ["ExtensionType.Spec._deserialize", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertIsInstance", "extension_type.ExtensionType.Spec", "framework.tensor_spec.TensorSpec"], "ExtensionType.Spec._deserialize": [], "framework.extension_type_test.ExtensionTypeSpecTest.testSpecComponents": ["test_util.TensorFlowTestCase.assertAllEqual", "ExtensionType.Spec.from_value", "test_util.TensorFlowTestCase.assertLen", "test_util.TensorFlowTestCase.assertEqual", "extension_type.ExtensionType.__init__", "framework.tensor_spec.TensorSpec", "test_util.TensorFlowTestCase.assertAllClose"], "framework.extension_type_test.ExtensionTypeSpecTest.testCopyAndPickle": ["copy.copy", "test_util.TensorFlowTestCase.assertEqual", "pickle.dumps", "extension_type.ExtensionType.Spec", "framework.tensor_spec.TensorSpec", "copy.deepcopy", "pickle.loads"], "copy.copy": [], "copy.deepcopy": [], "pickle.dumps": [], "pickle.loads": [], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest": ["framework.tensor_spec.TensorSpec", "extension_type.ExtensionType.__init__", "framework.tensor_shape.TensorShape", "test_util.TensorFlowTestCase.assertEqual"], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.<lambda1>": [], "<builtin>.property": [], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor": ["<builtin>.property"], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.<lambda2>": [], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.<lambda3>": [], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.__validate__": ["weight.shape.assert_has_rank"], "weight.shape.assert_has_rank": [], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.Spec.__init__": ["framework.tensor_spec.TensorSpec"], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.Spec.__validate__": [], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.Spec.<lambda1>": [], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.Spec": ["<builtin>.property"], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.Spec.<lambda2>": [], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.Spec.<lambda3>": [], "framework.extension_type_test.ExtensionTypeSpecTest.testCustomizeSpecTest.WeightedTensor.Spec.with_shape": ["framework.tensor_spec.TensorSpec"], "framework.tensor_shape.TensorShape": [], "framework.extension_type_test.ExtensionTypeSpecTest.testNestedSpecMustBeAClass": ["test_util.TensorFlowTestCase.assertRaisesRegex"], "framework.extension_type_test.ExtensionTypeSpecTest.testNestedSpecMayNotHaveBaseClasses": ["test_util.TensorFlowTestCase.assertRaisesRegex"], "absl.testing.parameterized.parameters": [], "framework.extension_type_test.AnonymousExtensionTypeTest": ["absl.testing.parameterized.parameters"], "framework.extension_type_test.AnonymousExtensionTypeTest.testConstruction": ["<builtin>.callable", "framework.extension_type.AnonymousExtensionType"], "<builtin>.callable": [], "framework.extension_type.AnonymousExtensionType": [], "framework.extension_type_test.AnonymousExtensionTypeTest.testConstructionErrors": ["test_util.TensorFlowTestCase.assertRaisesRegex", "framework.extension_type.AnonymousExtensionType"], "framework.extension_type_test.AnonymousExtensionTypeTest.testAttributeAccessors": ["<builtin>.callable", "framework.extension_type.AnonymousExtensionType", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertEqual", "<builtin>.getattr", "<builtin>.isinstance"], "<builtin>.getattr": [], "framework.extension_type_test.AnonymousExtensionTypeTest.testAttributeAccessorsAreImmutable": ["test_util.TensorFlowTestCase.assertRaisesRegex", "framework.extension_type.AnonymousExtensionType"], "framework.extension_type_test.AnonymousExtensionTypeTest.testReinterpret": ["framework.extension_type.reinterpret", "extension_type.ExtensionType.__init__", "test_util.TensorFlowTestCase.assertAllEqual"], "framework.extension_type.reinterpret": [], "framework.extension_type_test.AnonymousExtensionTypeTest.testReinterpretErrors": ["framework.extension_type.reinterpret", "test_util.TensorFlowTestCase.assertRaisesRegex", "<builtin>.callable"], "framework.extension_type_test.AnonymousExtensionTypeTest.testLoadSavedModelWithUnregisteredExtensionType": ["framework.extension_type.reinterpret", "eager.def_function.function", "test_util.TensorFlowTestCase.assertAllEqual", "test_util.TensorFlowTestCase.assertRaises", "framework.constant_op.constant", "saved_model.save.save", "framework.type_spec.lookup", "tempfile.mkdtemp", "platform.test.get_temp_dir", "saved_model.load.load", "saved_model.load.load", "module.module.Module", "test_util.TensorFlowTestCase.assertIsInstance", "extension_type.ExtensionType.Spec", "framework.tensor_spec.TensorSpec", "extension_type.ExtensionType.__init__"], "framework.extension_type_test.AnonymousExtensionTypeTest.testLoadSavedModelWithUnregisteredExtensionType.f": ["<builtin>.isinstance", "extension_type.ExtensionType.__init__"], "module.module.Module": [], "eager.def_function.function": [], "framework.extension_type_test.temporarily_register_type_spec": ["type_spec._NAME_TO_TYPE_SPEC.pop", "framework.type_spec.register", "type_spec._TYPE_SPEC_TO_NAME.pop"], "framework.type_spec.lookup": [], "framework.extension_type_test.replace_tensors_with_placeholders.repl": ["<builtin>.isinstance", "ops.array_ops.placeholder_with_default"], "ops.array_ops.placeholder_with_default": [], "util.nest.map_structure": [], "contextlib.contextmanager": [], "util.dispatch.dispatch_for_types": [], "framework.type_spec.register": [], "type_spec._TYPE_SPEC_TO_NAME.pop": [], "type_spec._NAME_TO_TYPE_SPEC.pop": [], "platform.googletest.main": []}