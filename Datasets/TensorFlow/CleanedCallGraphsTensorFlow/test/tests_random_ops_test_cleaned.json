{"tests.random_ops_test": ["platform.googletest.main"], "tests.random_ops_test.RandomOpsTest._random_types": ["<builtin>.set"], "<builtin>.set": [], "tests.random_ops_test.RandomOpsTest._testRngIsNotConstant": ["tests.random_ops_test.RandomOpsTest.testRandomUniformIsNotConstant.rng", "xla_test.XLATestCase.session", "xla_test.XLATestCase.assertTrue", "numpy.array_equal", "tests.random_ops_test.RandomOpsTest.testRandomNormalIsNotConstant.rng", "tests.random_ops_test.RandomOpsTest.testTruncatedNormalIsNotConstant.rng", "xla_test.XLATestCase.evaluate", "xla_test.XLATestCase.test_scope"], "xla_test.XLATestCase.session": [], "xla_test.XLATestCase.test_scope": [], "tests.random_ops_test.RandomOpsTest.testRandomUniformIsNotConstant.rng": ["ops.random_ops.random_uniform", "framework.dtypes.as_dtype"], "tests.random_ops_test.RandomOpsTest.testRandomNormalIsNotConstant.rng": ["ops.random_ops.random_normal"], "tests.random_ops_test.RandomOpsTest.testTruncatedNormalIsNotConstant.rng": ["ops.random_ops.truncated_normal"], "xla_test.XLATestCase.evaluate": [], "numpy.array_equal": [], "xla_test.XLATestCase.assertTrue": [], "tests.random_ops_test.RandomOpsTest.testRandomUniformIsNotConstant": ["tests.random_ops_test.RandomOpsTest._testRngIsNotConstant", "tests.random_ops_test.RandomOpsTest._random_types"], "framework.dtypes.as_dtype": [], "ops.random_ops.random_uniform": [], "tests.random_ops_test.RandomOpsTest.testRandomNormalIsNotConstant": ["tests.random_ops_test.RandomOpsTest._testRngIsNotConstant", "tests.random_ops_test.RandomOpsTest._random_types"], "ops.random_ops.random_normal": [], "absl.testing.parameterized.parameters": [], "tests.random_ops_test.RandomOpsTest": ["absl.testing.parameterized.parameters"], "tests.random_ops_test.RandomOpsTest.testRandomNormal": ["xla_test.XLATestCase.session", "tests.random_ops_test.RandomOpsTest._random_types", "ops.random_ops.random_normal", "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange", "xla_test.XLATestCase.test_scope"], "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange": ["numpy.median", "xla_test.XLATestCase.assertAllClose", "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange.probit", "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange.normal_cdf", "numpy.mean", "xla_test.XLATestCase.evaluate", "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange.normal_pdf", "numpy.var", "xla_test.XLATestCase.assertEqual"], "tests.random_ops_test.RandomOpsTest.testRandomUniformIsInRange": ["xla_test.XLATestCase.session", "tests.random_ops_test.RandomOpsTest._random_types", "xla_test.XLATestCase.evaluate", "xla_test.XLATestCase.assertEqual", "<builtin>.str", "ops.random_ops.random_uniform", "xla_test.XLATestCase.test_scope"], "<builtin>.str": [], "xla_test.XLATestCase.assertEqual": [], "tests.random_ops_test.RandomOpsTest.testTruncatedNormalIsNotConstant": ["tests.random_ops_test.RandomOpsTest._testRngIsNotConstant", "tests.random_ops_test.RandomOpsTest._random_types"], "ops.random_ops.truncated_normal": [], "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange.normal_cdf": ["math.sqrt", "math.erfc"], "math.sqrt": [], "math.erfc": [], "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange.normal_pdf": ["math.sqrt", "math.exp"], "math.exp": [], "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange.probit": ["distributions.special_math.ndtri", "xla_test.XLATestCase.evaluate"], "distributions.special_math.ndtri": [], "numpy.mean": [], "xla_test.XLATestCase.assertAllClose": [], "numpy.median": [], "numpy.var": [], "tests.random_ops_test.RandomOpsTest.testTruncatedNormalIsInRange": ["ops.random_ops.truncated_normal", "xla_test.XLATestCase.session", "tests.random_ops_test.RandomOpsTest._random_types", "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange", "xla_test.XLATestCase.test_scope"], "tests.random_ops_test.RandomOpsTest._implParameterizedTruncatedNormalIsInRange": ["xla_test.XLATestCase.session", "tests.random_ops_test.RandomOpsTest._random_types", "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange", "ops.random_ops.parameterized_truncated_normal", "xla_test.XLATestCase.test_scope"], "ops.random_ops.parameterized_truncated_normal": [], "tests.random_ops_test.RandomOpsTest.testParameterizedTruncatedNormalBroadcasting": ["xla_test.XLATestCase.session", "tests.random_ops_test.RandomOpsTest._random_types", "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange", "ops.random_ops.parameterized_truncated_normal", "xla_test.XLATestCase.test_scope"], "tests.random_ops_test.RandomOpsTest.testParameterizedTruncatedNormalBatched": ["xla_test.XLATestCase.session", "tests.random_ops_test.RandomOpsTest._random_types", "tests.random_ops_test.RandomOpsTest._checkTruncatedNormalIsInRange", "ops.random_ops.parameterized_truncated_normal", "xla_test.XLATestCase.test_scope"], "tests.random_ops_test.RandomOpsTest.testParameterizedTruncatedNormalIsInRangeCenter": ["tests.random_ops_test.RandomOpsTest._implParameterizedTruncatedNormalIsInRange"], "tests.random_ops_test.RandomOpsTest.testParameterizedTruncatedNormalIsInRangeLeft": ["tests.random_ops_test.RandomOpsTest._implParameterizedTruncatedNormalIsInRange"], "tests.random_ops_test.RandomOpsTest.testParameterizedTruncatedNormalIsInRangeRight": ["tests.random_ops_test.RandomOpsTest._implParameterizedTruncatedNormalIsInRange"], "tests.random_ops_test.RandomOpsTest.testShuffle1d": ["xla_test.XLATestCase.session", "ops.random_ops.random_shuffle", "<builtin>.range", "xla_test.XLATestCase.evaluate", "<builtin>.set", "ops.math_ops.range", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.test_scope"], "ops.math_ops.range": [], "ops.random_ops.random_shuffle": [], "<builtin>.range": [], "xla_test.XLATestCase.assertAllEqual": [], "tests.random_ops_test.RandomOpsTest.testShuffle2d": ["xla_test.XLATestCase.session", "ops.random_ops.random_shuffle", "<builtin>.range", "xla_test.XLATestCase.evaluate", "numpy.diag", "<builtin>.set", "ops.array_ops.diag", "<builtin>.len", "ops.math_ops.range", "xla_test.XLATestCase.assertAllEqual", "xla_test.XLATestCase.test_scope"], "ops.array_ops.diag": [], "numpy.diag": [], "<builtin>.len": [], "platform.googletest.main": []}