{"lib.check_numerics_callback_test": ["framework.ops.enable_eager_execution", "platform.googletest.main"], "lib.check_numerics_callback_test.LimitStringLengthTest.testLimitStringLengthWithExplicitLimit": ["lib.check_numerics_callback.limit_string_length", "test_util.TensorFlowTestCase.assertEqual"], "lib.check_numerics_callback.limit_string_length": [], "test_util.TensorFlowTestCase.assertEqual": [], "lib.check_numerics_callback_test.LimitStringLengthTest.testLimitStringLengthWithNoLimit": ["lib.check_numerics_callback.limit_string_length", "test_util.TensorFlowTestCase.assertEqual"], "lib.check_numerics_callback_test.LimitStringLengthTest.testLimitStringLengthWithDefaultLimit": ["lib.check_numerics_callback.limit_string_length", "test_util.TensorFlowTestCase.assertEqual"], "lib.check_numerics_callback_test.CheckNumericsCallbackTest.tearDown": ["<builtin>.super", "lib.check_numerics_callback.disable_check_numerics"], "lib.check_numerics_callback.disable_check_numerics": [], "<builtin>.super": [], "lib.check_numerics_callback_test.CheckNumericsCallbackTest.testCallingDisableCheckNumericsWithoutEnablingFirstIsTolerated": ["lib.check_numerics_callback.disable_check_numerics"], "lib.check_numerics_callback_test.CheckNumericsCallbackTest.testNoCatchEagerOpExecution": ["framework.constant_op.constant", "lib.check_numerics_callback.enable_check_numerics", "test_util.TensorFlowTestCase.assertAllClose"], "lib.check_numerics_callback.enable_check_numerics": [], "framework.constant_op.constant": [], "test_util.TensorFlowTestCase.assertAllClose": [], "lib.check_numerics_callback_test.CheckNumericsCallbackTest": ["framework.test_util.run_in_graph_and_eager_modes"], "framework.test_util.run_in_graph_and_eager_modes": [], "lib.check_numerics_callback_test.CheckNumericsCallbackTest.testDatasetMapHealthyResults": ["dataset_ops.Dataset.from_tensor_slices", "test_util.TensorFlowTestCase.assertLen", "lib.check_numerics_callback.enable_check_numerics", "test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.evaluate", "numpy.log", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllClose"], "lib.check_numerics_callback_test.CheckNumericsCallbackTest.testDatasetMapHealthyResults.map_fn": ["ops.math_ops.square", "ops.math_ops.log"], "ops.math_ops.square": [], "ops.math_ops.log": [], "dataset_ops.Dataset.from_tensor_slices": [], "lib.check_numerics_callback_test.CheckNumericsCallbackTest.testDatasetMapHealthyResults.get_batches": ["<builtin>.next", "<builtin>.iter"], "<builtin>.iter": [], "<builtin>.next": [], "test_util.TensorFlowTestCase.evaluate": [], "test_util.TensorFlowTestCase.assertLen": [], "numpy.log": [], "lib.check_numerics_callback_test.CheckNumericsCallbackTest.testGraphModeUsesCorrectPathLengthAndStackHeightLimits": ["test_util.TensorFlowTestCase.assertEqual", "mock.patch.object", "framework.constant_op.constant", "lib.check_numerics_callback.enable_check_numerics", "lib.check_numerics_callback.enable_check_numerics", "test_util.TensorFlowTestCase.evaluate", "test.mock.MagicMock", "test_util.TensorFlowTestCase.assertAllClose"], "lib.check_numerics_callback_test.CheckNumericsCallbackTest.testGraphModeUsesCorrectPathLengthAndStackHeightLimits.add_fn": [], "test.mock.MagicMock": [], "mock.patch.object": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.tearDown": ["<builtin>.super", "lib.check_numerics_callback.disable_check_numerics"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest._assertRaisesInvalidArgumentErrorAndGetMessage": ["test_util.TensorFlowTestCase.assertTrue"], "test_util.TensorFlowTestCase.assertTrue": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchEagerOpFloat32Inf": ["test_util.TensorFlowTestCase.assertIn", "lib.check_numerics_callback.enable_check_numerics", "lib.check_numerics_callback.enable_check_numerics", "re.search", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertTrue"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchEagerOpFloat32Inf.<lambda1>": [], "re.search": [], "test_util.TensorFlowTestCase.assertIn": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testEnableCheckNumericsIsIdempotent": ["test_util.TensorFlowTestCase.assertIn", "lib.check_numerics_callback.enable_check_numerics", "lib.check_numerics_callback.enable_check_numerics", "re.search", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertTrue"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testEnableCheckNumericsIsIdempotent.<lambda1>": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchEagerOpFloat16NaN": ["test_util.TensorFlowTestCase.assertIn", "lib.check_numerics_callback.enable_check_numerics", "lib.check_numerics_callback.enable_check_numerics", "re.search", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertTrue"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchEagerOpFloat16NaN.log1p": ["ops.math_ops.log"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchEagerOpFloat16NaN.<lambda1>": ["ops.math_ops.log"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest": ["framework.test_util.enable_eager_op_as_function", "framework.test_util.disable_tfrt", "framework.test_util.run_in_graph_and_eager_modes", "framework.test_util.disable_xla"], "framework.test_util.enable_eager_op_as_function": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchEagerOpFloat16NaNWithEagerOpAsFunctionEnabled": ["framework.test_util.disable_xla"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchFunctionOpInfFloat64": ["test_util.TensorFlowTestCase.assertIn", "lib.check_numerics_callback.enable_check_numerics", "lib.check_numerics_callback.enable_check_numerics", "re.search", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertTrue"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchFunctionOpInfFloat64.divide_sum_with_diff": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchFunctionOpInfFloat64.<lambda1>": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.evaluate"], "framework.test_util.disable_xla": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testControlFlowGraphWithNaNBFloat16": ["test_util.TensorFlowTestCase.assertIn", "lib.check_numerics_callback.enable_check_numerics", "lib.check_numerics_callback.enable_check_numerics", "re.search", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertTrue"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testControlFlowGraphWithNaNBFloat16.my_conditional": ["ops.math_ops.less", "ops.math_ops.reduce_sum", "ops.math_ops.log"], "ops.math_ops.reduce_sum": [], "ops.math_ops.less": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testControlFlowGraphWithNaNBFloat16.<lambda1>": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.evaluate"], "framework.test_util.disable_tfrt": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testOverflowInTfFunction": ["test_util.TensorFlowTestCase.assertIn", "test_util.TensorFlowTestCase.assertTrue", "lib.check_numerics_callback.enable_check_numerics", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "test_util.TensorFlowTestCase.evaluate", "re.search", "ops.variables.Variable", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertAllClose"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testOverflowInTfFunction.accumulation_function": ["ops.math_ops.less"], "ops.variables.Variable": [], "eager.context.executing_eagerly": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testOverflowInTfFunction.<lambda1>": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.evaluate"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testNanInConstIsCaptured": ["eager.context.executing_eagerly", "lib.check_numerics_callback.enable_check_numerics", "lib.check_numerics_callback.enable_check_numerics", "test_util.TensorFlowTestCase.evaluate", "re.search", "ops.variables.Variable", "test_util.TensorFlowTestCase.assertTrue"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testNanInConstIsCaptured.add_a_bad_constant": ["framework.constant_op.constant"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testNanInConstIsCaptured.<lambda1>": ["test_util.TensorFlowTestCase.evaluate", "test_util.TensorFlowTestCase.evaluate"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchInfinityInDatasetMapFunction": ["test_util.TensorFlowTestCase.assertIn", "test_util.TensorFlowTestCase.assertTrue", "lib.check_numerics_callback.enable_check_numerics", "lib.check_numerics_callback.enable_check_numerics", "re.search", "ops.dataset_ops.make_one_shot_iterator", "dataset_ops.Dataset.range"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchInfinityInDatasetMapFunction.generate_nan": ["ops.math_ops.cast", "ops.math_ops.log"], "ops.math_ops.cast": [], "dataset_ops.Dataset.range": [], "ops.dataset_ops.make_one_shot_iterator": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCatchInfinityInDatasetMapFunction.<lambda1>": ["test_util.TensorFlowTestCase.evaluate"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCustomGradientWithNaNWithTfFunction": ["test_util.TensorFlowTestCase.assertIn", "lib.check_numerics_callback.enable_check_numerics", "eager.context.executing_eagerly", "eager.context.executing_eagerly", "re.search", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertTrue"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCustomGradientWithNaNWithTfFunction.func_with_bad_grad": ["ops.math_ops.sin"], "ops.math_ops.sin": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCustomGradientWithNaNWithTfFunction.func_with_bad_grad.grad": ["ops.math_ops.log"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCustomGradientWithNaNWithTfFunction.f": ["ops.math_ops.log"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testCustomGradientWithNaNWithTfFunction.<lambda1>": ["ops.gradient_checker_v2.compute_gradient"], "ops.gradient_checker_v2.compute_gradient": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testNestedFunctionGradientCall": ["lib.check_numerics_callback.enable_check_numerics", "eager.backprop.GradientTape", "eager.backprop.GradientTape", "re.search", "framework.constant_op.constant", "framework.constant_op.constant", "test_util.TensorFlowTestCase.assertTrue"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testNestedFunctionGradientCall.asinp1": ["ops.math_ops.asin"], "ops.math_ops.asin": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testNestedFunctionGradientCall.loss": ["ops.math_ops.square", "ops.math_ops.square"], "eager.backprop.GradientTape": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testNestedFunctionGradientCall.<lambda1>": ["test_util.TensorFlowTestCase.evaluate"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testEagerModeUsesCorrectPathLengthAndStackHeightLimits": ["test_util.TensorFlowTestCase.assertEqual", "mock.patch.object", "framework.constant_op.constant", "lib.check_numerics_callback.enable_check_numerics", "lib.check_numerics_callback.enable_check_numerics", "test.mock.MagicMock"], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testEagerModeUsesCorrectPathLengthAndStackHeightLimits.<lambda1>": [], "lib.check_numerics_callback_test.CheckNumericsCallbackUnhealthyTest.testExpectedNaNOpOutputs": ["lib.check_numerics_callback.enable_check_numerics", "ops.gen_nn_ops._fused_batch_norm", "test_util.TensorFlowTestCase.evaluate", "framework.constant_op.constant", "numpy.isnan", "test_util.TensorFlowTestCase.assertTrue"], "ops.gen_nn_ops._fused_batch_norm": [], "numpy.isnan": [], "framework.ops.enable_eager_execution": [], "platform.googletest.main": []}