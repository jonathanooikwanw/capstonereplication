{"mixed_precision.autocast_variable_test": ["platform.test.main", "framework.test_combinations.combine"], "framework.test_combinations.combine": [], "mixed_precision.autocast_variable_test.get_var": ["ops.variables.VariableV1"], "ops.variables.VariableV1": [], "mixed_precision.autocast_variable_test.set_cpu_logical_devices_to_at_least": ["framework.config.set_logical_device_configuration", "framework.config.list_physical_devices", "eager.context.LogicalDeviceConfiguration", "<builtin>.RuntimeError", "<builtin>.len", "<builtin>.range"], "framework.config.list_physical_devices": [], "<builtin>.RuntimeError": [], "<builtin>.len": [], "<builtin>.range": [], "eager.context.LogicalDeviceConfiguration": [], "framework.config.set_logical_device_configuration": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.setUp": ["<builtin>.super", "eager.context.LogicalDeviceConfiguration"], "<builtin>.super": [], "distribute.combinations.generate": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest": ["distribute.combinations.generate", "framework.test_combinations.combine"], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_read": ["ops.array_ops.identity", "mixed_precision.autocast_variable.enable_auto_cast_variables", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.assertEqual"], "mixed_precision.autocast_variable.create_autocast_variable": [], "test.TestCase.evaluate": [], "test.TestCase.assertEqual": [], "ops.array_ops.identity": [], "mixed_precision.autocast_variable.enable_auto_cast_variables": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_sparse_reads": ["mixed_precision.autocast_variable.enable_auto_cast_variables", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.assertEqual"], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_read_nested_scopes": ["mixed_precision.autocast_variable.enable_auto_cast_variables", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.assertEqual"], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_dtype_is_not_string": ["mixed_precision.autocast_variable.enable_auto_cast_variables", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.assertIsInstance", "test.TestCase.assertIsInstance", "test.TestCase.assertEqual"], "test.TestCase.assertIsInstance": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_method_delegations": ["eager.context.executing_eagerly", "test.TestCase.assertAllEqual", "test.TestCase.assertIsNone", "mixed_precision.autocast_variable.enable_auto_cast_variables", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.assertTrue", "test.TestCase.test_session", "test.TestCase.test_session", "distribute.distribution_strategy_context.has_strategy", "test.TestCase.assertEqual"], "test.TestCase.test_session": [], "distribute.distribution_strategy_context.has_strategy": [], "eager.context.executing_eagerly": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_method_delegations.evaluate": ["test.TestCase.assertIsInstance", "test.TestCase.assertEqual", "ops.array_ops.identity", "test.TestCase.evaluate"], "test.TestCase.assertTrue": [], "test.TestCase.assertIsNone": [], "test.TestCase.assertAllEqual": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_method_delegations.slices": ["framework.constant_op.constant", "framework.indexed_slices.IndexedSlices"], "framework.constant_op.constant": [], "framework.indexed_slices.IndexedSlices": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_operator_overloads": ["eager.context.executing_eagerly", "<builtin>.abs", "python.tf2.enabled", "test.TestCase.assertAllEqual", "mixed_precision.autocast_variable.enable_auto_cast_variables", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.assertFalse", "test.TestCase.assertTrue", "test.TestCase.assertAlmostEqual", "test.TestCase.assertAlmostEqual", "test.TestCase.assertEqual", "<builtin>.pow"], "test.TestCase.assertAlmostEqual": [], "test.TestCase.assertFalse": [], "<builtin>.pow": [], "<builtin>.abs": [], "python.tf2.enabled": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_assign": ["test.TestCase.assertEqual", "mixed_precision.autocast_variable.enable_auto_cast_variables", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable", "framework.constant_op.constant"], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_assign.run_and_check": ["eager.context.executing_eagerly", "test.TestCase.assertAllClose", "ops.state_ops.assign_sub", "test.TestCase.assertIsNone", "ops.state_ops.assign", "test.TestCase.evaluate", "test.TestCase.assertRaisesRegex", "distribute.distribution_strategy_context.has_strategy", "ops.state_ops.assign_add"], "test.TestCase.assertAllClose": [], "test.TestCase.assertRaisesRegex": [], "ops.state_ops.assign": [], "ops.state_ops.assign_add": [], "ops.state_ops.assign_sub": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_assign_tf_function": ["eager.context.executing_eagerly", "test.TestCase.assertAllClose", "test.TestCase.skipTest", "mixed_precision.autocast_variable.enable_auto_cast_variables", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable"], "test.TestCase.skipTest": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_assign_tf_function.run_assign": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_op_attribute": ["mixed_precision.autocast_variable.create_autocast_variable", "eager.context.executing_eagerly", "test.TestCase.assertIsNone", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.assertRaises", "test.TestCase.assertRaises", "test.TestCase.assertIsNotNone"], "test.TestCase.assertRaises": [], "test.TestCase.assertIsNotNone": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_op_attribute.func": ["test.TestCase.assertIsNotNone"], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_tf_function_control_dependencies": ["eager.context.executing_eagerly", "test.TestCase.assertAllClose", "test.TestCase.skipTest", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable"], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_tf_function_control_dependencies.func": ["framework.ops.control_dependencies"], "framework.ops.control_dependencies": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_assign_stays_in_true_dtype": ["numpy.finfo", "mixed_precision.autocast_variable.enable_auto_cast_variables", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable", "framework.constant_op.constant", "test.TestCase.assertEqual"], "numpy.finfo": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_thread_local_autocast_dtype": ["ops.array_ops.identity", "threading.Thread", "mixed_precision.autocast_variable.enable_auto_cast_variables", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.assertEqual"], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_thread_local_autocast_dtype.f": [], "threading.Thread": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_checkpoint": ["tracking.util.Checkpoint", "test.TestCase.evaluate", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.get_temp_dir", "test.TestCase.test_session", "test.TestCase.test_session", "test.TestCase.assertEqual", "os.path.join"], "tracking.util.Checkpoint": [], "test.TestCase.get_temp_dir": [], "os.path.join": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_invalid_wrapped_variable": ["framework.constant_op.constant", "framework.constant_op.constant", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.assertRaisesRegex"], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_repr": ["<builtin>.repr", "eager.context.executing_eagerly", "test.TestCase.assertStartsWith", "mixed_precision.autocast_variable.enable_auto_cast_variables", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.assertEqual"], "<builtin>.repr": [], "test.TestCase.assertStartsWith": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_repr_distributed": ["<builtin>.repr", "test.TestCase.assertRegex", "<builtin>.getattr", "distribute.mirrored_strategy.MirroredStrategy", "mixed_precision.autocast_variable.create_autocast_variable", "mixed_precision.autocast_variable.create_autocast_variable"], "distribute.mirrored_strategy.MirroredStrategy": [], "<builtin>.getattr": [], "test.TestCase.assertRegex": [], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_optimizer": ["eager.context.executing_eagerly", "ops.variables.global_variables_initializer", "test.TestCase.assertNotEqual", "test.TestCase.skipTest", "test.TestCase.skipTest", "mixed_precision.autocast_variable.create_autocast_variable", "test.TestCase.evaluate", "test.TestCase.assertAlmostEqual", "test.TestCase.assertAlmostEqual", "test.TestCase.assertEqual", "eager.def_function.function"], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_optimizer.f": ["framework.ops.executing_eagerly_outside_functions"], "mixed_precision.autocast_variable_test.AutoCastVariableTest.test_optimizer.f.<lambda1>": [], "framework.ops.executing_eagerly_outside_functions": [], "eager.def_function.function": [], "ops.variables.global_variables_initializer": [], "test.TestCase.assertNotEqual": [], "platform.test.main": []}