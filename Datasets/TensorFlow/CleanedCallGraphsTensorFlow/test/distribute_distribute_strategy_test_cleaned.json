{"distribute.distribute_strategy_test": ["engine.base_layer_utils.enable_v2_dtype_behavior", "distribute.multi_process_runner.test_main"], "distribute.distribute_strategy_test.simple_sequential_model": ["keras.layers.Dense", "keras.models.Sequential", "keras.layers.Dropout"], "keras.models.Sequential": [], "keras.layers.Dense": [], "keras.layers.Dropout": [], "distribute.distribute_strategy_test.simple_subclassed_model": ["keras.layers.Dropout"], "distribute.distribute_strategy_test.simple_subclassed_model._SimpleMLP.__init__": ["<builtin>.super", "keras.layers.Dense"], "<builtin>.super": [], "distribute.distribute_strategy_test.simple_subclassed_model._SimpleMLP.call": [], "distribute.distribute_strategy_test.simple_multi_inputs_multi_outputs_model": ["keras.layers.Dense", "keras.models.Model", "keras.layers.Input", "keras.layers.concatenate"], "keras.layers.Input": [], "keras.layers.concatenate": [], "keras.models.Model": [], "distribute.distribute_strategy_test.get_multi_inputs_multi_outputs_data": ["utils.np_utils.to_categorical", "keras.testing_utils.get_test_data"], "keras.testing_utils.get_test_data": [], "utils.np_utils.to_categorical": [], "distribute.distribute_strategy_test.batch_wrapper": ["keras.backend.is_tpu_strategy"], "keras.backend.is_tpu_strategy": [], "distribute.distribute_strategy_test.get_model": ["keras.layers.Dense", "keras.layers.Input", "python.keras.Model"], "python.keras.Model": [], "distribute.distribute_strategy_test.get_sample_weights_model": ["keras.layers.Dense", "keras.layers.Input", "python.keras.Model"], "distribute.distribute_strategy_test.get_dataset": ["numpy.zeros", "dataset_ops.Dataset.from_tensor_slices", "dataset_ops.Dataset.from_tensor_slices"], "numpy.zeros": [], "dataset_ops.Dataset.from_tensor_slices": [], "distribute.distribute_strategy_test.get_predict_dataset": ["numpy.zeros", "dataset_ops.Dataset.from_tensor_slices", "dataset_ops.Dataset.from_tensor_slices"], "distribute.distribute_strategy_test.convert_numpy_to_dataset_with_unknown_cardinality": ["dataset_ops.Dataset.from_tensor_slices"], "distribute.distribute_strategy_test.convert_numpy_to_dataset_with_unknown_cardinality.<lambda1>": [], "distribute.distribute_strategy_test.convert_numpy_to_dataset_with_unknown_cardinality.<lambda2>": [], "distribute.distribute_strategy_test.multi_input_output_model": ["keras.layers.Dense", "keras.models.Model", "keras.layers.Input", "keras.layers.Dropout"], "distribute.distribute_strategy_test.strategy_minus_tpu_combinations": ["framework.test_combinations.combine"], "framework.test_combinations.combine": [], "distribute.distribute_strategy_test.tpu_strategy_combinations": ["framework.test_combinations.combine"], "distribute.distribute_strategy_test.tpu_strategy_combinations_graph_only": ["framework.test_combinations.combine"], "distribute.distribute_strategy_test.multi_worker_strategy_combinations_eager_only": ["framework.test_combinations.combine"], "distribute.distribute_strategy_test.all_strategy_combinations": ["framework.test_combinations.combine", "framework.test_combinations.combine", "framework.test_combinations.combine"], "distribute.distribute_strategy_test.all_strategy_minus_default_and_tpu_combinations": ["framework.test_combinations.combine"], "distribute.distribute_strategy_test.all_strategy_combinations_minus_default": ["framework.test_combinations.combine", "framework.test_combinations.combine", "framework.test_combinations.combine"], "distribute.distribute_strategy_test.strategy_and_optimizer_combinations": ["framework.test_combinations.times", "framework.test_combinations.times", "framework.test_combinations.combine"], "framework.test_combinations.times": [], "distribute.distribute_strategy_test.BatchCountingCB.__init__": ["<builtin>.super"], "distribute.distribute_strategy_test.BatchCountingCB.on_train_batch_begin": [], "distribute.distribute_strategy_test.BatchCountingCB.on_train_batch_end": [], "distribute.distribute_strategy_test.BatchCountingCB.on_test_batch_begin": [], "distribute.distribute_strategy_test.BatchCountingCB.on_test_batch_end": [], "distribute.distribute_strategy_test.BatchCountingCB.on_predict_batch_begin": [], "distribute.distribute_strategy_test.BatchCountingCB.on_predict_batch_end": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays": ["framework.test_combinations.times", "framework.test_combinations.combine", "framework.test_combinations.combine", "distribute.combinations.generate", "distribute.combinations.generate"], "distribute.combinations.generate": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_calculating_input_params_no_steps_no_batch_size": ["distribute.distributed_training_utils_v1.get_input_params", "distribute.distributed_training_utils.global_batch_size_supported", "test.TestCase.assertEqual", "test.TestCase.cached_session"], "distribute.distributed_training_utils.global_batch_size_supported": [], "test.TestCase.cached_session": [], "distribute.distributed_training_utils_v1.get_input_params": [], "test.TestCase.assertEqual": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_calculating_input_params_with_steps_no_batch_size": ["test.TestCase.cached_session", "test.TestCase.assertRaisesRegex", "distribute.distributed_training_utils_v1.get_input_params", "test.TestCase.assertEqual", "distribute.distributed_training_utils.global_batch_size_supported"], "test.TestCase.assertRaisesRegex": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_calculating_input_params_no_steps_with_batch_size": ["distribute.distributed_training_utils_v1.get_input_params", "distribute.distributed_training_utils.global_batch_size_supported", "test.TestCase.assertEqual", "test.TestCase.cached_session"], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_calculating_input_params_with_steps_with_batch_size": ["test.TestCase.assertEqual", "distribute.distributed_training_utils_v1.get_input_params", "test.TestCase.assertRaisesRegex", "test.TestCase.cached_session"], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_calling_model_with_numpy_arrays": ["optimizer_v2.gradient_descent.SGD", "optimizer_v2.gradient_descent.SGD", "numpy.zeros", "test.TestCase.cached_session"], "optimizer_v2.gradient_descent.SGD": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_calling_model_with_mixed_precision": ["keras.layers.Dense", "optimizer_v2.gradient_descent.SGD", "keras.layers.Input", "test.TestCase.skipTest", "mixed_precision.policy.policy_scope", "numpy.zeros", "<builtin>.isinstance", "keras.layers.Activation", "test.TestCase.cached_session", "keras.backend.is_tpu_strategy", "python.keras.Model"], "<builtin>.isinstance": [], "test.TestCase.skipTest": [], "mixed_precision.policy.policy_scope": [], "keras.layers.Activation": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_operator_overload_mixed_precision": ["eager.context.executing_eagerly", "test.TestCase.skipTest", "test.TestCase.assertIsNotNone", "<builtin>.isinstance", "layers.Layer.__init__", "test.TestCase.cached_session", "keras.backend.is_tpu_strategy", "eager.def_function.function"], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_operator_overload_mixed_precision.MyLayer.build": ["layers.Layer.add_weight"], "layers.Layer.add_weight": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_operator_overload_mixed_precision.MyLayer.call": [], "layers.Layer.__init__": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_operator_overload_mixed_precision.run_fn": ["layers.Layer.__init__", "numpy.array", "eager.backprop.GradientTape"], "numpy.array": [], "eager.backprop.GradientTape": [], "eager.context.executing_eagerly": [], "eager.def_function.function": [], "test.TestCase.assertIsNotNone": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_optimizer_in_cross_replica_context_raises_error": ["keras.layers.Dense", "optimizer_v2.gradient_descent.SGD", "keras.models.Sequential", "test.TestCase.cached_session", "test.TestCase.assertRaisesRegex", "eager.backprop.GradientTape", "<builtin>.zip", "numpy.array"], "<builtin>.zip": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_calling_model_with_nested_numpy_arrays": ["optimizer_v2.gradient_descent.SGD", "numpy.random.random", "numpy.asarray", "test.TestCase.cached_session", "test.TestCase.cached_session"], "numpy.random.random": [], "numpy.asarray": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_numpy_with_sample_weights": ["test.TestCase.assertAllClose", "test.TestCase.cached_session", "training.rmsprop.RMSPropOptimizer", "training.rmsprop.RMSPropOptimizer", "numpy.array"], "training.rmsprop.RMSPropOptimizer": [], "test.TestCase.assertAllClose": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_flatten_predict_outputs": ["optimizer_v2.gradient_descent.SGD", "numpy.random.random", "numpy.asarray", "test.TestCase.assertLen", "test.TestCase.assertAllEqual", "test.TestCase.cached_session", "test.TestCase.cached_session"], "test.TestCase.assertLen": [], "test.TestCase.assertAllEqual": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_evaluate_with_partial_batch": ["numpy.random.random", "test.TestCase.cached_session", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "keras.metrics.CategoricalAccuracy", "training.gradient_descent.GradientDescentOptimizer", "numpy.ceil"], "training.gradient_descent.GradientDescentOptimizer": [], "keras.metrics.CategoricalAccuracy": [], "numpy.ceil": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_predict_with_partial_batch": ["numpy.random.random", "training.gradient_descent.GradientDescentOptimizer", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "training.gradient_descent.GradientDescentOptimizer"], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_no_target_model": ["keras.layers.Dense", "numpy.zeros", "keras.models.Sequential", "layers.Layer.__init__", "test.TestCase.cached_session", "training.gradient_descent.GradientDescentOptimizer"], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_no_target_model.MyLayer.call": ["layers.Layer.add_loss", "ops.math_ops.reduce_sum"], "ops.math_ops.reduce_sum": [], "layers.Layer.add_loss": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_predict_multi_output_model_with_partial_batch": ["test.TestCase.assertAllClose", "test.TestCase.cached_session", "training.gradient_descent.GradientDescentOptimizer", "training.gradient_descent.GradientDescentOptimizer", "training.gradient_descent.GradientDescentOptimizer"], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_gradients_are_none": ["eager.context.executing_eagerly", "numpy.random.normal", "test.TestCase.skipTest", "layers.Dense.__init__", "test.TestCase.assertNotAllEqual", "python.keras.Sequential"], "distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays.test_gradients_are_none.DenseWithExtraWeight.build": ["<builtin>.super", "layers.Dense.add_weight"], "layers.Dense.add_weight": [], "layers.Dense.__init__": [], "python.keras.Sequential": [], "numpy.random.normal": [], "test.TestCase.assertNotAllEqual": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets": ["framework.test_combinations.times", "framework.test_combinations.combine", "framework.test_combinations.combine", "framework.test_combinations.combine", "distribute.combinations.generate", "distribute.combinations.generate", "distribute.combinations.generate"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_calling_model_on_same_dataset": ["optimizer_v2.gradient_descent.SGD", "optimizer_v2.gradient_descent.SGD", "optimizer_v2.gradient_descent.SGD", "test.TestCase.cached_session", "test.TestCase.cached_session", "keras.metrics.CategoricalAccuracy"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_model_interleaved_eval_same_as_direct_eval": ["optimizer_v2.gradient_descent.SGD", "optimizer_v2.gradient_descent.SGD", "test.TestCase.cached_session", "test.TestCase.cached_session", "keras.metrics.CategoricalAccuracy", "<builtin>.range", "test.TestCase.assertEqual"], "<builtin>.range": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_fit_with_tuple_and_dict_dataset_inputs": ["optimizer_v2.gradient_descent.SGD", "numpy.random.random", "test.TestCase.cached_session", "keras.metrics.CategoricalAccuracy", "dataset_ops.Dataset.from_tensor_slices", "dataset_ops.Dataset.from_tensor_slices"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_fit_with_dictionary_in_the_dataset_b135161171": ["eager.context.executing_eagerly", "keras.models.Model", "keras.layers.Input", "test.TestCase.skipTest", "keras.layers.Conv2D", "test.TestCase.cached_session", "keras.backend.is_tpu_strategy", "numpy.ones", "dataset_ops.Dataset.from_tensor_slices", "keras.layers.Lambda"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_fit_with_dictionary_in_the_dataset_b135161171.custom_loss": ["keras.losses.binary_crossentropy", "ops.math_ops.reduce_mean"], "keras.losses.binary_crossentropy": [], "ops.math_ops.reduce_mean": [], "keras.layers.Conv2D": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_fit_with_dictionary_in_the_dataset_b135161171.<lambda1>": ["ops.math_ops.reduce_mean"], "keras.layers.Lambda": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_fit_with_dictionary_in_the_dataset_b135161171.map_fn": [], "numpy.ones": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_fit_eval_and_predict_methods_on_dataset_without_steps": ["optimizer_v2.gradient_descent.SGD", "numpy.zeros", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "keras.metrics.CategoricalAccuracy", "dataset_ops.Dataset.from_tensor_slices"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_predict_on_dataset_with_unknown_cardinality_without_steps": ["optimizer_v2.gradient_descent.SGD", "numpy.zeros", "test.TestCase.skipTest", "test.TestCase.skipTest", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "keras.backend.is_tpu_strategy", "keras.backend.get_value", "ops.cardinality.cardinality", "keras.metrics.CategoricalAccuracy", "keras.metrics.CategoricalAccuracy", "test.TestCase.assertEqual"], "ops.cardinality.cardinality": [], "keras.backend.get_value": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_on_dataset_with_unknown_cardinality_without_steps": ["optimizer_v2.gradient_descent.SGD", "numpy.zeros", "test.TestCase.skipTest", "test.TestCase.skipTest", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "keras.backend.is_tpu_strategy", "keras.backend.get_value", "ops.cardinality.cardinality", "keras.metrics.CategoricalAccuracy", "keras.metrics.CategoricalAccuracy", "test.TestCase.assertEqual"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_on_dataset_with_unknown_cardinality": ["numpy.zeros", "test.TestCase.assertEqual", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "test.TestCase.assertRaisesRegex", "keras.backend.get_value", "ops.cardinality.cardinality", "keras.metrics.CategoricalAccuracy", "keras.metrics.CategoricalAccuracy", "training.gradient_descent.GradientDescentOptimizer", "test.TestCase.assertEqual"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_fit_eval_and_predict_methods_on_dataset": ["optimizer_v2.gradient_descent.SGD", "optimizer_v2.gradient_descent.SGD", "optimizer_v2.gradient_descent.SGD", "test.TestCase.cached_session", "test.TestCase.cached_session", "keras.metrics.CategoricalAccuracy"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_fit_eval_and_predict_with_optimizer": ["keras.metrics.CategoricalAccuracy", "keras.metrics.CategoricalAccuracy", "keras.metrics.CategoricalAccuracy", "test.TestCase.cached_session"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_dataset_wrong_input_shape": ["optimizer_v2.gradient_descent.SGD", "numpy.zeros", "test.TestCase.skipTest", "test.TestCase.skipTest", "test.TestCase.cached_session", "test.TestCase.assertRaisesRegex", "dataset_ops.Dataset.from_tensor_slices"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_dataset_external_batch_input_validation": ["optimizer_v2.gradient_descent.SGD", "numpy.zeros", "optimizer_v2.gradient_descent.SGD", "test.TestCase.cached_session", "dataset_ops.Dataset.from_tensor_slices"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_learning_phase_value": ["keras.layers.Dense", "optimizer_v2.gradient_descent.SGD", "keras.layers.Input", "test.TestCase.assertArrayNear", "test.TestCase.assertAlmostEqual", "<builtin>.isinstance", "test.TestCase.cached_session", "keras.layers.Dropout", "python.keras.Model", "numpy.ones", "dataset_ops.Dataset.from_tensor_slices"], "test.TestCase.assertAlmostEqual": [], "test.TestCase.assertArrayNear": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.testOptimizerWithCallbacks": ["optimizer_v2.gradient_descent.SGD", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "keras.backend.get_value", "keras.backend.get_value"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.testOptimizerWithCallbacks.schedule": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_evaluate_with_dataset_with_partial_batch": ["numpy.random.random", "keras.backend.get_value", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "numpy.ceil", "keras.metrics.CategoricalAccuracy", "training.gradient_descent.GradientDescentOptimizer", "dataset_ops.Dataset.from_tensor_slices"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_predict_with_dataset_with_partial_batch": ["numpy.random.random", "dataset_ops.Dataset.from_tensor_slices", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "training.gradient_descent.GradientDescentOptimizer", "dataset_ops.Dataset.from_tensor_slices"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_predict_multi_output_model_with_dataset_with_partial_batch": ["test.TestCase.assertAllClose", "test.TestCase.cached_session", "training.gradient_descent.GradientDescentOptimizer", "training.gradient_descent.GradientDescentOptimizer", "training.gradient_descent.GradientDescentOptimizer", "dataset_ops.Dataset.from_tensor_slices"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_match_model_input_matches_with_dataset_tensors": ["keras.models.Model", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "test.TestCase.cached_session", "numpy.ones", "numpy.random.rand", "dataset_ops.Dataset.from_tensor_slices"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_match_model_input_matches_with_dataset_tensors._create_model_input_output_tensors": ["keras.layers.Dense", "keras.layers.Input", "keras.layers.Add"], "keras.layers.Add": [], "numpy.random.rand": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets.test_dataset_with_sample_weights": ["test.TestCase.assertAllClose", "test.TestCase.cached_session", "training.rmsprop.RMSPropOptimizer", "training.rmsprop.RMSPropOptimizer", "dataset_ops.Dataset.from_tensor_slices", "numpy.array"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasetsFile.setUp": ["<builtin>.super", "numpy.zeros", "test.TestCase.get_temp_dir", "os.path.join", "dataset_ops.Dataset.from_tensor_slices", "ops.writers.TFRecordWriter"], "test.TestCase.get_temp_dir": [], "os.path.join": [], "ops.writers.TFRecordWriter": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasetsFile": ["distribute.combinations.generate", "distribute.combinations.generate"], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasetsFile.test_predict_on_dataset_shard_options_file_multi_worker_mirrored": ["ops.readers.TFRecordDataset", "optimizer_v2.gradient_descent.SGD", "ops.dataset_ops.Options", "ops.dataset_ops.Options"], "ops.readers.TFRecordDataset": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasetsFile.test_predict_on_dataset_shard_options_file_multi_worker_mirrored.<lambda1>": ["ops.parsing_ops.parse_tensor"], "ops.parsing_ops.parse_tensor": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithDatasetsFile.test_predict_on_dataset_shard_options_file_multi_worker_mirrored.<lambda2>": [], "ops.dataset_ops.Options": [], "distribute.distribute_strategy_test.TestRegularizerLoss.IdentityRegularizer.__call__": ["ops.array_ops.identity"], "ops.array_ops.identity": [], "distribute.distribute_strategy_test.TestRegularizerLoss.AddLayer.build": ["layers.Layer.add_weight", "regularizers.Regularizer.__init__"], "regularizers.Regularizer.__init__": [], "distribute.distribute_strategy_test.TestRegularizerLoss.AddLayer.call": [], "distribute.distribute_strategy_test.TestRegularizerLoss.loss_fn": ["ops.math_ops.reduce_mean"], "distribute.distribute_strategy_test.TestRegularizerLoss": ["framework.test_combinations.times", "framework.test_combinations.times", "distribute.combinations.generate"], "distribute.distribute_strategy_test.TestRegularizerLoss.test_regularizer_loss": ["optimizer_v2.gradient_descent.SGD", "keras.models.Model", "keras.layers.Input", "layers.Layer.__init__", "test.TestCase.assertEqual", "distribute.distributed_training_utils.global_batch_size_supported", "numpy.array"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels": ["framework.test_combinations.times", "framework.test_combinations.combine", "framework.test_combinations.combine", "distribute.combinations.generate", "distribute.combinations.generate", "distribute.combinations.generate"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_on_sequential_model": ["optimizer_v2.gradient_descent.SGD", "numpy.zeros", "optimizer_v2.gradient_descent.SGD"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_on_functional_model": ["optimizer_v2.gradient_descent.SGD", "numpy.zeros", "optimizer_v2.gradient_descent.SGD"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_dataset": ["keras.layers.Dense", "dataset_ops.DatasetV2.from_tensor_slices", "dataset_ops.DatasetV2.from_tensor_slices", "test.TestCase.assertRaisesRegex", "numpy.ones", "python.keras.Sequential", "test.TestCase.assertEqual"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_dataset.CBCounter.__init__": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_dataset.CBCounter.on_epoch_end": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_dataset.CBCounter.on_train_batch_end": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_dataset.CBCounter.on_test_batch_end": [], "dataset_ops.DatasetV2.from_tensor_slices": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_datasets_from_function": ["keras.layers.Dense", "test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex", "test.TestCase.assertEqual", "python.keras.Sequential"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_datasets_from_function.CBCounter.__init__": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_datasets_from_function.CBCounter.on_epoch_end": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_datasets_from_function.CBCounter.on_train_batch_end": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_datasets_from_function.CBCounter.on_test_batch_end": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distributed_datasets_from_function.make_dataset": ["numpy.ones", "dataset_ops.DatasetV2.from_tensor_slices"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_host_training_loop": ["keras.layers.Dense", "python.keras.Input", "test.TestCase.skipTest", "keras.layers.Flatten", "<builtin>.isinstance", "keras.layers.Conv2D", "python.keras.Model", "numpy.ones", "python.keras.Model", "test.TestCase.assertEqual"], "python.keras.Input": [], "keras.layers.Flatten": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_host_training_loop_last_partial_execution": ["keras.layers.Dense", "python.keras.Input", "test.TestCase.skipTest", "<builtin>.isinstance", "python.keras.Model", "numpy.ones", "python.keras.Model", "test.TestCase.assertEqual"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_host_training_loop_dataset_unknown_size": ["keras.layers.Dense", "dataset_ops.DatasetV2.from_tensor_slices", "python.keras.Input", "test.TestCase.skipTest", "<builtin>.isinstance", "test.TestCase.assertRaisesRegex", "python.keras.Model", "numpy.ones", "python.keras.Model", "test.TestCase.assertEqual"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_host_training_loop_dataset_unknown_size.<lambda1>": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_host_training_loop_truncate_to_epoch": ["keras.layers.Dense", "python.keras.Input", "test.TestCase.skipTest", "<builtin>.isinstance", "python.keras.Model", "numpy.ones", "python.keras.Model", "test.TestCase.assertEqual"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_gradient_clipping": ["optimizer_v2.gradient_descent.SGD", "test.TestCase.evaluate", "test.TestCase.assertAllClose", "<builtin>.isinstance", "layers.Layer.__init__", "test.TestCase.assertRaisesRegex", "numpy.ones", "python.keras.Sequential"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_gradient_clipping.MyLayer.build": ["ops.variables.Variable"], "ops.variables.Variable": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_gradient_clipping.MyLayer.call": [], "test.TestCase.evaluate": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_custom_gradient_transformation": ["optimizer_v2.gradient_descent.SGD", "test.TestCase.evaluate", "test.TestCase.skipTest", "test.TestCase.assertAllClose", "<builtin>.isinstance", "layers.Layer.__init__", "numpy.ones", "python.keras.Sequential"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_custom_gradient_transformation.MyLayer.build": ["ops.variables.Variable"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_custom_gradient_transformation.MyLayer.call": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_custom_gradient_transformation.custom_transform": ["ops.array_ops.ones_like"], "ops.array_ops.ones_like": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_one_dimensional": ["keras.layers.Dense", "keras.layers.Input", "numpy.random.random", "python.keras.Model", "numpy.random.randint"], "numpy.random.randint": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_loss_reduction_types": ["python.keras.Model", "numpy.random.seed", "numpy.random.random", "test.TestCase.assertArrayNear", "keras.losses.MeanSquaredError", "dataset_ops.Dataset.from_tensor_slices"], "numpy.random.seed": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_loss_reduction_types._get_model": ["keras.layers.Dense", "python.keras.Input", "python.keras.Model"], "keras.losses.MeanSquaredError": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_symbolic_add_loss": ["numpy.ones", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_symbolic_add_loss._make_model_with_add_loss": ["keras.layers.Dense", "ops.math_ops.reduce_mean", "python.keras.Input", "python.keras.Model"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.DISABLED_test_distribution_strategy_with_callable_add_loss": ["numpy.ones", "test.TestCase.assertLen", "test.TestCase.assertLen", "test.TestCase.assertAllClose"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.DISABLED_test_distribution_strategy_with_callable_add_loss._make_model": ["keras.layers.Dense", "python.keras.Input", "python.keras.Model"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.DISABLED_test_distribution_strategy_with_callable_add_loss._make_model.<lambda1>": ["ops.math_ops.reduce_mean"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_add_metric_in_call": ["eager.context.executing_eagerly", "test.TestCase.assertAllClose", "test.TestCase.assertLen", "numpy.ones", "test.TestCase.assertLen"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_add_metric_in_call.Bias.build": ["layers.Layer.add_weight"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_add_metric_in_call.Bias.call": ["ops.math_ops.reduce_mean", "layers.Layer.add_metric"], "layers.Layer.add_metric": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_add_metric_in_call._make_model_with_add_metric": ["keras.layers.Dense", "layers.Layer.__init__", "python.keras.Input", "python.keras.Model"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_add_metric_object": ["eager.context.executing_eagerly", "test.TestCase.assertAllClose", "test.TestCase.assertLen", "test.TestCase.assertLen", "numpy.ones"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_add_metric_object.Bias.build": ["keras.metrics.Mean", "layers.Layer.add_weight"], "keras.metrics.Mean": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_add_metric_object.Bias.call": ["layers.Layer.add_metric"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_add_metric_object._make_model_with_add_metric_object": ["keras.layers.Dense", "layers.Layer.__init__", "python.keras.Input", "python.keras.Model"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_add_metric_outside_call": ["eager.context.executing_eagerly", "test.TestCase.assertAllClose", "test.TestCase.assertLen", "numpy.ones", "test.TestCase.assertLen"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_distribution_strategy_with_add_metric_outside_call._make_model_with_add_metric": ["keras.layers.Dense", "ops.math_ops.reduce_mean", "python.keras.Input", "python.keras.Model"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_sparse_tensor_outputs": ["layers.Layer.__init__", "numpy.array", "test.TestCase.assertAllEqual", "python.keras.Sequential"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_sparse_tensor_outputs.ToSparse.call": ["ops.array_ops.shape", "ops.array_ops.gather_nd", "ops.array_ops.where_v2", "framework.sparse_tensor.SparseTensor", "ops.math_ops.not_equal"], "ops.math_ops.not_equal": [], "ops.array_ops.where_v2": [], "ops.array_ops.gather_nd": [], "ops.array_ops.shape": [], "framework.sparse_tensor.SparseTensor": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_ragged_tensor_outputs": ["python.keras.Sequential", "numpy.array", "python.keras.Sequential", "test.TestCase.assertAllEqual"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_ragged_tensor_outputs.ToRagged.__init__": ["<builtin>.super"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_ragged_tensor_outputs.ToRagged.call": ["ragged_tensor.RaggedTensor.from_tensor"], "ragged_tensor.RaggedTensor.from_tensor": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_correctness_of_add_loss_with_merge_call": ["optimizer_v2.gradient_descent.SGD", "optimizer_v2.gradient_descent.SGD", "optimizer_v2.gradient_descent.SGD", "optimizer_v2.gradient_descent.SGD", "<builtin>.range"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_correctness_of_add_loss_with_merge_call._get_model": ["keras.layers.Dense", "keras.losses.mean_squared_error", "keras.models.Model", "keras.layers.Input"], "keras.losses.mean_squared_error": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_correctness_of_add_loss_with_merge_call._get_data": ["dataset_ops.DatasetV2.from_tensor_slices", "numpy.random.rand"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_correctness_of_add_loss_with_merge_call.train_step": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_correctness_of_add_loss_with_merge_call.train_step.step_fn": ["ops.check_ops.assert_equal", "ops.nn.compute_average_loss", "ops.math_ops.reduce_sum", "<builtin>.len", "keras.losses.mean_squared_error", "distribute.distribution_strategy_context.get_replica_context", "eager.backprop.GradientTape", "<builtin>.zip"], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_correctness_of_add_loss_with_merge_call.train_step.step_fn.<lambda1>": [], "distribute.distribution_strategy_context.get_replica_context": [], "<builtin>.len": [], "ops.nn.compute_average_loss": [], "ops.check_ops.assert_equal": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels.test_unimplemented_parameter_server_strategy": ["test.TestCase.assertIsInstance", "distribute.cluster_resolver.SimpleClusterResolver", "test.TestCase.assertRaisesRegex", "training.rmsprop.RMSPropOptimizer", "training.server_lib.ClusterSpec", "distribute.parameter_server_strategy.ParameterServerStrategyV1", "distribute.parameter_server_strategy.ParameterServerStrategyV1", "distribute.multi_worker_testing_utils.create_in_process_cluster"], "distribute.multi_worker_testing_utils.create_in_process_cluster": [], "training.server_lib.ClusterSpec": [], "distribute.cluster_resolver.SimpleClusterResolver": [], "distribute.parameter_server_strategy.ParameterServerStrategyV1": [], "test.TestCase.assertIsInstance": [], "distribute.distribute_strategy_test._functional_with_add_loss_and_metric": ["keras.layers.Dense", "python.keras.Input", "keras.layers.Flatten", "ops.math_ops.reduce_sum", "keras.layers.Conv2D", "ops.math_ops.reduce_mean", "keras.layers.Lambda", "python.keras.Model", "ops.math_ops.square", "keras.layers.MaxPooling2D"], "keras.layers.MaxPooling2D": [], "ops.math_ops.square": [], "distribute.distribute_strategy_test._functional_with_add_loss_and_metric.<lambda1>": ["ops.math_ops.reduce_mean", "ops.math_ops.reduce_sum"], "distribute.distribute_strategy_test._functional_with_add_loss_and_metric.<lambda2>": [], "distribute.distribute_strategy_test._sequential_with_add_loss_and_metric": ["keras.layers.Dense", "keras.layers.Flatten", "ops.math_ops.reduce_sum", "keras.layers.Conv2D", "ops.math_ops.reduce_mean", "keras.layers.Lambda", "python.keras.Sequential", "keras.layers.MaxPooling2D"], "distribute.distribute_strategy_test._sequential_with_add_loss_and_metric.<lambda1>": ["ops.math_ops.divide"], "ops.math_ops.divide": [], "distribute.distribute_strategy_test._sequential_with_add_loss_and_metric.<lambda2>": ["ops.math_ops.reduce_mean", "ops.math_ops.reduce_sum"], "distribute.distribute_strategy_test._functional_with_layer_reuse": ["keras.layers.Dense", "python.keras.Input", "keras.layers.Flatten", "ops.math_ops.reduce_sum", "keras.layers.Conv2D", "ops.array_ops.zeros_like", "ops.math_ops.abs", "ops.math_ops.reduce_mean", "python.keras.Model", "ops.math_ops.square", "python.keras.Sequential", "ops.array_ops.ones_like", "keras.layers.MaxPooling2D"], "ops.array_ops.zeros_like": [], "ops.math_ops.abs": [], "distribute.distribute_strategy_test.TestDistributionStrategyWithMultipleAddLossAndMetricCalls": ["framework.test_combinations.times", "framework.test_combinations.combine", "framework.test_combinations.combine", "distribute.combinations.generate"], "distribute.distribute_strategy_test.TestDistributionStrategyWithMultipleAddLossAndMetricCalls.test_fit_and_evaluate": ["dataset_ops.DatasetV2.from_tensor_slices", "numpy.random.seed", "<builtin>.dict", "test.TestCase.assertBetween", "ops.dataset_ops.get_structure", "numpy.random.uniform", "keras.losses.SparseCategoricalCrossentropy", "optimizers.adam_v2.Adam", "test.TestCase.assertGreater", "<builtin>.range", "test.TestCase.assertNear", "numpy.random.randint", "<builtin>.zip"], "numpy.random.uniform": [], "ops.dataset_ops.get_structure": [], "optimizers.adam_v2.Adam": [], "keras.losses.SparseCategoricalCrossentropy": [], "<builtin>.dict": [], "test.TestCase.assertBetween": [], "test.TestCase.assertGreater": [], "test.TestCase.assertNear": [], "distribute.distribute_strategy_test.DeterministicModel.__init__": ["<builtin>.super"], "distribute.distribute_strategy_test.DeterministicModel.build": ["ops.variables.Variable", "ops.array_ops.ones"], "ops.array_ops.ones": [], "distribute.distribute_strategy_test.DeterministicModel.call": ["distribute.distribution_strategy_context.get_strategy", "<builtin>.ValueError"], "distribute.distribution_strategy_context.get_strategy": [], "<builtin>.ValueError": [], "distribute.distribute_strategy_test.TestModelCapturesStrategy": ["framework.test_combinations.combine", "distribute.combinations.generate"], "distribute.distribute_strategy_test.TestModelCapturesStrategy.test_fit_and_evaluate": ["dataset_ops.DatasetV2.from_tensor_slices", "test.TestCase.assertAllClose", "keras.losses.MeanSquaredError", "util.nest.flatten", "test.TestCase.assertTrue", "optimizers.adam_v2.Adam", "keras.Model.evaluate", "distribute.distribution_strategy_context.has_strategy", "keras.metrics.BinaryAccuracy", "<builtin>.range", "test.TestCase.assertEqual", "optimizer.iterations.numpy", "test.TestCase.assertRaisesRegex", "keras.Model.compile", "<builtin>.zip", "<builtin>.dict", "keras.Model.fit", "ops.array_ops.ones", "ops.array_ops.ones"], "keras.Model.compile": [], "optimizer.iterations.numpy": [], "keras.Model.fit": [], "keras.Model.evaluate": [], "util.nest.flatten": [], "test.TestCase.assertTrue": [], "keras.metrics.BinaryAccuracy": [], "distribute.distribution_strategy_context.has_strategy": [], "distribute.distribute_strategy_test.TestModelCapturesStrategy.test_optimizer": ["distribute.distributed_training_utils.is_distributed_variable", "test.TestCase.assertNotEmpty", "test.TestCase.assertTrue", "test.TestCase.assertTrue", "ops.array_ops.ones", "os.path.join", "test.TestCase.get_temp_dir"], "distribute.distribute_strategy_test.TestModelCapturesStrategy.test_optimizer.create_model": ["keras.layers.Dense", "keras.models.Sequential", "test.TestCase.assertEmpty"], "test.TestCase.assertEmpty": [], "test.TestCase.assertNotEmpty": [], "distribute.distributed_training_utils.is_distributed_variable": [], "engine.base_layer_utils.enable_v2_dtype_behavior": [], "distribute.multi_process_runner.test_main": []}