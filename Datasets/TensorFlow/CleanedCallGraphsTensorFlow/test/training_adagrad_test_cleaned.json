{"training.adagrad_test": ["platform.test.main"], "training.adagrad_test.AdagradOptimizerTest.doTestBasic": ["ops.resource_variable_ops.ResourceVariable", "ops.variables.Variable", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "<builtin>.zip", "training.adagrad.AdagradOptimizer", "eager.context.executing_eagerly", "training.adagrad_test.AdagradOptimizerTest.doTestBasic.<lambda1>", "test.TestCase.assertAllClose", "numpy.array", "<builtin>.range", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate"], "ops.resource_variable_ops.ResourceVariable": [], "ops.variables.Variable": [], "framework.constant_op.constant": [], "training.adagrad_test.AdagradOptimizerTest.doTestBasic.<lambda1>": [], "training.adagrad.AdagradOptimizer": [], "eager.context.executing_eagerly": [], "<builtin>.zip": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "<builtin>.range": [], "numpy.array": [], "test.TestCase.assertAllCloseAccordingToType": [], "training.adagrad_test.AdagradOptimizerTest.testBasic": ["training.adagrad_test.AdagradOptimizerTest.doTestBasic"], "training.adagrad_test.AdagradOptimizerTest": ["framework.test_util.run_in_graph_and_eager_modes"], "framework.test_util.run_in_graph_and_eager_modes": [], "training.adagrad_test.AdagradOptimizerTest.testBasicResource": ["training.adagrad_test.AdagradOptimizerTest.doTestBasic"], "training.adagrad_test.AdagradOptimizerTest.testBasicCallableParams": ["training.adagrad_test.AdagradOptimizerTest.doTestBasic", "eager.context.eager_mode"], "eager.context.eager_mode": [], "training.adagrad_test.AdagradOptimizerTest.testBasicLocked": ["training.adagrad_test.AdagradOptimizerTest.doTestBasic"], "training.adagrad_test.AdagradOptimizerTest.testMinimizeSparseResourceVariable": ["ops.resource_variable_ops.ResourceVariable", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "training.adagrad.AdagradOptimizer", "test.TestCase.cached_session", "framework.ops.Graph", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate", "ops.math_ops.matmul", "ops.embedding_ops.embedding_lookup"], "framework.ops.Graph": [], "test.TestCase.cached_session": [], "ops.embedding_ops.embedding_lookup": [], "ops.math_ops.matmul": [], "training.adagrad_test.AdagradOptimizerTest.testTensorLearningRate": ["<builtin>.range", "ops.variables.Variable", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "<builtin>.zip", "training.adagrad.AdagradOptimizer", "test.TestCase.cached_session", "test.TestCase.assertAllClose", "numpy.array", "framework.ops.Graph", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate"], "training.adagrad_test.AdagradOptimizerTest.testSparseBasic": ["<builtin>.range", "ops.variables.Variable", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "<builtin>.zip", "training.adagrad.AdagradOptimizer", "test.TestCase.cached_session", "test.TestCase.assertAllClose", "numpy.array", "framework.ops.IndexedSlices", "framework.ops.Graph", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate"], "framework.ops.IndexedSlices": [], "training.adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndices": ["<builtin>.range", "ops.variables.Variable", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "training.adagrad.AdagradOptimizer", "test.TestCase.cached_session", "test.TestCase.assertAllClose", "framework.ops.IndexedSlices", "framework.ops.Graph", "test.TestCase.evaluate"], "training.adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndicesResourceVariable": ["ops.resource_variable_ops.ResourceVariable", "<builtin>.range", "ops.math_ops.reduce_sum", "ops.variables.global_variables_initializer", "training.adagrad.AdagradOptimizer", "test.TestCase.cached_session", "framework.ops.Graph", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate", "ops.embedding_ops.embedding_lookup"], "ops.math_ops.reduce_sum": [], "training.adagrad_test.AdagradOptimizerTest.testSparseStability": ["<builtin>.range", "ops.variables.Variable", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "<builtin>.zip", "training.adagrad.AdagradOptimizer", "test.TestCase.cached_session", "numpy.array", "test.TestCase.assertEqual", "framework.ops.IndexedSlices", "framework.ops.Graph", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate"], "test.TestCase.assertEqual": [], "training.adagrad_test.AdagradOptimizerTest.testSharing": ["ops.variables.Variable", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "<builtin>.zip", "training.adagrad.AdagradOptimizer", "test.TestCase.cached_session", "test.TestCase.assertAllClose", "numpy.array", "test.TestCase.assertEqual", "framework.ops.Graph", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate"], "training.adagrad_test.AdagradOptimizerTest.testDynamicShapeVariableWithCallableInit": ["<builtin>.range", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "<builtin>.zip", "training.adagrad.AdagradOptimizer", "eager.context.executing_eagerly", "test.TestCase.assertAllClose", "numpy.array", "ops.variable_scope.get_variable", "framework.ops.Graph", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.evaluate"], "ops.variable_scope.get_variable": [], "training.adagrad_test.AdagradOptimizerTest.testDynamicShapeVariableWithCallableInit.<lambda1>": [], "platform.test.main": []}