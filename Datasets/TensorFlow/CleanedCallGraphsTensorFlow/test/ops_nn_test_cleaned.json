{"ops.nn_test": ["functools.partial", "platform.test.main"], "ops.nn_test.ZeroFractionTest._ZeroFraction": ["numpy.count_nonzero", "numpy.prod"], "numpy.prod": [], "numpy.count_nonzero": [], "ops.nn_test.ZeroFractionTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "ops.nn_test.ZeroFractionTest.testZeroFraction": ["ops.nn_impl.zero_fraction", "numpy.random.randint", "ops.nn_impl.zero_fraction", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "framework.constant_op.constant"], "numpy.random.randint": [], "framework.constant_op.constant": [], "ops.nn_impl.zero_fraction": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "ops.nn_test.ZeroFractionTest.testZeroFractionEmpty": ["ops.nn_impl.zero_fraction", "test.TestCase.assertTrue", "numpy.isnan", "numpy.zeros", "test.TestCase.evaluate"], "numpy.zeros": [], "numpy.isnan": [], "test.TestCase.assertTrue": [], "ops.nn_test.ZeroFractionTest.testZeroFraction2_27Zeros": ["ops.nn_impl.zero_fraction", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "<builtin>.int", "ops.array_ops.zeros"], "<builtin>.int": [], "ops.array_ops.zeros": [], "ops.nn_test.ZeroFractionTest.testZeroFraction2_27Ones": ["ops.nn_impl.zero_fraction", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "<builtin>.int", "ops.array_ops.ones"], "ops.array_ops.ones": [], "ops.nn_test.ZeroFractionTest.testUnknownSize": ["test.TestCase.assertAllClose", "test.TestCase.cached_session", "ops.array_ops.placeholder", "ops.nn_impl.zero_fraction"], "ops.array_ops.placeholder": [], "test.TestCase.cached_session": [], "ops.nn_test.SoftmaxTest._softmax": ["numpy.exp", "<builtin>.len"], "<builtin>.len": [], "numpy.exp": [], "ops.nn_test.SoftmaxTest": ["framework.test_util.run_deprecated_v1", "absl.testing.parameterized.parameters", "framework.test_util.run_in_graph_and_eager_modes"], "framework.test_util.run_in_graph_and_eager_modes": [], "ops.nn_test.SoftmaxTest.testSoftmax": ["numpy.random.randn", "ops.nn_ops.softmax_v2", "ops.nn_ops.softmax_v2", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "framework.constant_op.constant"], "numpy.random.randn": [], "ops.nn_ops.softmax_v2": [], "ops.nn_test.SoftmaxTest.testSoftmaxAxes": ["numpy.linspace", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "ops.nn_ops.softmax_v2"], "numpy.linspace": [], "ops.nn_test.SoftmaxTest.testSoftmaxExtendType": ["ops.math_ops.cast", "numpy.random.randn", "ops.nn_ops.softmax", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.math_ops.cast": [], "ops.nn_ops.softmax": [], "absl.testing.parameterized.parameters": [], "ops.nn_test.SoftmaxTest.testGradient": ["numpy.random.randn", "test.TestCase.cached_session", "ops.gradient_checker.compute_gradient_error", "ops.nn_ops.softmax_v2", "test.TestCase.assertLess", "framework.constant_op.constant"], "ops.gradient_checker.compute_gradient_error": [], "test.TestCase.assertLess": [], "ops.nn_test.LogPoissonLossTest._log_poisson_loss": ["numpy.exp", "numpy.ma.masked_array", "numpy.log"], "numpy.log": [], "numpy.ma.masked_array": [], "ops.nn_test.LogPoissonLossTest": ["framework.test_util.run_deprecated_v1", "framework.test_util.run_in_graph_and_eager_modes"], "ops.nn_test.LogPoissonLossTest.testLogPoissonLoss": ["numpy.random.randn", "numpy.random.randint", "framework.test_util.run_in_graph_and_eager_modes", "ops.nn_impl.log_poisson_loss", "test.TestCase.assertAllClose", "test.TestCase.evaluate"], "ops.nn_impl.log_poisson_loss": [], "ops.nn_test.LogPoissonLossTest.testGradient": ["numpy.random.randn", "test.TestCase.cached_session", "numpy.random.randint", "ops.gradient_checker.compute_gradient_error", "ops.nn_impl.log_poisson_loss", "test.TestCase.assertLess", "framework.constant_op.constant"], "ops.nn_test.LogSoftmaxTest._log_softmax": ["numpy.exp", "<builtin>.len", "numpy.sum", "numpy.log"], "numpy.sum": [], "ops.nn_test.LogSoftmaxTest": ["framework.test_util.run_deprecated_v1", "absl.testing.parameterized.parameters", "framework.test_util.run_in_graph_and_eager_modes"], "ops.nn_test.LogSoftmaxTest.testLogSoftmax": ["numpy.random.randn", "ops.nn_ops.log_softmax_v2", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "framework.constant_op.constant", "framework.constant_op.constant"], "ops.nn_ops.log_softmax_v2": [], "ops.nn_test.LogSoftmaxTest.testLogSoftmaxAxes": ["numpy.linspace", "ops.nn_ops.log_softmax_v2", "test.TestCase.assertAllClose", "test.TestCase.evaluate"], "ops.nn_test.LogSoftmaxTest.testGradient": ["numpy.random.randn", "test.TestCase.cached_session", "ops.gradient_checker.compute_gradient_error", "ops.nn_ops.log_softmax_v2", "test.TestCase.assertLess", "framework.constant_op.constant"], "ops.nn_test.L2LossTest": ["framework.test_util.run_deprecated_v1", "framework.test_util.run_in_graph_and_eager_modes"], "ops.nn_test.L2LossTest.testL2Loss": ["test.TestCase.assertAllClose", "ops.nn_ops.l2_loss", "framework.constant_op.constant", "test.TestCase.evaluate"], "ops.nn_ops.l2_loss": [], "ops.nn_test.L2LossTest.testGradient": ["test.TestCase.cached_session", "ops.gradient_checker.compute_gradient_error", "numpy.random.seed", "<builtin>.print", "test.TestCase.assertLess", "numpy.random.random_sample", "ops.nn_ops.l2_loss", "framework.constant_op.constant"], "numpy.random.seed": [], "numpy.random.random_sample": [], "<builtin>.print": [], "ops.nn_test.L2NormalizeTest._l2Normalize": ["numpy.expand_dims", "numpy.apply_along_axis", "<builtin>.isinstance", "numpy.linalg.norm", "<builtin>.tuple"], "<builtin>.isinstance": [], "<builtin>.tuple": [], "numpy.linalg.norm": [], "numpy.expand_dims": [], "numpy.apply_along_axis": [], "ops.nn_test.L2NormalizeTest": ["framework.test_util.run_deprecated_v1", "framework.test_util.run_in_graph_and_eager_modes"], "ops.nn_test.L2NormalizeTest.testL2Normalize": ["<builtin>.len", "framework.test_util.run_in_graph_and_eager_modes", "test.TestCase.assertAllClose", "numpy.random.seed", "ops.nn_impl.l2_normalize", "test.TestCase.evaluate", "numpy.random.random_sample", "<builtin>.range", "framework.constant_op.constant"], "<builtin>.range": [], "ops.nn_impl.l2_normalize": [], "ops.nn_test.L2NormalizeTest.testL2NormalizeDimArray": ["framework.constant_op.constant", "test.TestCase.assertAllClose", "numpy.random.seed", "ops.nn_impl.l2_normalize", "test.TestCase.evaluate", "numpy.random.random_sample", "framework.constant_op.constant"], "ops.nn_test.L2NormalizeTest.testL2NormalizeGradient": ["<builtin>.len", "test.TestCase.cached_session", "ops.gradient_checker.compute_gradient_error", "numpy.random.seed", "ops.nn_impl.l2_normalize", "<builtin>.print", "test.TestCase.assertLess", "numpy.random.random_sample", "<builtin>.range", "framework.constant_op.constant"], "ops.nn_test.L2NormalizeTest.testL2NormalizeComplex": ["<builtin>.len", "framework.constant_op.constant", "test.TestCase.assertAllClose", "numpy.random.seed", "ops.nn_impl.l2_normalize", "test.TestCase.evaluate", "numpy.random.random_sample", "<builtin>.range", "framework.constant_op.constant"], "functools.partial": [], "absl.testing.parameterized.named_parameters": [], "ops.nn_test.DropoutTest": ["framework.test_util.run_deprecated_v1", "absl.testing.parameterized.named_parameters"], "ops.nn_test.DropoutTest.testDropout": ["numpy.count_nonzero", "math.fabs", "test.TestCase.assertAllClose", "test.TestCase.assertLess", "test.TestCase.assertEqual", "test.TestCase.evaluate", "framework.constant_op.constant", "six.moves.xrange", "numpy.sort", "numpy.unique"], "test.TestCase.assertEqual": [], "six.moves.xrange": [], "numpy.sort": [], "numpy.unique": [], "math.fabs": [], "ops.nn_test.DropoutTest.testShapedDropoutCorrelation": ["test.TestCase.assertEqual", "test.TestCase.evaluate", "framework.constant_op.constant", "six.moves.xrange", "numpy.sort", "numpy.unique"], "ops.nn_test.DropoutTest.testDropoutPlaceholderRateAndKeepProb": ["numpy.count_nonzero", "ops.array_ops.placeholder", "test.TestCase.cached_session", "math.fabs", "test.TestCase.assertAllClose", "test.TestCase.assertLess", "test.TestCase.assertEqual", "test.TestCase.skipTest", "framework.constant_op.constant", "six.moves.xrange", "numpy.sort", "numpy.unique"], "test.TestCase.skipTest": [], "ops.nn_test.DropoutTest.testShapedDropoutUnknownShape": ["ops.array_ops.placeholder", "framework.constant_op.constant", "test.TestCase.assertEqual"], "ops.nn_test.DropoutTest.testInvalidRateAndKeepProb": ["test.TestCase.assertEqual", "ops.array_ops.placeholder", "ops.array_ops.placeholder", "test.TestCase.skipTest", "test.TestCase.assertRaises", "framework.constant_op.constant"], "ops.nn_test.DropoutTest.testInvalidRateAndKeepProb.<lambda1>": [], "ops.nn_test.DropoutTest.testInvalidRateAndKeepProb.<lambda2>": [], "test.TestCase.assertRaises": [], "ops.nn_test.DropoutTest.testLargeRate": ["framework.constant_op.constant"], "ops.nn_test.DropoutTest.testVariableRef": ["ops.variable_scope.get_variable"], "ops.variable_scope.get_variable": [], "ops.nn_test.DropoutTest.testShapedDropoutShapeError": ["test.TestCase.assertRaises", "framework.constant_op.constant"], "ops.nn_test.DropoutTest.testNoDropout": ["test.TestCase.assertAllEqual", "ops.array_ops.zeros"], "test.TestCase.assertAllEqual": [], "ops.nn_test.DropoutTest.testDropoutWithIntegerInputs": ["test.TestCase.assertRaises", "framework.constant_op.constant"], "ops.nn_test.ComputeSampledLogitsTest.setUp": [], "ops.nn_test.ComputeSampledLogitsTest._GenerateTestData": ["numpy.random.randn", "<builtin>.len", "numpy.sum", "numpy.zeros_like", "numpy.dot", "numpy.log", "numpy.concatenate", "numpy.full", "numpy.ones_like", "numpy.hstack"], "numpy.full": [], "numpy.dot": [], "numpy.concatenate": [], "numpy.ones_like": [], "numpy.zeros_like": [], "numpy.hstack": [], "ops.nn_test.ComputeSampledLogitsTest._ShardTestEmbeddings": ["<builtin>.list", "ops.partitioned_variables.fixed_size_partitioner", "ops.variables.global_variables_initializer", "ops.variable_scope.get_variable", "test.TestCase.session", "framework.ops.Graph", "test.TestCase.evaluate", "framework.constant_op.constant"], "framework.ops.Graph": [], "ops.partitioned_variables.fixed_size_partitioner": [], "test.TestCase.session": [], "ops.variables.global_variables_initializer": [], "<builtin>.list": [], "ops.nn_test.ComputeSampledLogitsTest.testShapes": ["numpy.random.randint", "framework.constant_op.constant", "numpy.random.seed", "ops.nn_impl._compute_sampled_logits", "test.TestCase.assertEqual", "test.TestCase.evaluate", "<builtin>.range", "framework.constant_op.constant"], "ops.nn_impl._compute_sampled_logits": [], "ops.nn_test.ComputeSampledLogitsTest.testBasic": ["numpy.random.randint", "framework.constant_op.constant", "test.TestCase.assertAllClose", "numpy.random.seed", "ops.nn_impl._compute_sampled_logits", "test.TestCase.evaluate", "<builtin>.range", "framework.constant_op.constant"], "ops.nn_test.ComputeSampledLogitsTest.testAccidentalHitRemoval": ["<builtin>.len", "numpy.random.randint", "framework.constant_op.constant", "numpy.random.seed", "ops.nn_impl._compute_sampled_logits", "test.TestCase.assertNear", "test.TestCase.evaluate", "<builtin>.range", "numpy.exp", "framework.constant_op.constant", "six.moves.xrange"], "test.TestCase.assertNear": [], "ops.nn_test.ComputeSampledLogitsTest.testSubtractLogQ": ["numpy.random.randint", "framework.constant_op.constant", "test.TestCase.assertAllClose", "numpy.random.seed", "ops.nn_impl._compute_sampled_logits", "test.TestCase.evaluate", "<builtin>.range", "framework.constant_op.constant"], "ops.nn_test.ComputeSampledLogitsTest.testSharded": ["numpy.random.randint", "framework.constant_op.constant", "test.TestCase.assertAllClose", "numpy.random.seed", "ops.nn_impl._compute_sampled_logits", "test.TestCase.evaluate", "test.TestCase.evaluate", "<builtin>.range", "framework.constant_op.constant"], "ops.nn_test.ComputeSampledLogitsTest.testNCELoss": ["numpy.sum", "framework.constant_op.constant", "test.TestCase.assertAllClose", "numpy.random.seed", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "ops.nn_impl.nce_loss_v2", "framework.constant_op.constant"], "ops.nn_test.ComputeSampledLogitsTest.testNCELoss._SigmoidCrossEntropyWithLogits": ["numpy.exp", "numpy.maximum", "numpy.minimum", "numpy.log"], "numpy.maximum": [], "numpy.minimum": [], "ops.nn_impl.nce_loss_v2": [], "ops.nn_test.ComputeSampledLogitsTest.testSampledSoftmaxLoss": ["framework.constant_op.constant", "ops.nn_impl.sampled_softmax_loss_v2", "ops.nn_impl.sampled_softmax_loss_v2", "test.TestCase.assertAllClose", "numpy.random.seed", "test.TestCase.evaluate", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.ComputeSampledLogitsTest.testSampledSoftmaxLoss._SoftmaxCrossEntropyWithLogits": ["numpy.log", "numpy.exp", "numpy.sum", "numpy.amax"], "numpy.amax": [], "ops.nn_impl.sampled_softmax_loss_v2": [], "ops.nn_test.ComputeSampledLogitsTest.testSampledSoftmaxLossBf16": ["ops.math_ops.cast", "<builtin>.len", "ops.nn_impl.sampled_softmax_loss_v2", "ops.nn_impl.sampled_softmax_loss_v2", "test.TestCase.assertAllClose", "numpy.random.seed", "numpy.full", "test.TestCase.evaluate", "framework.constant_op.constant", "framework.constant_op.constant"], "ops.nn_test.ComputeSampledLogitsTest.testSampledSoftmaxLossBf16._SoftmaxCrossEntropyWithLogits": ["numpy.log", "numpy.exp", "numpy.sum", "numpy.amax"], "ops.nn_test.CReluTest.test": ["numpy.random.randn", "test.TestCase.assertAllClose", "numpy.random.seed", "numpy.concatenate", "test.TestCase.evaluate", "framework.constant_op.constant", "ops.nn_ops.crelu"], "ops.nn_ops.crelu": [], "ops.nn_test.ReluTest.test": ["numpy.random.randn", "numpy.maximum", "ops.nn_ops.relu", "test.TestCase.assertAllEqual", "numpy.random.seed", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_ops.relu": [], "framework.test_util.disable_xla": [], "ops.nn_test.ReluTest": ["framework.test_util.disable_xla", "framework.test_util.run_deprecated_v1"], "ops.nn_test.ReluTest.testNaNs": ["ops.nn_ops.relu", "test.TestCase.cached_session", "test.TestCase.assertTrue", "numpy.isnan", "numpy.zeros", "<builtin>.range", "framework.constant_op.constant"], "ops.nn_test.LeakyReluTest.testRange": ["test.TestCase.assertLessEqual", "ops.nn_ops.leaky_relu", "numpy.random.uniform", "test.TestCase.assertAllClose", "numpy.random.seed", "test.TestCase.assertEqual", "test.TestCase.assertGreaterEqual", "test.TestCase.evaluate", "framework.constant_op.constant"], "numpy.random.uniform": [], "ops.nn_ops.leaky_relu": [], "test.TestCase.assertGreaterEqual": [], "test.TestCase.assertLessEqual": [], "ops.nn_test.LeakyReluTest": ["framework.test_util.run_deprecated_v1"], "ops.nn_test.LeakyReluTest.testValues": ["ops.nn_ops.leaky_relu", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "framework.constant_op.constant", "numpy.array"], "numpy.array": [], "ops.nn_test.LeakyReluTest.testName": ["ops.nn_ops.leaky_relu", "framework.constant_op.constant", "numpy.array", "test.TestCase.assertEqual"], "ops.nn_test.GeluTest.test": ["ops.nn_ops.gelu", "numpy.random.randn", "test.TestCase.assertAllClose", "test.TestCase.assertAllClose", "numpy.random.seed", "test.TestCase.evaluate"], "ops.nn_test.GeluTest.test.gelu": ["scipy.stats.norm.cdf", "numpy.power", "numpy.sqrt", "numpy.tanh"], "numpy.sqrt": [], "numpy.power": [], "numpy.tanh": [], "scipy.stats.norm.cdf": [], "ops.nn_ops.gelu": [], "ops.nn_test.SwishTest": ["framework.test_util.run_deprecated_v1"], "ops.nn_test.SwishTest.testValues": ["ops.math_ops.sigmoid", "ops.nn_impl.swish", "numpy.linspace", "test.TestCase.assertAllClose", "test.TestCase.evaluate", "framework.constant_op.constant", "numpy.array"], "ops.nn_impl.swish": [], "ops.math_ops.sigmoid": [], "ops.nn_test.SwishTest.testGradients": ["numpy.random.randn", "test.TestCase.cached_session", "ops.nn_impl.swish", "ops.gradient_checker.compute_gradient_error", "test.TestCase.assertLess", "framework.constant_op.constant"], "ops.nn_test.MomentsTest.doOutputTest": ["numpy.random.rand", "ops.gradient_checker.compute_gradient_error", "test.TestCase.assertFalse", "test.TestCase.assertAllClose", "numpy.isnan", "ops.nn_impl.moments_v2", "numpy.mean", "test.TestCase.assertLess", "test.TestCase.session", "framework.ops.Graph", "test.TestCase.evaluate", "framework.constant_op.constant", "numpy.var"], "numpy.random.rand": [], "numpy.mean": [], "numpy.var": [], "ops.nn_impl.moments_v2": [], "test.TestCase.assertFalse": [], "ops.nn_test.MomentsTest.testOutputAndGradient2DInput0": ["framework.constant_op.constant"], "ops.nn_test.MomentsTest.testOutputAndGradient2DInput01": ["framework.constant_op.constant"], "ops.nn_test.MomentsTest.testOutput2DInput0": ["framework.constant_op.constant"], "ops.nn_test.MomentsTest.testOutput2DInput1": ["framework.constant_op.constant"], "ops.nn_test.MomentsTest.testOutput2DInput01": ["framework.constant_op.constant"], "ops.nn_test.MomentsTest.testOutput4DInput0": ["framework.constant_op.constant"], "ops.nn_test.MomentsTest.testOutput4DInput1": ["framework.constant_op.constant"], "ops.nn_test.MomentsTest.testOutput4DInput3": ["framework.constant_op.constant"], "ops.nn_test.MomentsTest.testOutput4DInput012": ["framework.constant_op.constant"], "ops.nn_test.MomentsTest.testOutput4DInput123": ["framework.constant_op.constant"], "ops.nn_test.DataFormatDimMapTest._test": ["ops.nn_ops.data_format_dim_map", "test.TestCase.assertAllEqual", "framework.constant_op.constant", "test.TestCase.evaluate"], "ops.nn_ops.data_format_dim_map": [], "ops.nn_test.DataFormatDimMapTest.test": ["test.TestCase.evaluate"], "ops.nn_test.DataFormatDimMapTest.testNHWCtoNCHW": ["test.TestCase.assertAllEqual", "ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "framework.test_util.use_gpu": [], "ops.nn_test.DataFormatDimMapTest.testNHWCtoHWNC": ["test.TestCase.assertAllEqual", "ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatDimMapTest.testNHWCtoWHCN": ["test.TestCase.assertAllEqual", "ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatDimMapTest.testNDHWCtoNCDHW": ["test.TestCase.assertAllEqual", "ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatDimMapTest.testNDHWCtoDHWNC": ["test.TestCase.assertAllEqual", "ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatDimMapTest.testDNHWCtoWHDCN": ["test.TestCase.assertAllEqual", "ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatDimMapTest": ["framework.test_util.disable_xla"], "ops.nn_test.DataFormatDimMapTest.testArbitraryASCII": ["test.TestCase.assertAllEqual", "ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatDimMapTest.testInvalidLength": ["ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate"], "test.TestCase.assertRaisesRegex": [], "ops.nn_test.DataFormatDimMapTest.testDuplicateSrc": ["ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate"], "ops.nn_test.DataFormatDimMapTest.testDuplicateDst": ["ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate"], "ops.nn_test.DataFormatDimMapTest.testExtraSpecifiers": ["ops.nn_ops.data_format_dim_map", "framework.test_util.use_gpu", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate"], "ops.nn_test.DataFormatVectorPermuteTest.testNHWCToNCHW": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_ops.data_format_vec_permute": [], "ops.nn_test.DataFormatVectorPermuteTest.testNHWCToNCHW_Size2": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNDHWCtoNCDHW": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNDHWCtoNCDHW_Size3": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest": ["framework.test_util.disable_xla"], "ops.nn_test.DataFormatVectorPermuteTest.testNHWCToWHCN": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNHWCToWHCN_Size2": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNDHWCToWHDCN": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNDHWCToWHDCN_Size3": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNCHWToNHWC": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNCHWToNHWC_Size2": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNCDHWToNDHWC": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNCDHWToNDHWC_Size3": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNHWCToHWNC": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testHWNCToNHWC": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNHWCToNCHW2D": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNHWCToHWNC2D": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testHWNCToNHWC2D": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNCHWToNHWC2D": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNDHWCToNCDHW2D": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNDHWCToDHWNC2D": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testDHWNCToNDHWC2D": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testNCDHWToNDHWC2D": ["ops.nn_ops.data_format_vec_permute", "test.TestCase.assertAllEqual", "framework.test_util.use_gpu", "test.TestCase.evaluate", "framework.constant_op.constant"], "ops.nn_test.DataFormatVectorPermuteTest.testInvalidLength": ["framework.test_util.use_gpu", "ops.nn_ops.data_format_vec_permute", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate"], "ops.nn_test.DataFormatVectorPermuteTest.testDuplicateSrc": ["framework.test_util.use_gpu", "ops.nn_ops.data_format_vec_permute", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate"], "ops.nn_test.DataFormatVectorPermuteTest.testDuplicateDst": ["framework.test_util.use_gpu", "ops.nn_ops.data_format_vec_permute", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate"], "ops.nn_test.DataFormatVectorPermuteTest.testExtraSpecifiers": ["framework.test_util.use_gpu", "ops.nn_ops.data_format_vec_permute", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate"], "ops.nn_test.DataFormatVectorPermuteTest.test2DNoWH": ["framework.test_util.use_gpu", "ops.nn_ops.data_format_vec_permute", "test.TestCase.assertRaisesRegex", "test.TestCase.evaluate"], "ops.nn_test.AvgPoolTest.test1DTensor": ["ops.nn_ops.avg_pool_v2", "test.TestCase.assertAllEqual", "ops.nn_ops.avg_pool1d", "test.TestCase.evaluate", "ops.array_ops.ones"], "ops.nn_ops.avg_pool_v2": [], "ops.nn_ops.avg_pool1d": [], "ops.nn_test.AvgPoolTest.test1DNumpy": ["ops.nn_ops.avg_pool_v2", "numpy.ones", "test.TestCase.assertAllEqual", "ops.nn_ops.avg_pool1d", "test.TestCase.evaluate", "platform.test.is_built_with_rocm"], "platform.test.is_built_with_rocm": [], "numpy.ones": [], "ops.nn_test.AvgPoolTest.test1DNumpyWithGolden": ["test.TestCase.assertAllEqual", "ops.nn_ops.avg_pool1d", "test.TestCase.evaluate", "platform.test.is_built_with_rocm", "numpy.array"], "ops.nn_test.AvgPoolTest.test2DTensor": ["ops.nn_ops.avg_pool_v2", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "ops.array_ops.ones", "ops.nn_ops.avg_pool"], "ops.nn_ops.avg_pool": [], "ops.nn_test.AvgPoolTest.test2DNumpy": ["ops.nn_ops.avg_pool_v2", "numpy.ones", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "platform.test.is_built_with_rocm", "ops.nn_ops.avg_pool"], "ops.nn_test.AvgPoolTest.test3DTensor": ["ops.nn_ops.avg_pool_v2", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "ops.array_ops.ones", "ops.nn_ops.avg_pool3d"], "ops.nn_ops.avg_pool3d": [], "ops.nn_test.AvgPoolTest.test3DNumpy": ["ops.nn_ops.avg_pool_v2", "numpy.ones", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "ops.nn_ops.avg_pool3d"], "ops.nn_test.MaxPoolTest.test1DTensor": ["ops.nn_ops.max_pool1d", "test.TestCase.assertAllEqual", "ops.nn_ops.max_pool_v2", "test.TestCase.evaluate", "ops.array_ops.ones"], "ops.nn_ops.max_pool_v2": [], "ops.nn_ops.max_pool1d": [], "ops.nn_test.MaxPoolTest.test1DNumpy": ["ops.nn_ops.max_pool1d", "numpy.ones", "test.TestCase.assertAllEqual", "ops.nn_ops.max_pool_v2", "test.TestCase.evaluate", "platform.test.is_built_with_rocm"], "ops.nn_test.MaxPoolTest.test1DNumpyWithGolden": ["ops.nn_ops.max_pool1d", "test.TestCase.assertAllEqual", "test.TestCase.evaluate", "platform.test.is_built_with_rocm", "numpy.array"], "ops.nn_test.MaxPoolTest.test2DTensor": ["test.TestCase.assertAllEqual", "ops.nn_ops.max_pool_v2", "test.TestCase.evaluate", "ops.array_ops.ones", "ops.nn_ops.max_pool"], "ops.nn_ops.max_pool": [], "ops.nn_test.MaxPoolTest.test2DNumpy": ["numpy.ones", "test.TestCase.assertAllEqual", "ops.nn_ops.max_pool_v2", "test.TestCase.evaluate", "platform.test.is_built_with_rocm", "ops.nn_ops.max_pool"], "ops.nn_test.MaxPoolTest.test3DTensor": ["ops.nn_ops.max_pool3d", "test.TestCase.assertAllEqual", "ops.nn_ops.max_pool_v2", "test.TestCase.evaluate", "ops.array_ops.ones"], "ops.nn_ops.max_pool3d": [], "ops.nn_test.MaxPoolTest.test3DNumpy": ["ops.nn_ops.max_pool3d", "numpy.ones", "test.TestCase.assertAllEqual", "ops.nn_ops.max_pool_v2", "test.TestCase.evaluate"], "ops.nn_test.MaxPoolTest.testIncorrectSizeInputSmall": ["ops.array_ops.ones", "test.TestCase.assertRaisesRegex", "ops.nn_ops.max_pool_v2"], "ops.nn_test.MaxPoolTest.testIncorrectSizeInput": ["ops.array_ops.ones", "test.TestCase.assertRaisesRegex", "ops.nn_ops.max_pool_v2"], "ops.nn_test.ConvolutionTest.testUnknownSize": ["numpy.ones", "framework.tensor_spec.TensorSpec"], "framework.tensor_spec.TensorSpec": [], "ops.nn_test.ConvolutionTest.testUnknownSize.F": ["ops.nn_ops.convolution"], "ops.nn_ops.convolution": [], "ops.nn_test.ConvTransposeTest.test1D": ["test.TestCase.assertAllEqual", "ops.nn_ops.conv_transpose", "ops.nn_ops.conv1d_transpose", "test.TestCase.evaluate", "ops.array_ops.ones"], "ops.nn_ops.conv1d_transpose": [], "ops.nn_ops.conv_transpose": [], "ops.nn_test.ConvTransposeTest.test1DTensor": ["test.TestCase.assertAllEqual", "ops.nn_ops.conv_transpose", "ops.nn_ops.conv1d_transpose", "test.TestCase.evaluate", "ops.array_ops.ones", "framework.constant_op.constant"], "ops.nn_test.ConvTransposeTest.test2D": ["test.TestCase.assertAllEqual", "ops.nn_ops.conv_transpose", "ops.nn_ops.conv2d_transpose_v2", "test.TestCase.evaluate", "ops.array_ops.ones"], "ops.nn_ops.conv2d_transpose_v2": [], "ops.nn_test.ConvTransposeTest.test2DTensor": ["test.TestCase.assertAllEqual", "ops.nn_ops.conv_transpose", "ops.nn_ops.conv2d_transpose_v2", "test.TestCase.evaluate", "ops.array_ops.ones", "framework.constant_op.constant"], "ops.nn_test.ConvTransposeTest.test3D": ["ops.nn_ops.conv3d_transpose_v2", "test.TestCase.assertAllEqual", "ops.nn_ops.conv_transpose", "test.TestCase.evaluate", "ops.array_ops.ones"], "ops.nn_ops.conv3d_transpose_v2": [], "ops.nn_test.ConvTransposeTest.test3DTensor": ["ops.nn_ops.conv3d_transpose_v2", "test.TestCase.assertAllEqual", "ops.nn_ops.conv_transpose", "test.TestCase.evaluate", "ops.array_ops.ones", "framework.constant_op.constant"], "ops.nn_test.ConvTransposeTest.testIncorrectSizeInputSmall": ["test.TestCase.assertRaisesRegex", "ops.nn_ops.conv_transpose"], "ops.nn_test.ConvTransposeTest.testIncorrectSizeInput": ["test.TestCase.assertRaisesRegex", "ops.nn_ops.conv_transpose"], "ops.nn_test.ConvTransposeTest.testTensorsNoShape": ["test.TestCase.assertRaisesRegex", "ops.nn_ops.conv_transpose"], "ops.nn_test.RaggedEmbeddingTest.testRaggedTensor": ["test.TestCase.assertAllEqual", "framework.constant_op.constant", "ops.nn.embedding_lookup_ragged", "ragged.ragged_factory_ops.constant"], "ragged.ragged_factory_ops.constant": [], "ops.nn.embedding_lookup_ragged": [], "ops.nn_test.RaggedEmbeddingTest.testMultipleRaggedDimTensor": ["test.TestCase.assertAllEqual", "framework.constant_op.constant", "ops.nn.embedding_lookup_ragged", "ragged.ragged_factory_ops.constant"], "ops.nn_test.RaggedEmbeddingTest.testMissingWeights": ["test.TestCase.assertRaisesRegex", "ops.nn.embedding_lookup_ragged", "ragged.ragged_factory_ops.constant"], "ops.nn_test.RaggedEmbeddingTest.testEmptyWeights": ["test.TestCase.assertRaisesRegex", "ops.nn.embedding_lookup_ragged", "ragged.ragged_factory_ops.constant"], "ops.nn_test.RaggedEmbeddingTest.testInvalidIndicesType": ["test.TestCase.assertRaisesRegex", "framework.constant_op.constant", "ops.nn.embedding_lookup_ragged", "ragged.ragged_factory_ops.constant"], "ops.nn_test.RaggedEmbeddingTest.testMaxNormForEmbeddings": ["<builtin>.zip", "test.TestCase.assertAllClose", "ragged.ragged_factory_ops.constant", "ops.nn.embedding_lookup", "framework.constant_op.constant"], "ops.nn.embedding_lookup": [], "<builtin>.zip": [], "ops.nn_test.IsotonicTest": ["framework.test_util.run_v2_only", "framework.test_util.run_v1_only", "absl.testing.parameterized.parameters", "framework.test_util.run_in_graph_and_eager_modes"], "ops.nn_test.IsotonicTest.test_increasing_and_decreasing": ["ops.nn_ops.isotonic_regression", "framework.constant_op.constant", "ops.array_ops.zeros", "test.TestCase.assertAllClose"], "ops.nn_ops.isotonic_regression": [], "ops.nn_test.IsotonicTest.test_different_axis": ["ops.nn_ops.isotonic_regression", "framework.constant_op.constant", "test.TestCase.assertAllClose"], "framework.test_util.run_v2_only": [], "ops.nn_test.IsotonicTest.testGradientV2": ["test.TestCase.assertAllClose", "numpy.random.seed", "numpy.random.randn", "ops.gradient_checker_v2.compute_gradient"], "ops.nn_test.IsotonicTest.testGradientV2.ComputeIsotonicFn": ["ops.nn_ops.isotonic_regression"], "ops.gradient_checker_v2.compute_gradient": [], "framework.test_util.run_v1_only": [], "ops.nn_test.IsotonicTest.testGradientV1": ["numpy.random.randn", "test.TestCase.cached_session", "ops.array_ops.placeholder", "ops.gradient_checker.compute_gradient_error", "ops.nn_ops.isotonic_regression", "test.TestCase.assertAllClose", "numpy.random.seed"], "ops.nn_test.IsotonicTest.testTypePromotion": ["ops.nn_ops.isotonic_regression", "framework.constant_op.constant", "absl.testing.parameterized.TestCase.assertEqual"], "absl.testing.parameterized.TestCase.assertEqual": [], "platform.test.main": []}