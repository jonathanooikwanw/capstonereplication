{"tests.scatter_nd_op_test": ["platform.test.main"], "tests.scatter_nd_op_test._AsType": ["<builtin>.isinstance", "xla_test.XLATestCase.numeric_types"], "<builtin>.isinstance": [], "xla_test.XLATestCase.numeric_types": [], "tests.scatter_nd_op_test._FlatInnerDims": ["<builtin>.list"], "<builtin>.list": [], "tests.scatter_nd_op_test._FlatOuterDims": ["<builtin>.list"], "tests.scatter_nd_op_test._NumpyScatterNd": ["tests.scatter_nd_op_test._FlatInnerDims", "<builtin>.enumerate", "<builtin>.len", "tests.scatter_nd_op_test._NumpyUpdate.<lambda1>", "<builtin>.tuple", "<builtin>.range", "tests.scatter_nd_op_test._FlatOuterDims"], "<builtin>.len": [], "<builtin>.range": [], "<builtin>.enumerate": [], "<builtin>.tuple": [], "tests.scatter_nd_op_test._NumpyUpdate.<lambda1>": [], "tests.scatter_nd_op_test._NumpyUpdate": ["tests.scatter_nd_op_test._NumpyScatterNd", "numpy.zeros"], "numpy.zeros": [], "tests.scatter_nd_op_test.ScatterNdTest._VariableRankTest": ["numpy.random.randn", "xla_test.XLATestCase.assertAllClose", "<builtin>.zip", "numpy.append", "numpy.array", "numpy.random.randint", "<builtin>.len", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd", "numpy.ndenumerate", "numpy.random.shuffle", "tests.scatter_nd_op_test._NumpyUpdate", "<builtin>.list", "numpy.random.seed", "<builtin>.range", "numpy.empty", "tests.scatter_nd_op_test._AsType"], "numpy.random.seed": [], "<builtin>.zip": [], "numpy.empty": [], "numpy.ndenumerate": [], "numpy.random.shuffle": [], "numpy.array": [], "numpy.random.randint": [], "numpy.append": [], "numpy.random.randn": [], "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd": ["ops.array_ops.placeholder", "ops.array_ops.scatter_nd", "xla_test.XLATestCase.test_scope", "xla_test.XLATestCase.session"], "xla_test.XLATestCase.assertAllClose": [], "tests.scatter_nd_op_test.ScatterNdTest._VariableRankTests": ["<builtin>.set", "tests.scatter_nd_op_test.ScatterNdTest._VariableRankTest"], "<builtin>.set": [], "xla_test.XLATestCase.session": [], "ops.array_ops.placeholder": [], "xla_test.XLATestCase.test_scope": [], "ops.array_ops.scatter_nd": [], "tests.scatter_nd_op_test.ScatterNdTest.testSimple": ["numpy.array", "xla_test.XLATestCase.assertAllEqual", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "xla_test.XLATestCase.assertAllEqual": [], "tests.scatter_nd_op_test.ScatterNdTest.testRepeatedIndices": ["numpy.array", "xla_test.XLATestCase.assertAllEqual", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "tests.scatter_nd_op_test.ScatterNdTest.testSimple2": ["numpy.array", "xla_test.XLATestCase.assertAllEqual", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "tests.scatter_nd_op_test.ScatterNdTest.testSimple3": ["numpy.array", "xla_test.XLATestCase.assertAllEqual", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "tests.scatter_nd_op_test.ScatterNdTest.testVariableRankUpdate": ["tests.scatter_nd_op_test.ScatterNdTest._VariableRankTests"], "tests.scatter_nd_op_test.ScatterNdTest.testExtraIndicesDimensions": ["numpy.zeros", "xla_test.XLATestCase.assertAllEqual", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "framework.test_util.disable_mlir_bridge": [], "tests.scatter_nd_op_test.ScatterNdTest": ["framework.test_util.disable_mlir_bridge"], "tests.scatter_nd_op_test.ScatterNdTest.testRank3InvalidShape1": ["numpy.zeros", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd", "xla_test.XLATestCase.assertRaisesWithPredicateMatch"], "xla_test.XLATestCase.assertRaisesWithPredicateMatch": [], "tests.scatter_nd_op_test.ScatterNdTest.testRank3InvalidShape2": ["numpy.zeros", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd", "xla_test.XLATestCase.assertRaisesWithPredicateMatch"], "tests.scatter_nd_op_test.ScatterNdTest.testScatterOutOfRange": ["numpy.array", "tests.scatter_nd_op_test.ScatterNdTest._runScatterNd"], "tests.scatter_nd_op_test.ScatterNdTensorTest._runScatter": ["ops.array_ops.tensor_scatter_sub", "ops.array_ops.ones", "numpy.array", "xla_test.XLATestCase.test_scope", "ops.array_ops.placeholder", "ops.array_ops.tensor_scatter_update", "ops.array_ops.tensor_scatter_add", "xla_test.XLATestCase.session"], "ops.array_ops.ones": [], "ops.array_ops.tensor_scatter_update": [], "ops.array_ops.tensor_scatter_sub": [], "ops.array_ops.tensor_scatter_add": [], "tests.scatter_nd_op_test.ScatterNdTensorTest.testAdd": ["tests.scatter_nd_op_test.ScatterNdTensorTest._runScatter", "numpy.array", "xla_test.XLATestCase.assertAllEqual"], "tests.scatter_nd_op_test.ScatterNdTensorTest.testSub": ["tests.scatter_nd_op_test.ScatterNdTensorTest._runScatter", "numpy.array", "xla_test.XLATestCase.assertAllEqual"], "tests.scatter_nd_op_test.ScatterNdTensorTest.testUpdate": ["tests.scatter_nd_op_test.ScatterNdTensorTest._runScatter", "numpy.array", "xla_test.XLATestCase.assertAllEqual"], "platform.test.main": []}