{"operators.conditional_expressions_test": ["platform.test.main"], "operators.conditional_expressions_test._basic_expr": ["operators.conditional_expressions.if_exp"], "operators.conditional_expressions_test._basic_expr.<lambda1>": ["framework.constant_op.constant"], "framework.constant_op.constant": [], "operators.conditional_expressions_test._basic_expr.<lambda2>": ["framework.constant_op.constant"], "operators.conditional_expressions.if_exp": [], "operators.conditional_expressions_test.IfExpTest.test_tensor": ["test.TestCase.evaluate", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertEqual"], "test.TestCase.evaluate": [], "test.TestCase.assertEqual": [], "operators.conditional_expressions_test.IfExpTest.test_tensor_mismatched_type": ["test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex"], "operators.conditional_expressions_test.IfExpTest.test_tensor_mismatched_type.test_fn": ["framework.constant_op.constant", "operators.conditional_expressions.if_exp"], "operators.conditional_expressions_test.IfExpTest.test_tensor_mismatched_type.test_fn.<lambda1>": [], "operators.conditional_expressions_test.IfExpTest.test_tensor_mismatched_type.test_fn.<lambda2>": [], "test.TestCase.assertRaisesRegex": [], "operators.conditional_expressions_test.IfExpTest.test_python": ["operators.conditional_expressions.if_exp", "test.TestCase.evaluate", "test.TestCase.assertEqual", "operators.conditional_expressions.if_exp"], "operators.conditional_expressions_test.IfExpTest.test_python.<lambda1>": [], "operators.conditional_expressions_test.IfExpTest.test_python.<lambda2>": [], "operators.conditional_expressions_test.IfExpTest.test_python.<lambda3>": [], "operators.conditional_expressions_test.IfExpTest.test_python.<lambda4>": [], "platform.test.main": []}