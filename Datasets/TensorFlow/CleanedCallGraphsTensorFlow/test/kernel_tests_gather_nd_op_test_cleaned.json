{"kernel_tests.gather_nd_op_test": ["platform.test.main"], "kernel_tests.gather_nd_op_test.GatherNdTest._testSimpleDtype": ["test.TestCase.evaluate", "numpy.array", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "test.TestCase.cached_session": [], "numpy.array": [], "framework.constant_op.constant": [], "ops.array_ops.gather_nd": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllEqual": [], "test.TestCase.assertEqual": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testSimpleDtype": ["test.TestCase.assertAllEqual"], "kernel_tests.gather_nd_op_test.GatherNdTest": ["framework.test_util.disable_xla", "framework.test_util.run_in_graph_and_eager_modes", "framework.test_util.run_deprecated_v1", "framework.test_util.run_v1_only"], "framework.test_util.run_deprecated_v1": [], "framework.test_util.disable_xla": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testEmptyIndicesAndParamsOKButJustEmptyParamsFails": ["test.TestCase.session", "test.TestCase.evaluate", "numpy.empty", "test.TestCase.assertRaisesOpError", "test.TestCase.assertAllClose", "numpy.ones", "numpy.zeros", "ops.array_ops.gather_nd", "test.TestCase.assertEqual"], "test.TestCase.session": [], "numpy.ones": [], "numpy.empty": [], "test.TestCase.assertAllClose": [], "numpy.zeros": [], "test.TestCase.assertRaisesOpError": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testIndexScalar": ["test.TestCase.session", "test.TestCase.evaluate", "numpy.array", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "kernel_tests.gather_nd_op_test.GatherNdTest.testParamsRankLargerThanIndexIndexScalarSlices": ["test.TestCase.session", "test.TestCase.evaluate", "numpy.array", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "kernel_tests.gather_nd_op_test.GatherNdTest.testParamsRankLargerThanIndexSlices": ["test.TestCase.session", "test.TestCase.evaluate", "numpy.array", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "kernel_tests.gather_nd_op_test.GatherNdTest.testHigherRankParamsLargerThanIndexSlices": ["test.TestCase.session", "test.TestCase.evaluate", "numpy.array", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "kernel_tests.gather_nd_op_test.GatherNdTest.testEmptyIndicesLastRankMeansCopyEntireTensor": ["test.TestCase.session", "numpy.vstack", "test.TestCase.evaluate", "numpy.array", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "numpy.vstack": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testHigherRankParamsAndIndicesLargerThanIndexSlices": ["test.TestCase.session", "test.TestCase.evaluate", "numpy.array", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "kernel_tests.gather_nd_op_test.GatherNdTest.testHigherRankParams": ["test.TestCase.session", "numpy.vstack", "test.TestCase.evaluate", "numpy.random.rand", "<builtin>.tuple", "numpy.random.randint", "ops.array_ops.gather_nd", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "numpy.random.rand": [], "numpy.random.randint": [], "<builtin>.tuple": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testHigherRankParamsAndIndices": ["test.TestCase.session", "numpy.vstack", "test.TestCase.evaluate", "numpy.random.rand", "<builtin>.tuple", "numpy.random.randint", "ops.array_ops.gather_nd", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "kernel_tests.gather_nd_op_test.GatherNdTest.assertIndexedSlices": ["test.TestCase.assertIsInstance"], "test.TestCase.assertIsInstance": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testUnknownIndices": ["framework.constant_op.constant", "ops.array_ops.placeholder", "ops.array_ops.gather_nd", "test.TestCase.assertEqual", "framework.tensor_shape.dimension_value"], "ops.array_ops.placeholder": [], "framework.tensor_shape.dimension_value": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testBadIndicesCPU": ["test.TestCase.evaluate", "test.TestCase.session", "test.TestCase.assertRaisesOpError", "ops.array_ops.gather_nd"], "kernel_tests.gather_nd_op_test.GatherNdTest._disabledTestBadIndicesGPU": ["test.TestCase.session", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "platform.test.is_gpu_available", "ops.array_ops.gather_nd"], "platform.test.is_gpu_available": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testBadIndicesWithSlicesCPU": ["test.TestCase.evaluate", "test.TestCase.session", "test.TestCase.assertRaisesOpError", "ops.array_ops.gather_nd"], "kernel_tests.gather_nd_op_test.GatherNdTest._disabledTestBadIndicesWithSlicesGPU": ["test.TestCase.session", "test.TestCase.evaluate", "test.TestCase.assertRaisesOpError", "platform.test.is_gpu_available", "ops.array_ops.gather_nd"], "kernel_tests.gather_nd_op_test.GatherNdTest.testGradientsRank2Elements": ["test.TestCase.session", "ops.gradients_impl.gradients", "test.TestCase.evaluate", "numpy.array", "framework.constant_op.constant", "ops.array_ops.gather_nd", "numpy.array_equal"], "ops.gradients_impl.gradients": [], "numpy.array_equal": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testGradientsRank2Slices": ["test.TestCase.session", "ops.gradients_impl.gradients", "numpy.array", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertAllEqual"], "framework.ops.convert_to_tensor": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testGradientsRank3Elements": ["test.TestCase.session", "ops.gradients_impl.gradients", "test.TestCase.evaluate", "numpy.array", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertAllEqual"], "kernel_tests.gather_nd_op_test.GatherNdTest.testGradientsRank7Elements": ["test.TestCase.session", "ops.gradients_impl.gradients", "test.TestCase.evaluate", "numpy.array", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertAllEqual"], "kernel_tests.gather_nd_op_test.GatherNdTest.testGradientsInt64Indices": ["test.TestCase.session", "ops.gradients_impl.gradients", "test.TestCase.evaluate", "numpy.array", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertAllEqual"], "kernel_tests.gather_nd_op_test.GatherNdTest.testGradientsRank2SlicesWithEmptySpace": ["test.TestCase.session", "ops.gradients_impl.gradients", "numpy.array", "framework.ops.convert_to_tensor", "framework.ops.convert_to_tensor", "framework.constant_op.constant", "ops.array_ops.gather_nd", "test.TestCase.assertAllEqual"], "framework.test_util.run_v1_only": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testGatherNdRefVariable": ["test.TestCase.evaluate", "test.TestCase.cached_session", "ops.variables.RefVariable", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "ops.array_ops.gather_nd", "eager.context.executing_eagerly", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "ops.variables.RefVariable": [], "ops.variables.global_variables_initializer": [], "eager.context.executing_eagerly": [], "framework.test_util.run_in_graph_and_eager_modes": [], "kernel_tests.gather_nd_op_test.GatherNdTest.testGatherNdResourceVariable": ["ops.resource_variable_ops.ResourceVariable", "test.TestCase.evaluate", "test.TestCase.cached_session", "framework.constant_op.constant", "ops.variables.global_variables_initializer", "ops.array_ops.gather_nd", "eager.context.executing_eagerly", "test.TestCase.assertEqual", "test.TestCase.assertAllEqual"], "ops.resource_variable_ops.ResourceVariable": [], "kernel_tests.gather_nd_op_test.GatherNdOpBenchmark.benchmark_gather_nd_op": ["ops.variables.Variable", "client.session.Session", "numpy.vstack", "numpy.random.rand", "<builtin>.range", "test.Benchmark.evaluate", "numpy.random.seed", "numpy.random.randint", "time.time", "ops.array_ops.gather_nd", "ops.variables.global_variables_initializer", "test.Benchmark.report_benchmark"], "numpy.random.seed": [], "client.session.Session": [], "ops.variables.Variable": [], "test.Benchmark.evaluate": [], "<builtin>.range": [], "time.time": [], "test.Benchmark.report_benchmark": [], "platform.test.main": []}