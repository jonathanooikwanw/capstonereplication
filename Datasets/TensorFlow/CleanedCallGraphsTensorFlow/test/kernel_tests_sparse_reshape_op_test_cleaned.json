{"kernel_tests.sparse_reshape_op_test": ["platform.test.main"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest._SparseTensorPlaceholder": ["ops.array_ops.placeholder", "framework.sparse_tensor.SparseTensor"], "ops.array_ops.placeholder": [], "framework.sparse_tensor.SparseTensor": [], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest._SparseTensorValue_5x6": ["framework.sparse_tensor.SparseTensorValue", "numpy.array"], "numpy.array": [], "framework.sparse_tensor.SparseTensorValue": [], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest._SparseTensorValue_2x3x4": ["framework.sparse_tensor.SparseTensorValue", "numpy.array"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testStaticShapeInfoPreserved": ["sparse_tensor.SparseTensor.from_value", "test.TestCase.assertAllEqual", "ops.sparse_ops.sparse_reshape", "ops.sparse_ops.sparse_reshape"], "sparse_tensor.SparseTensor.from_value": [], "test.TestCase.assertAllEqual": [], "ops.sparse_ops.sparse_reshape": [], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testStaticShapeInfoPreservedWithInferredDims": ["sparse_tensor.SparseTensor.from_value", "ops.sparse_ops.sparse_reshape", "ops.sparse_ops.sparse_reshape", "test.TestCase.assertAllEqual"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest": ["framework.test_util.run_deprecated_v1"], "framework.test_util.run_deprecated_v1": [], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testRaisesIfMoreThanOneInferredDim": ["sparse_tensor.SparseTensor.from_value", "test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex", "ops.sparse_ops.sparse_reshape"], "test.TestCase.assertRaisesRegex": [], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testRaisesIfInferredShapeNotPossible": ["sparse_tensor.SparseTensor.from_value", "test.TestCase.assertRaisesRegex", "test.TestCase.assertRaisesRegex", "ops.sparse_ops.sparse_reshape"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testPropagatesFullyKnownDenseShapeWhenShapePartiallyKnown": ["ops.array_ops.placeholder", "ops.array_ops.placeholder", "ops.array_ops.concat", "framework.constant_op.constant", "sparse_tensor.SparseTensor.from_value", "ops.sparse_ops.sparse_reshape", "test.TestCase.assertAllEqual"], "framework.constant_op.constant": [], "ops.array_ops.concat": [], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testSameShape": ["test.TestCase.session", "test.TestCase.session", "ops.sparse_ops.sparse_reshape", "test.TestCase.evaluate", "test.TestCase.assertAllEqual"], "test.TestCase.session": [], "test.TestCase.evaluate": [], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedSameShape": ["test.TestCase.session", "test.TestCase.session", "test.TestCase.session", "ops.sparse_ops.sparse_reshape", "test.TestCase.assertAllEqual"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testWorksWellWithTfShape": ["test.TestCase.session", "test.TestCase.session", "test.TestCase.session", "ops.sparse_ops.sparse_reshape", "ops.array_ops.shape", "test.TestCase.assertAllEqual"], "ops.array_ops.shape": [], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedSameShapeWithInferredDim": ["test.TestCase.session", "test.TestCase.session", "test.TestCase.session", "ops.sparse_ops.sparse_reshape", "test.TestCase.assertAllEqual"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedNewShapeSameRank": ["test.TestCase.session", "test.TestCase.session", "test.TestCase.session", "test.TestCase.assertAllEqual", "ops.sparse_ops.sparse_reshape", "numpy.array"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedNewShapeSameRankWithInferredDim": ["test.TestCase.session", "test.TestCase.session", "test.TestCase.session", "test.TestCase.assertAllEqual", "ops.sparse_ops.sparse_reshape", "numpy.array"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testUpRank": ["test.TestCase.session", "test.TestCase.session", "test.TestCase.assertAllEqual", "ops.sparse_ops.sparse_reshape", "test.TestCase.evaluate", "numpy.array"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedUpRank": ["test.TestCase.session", "test.TestCase.session", "test.TestCase.session", "test.TestCase.assertAllEqual", "ops.sparse_ops.sparse_reshape", "numpy.array"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedUpRankWithInferredDim": ["test.TestCase.session", "test.TestCase.session", "test.TestCase.session", "test.TestCase.assertAllEqual", "ops.sparse_ops.sparse_reshape", "numpy.array"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedDownRank": ["test.TestCase.session", "test.TestCase.session", "test.TestCase.session", "test.TestCase.assertAllEqual", "ops.sparse_ops.sparse_reshape", "numpy.array"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedDownRankWithInferredDim": ["test.TestCase.session", "test.TestCase.session", "test.TestCase.session", "test.TestCase.assertAllEqual", "ops.sparse_ops.sparse_reshape", "numpy.array"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedMultipleInferredDims": ["test.TestCase.session", "test.TestCase.assertRaisesOpError", "test.TestCase.assertRaisesOpError", "test.TestCase.assertRaisesOpError", "ops.sparse_ops.sparse_reshape"], "test.TestCase.assertRaisesOpError": [], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testProvideStaticallyMismatchedSizes": ["sparse_tensor.SparseTensor.from_value", "test.TestCase.assertRaisesRegex", "ops.sparse_ops.sparse_reshape", "ops.sparse_ops.sparse_reshape"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedMismatchedSizes": ["test.TestCase.session", "test.TestCase.assertRaisesOpError", "test.TestCase.assertRaisesOpError", "test.TestCase.assertRaisesOpError", "ops.sparse_ops.sparse_reshape"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedMismatchedSizesWithInferredDim": ["test.TestCase.session", "test.TestCase.assertRaisesOpError", "test.TestCase.assertRaisesOpError", "test.TestCase.assertRaisesOpError", "ops.sparse_ops.sparse_reshape"], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedPartialShapes": ["ops.array_ops.placeholder", "test.TestCase.session", "test.TestCase.session", "test.TestCase.assertListEqual", "ops.sparse_ops.sparse_reshape"], "test.TestCase.assertListEqual": [], "kernel_tests.sparse_reshape_op_test.SparseReshapeTest.testFeedDenseReshapeSemantics": ["test.TestCase.session", "numpy.nonzero", "framework.sparse_tensor.SparseTensorValue", "framework.sparse_tensor.SparseTensorValue", "<builtin>.range", "numpy.reshape", "ops.sparse_ops.sparse_reshape", "numpy.random.uniform", "numpy.transpose", "test.TestCase.assertAllEqual", "numpy.prod", "numpy.random.randint", "numpy.array"], "numpy.random.randint": [], "numpy.prod": [], "<builtin>.range": [], "numpy.random.uniform": [], "numpy.nonzero": [], "numpy.transpose": [], "numpy.reshape": [], "kernel_tests.sparse_reshape_op_test.EmptySparseTensorReshapeTest._MakeAndReshapeTensor": ["<builtin>.len", "framework.sparse_tensor.SparseTensorValue", "numpy.zeros", "ops.array_ops.reshape", "ops.array_ops.zeros", "ops.sparse_ops.sparse_reshape", "test.TestCase.evaluate", "numpy.array"], "<builtin>.len": [], "numpy.zeros": [], "ops.array_ops.zeros": [], "ops.array_ops.reshape": [], "absl.testing.parameterized.named_parameters": [], "kernel_tests.sparse_reshape_op_test.EmptySparseTensorReshapeTest": ["absl.testing.parameterized.named_parameters"], "kernel_tests.sparse_reshape_op_test.EmptySparseTensorReshapeTest.testImpliedReshapeEmpty1DTensor": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual"], "kernel_tests.sparse_reshape_op_test.EmptySparseTensorReshapeTest.testImpliedReshapeEmpty2DTensor": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual"], "kernel_tests.sparse_reshape_op_test.EmptySparseTensorReshapeTest.testImpliedReshapeEmpty3DTensor": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual"], "kernel_tests.sparse_reshape_op_test.EmptySparseTensorReshapeTest.testImpliedReshapeEmpty4DTensor": ["test.TestCase.assertAllEqual", "test.TestCase.assertAllEqual"], "kernel_tests.sparse_reshape_op_test.EmptySparseTensorReshapeTest.testImpliedDimTogetherWithZeroDimCausesError": ["test.TestCase.assertRaises", "test.TestCase.assertRaises"], "test.TestCase.assertRaises": [], "platform.test.main": []}