{"model_tests.result_analyzer": [], "model_tests.result_analyzer.DataFrame.__init__": ["<builtin>.ValueError"], "<builtin>.ValueError": [], "model_tests.result_analyzer.DataFrame.n_rows": ["<builtin>.len"], "<builtin>.len": [], "model_tests.result_analyzer.DataFrame.n_columns": ["<builtin>.len"], "model_tests.result_analyzer.DataFrame.column_names": [], "model_tests.result_analyzer.DataFrame.rows": ["<builtin>.range", "<builtin>.len"], "<builtin>.range": [], "model_tests.result_analyzer.DataFrame.columns": ["<builtin>.range", "<builtin>.len"], "model_tests.result_analyzer.DataFrame.__add__": ["<builtin>.list", "itertools.chain", "<builtin>.len", "<builtin>.ValueError", "<builtin>.set", "tensorrt.trt_convert.TrtGraphConverterV2"], "<builtin>.set": [], "itertools.chain": [], "<builtin>.list": [], "model_tests.result_analyzer.DataFrame.__iadd__": [], "model_tests.result_analyzer.DataFrame.__call__": ["<builtin>.zip", "<builtin>.dict", "<builtin>.isinstance"], "<builtin>.zip": [], "<builtin>.dict": [], "<builtin>.isinstance": [], "model_tests.result_analyzer.DataFrame.__str__": ["<builtin>.str"], "<builtin>.str": [], "model_tests.result_analyzer.DataFrame.to_csv": ["<builtin>.open", "<builtin>.str"], "<builtin>.open": [], "model_tests.result_analyzer.DataFrame.to_json": ["<builtin>.zip", "<builtin>.open", "<builtin>.dict", "json.dump"], "json.dump": [], "model_tests.result_analyzer.extract_test_info": ["tensorrt.trt_convert.TrtGraphConverterV2", "<builtin>.list", "itertools.chain"], "model_tests.result_analyzer.analyze_test_latency": ["tensorrt.trt_convert.TrtGraphConverterV2", "numpy.mean", "numpy.asscalar", "<builtin>.ValueError"], "numpy.mean": [], "numpy.asscalar": [], "model_tests.result_analyzer.analyze_test_numerics": ["<builtin>.enumerate", "numpy.asscalar", "itertools.product", "<builtin>.ValueError", "tensorrt.trt_convert.TrtGraphConverterV2", "<builtin>.dict"], "model_tests.result_analyzer.analyze_test_numerics.<dict1>.<lambda1>": [], "numpy.fabs": [], "model_tests.result_analyzer.analyze_test_numerics.<lambda1>": ["numpy.fabs"], "model_tests.result_analyzer.analyze_test_numerics.<dict1>.<lambda2>": [], "model_tests.result_analyzer.analyze_test_numerics.<lambda2>": ["numpy.fabs", "numpy.fmax"], "numpy.fmax": [], "itertools.product": [], "<builtin>.enumerate": [], "model_tests.result_analyzer.check_column": ["absl.logging.error", "<builtin>.range"], "absl.logging.error": [], "model_tests.result_analyzer.ResultAnalyzer.__init__": [], "model_tests.result_analyzer.ResultAnalyzer.analysis": ["tensorrt.trt_convert.TrtGraphConverterV2", "tensorrt.trt_convert.TrtGraphConverterV2", "tensorrt.trt_convert.TrtGraphConverterV2"]}