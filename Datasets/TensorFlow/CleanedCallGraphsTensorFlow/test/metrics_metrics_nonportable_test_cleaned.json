{"metrics.metrics_nonportable_test": ["platform.test.main"], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_TFLiteMetrics_creation_no_arg_success": ["metrics.metrics.TFLiteMetrics"], "metrics.metrics.TFLiteMetrics": [], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_TFLiteMetrics_creation_arg_success": ["metrics.metrics.TFLiteMetrics"], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_TFLiteMetrics_creation_fails_with_only_hash": ["test_util.TensorFlowTestCase.assertRaises", "metrics.metrics.TFLiteMetrics"], "test_util.TensorFlowTestCase.assertRaises": [], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_TFLiteMetrics_creation_fail2_with_only_model_path": ["test_util.TensorFlowTestCase.assertRaises", "metrics.metrics.TFLiteMetrics"], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_debugger_creation_counter_increase_multiple_same_topic_success": ["metrics._counter_debugger_creation.get_cell", "<builtin>.Exception", "metrics.metrics.TFLiteMetrics", "test_util.TensorFlowTestCase.assertEqual", "gc.collect"], "metrics._counter_debugger_creation.get_cell": [], "test_util.TensorFlowTestCase.assertEqual": [], "gc.collect": [], "<builtin>.Exception": [], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_interpreter_creation_counter_increase_success": ["test_util.TensorFlowTestCase.assertEqual", "metrics._counter_interpreter_creation.get_cell", "metrics.metrics.TFLiteMetrics"], "metrics._counter_interpreter_creation.get_cell": [], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_converter_attempt_counter_increase_success": ["test_util.TensorFlowTestCase.assertEqual", "metrics._counter_conversion_attempt.get_cell", "metrics.metrics.TFLiteMetrics"], "metrics._counter_conversion_attempt.get_cell": [], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_converter_success_counter_increase_success": ["test_util.TensorFlowTestCase.assertEqual", "metrics._counter_conversion_success.get_cell", "metrics.metrics.TFLiteMetrics"], "metrics._counter_conversion_success.get_cell": [], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_converter_params_set_success": ["test_util.TensorFlowTestCase.assertEqual", "metrics._gauge_conversion_params.get_cell", "metrics.metrics.TFLiteMetrics"], "metrics._gauge_conversion_params.get_cell": [], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_converter_params_multiple_set_success": ["test_util.TensorFlowTestCase.assertEqual", "metrics._gauge_conversion_params.get_cell", "metrics.metrics.TFLiteMetrics"], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_converter_params_multiple_label_success": ["test_util.TensorFlowTestCase.assertEqual", "metrics._gauge_conversion_params.get_cell", "metrics.metrics.TFLiteMetrics"], "metrics.metrics_nonportable_test.MetricsNonportableTest.test_converter_params_set_latency": ["test_util.TensorFlowTestCase.assertEqual", "metrics._gauge_conversion_latency.get_cell", "metrics.metrics.TFLiteMetrics"], "metrics._gauge_conversion_latency.get_cell": [], "metrics.metrics_nonportable_test.ConverterMetricsTest._constructGraphDef": ["framework.ops.Graph", "client.session.Session", "framework.convert_to_constants.convert_variables_to_constants_from_session_graph", "ops.array_ops.placeholder", "ops.math_ops.add"], "framework.ops.Graph": [], "ops.array_ops.placeholder": [], "ops.math_ops.add": [], "client.session.Session": [], "framework.convert_to_constants.convert_variables_to_constants_from_session_graph": [], "metrics.metrics_nonportable_test.ConverterMetricsTest.test_conversion_from_constructor_success": ["python.lite.TFLiteConverter", "unittest.mock.create_autospec", "python.lite.TFLiteConverter", "test_util.TensorFlowTestCase.assertIsNotNone"], "python.lite.TFLiteConverter": [], "unittest.mock.create_autospec": [], "test_util.TensorFlowTestCase.assertIsNotNone": [], "metrics.metrics_nonportable_test.ConverterMetricsTest.test_conversion_from_constructor_fail": ["test_util.TensorFlowTestCase.assertRaises", "python.lite.TFLiteConverter", "unittest.mock.create_autospec", "python.lite.TFLiteConverter"], "metrics.metrics_nonportable_test.ConverterMetricsTest._getIntegerQuantizeModel": ["tensorflow.function", "numpy.random.seed", "tracking.tracking.AutoTrackable"], "numpy.random.seed": [], "tracking.tracking.AutoTrackable": [], "tensorflow.function": [], "metrics.metrics_nonportable_test.ConverterMetricsTest._getIntegerQuantizeModel.func": ["tensorflow.nn.conv2d", "tensorflow.ones", "tensorflow.nn.relu"], "tensorflow.ones": [], "tensorflow.nn.conv2d": [], "tensorflow.nn.relu": [], "metrics.metrics_nonportable_test.ConverterMetricsTest._getIntegerQuantizeModel.calibration_gen": ["<builtin>.range", "numpy.random.uniform"], "<builtin>.range": [], "numpy.random.uniform": [], "metrics.metrics_nonportable_test.ConverterMetricsTest.test_conversion_from_frozen_graph_v2": ["lite.TFLiteConverterV2.from_concrete_functions", "unittest.mock.create_autospec", "test_util.TensorFlowTestCase.assertIsNotNone", "test_util.TensorFlowTestCase.assertIsNotNone"], "lite.TFLiteConverterV2.from_concrete_functions": [], "metrics.metrics_nonportable_test.ConverterMetricsTest.test_conversion_from_keras_v2": ["keras.layers.Dense", "unittest.mock.create_autospec", "lite.TFLiteConverterV2.from_keras_model", "keras.models.Sequential"], "keras.layers.Dense": [], "keras.models.Sequential": [], "lite.TFLiteConverterV2.from_keras_model": [], "metrics.metrics_nonportable_test.ConverterMetricsTest._createV1SavedModel": ["test_util.TensorFlowTestCase.get_temp_dir", "compat.v1.Session", "saved_model.saved_model.simple_save", "compat.v1.placeholder", "tensorflow.Graph", "os.path.join", "tensorflow.Variable", "compat.v1.variables_initializer"], "test_util.TensorFlowTestCase.get_temp_dir": [], "os.path.join": [], "tensorflow.Graph": [], "compat.v1.Session": [], "compat.v1.placeholder": [], "tensorflow.Variable": [], "compat.v1.variables_initializer": [], "saved_model.saved_model.simple_save": [], "metrics.metrics_nonportable_test.ConverterMetricsTest.test_conversion_from_saved_model": ["unittest.mock.Mock", "<builtin>.set", "numpy.arange", "compat.v1.variables_initializer", "python.lite.TFLiteSavedModelConverter", "unittest.mock.create_autospec"], "<builtin>.set": [], "python.lite.TFLiteSavedModelConverter": [], "numpy.arange": [], "unittest.mock.Mock": [], "metrics.metrics_nonportable_test.ConverterMetricsTest.test_conversion_from_saved_model_v2": ["python.lite.TFLiteSavedModelConverter", "unittest.mock.create_autospec", "lite.TFLiteConverterV2.from_saved_model"], "lite.TFLiteConverterV2.from_saved_model": [], "metrics.metrics_nonportable_test.ConverterMetricsTest.disable_converter_counter_metrics": [], "metrics.metrics_nonportable_test.ConverterMetricsTest.disable_converter_counter_metrics.empty_func": [], "metrics.metrics_nonportable_test.ConverterMetricsTest.test_export_at_conversion_done": ["lite.TFLiteConverterV2.from_saved_model", "lite.TFLiteConverterV2.from_saved_model", "lite.TFLiteConverterV2.from_saved_model", "unittest.mock.MagicMock"], "unittest.mock.MagicMock": [], "metrics.metrics_nonportable_test.ConverterMetricsTest.test_export_at_exit": ["lite.TFLiteConverterV2.from_saved_model", "lite.TFLiteConverterV2.from_saved_model", "lite.TFLiteConverterV2.from_saved_model", "unittest.mock.MagicMock"], "metrics.metrics_nonportable_test.mock_ngrams": ["lite.TFLiteConverterV2.from_saved_model", "tensorflow.function"], "metrics.metrics_nonportable_test.mock_ngrams.func": ["<builtin>.slice", "ops.array_ops.stack", "ops.string_ops.reduce_join", "<builtin>.range", "framework.ops.name_scope", "ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor"], "framework.ops.name_scope": [], "ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor": [], "<builtin>.slice": [], "ops.array_ops.stack": [], "ops.string_ops.reduce_join": [], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.setUp": ["unittest.mock.create_autospec", "<builtin>.super"], "<builtin>.super": [], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.tearDown": ["<builtin>.super"], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.convert_and_check_location_info": ["<builtin>.str", "test_util.TensorFlowTestCase.assertIsNone", "test_util.TensorFlowTestCase.assertEqual", "test_util.TensorFlowTestCase.assertIn", "test_util.TensorFlowTestCase.assertLen"], "test_util.TensorFlowTestCase.assertIsNone": [], "test_util.TensorFlowTestCase.assertLen": [], "<builtin>.str": [], "test_util.TensorFlowTestCase.assertIn": [], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_failure_at_PrepareCompositeFunctionsPass": ["python.convert.register_custom_opdefs", "keras.models.Sequential", "metrics._gauge_conversion_errors.get_cell", "lite.TFLiteConverter.from_keras_model", "layers.Layer.__init__", "tensorflow.constant", "tensorflow.constant", "test_util.TensorFlowTestCase.assertEqual"], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_failure_at_PrepareCompositeFunctionsPass.NgramsLayer.call": ["test_util.TensorFlowTestCase.assertEqual"], "python.convert.register_custom_opdefs": [], "layers.Layer.__init__": [], "tensorflow.constant": [], "lite.TFLiteConverter.from_keras_model": [], "metrics._gauge_conversion_errors.get_cell": [], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_need_flex_ops": ["test_util.TensorFlowTestCase.get_temp_dir", "saved_model.saved_model.simple_save", "framework.ops.Graph", "metrics._gauge_conversion_errors.get_cell", "client.session.Session", "os.path.join", "lite.TFLiteConverterV2.from_saved_model", "lite.TFLiteConverterV2.from_saved_model", "lite.TFLiteConverterV2.from_saved_model", "test_util.TensorFlowTestCase.assertEqual", "framework.importer.import_graph_def"], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_need_flex_ops.create_graph_with_custom_add": ["python.convert.register_custom_opdefs", "framework.ops.Graph", "framework.graph_pb2.GraphDef", "client.session.Session", "ops.array_ops.placeholder"], "framework.graph_pb2.GraphDef": [], "framework.importer.import_graph_def": [], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_unsupported_control_flow_v1": ["metrics._gauge_conversion_errors.get_cell", "metrics._gauge_conversion_errors.get_cell", "platform.resource_loader.get_path_to_datafile", "lite.TFLiteConverterV2.from_saved_model", "test_util.TensorFlowTestCase.assertEqual"], "platform.resource_loader.get_path_to_datafile": [], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_location_from_concrete_functions": ["tensorflow.TensorSpec", "lite.TFLiteConverter.from_concrete_functions", "tensorflow.function", "tensorflow.function"], "tensorflow.TensorSpec": [], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_location_from_concrete_functions.model": ["tensorflow.add"], "tensorflow.add": [], "lite.TFLiteConverter.from_concrete_functions": [], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_location_from_saved_model": ["tempfile.TemporaryDirectory", "tensorflow.saved_model.save", "lite.TFLiteConverter.from_saved_model", "lite.TFLiteConverter.from_saved_model", "tensorflow.saved_model.SaveOptions", "tensorflow.Module.__init__"], "tempfile.TemporaryDirectory": [], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_location_from_saved_model.Adder": ["tensorflow.function"], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_location_from_saved_model.Adder.serving_default": ["tensorflow.add"], "tensorflow.Module.__init__": [], "tensorflow.saved_model.SaveOptions": [], "tensorflow.saved_model.save": [], "lite.TFLiteConverter.from_saved_model": [], "absl.testing.parameterized.named_parameters": [], "metrics.metrics_nonportable_test.ConverterErrorMetricTest": ["absl.testing.parameterized.named_parameters"], "metrics.metrics_nonportable_test.ConverterErrorMetricTest.test_location_from_keras_model": ["lite.TFLiteConverter.from_keras_model", "tensorflow.keras.Model", "tensorflow.keras.Model", "keras.layers.Add", "keras.layers.Input"], "keras.layers.Input": [], "keras.layers.Add": [], "tensorflow.keras.Model": [], "platform.test.main": []}