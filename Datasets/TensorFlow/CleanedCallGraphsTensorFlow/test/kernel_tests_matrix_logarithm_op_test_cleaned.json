{"kernel_tests.matrix_logarithm_op_test": ["platform.test.main"], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest._verifyLogarithm": ["test.TestCase.evaluate", "ops.gen_linalg_ops.matrix_logarithm", "test.TestCase.assertAllClose", "linalg.linalg_impl.matrix_exponential", "framework.test_util.use_gpu"], "framework.test_util.use_gpu": [], "ops.gen_linalg_ops.matrix_logarithm": [], "linalg.linalg_impl.matrix_exponential": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest._verifyLogarithmComplex": ["framework.test_util.use_gpu"], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest._makeBatch": ["numpy.concatenate", "numpy.tile", "numpy.expand_dims"], "numpy.expand_dims": [], "numpy.concatenate": [], "numpy.tile": [], "framework.test_util.run_in_graph_and_eager_modes": [], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest": ["framework.test_util.run_in_graph_and_eager_modes"], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest.testNonsymmetric": ["framework.test_util.run_in_graph_and_eager_modes", "numpy.array", "framework.test_util.run_in_graph_and_eager_modes"], "numpy.array": [], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest.testSymmetricPositiveDefinite": ["framework.test_util.run_in_graph_and_eager_modes", "numpy.array", "framework.test_util.run_in_graph_and_eager_modes"], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest.testNonSquareMatrix": ["ops.gen_linalg_ops.matrix_logarithm", "numpy.array", "test.TestCase.assertRaises"], "test.TestCase.assertRaises": [], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest.testWrongDimensions": ["ops.gen_linalg_ops.matrix_logarithm", "test.TestCase.assertRaises", "framework.constant_op.constant"], "framework.constant_op.constant": [], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest.testEmpty": ["framework.constant_op.constant", "numpy.empty"], "numpy.empty": [], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest.testRandomSmallAndLargeComplex64": ["framework.constant_op.constant", "numpy.prod", "numpy.random.seed", "numpy.random.uniform"], "numpy.random.seed": [], "numpy.prod": [], "numpy.random.uniform": [], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest.testRandomSmallAndLargeComplex128": ["framework.constant_op.constant", "numpy.prod", "numpy.random.seed", "numpy.random.uniform"], "kernel_tests.matrix_logarithm_op_test.LogarithmOpTest.testConcurrentExecutesWithoutError": ["test.TestCase.evaluate", "test.TestCase.assertAllEqual", "ops.math_ops.cast", "ops.gen_linalg_ops.matrix_logarithm", "ops.stateless_random_ops.stateless_random_normal"], "ops.stateless_random_ops.stateless_random_normal": [], "ops.math_ops.cast": [], "test.TestCase.assertAllEqual": [], "kernel_tests.matrix_logarithm_op_test.MatrixLogarithmBenchmark._GenerateMatrix": ["numpy.diag", "numpy.ones", "numpy.tile", "ops.variables.Variable"], "numpy.ones": [], "numpy.diag": [], "ops.variables.Variable": [], "kernel_tests.matrix_logarithm_op_test.MatrixLogarithmBenchmark.benchmarkMatrixLogarithmOp": ["ops.variables.global_variables_initializer", "framework.ops.device", "platform.benchmark.benchmark_config", "ops.control_flow_ops.group", "ops.gen_linalg_ops.matrix_logarithm", "framework.ops.Graph", "client.session.Session", "test.Benchmark.evaluate", "test.Benchmark.evaluate", "test.Benchmark.run_op_benchmark"], "framework.ops.Graph": [], "platform.benchmark.benchmark_config": [], "client.session.Session": [], "framework.ops.device": [], "ops.variables.global_variables_initializer": [], "test.Benchmark.evaluate": [], "ops.control_flow_ops.group": [], "test.Benchmark.run_op_benchmark": [], "platform.test.main": []}