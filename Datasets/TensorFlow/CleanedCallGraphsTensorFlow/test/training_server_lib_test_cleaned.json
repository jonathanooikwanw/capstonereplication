{"training.server_lib_test": ["platform.test.main"], "training.server_lib_test.GrpcServerTest.__init__": ["server_lib.Server.create_local_server", "<builtin>.super"], "<builtin>.super": [], "server_lib.Server.create_local_server": [], "training.server_lib_test.GrpcServerTest.testRunStep": ["client.session.Session", "framework.constant_op.constant", "ops.math_ops.matmul", "framework.ops.Graph", "test.TestCase.assertAllEqual"], "framework.ops.Graph": [], "client.session.Session": [], "framework.constant_op.constant": [], "ops.math_ops.matmul": [], "test.TestCase.assertAllEqual": [], "training.server_lib_test.GrpcServerTest.testMultipleSessions": ["client.session.Session", "framework.constant_op.constant", "ops.math_ops.matmul", "framework.ops.Graph", "test.TestCase.assertAllEqual"], "training.server_lib_test.GrpcServerTest.testResetFails": ["ops.variables.global_variables_initializer", "protobuf.config_pb2.ConfigProto", "test.TestCase.assertRaises", "framework.ops.Graph", "client.session.Session", "session.Session.reset", "framework.ops.container", "ops.variables.VariableV1", "test.TestCase.assertAllEqual"], "framework.ops.container": [], "ops.variables.VariableV1": [], "test.TestCase.assertRaises": [], "session.Session.reset": [], "protobuf.config_pb2.ConfigProto": [], "ops.variables.global_variables_initializer": [], "training.server_lib_test.GrpcServerTest._useRPCConfig": ["protobuf.config_pb2.RPCOptions", "protobuf.config_pb2.ConfigProto"], "protobuf.config_pb2.RPCOptions": [], "training.server_lib_test.GrpcServerTest.testLargeConstant": ["ops.array_ops.shape", "client.session.Session", "framework.constant_op.constant", "training.server_lib_test.GrpcServerTest._useRPCConfig", "numpy.empty", "test.TestCase.assertAllEqual"], "numpy.empty": [], "ops.array_ops.shape": [], "training.server_lib_test.GrpcServerTest.testLargeFetch": ["client.session.Session", "training.server_lib_test.GrpcServerTest._useRPCConfig", "numpy.empty", "ops.array_ops.fill", "test.TestCase.assertAllEqual"], "ops.array_ops.fill": [], "training.server_lib_test.GrpcServerTest.testLargeFeed": ["ops.math_ops.reduce_max", "test.TestCase.assertEqual", "ops.array_ops.placeholder", "client.session.Session", "ops.math_ops.reduce_min", "training.server_lib_test.GrpcServerTest._useRPCConfig", "numpy.empty"], "ops.array_ops.placeholder": [], "ops.math_ops.reduce_min": [], "ops.math_ops.reduce_max": [], "test.TestCase.assertEqual": [], "training.server_lib_test.GrpcServerTest.testCloseCancelsBlockingOperation": ["ops.data_flow_ops.FIFOQueue", "test.TestCase.checkedThread", "time.sleep", "client.session.Session", "training.server_lib_test.GrpcServerTest._useRPCConfig", "framework.ops.Graph"], "ops.data_flow_ops.FIFOQueue": [], "training.server_lib_test.GrpcServerTest.testCloseCancelsBlockingOperation.blocking_dequeue": ["test.TestCase.assertRaisesRegex"], "test.TestCase.assertRaisesRegex": [], "test.TestCase.checkedThread": [], "time.sleep": [], "training.server_lib_test.GrpcServerTest.testInteractiveSession": ["test.TestCase.evaluate", "client.session.InteractiveSession", "test.TestCase.assertEqual", "framework.constant_op.constant"], "client.session.InteractiveSession": [], "test.TestCase.evaluate": [], "training.server_lib_test.GrpcServerTest.testSetConfiguration": ["training.server_lib.Server", "protobuf.config_pb2.GPUOptions", "protobuf.config_pb2.ConfigProto", "protobuf.tensorflow_server_pb2.ServerDef", "test.TestCase.assertEqual", "training.server_lib.ClusterSpec", "server_lib.Server.create_local_server"], "protobuf.config_pb2.GPUOptions": [], "training.server_lib.ClusterSpec": [], "protobuf.tensorflow_server_pb2.ServerDef": [], "training.server_lib.Server": [], "training.server_lib_test.GrpcServerTest.testRestartedMaster": ["test.TestCase.assertRaisesRegex", "protobuf.config_pb2.ConfigProto", "client.session.Session", "framework.ops.device", "framework.constant_op.constant", "training.server_lib_test.GrpcServerTest.testRestartedMaster.get_cluster_def", "framework.ops.Graph", "training.server_lib_test.GrpcServerTest.testRestartedMaster.check_session_devices", "server_lib.Server.create_local_server", "test.TestCase.assertAllEqual"], "training.server_lib_test.GrpcServerTest.testRestartedMaster.get_cluster_def": ["<builtin>.len", "protobuf.cluster_pb2.ClusterDef"], "protobuf.cluster_pb2.ClusterDef": [], "<builtin>.len": [], "training.server_lib_test.GrpcServerTest.testRestartedMaster.check_session_devices": ["<builtin>.set", "test.TestCase.assertIn"], "<builtin>.set": [], "test.TestCase.assertIn": [], "framework.ops.device": [], "training.server_lib_test.GrpcServerTest.testInvalidHostname": ["test.TestCase.assertRaisesRegex", "training.server_lib.Server"], "training.server_lib_test.GrpcServerTest.testTimeoutRaisesException": ["protobuf.config_pb2.RunOptions", "ops.data_flow_ops.FIFOQueue", "test.TestCase.assertRaises", "client.session.Session", "training.server_lib_test.GrpcServerTest._useRPCConfig", "framework.ops.Graph"], "protobuf.config_pb2.RunOptions": [], "training.server_lib_test.GrpcServerTest.testTwoServersSamePort": ["training.server_lib.Server", "<builtin>.len", "test.TestCase.assertRaises"], "training.server_lib_test.GrpcServerTest.testExtendAfterQueueRunners": ["ops.variables.global_variables_initializer", "training.queue_runner_impl.start_queue_runners", "training.input.input_producer", "client.session.Session", "framework.constant_op.constant", "test.TestCase.assertIsNotNone", "ops.variables.VariableV1"], "training.input.input_producer": [], "test.TestCase.assertIsNotNone": [], "training.queue_runner_impl.start_queue_runners": [], "training.server_lib_test.GrpcServerTest.testIsolateSessionState": ["test.TestCase.assertRaises", "ops.array_ops.placeholder", "client.session.Session", "ops.variables.VariableV1", "framework.ops.Graph", "protobuf.config_pb2.ConfigProto", "test.TestCase.assertAllEqual"], "training.server_lib_test.GrpcServerTest.testShapeChangingIsolateState": ["protobuf.config_pb2.ConfigProto", "test.TestCase.assertRaises", "client.session.Session", "framework.ops.Graph", "ops.variables.VariableV1", "test.TestCase.assertAllEqual"], "training.server_lib_test.ServerDefTest.testLocalServer": ["training.server_lib.ClusterSpec", "test.TestCase.assertProtoEquals", "protobuf.tensorflow_server_pb2.ServerDef"], "test.TestCase.assertProtoEquals": [], "training.server_lib_test.ServerDefTest.testTwoProcesses": ["training.server_lib.ClusterSpec", "test.TestCase.assertProtoEquals", "protobuf.tensorflow_server_pb2.ServerDef"], "training.server_lib_test.ServerDefTest.testTwoJobs": ["training.server_lib.ClusterSpec", "test.TestCase.assertProtoEquals", "protobuf.tensorflow_server_pb2.ServerDef"], "training.server_lib_test.ServerDefTest.testDenseAndSparseJobs": ["training.server_lib.ClusterSpec", "test.TestCase.assertProtoEquals", "protobuf.tensorflow_server_pb2.ServerDef"], "training.server_lib_test.ClusterSpecTest.testStringConversion": ["training.server_lib.ClusterSpec", "test.TestCase.assertEqual", "<builtin>.str"], "<builtin>.str": [], "training.server_lib_test.ClusterSpecTest.testProtoDictDefEquivalences": ["training.server_lib.ClusterSpec", "test.TestCase.assertProtoEquals"], "training.server_lib_test.ClusterSpecTest.testProtoDictDefEquivalencesWithStringTaskIndex": ["training.server_lib.ClusterSpec", "test.TestCase.assertProtoEquals"], "training.server_lib_test.ClusterSpecTest.testProtoDictDefEquivalencesWithZeroWorker": ["training.server_lib.ClusterSpec", "test.TestCase.assertProtoEquals"], "training.server_lib_test.ClusterSpecTest.testClusterSpecAccessors": ["training.server_lib.ClusterSpec", "test.TestCase.assertEqual", "test.TestCase.assertRaises"], "training.server_lib_test.ClusterSpecTest.testEmptyClusterSpecIsFalse": ["training.server_lib.ClusterSpec", "test.TestCase.assertFalse"], "test.TestCase.assertFalse": [], "training.server_lib_test.ClusterSpecTest.testNonEmptyClusterSpecIsTrue": ["training.server_lib.ClusterSpec", "test.TestCase.assertTrue"], "test.TestCase.assertTrue": [], "training.server_lib_test.ClusterSpecTest.testEq": ["training.server_lib.ClusterSpec", "test.TestCase.assertEqual"], "training.server_lib_test.ClusterSpecTest.testNe": ["training.server_lib.ClusterSpec", "test.TestCase.assertNotEquals"], "test.TestCase.assertNotEquals": [], "platform.test.main": []}