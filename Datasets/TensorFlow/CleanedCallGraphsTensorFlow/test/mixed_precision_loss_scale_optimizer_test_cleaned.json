{"mixed_precision.loss_scale_optimizer_test": ["platform.test.main"], "mixed_precision.loss_scale_optimizer_test.create_mirrored_strategy": ["framework.config.list_logical_devices", "distribute.mirrored_strategy.MirroredStrategy"], "framework.config.list_logical_devices": [], "distribute.mirrored_strategy.MirroredStrategy": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest._run_if_in_graph_mode": ["test.TestCase.evaluate", "eager.context.executing_eagerly"], "eager.context.executing_eagerly": [], "test.TestCase.evaluate": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest._run_fn_with_grad_check": ["mixed_precision.test_util.create_identity_with_grad_check_fn"], "mixed_precision.test_util.create_identity_with_grad_check_fn": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest._run_fn_with_grad_check.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest._run_fn_with_grad_check.<lambda2>": [], "absl.testing.parameterized.named_parameters": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest": ["keras.combinations.generate", "keras.combinations.combine", "absl.testing.parameterized.named_parameters"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testFixedLossScaleAppliedToLossWithMinimize": ["mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertIsInstance", "test.TestCase.assertIsInstance", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertEqual"], "ops.variables.Variable": [], "optimizer_v2.gradient_descent.SGD": [], "mixed_precision.loss_scale_optimizer.LossScaleOptimizer": [], "test.TestCase.assertEqual": [], "test.TestCase.assertIsInstance": [], "ops.variables.global_variables_initializer": [], "test.TestCase.assertAllClose": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testFixedLossScaleAppliedToLossWithGetGradients": ["test.TestCase.evaluate", "ops.variables.Variable", "framework.ops.Graph", "mixed_precision.test_util.create_identity_with_grad_check_fn", "ops.variables.global_variables_initializer", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "framework.ops.Graph": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicAttrsWithFixedLossScale": ["test.TestCase.assertFalse", "test.TestCase.assertIsNone", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "test.TestCase.assertFalse": [], "test.TestCase.assertIsNone": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testGetScaledLoss": ["framework.ops.convert_to_tensor_v2_with_dispatch", "test.TestCase.evaluate", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertEqual"], "framework.ops.convert_to_tensor_v2_with_dispatch": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testGetScaledLoss.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testGetScaledLoss.<lambda2>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testGetUnscaledGradients": ["framework.ops.convert_to_tensor_v2_with_dispatch", "test.TestCase.evaluate", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertEqual"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testGetUnscaledSparseGradients": ["framework.ops.convert_to_tensor_v2_with_dispatch", "test.TestCase.evaluate", "test.TestCase.assertIsInstance", "framework.ops.IndexedSlices", "test.TestCase.assertAllEqual", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "framework.ops.IndexedSlices": [], "test.TestCase.assertAllEqual": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicLossScale": ["mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertIsInstance", "test.TestCase.assertIsInstance", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertEqual"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicLossScaleDefaultValues": ["mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "test.TestCase.evaluate", "ops.variables.global_variables_initializer", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertEqual"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testClipping": ["test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertEqual", "<builtin>.setattr", "test.TestCase.subTest", "<builtin>.getattr", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "test.TestCase.subTest": [], "<builtin>.getattr": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testClipping.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testClipping.<lambda2>": [], "<builtin>.setattr": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testClipping.<lambda3>": ["<builtin>.float"], "<builtin>.float": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testClipping.<lambda4>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicUpdate": ["test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicUpdate.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicUpdate.<lambda2>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicUpdate.<lambda3>": ["<builtin>.float"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicUpdate.<lambda4>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicLossScaleWithFloat16Loss": ["test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicLossScaleWithFloat16Loss.loss": ["ops.math_ops.cast"], "ops.math_ops.cast": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicLossScaleWithFloat16Loss.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testNanOnOneReplicaOnly": ["mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "framework.test_util.is_gpu_available", "ops.control_flow_v2_toggles.control_flow_v2_enabled", "test.TestCase.assertAllClose", "optimizer_v2.gradient_descent.SGD", "test.TestCase.skipTest", "eager.context.executing_eagerly"], "framework.test_util.is_gpu_available": [], "test.TestCase.skipTest": [], "ops.control_flow_v2_toggles.control_flow_v2_enabled": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testNanOnOneReplicaOnly.loss": ["distribute.distribution_strategy_context.get_replica_context", "ops.control_flow_ops.cond", "framework.constant_op.constant"], "distribute.distribution_strategy_context.get_replica_context": [], "framework.constant_op.constant": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testNanOnOneReplicaOnly.loss.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testNanOnOneReplicaOnly.loss.<lambda2>": ["framework.constant_op.constant"], "ops.control_flow_ops.cond": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testNanOnOneReplicaOnly.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testCustomAggregater": ["test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testCustomAggregater.gradient_aggregator": ["<builtin>.list", "<builtin>.float"], "<builtin>.list": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testCustomAggregater.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicLossScaleWithSlots": ["mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "test.TestCase.evaluate", "<builtin>.isinstance", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "ops.control_flow_v2_toggles.control_flow_v2_enabled", "test.TestCase.assertAllClose", "optimizer_v2.gradient_descent.SGD", "test.TestCase.skipTest", "eager.context.executing_eagerly"], "<builtin>.isinstance": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicLossScaleWithSlots.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicLossScaleWithSlots.<lambda2>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testIterations": ["test.TestCase.assertEqual", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testIterationsIncremented": ["test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testIterationsIncremented.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testIterationsIncremented.<lambda2>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testIterationsIncremented.<lambda3>": ["<builtin>.float"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testIterationsIncremented.<lambda4>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testWeightMethods": ["test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.test_session", "test.TestCase.assertLen", "test.TestCase.assertEqual", "ops.variables.global_variables_initializer", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "test.TestCase.test_session": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testWeightMethods.<lambda1>": [], "test.TestCase.assertLen": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testHyperParametersExposed": ["test.TestCase.evaluate", "test.TestCase.assertEqual", "test.TestCase.assertIsInstance", "test.TestCase.assertIsInstance", "test.TestCase.cached_session", "optimizer_v2.adam.Adam", "test.TestCase.assertRaises", "ops.variables.global_variables_initializer", "test.TestCase.assertIs", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "test.TestCase.cached_session": [], "optimizer_v2.adam.Adam": [], "test.TestCase.assertIs": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testHyperParametersExposed.MyOpt.__init__": ["gradient_descent.SGD._set_hyper", "<builtin>.super"], "<builtin>.super": [], "gradient_descent.SGD._set_hyper": [], "test.TestCase.assertRaises": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testArbitraryAttributesNotExposed": ["test.TestCase.assertFalse", "test.TestCase.assertTrue", "test.TestCase.assertRaisesRegex", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "test.TestCase.assertRaisesRegex": [], "test.TestCase.assertTrue": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDir": ["<builtin>.dir", "test.TestCase.assertIn", "test.TestCase.assertNotIn", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "<builtin>.dir": [], "test.TestCase.assertIn": [], "test.TestCase.assertNotIn": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testApplyGradientsGetsUnwrappedTensors": ["ops.variables.Variable", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "gradient_descent.SGD.__init__", "gradient_descent.SGD.__init__"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testApplyGradientsGetsUnwrappedTensors.MyOptimizer.apply_gradients": ["test.TestCase.assertIsInstance", "<builtin>.super"], "gradient_descent.SGD.__init__": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testApplyGradientsGetsUnwrappedTensors.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testApplyGradientsGetsUnwrappedTensors.<lambda2>": ["gradient_descent.SGD.minimize"], "gradient_descent.SGD.minimize": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testV1Optimizer": ["test.TestCase.evaluate", "test.TestCase.assertIsNone", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertIsInstance", "test.TestCase.assertIsInstance", "mixed_precision.loss_scale_optimizer.LossScaleOptimizerV1", "ops.variables.global_variables_initializer", "test.TestCase.assertAllClose", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertEqual"], "mixed_precision.loss_scale_optimizer.LossScaleOptimizerV1": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testV1Optimizer.<lambda1>": ["<builtin>.float"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testV1Optimizer.<lambda2>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testPassingV1LossScale": ["test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertIsInstance", "test.TestCase.assertIsInstance", "experimental.loss_scale.DynamicLossScale", "mixed_precision.loss_scale_optimizer.LossScaleOptimizerV1", "ops.variables.global_variables_initializer", "experimental.loss_scale.FixedLossScale", "test.TestCase.assertAllClose", "optimizer_v2.gradient_descent.SGD", "test.TestCase.assertEqual"], "experimental.loss_scale.FixedLossScale": [], "experimental.loss_scale.DynamicLossScale": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testPassingV1LossScaleErrors": ["test.TestCase.assertRaisesRegex", "loss_scale.LossScale.__init__", "experimental.loss_scale.DynamicLossScale", "mixed_precision.loss_scale_optimizer.LossScaleOptimizerV1", "optimizer_v2.gradient_descent.SGD"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testPassingV1LossScaleErrors.MyLossScale.__call__": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testPassingV1LossScaleErrors.MyLossScale.update": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testPassingV1LossScaleErrors.MyLossScale.get_config": [], "loss_scale.LossScale.__init__": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testLossScaleDelegationWithWrapper": ["test.TestCase.evaluate", "test.TestCase.assertEqual", "test.TestCase.cached_session", "test.TestCase.cached_session", "ops.variables.global_variables_initializer", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testLossScaleDelegationWithWrapper.MyOptimizer.__init__": ["optimizer_v2.adam.Adam", "<builtin>.super"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testLossScaleDelegationWithWrapper.MyOptimizer.learning_rate": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testLossScaleDelegationWithWrapper.MyOptimizer.get_config": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testCheckpoint": ["test.TestCase.get_temp_dir", "test.TestCase.evaluate", "<builtin>.isinstance", "ops.variables.Variable", "os.path.join", "test.TestCase.test_session", "test.TestCase.test_session", "test.TestCase.assertEqual", "tracking.util.Checkpoint", "gradient_descent.SGD.get_slot", "ops.variables.global_variables_initializer", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "eager.context.executing_eagerly"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testCheckpoint.MySGD.__init__": ["gradient_descent.SGD._track_trackable", "ops.variables.Variable", "<builtin>.super"], "gradient_descent.SGD._track_trackable": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testCheckpoint.<lambda1>": ["gradient_descent.SGD.minimize"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testCheckpoint.<lambda1>.<lambda1>": [], "gradient_descent.SGD.get_slot": [], "tracking.util.Checkpoint": [], "test.TestCase.get_temp_dir": [], "os.path.join": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testCheckpoint.<lambda2>": ["gradient_descent.SGD.minimize"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testCheckpoint.<lambda2>.<lambda1>": [], "keras.combinations.combine": [], "keras.combinations.generate": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testGetConfigFixed": ["test.TestCase.assertFalse", "test.TestCase.evaluate", "test.TestCase.assertIsNone", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertEqual", "loss_scale_optimizer.LossScaleOptimizerV1.from_config", "loss_scale_optimizer.LossScaleOptimizerV1.from_config", "distribute.distribution_strategy_context.get_strategy", "mixed_precision.loss_scale_optimizer.LossScaleOptimizerV1", "loss_scale_optimizer.LossScaleOptimizer.from_config", "ops.variables.global_variables_initializer", "ops.variables.global_variables_initializer", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "loss_scale_optimizer.LossScaleOptimizerV1.from_config": [], "loss_scale_optimizer.LossScaleOptimizer.from_config": [], "distribute.distribution_strategy_context.get_strategy": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testGetConfigDynamic": ["test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertTrue", "test.TestCase.assertEqual", "loss_scale_optimizer.LossScaleOptimizerV1.from_config", "loss_scale_optimizer.LossScaleOptimizerV1.from_config", "distribute.distribution_strategy_context.get_strategy", "experimental.loss_scale.DynamicLossScale", "mixed_precision.loss_scale_optimizer.LossScaleOptimizerV1", "loss_scale_optimizer.LossScaleOptimizer.from_config", "ops.variables.global_variables_initializer", "ops.variables.global_variables_initializer", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.test_from_config_with_invalid_multiplier": ["loss_scale_optimizer.LossScaleOptimizerV1.from_config", "loss_scale_optimizer.LossScaleOptimizer.from_config", "test.TestCase.assertRaisesRegex"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testSerializationWithBuiltInOptimizer": ["keras.optimizers.serialize", "test.TestCase.evaluate", "ops.variables.Variable", "ops.variables.Variable", "test.TestCase.assertTrue", "test.TestCase.assertEqual", "test.TestCase.assertEqual", "keras.optimizers.deserialize", "distribute.distribution_strategy_context.get_strategy", "experimental.loss_scale.DynamicLossScale", "test.TestCase.assertAllEqual", "mixed_precision.loss_scale_optimizer.LossScaleOptimizerV1", "ops.variables.global_variables_initializer", "<builtin>.type", "ops.variables.global_variables_initializer", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "keras.optimizers.serialize": [], "keras.optimizers.deserialize": [], "<builtin>.type": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testSerializationWithCustomOptimizer": ["keras.optimizers.serialize", "test.TestCase.evaluate", "test.TestCase.evaluate", "test.TestCase.assertEqual", "keras.optimizers.deserialize", "ops.variables.global_variables_initializer", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testSerializationWithCustomOptimizer.MySGD.__init__": ["<builtin>.super"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testUnsupportedStrategy": ["ops.variables.Variable", "test.TestCase.assertRaisesRegex", "distribute.central_storage_strategy.CentralStorageStrategy", "optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer"], "distribute.central_storage_strategy.CentralStorageStrategy": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testUnsupportedStrategy.<lambda1>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testUnsupportedStrategy.<lambda2>": [], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testInvalidArgsWithFixedLossScale": ["optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "test.TestCase.assertRaisesRegex"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testDynamicMustBeBool": ["optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "test.TestCase.assertRaisesRegex"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testErrorWhenNesting": ["optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "test.TestCase.assertRaisesRegex"], "mixed_precision.loss_scale_optimizer_test.LossScaleOptimizerTest.testErrorWrappingSameOptimizerMultipleTimes": ["optimizer_v2.gradient_descent.SGD", "mixed_precision.loss_scale_optimizer.LossScaleOptimizer", "test.TestCase.assertRaisesRegex"], "platform.test.main": []}