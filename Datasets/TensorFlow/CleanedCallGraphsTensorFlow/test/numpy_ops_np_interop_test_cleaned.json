{"numpy_ops.np_interop_test": ["v2.test.main", "numpy_ops.np_math_ops.enable_numpy_methods_on_tensor", "framework.ops.enable_numpy_style_type_promotion", "compat.v1.enable_eager_execution"], "numpy_ops.np_interop_test.ReadmeTest.testBroadcastAdd": ["test.TestCase.assertAllClose", "ops.numpy_ops.ones", "numpy.ones"], "ops.numpy_ops.ones": [], "numpy.ones": [], "test.TestCase.assertAllClose": [], "numpy_ops.np_interop_test.ReadmeTest.testTypePromotion": ["test.TestCase.assertAllClose", "ops.numpy_ops.ones", "test.TestCase.assertEqual"], "test.TestCase.assertEqual": [], "numpy_ops.np_interop_test.ReadmeTest.testTFInterop": ["test.TestCase.assertAllClose", "ops.numpy_ops.ones", "numpy.ones", "ops.numpy_ops.sum", "compat.v2.ones", "numpy.sum"], "compat.v2.ones": [], "ops.numpy_ops.sum": [], "numpy.sum": [], "numpy_ops.np_interop_test.ReadmeTest.testOnpInterop": ["numpy.sum", "test.TestCase.assertAllClose", "ops.numpy_ops.ones", "numpy.ones"], "numpy_ops.np_interop_test.ReadmeTest.testDevice": ["test.TestCase.assertIn", "ops.numpy_ops.ones", "compat.v2.device", "compat.v2.convert_to_tensor", "v2.test.is_gpu_available"], "v2.test.is_gpu_available": [], "compat.v2.device": [], "compat.v2.convert_to_tensor": [], "test.TestCase.assertIn": [], "numpy_ops.np_interop_test.ReadmeTest.testFunction": ["v2.test.is_gpu_available", "test.TestCase.assertAllClose", "compat.v2.function", "ops.numpy_ops.ones", "numpy.ones", "numpy.sum", "compat.v2.ones"], "compat.v2.function": [], "numpy_ops.np_interop_test.ReadmeTest.testFunction.f": ["ops.numpy_ops.sum"], "numpy_ops.np_interop_test.InteropTest.setUp": ["<builtin>.range", "v2.config.list_physical_devices", "v2.config.set_logical_device_configuration", "<builtin>.super", "v2.config.get_logical_device_configuration", "v2.config.LogicalDeviceConfiguration"], "<builtin>.super": [], "v2.config.list_physical_devices": [], "v2.config.get_logical_device_configuration": [], "v2.config.LogicalDeviceConfiguration": [], "<builtin>.range": [], "v2.config.set_logical_device_configuration": [], "numpy_ops.np_interop_test.InteropTest.testGradientTapeInterop": ["compat.v2.GradientTape", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "test.TestCase.assertAllClose"], "compat.v2.GradientTape": [], "ops.numpy_ops.asarray": [], "test.TestCase.assertIsInstance": [], "numpy_ops.np_interop_test.InteropTest.testGradientTapeNoneGradients": ["compat.v2.GradientTape", "ops.numpy_ops.asarray", "test.TestCase.assertIsNone"], "test.TestCase.assertIsNone": [], "numpy_ops.np_interop_test.InteropTest.testCondInterop": ["compat.v2.function", "ops.numpy_ops.asarray", "ops.numpy_ops.asarray", "test.TestCase.assertAllClose"], "numpy_ops.np_interop_test.InteropTest.testCondInterop.fn": ["compat.v2.cond"], "numpy_ops.np_interop_test.InteropTest.testCondInterop.fn.<lambda1>": [], "numpy_ops.np_interop_test.InteropTest.testCondInterop.fn.<lambda2>": [], "compat.v2.cond": [], "numpy_ops.np_interop_test.InteropTest.testCondInterop.fn.<lambda3>": [], "numpy_ops.np_interop_test.InteropTest.testCondInterop.fn.<lambda4>": [], "numpy_ops.np_interop_test.InteropTest.testWhileInterop": ["compat.v2.function", "compat.v2.function", "test.TestCase.assertEqual"], "numpy_ops.np_interop_test.InteropTest.testWhileInterop.fn": ["ops.numpy_ops.asarray", "compat.v2.while_loop"], "numpy_ops.np_interop_test.InteropTest.testWhileInterop.fn.<lambda1>": [], "numpy_ops.np_interop_test.InteropTest.testWhileInterop.fn.<lambda2>": [], "compat.v2.while_loop": [], "numpy_ops.np_interop_test.InteropTest.testTensorTFNPArrayInterop": ["test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "compat.v2.constant", "test.TestCase.assertEqual"], "compat.v2.constant": [], "numpy_ops.np_interop_test.InteropTest.testTensorTFNPOp": ["test.TestCase.assertIsInstance", "compat.v2.constant", "ops.numpy_ops.square", "test.TestCase.assertEqual"], "ops.numpy_ops.square": [], "numpy_ops.np_interop_test.InteropTest.testTFNPArrayTFOpInterop": ["test.TestCase.assertEqual", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "compat.v2.square"], "compat.v2.square": [], "numpy_ops.np_interop_test.InteropTest.testTFNPArrayNPOpInterop": ["numpy.square", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "test.TestCase.assertEqual"], "numpy.square": [], "numpy_ops.np_interop_test.InteropTest.testArrayModule": ["ops.numpy_ops.asarray", "test.TestCase.skipTest", "test.TestCase.assertIs"], "test.TestCase.skipTest": [], "test.TestCase.assertIs": [], "numpy_ops.np_interop_test.InteropTest.testDistStratInterop": ["test.TestCase.assertAllClose", "compat.v2.function", "v2.distribute.MirroredStrategy", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "test.TestCase.assertLen"], "v2.distribute.MirroredStrategy": [], "numpy_ops.np_interop_test.InteropTest.testDistStratInterop.run": ["ops.numpy_ops.asarray", "v2.distribute.get_replica_context"], "v2.distribute.get_replica_context": [], "test.TestCase.assertLen": [], "framework.test_util.disable_tfrt": [], "numpy_ops.np_interop_test.InteropTest": ["framework.test_util.disable_tfrt"], "numpy_ops.np_interop_test.InteropTest.testPyFuncInterop": ["test.TestCase.assertAllClose", "compat.v2.function", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "ops.numpy_ops.asarray"], "numpy_ops.np_interop_test.InteropTest.testPyFuncInterop.py_func_fn": [], "numpy_ops.np_interop_test.InteropTest.testPyFuncInterop.fn": ["compat.v2.py_function", "ops.numpy_ops.asarray"], "compat.v2.py_function": [], "numpy_ops.np_interop_test.InteropTest.testDatasetInterop": ["data.Dataset.from_tensor_slices", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "test.TestCase.assertAllEqual", "data.Dataset.from_tensors", "<builtin>.zip"], "data.Dataset.from_tensors": [], "<builtin>.zip": [], "test.TestCase.assertAllEqual": [], "data.Dataset.from_tensor_slices": [], "numpy_ops.np_interop_test.InteropTest.testDatasetInterop.<lambda1>": ["ops.numpy_ops.add"], "ops.numpy_ops.add": [], "numpy_ops.np_interop_test.InteropTest.testKerasInterop": ["test.TestCase.assertAllClose", "v2.keras.Model", "keras.layers.Lambda", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "keras.layers.Input", "numpy.square", "numpy.arange"], "keras.layers.Input": [], "keras.layers.Lambda": [], "v2.keras.Model": [], "numpy.arange": [], "numpy_ops.np_interop_test.InteropTest.testKerasInteropSequential": ["keras.layers.Input", "test.TestCase.assertIsInstance", "v2.keras.Sequential", "numpy_ops.random.randn", "keras.layers.Dense"], "numpy_ops.np_interop_test.InteropTest.testKerasInteropSequential.ProjectionLayer.__init__": ["<builtin>.super"], "numpy_ops.np_interop_test.InteropTest.testKerasInteropSequential.ProjectionLayer.build": ["compat.v2.Variable", "numpy_ops.random.randn", "ops.numpy_ops.sqrt"], "ops.numpy_ops.sqrt": [], "numpy_ops.random.randn": [], "compat.v2.Variable": [], "numpy_ops.np_interop_test.InteropTest.testKerasInteropSequential.ProjectionLayer.call": ["ops.numpy_ops.matmul"], "ops.numpy_ops.matmul": [], "keras.layers.Dense": [], "v2.keras.Sequential": [], "numpy_ops.np_interop_test.InteropTest.testPForInterop": ["test.TestCase.assertIsInstance", "ops.numpy_ops.ones", "compat.v2.vectorized_map", "test.TestCase.assertEqual"], "numpy_ops.np_interop_test.InteropTest.testPForInterop.outer_product": ["ops.numpy_ops.tensordot"], "ops.numpy_ops.tensordot": [], "compat.v2.vectorized_map": [], "numpy_ops.np_interop_test.InteropTest.testPForInterop.<lambda1>": [], "numpy_ops.np_interop_test.InteropTest.testJacobian": ["compat.v2.GradientTape", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "test.TestCase.assertAllClose"], "numpy_ops.np_interop_test.InteropTest.testBatchJacobian": ["test.TestCase.assertAllClose", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "compat.v2.GradientTape", "v2.linalg.diag", "compat.v2.stack"], "v2.linalg.diag": [], "compat.v2.stack": [], "numpy_ops.np_interop_test.InteropTest.testForwardprop": ["test.TestCase.assertAllClose", "v2.autodiff.ForwardAccumulator", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "test.TestCase.assertIsNone"], "v2.autodiff.ForwardAccumulator": [], "numpy_ops.np_interop_test.InteropTest.testMapFn": ["test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "test.TestCase.assertAllClose", "compat.v2.map_fn"], "numpy_ops.np_interop_test.InteropTest.testMapFn.<lambda1>": [], "compat.v2.map_fn": [], "numpy_ops.np_interop_test.FunctionTest.testFunctionInterop": ["test.TestCase.assertAllClose", "compat.v2.function", "test.TestCase.assertIsInstance", "ops.numpy_ops.asarray", "ops.numpy_ops.asarray"], "numpy_ops.np_interop_test.FunctionTest.testFunctionInterop.<lambda1>": [], "numpy_ops.np_interop_test.FunctionTest.testLen": ["ops.numpy_ops.asarray", "test.TestCase.assertRaises", "compat.v2.function", "ops.numpy_ops.asarray"], "numpy_ops.np_interop_test.FunctionTest.testLen.f": ["ops.numpy_ops.where", "<builtin>.len"], "ops.numpy_ops.where": [], "<builtin>.len": [], "test.TestCase.assertRaises": [], "numpy_ops.np_interop_test.FunctionTest.testIter": ["test.TestCase.assertRaises", "compat.v2.function", "ops.numpy_ops.asarray", "ops.numpy_ops.asarray"], "numpy_ops.np_interop_test.FunctionTest.testIter.f": [], "numpy_ops.np_interop_test.FunctionTest.testIndex": ["test.TestCase.assertRaises", "compat.v2.function", "compat.v2.function", "ops.numpy_ops.asarray"], "numpy_ops.np_interop_test.FunctionTest.testIndex.f": [], "numpy_ops.np_interop_test.VariableTest.test": ["test.TestCase.assertAllClose", "compat.v2.control_dependencies", "test.TestCase.assertIsInstance", "ops.numpy_ops.square", "compat.v2.Variable"], "compat.v2.control_dependencies": [], "framework.ops.enable_numpy_style_type_promotion": [], "numpy_ops.np_math_ops.enable_numpy_methods_on_tensor": [], "compat.v1.enable_eager_execution": [], "v2.test.main": []}