{"optimizer_v2.adagrad_test": ["platform.test.main"], "optimizer_v2.adagrad_test.adagrad_update_numpy": ["numpy.sqrt"], "numpy.sqrt": [], "optimizer_v2.adagrad_test.sparse_adagrad_update_numpy": ["numpy.sqrt", "copy.deepcopy", "<builtin>.len", "<builtin>.range"], "copy.deepcopy": [], "<builtin>.len": [], "<builtin>.range": [], "optimizer_v2.adagrad_test.AdagradOptimizerTest.doTestBasic": ["test.TestCase.assertAllClose", "ops.variables.global_variables_initializer", "eager.context.executing_eagerly", "ops.variables.Variable", "numpy.array", "test.TestCase.evaluate", "<builtin>.zip", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertAllCloseAccordingToType", "test.TestCase.assertAllCloseAccordingToType", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "numpy.array": [], "ops.variables.Variable": [], "framework.constant_op.constant": [], "optimizer_v2.adagrad_test.AdagradOptimizerTest.doTestBasic.<lambda1>": [], "optimizer_v2.adagrad.Adagrad": [], "eager.context.executing_eagerly": [], "<builtin>.zip": [], "ops.variables.global_variables_initializer": [], "test.TestCase.evaluate": [], "test.TestCase.assertAllClose": [], "test.TestCase.assertAllCloseAccordingToType": [], "keras.combinations.combine": [], "optimizer_v2.adagrad_test.AdagradOptimizerTest": ["keras.combinations.combine", "keras.combinations.generate"], "keras.combinations.generate": [], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testBasic": ["keras.combinations.generate"], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testBasicCallableParams": ["keras.combinations.generate"], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testBasicWithLearningRateDecay": ["test.TestCase.assertAllClose", "eager.context.executing_eagerly", "ops.variables.Variable", "numpy.array", "test.TestCase.evaluate", "<builtin>.zip", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testBasicWithLargeEpsilon": ["test.TestCase.assertAllClose", "eager.context.executing_eagerly", "ops.variables.Variable", "numpy.array", "test.TestCase.evaluate", "<builtin>.zip", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testBasicWithLearningRateInverseTimeDecay": ["test.TestCase.assertAllClose", "optimizer_v2.learning_rate_schedule.InverseTimeDecay", "ops.variables.Variable", "eager.context.executing_eagerly", "numpy.array", "test.TestCase.evaluate", "<builtin>.zip", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "optimizer_v2.learning_rate_schedule.InverseTimeDecay": [], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testMinimizeSparseResourceVariable": ["framework.ops.Graph", "ops.variables.Variable", "test.TestCase.evaluate", "framework.constant_op.constant", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad"], "framework.ops.Graph": [], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testMinimizeSparseResourceVariable.loss": ["ops.math_ops.matmul", "ops.embedding_ops.embedding_lookup"], "ops.embedding_ops.embedding_lookup": [], "ops.math_ops.matmul": [], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testTensorLearningRate": ["test.TestCase.assertAllClose", "framework.ops.Graph", "ops.variables.Variable", "numpy.array", "test.TestCase.evaluate", "<builtin>.zip", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testSparseBasic": ["test.TestCase.assertAllClose", "framework.ops.Graph", "framework.ops.Graph", "ops.variables.Variable", "numpy.array", "test.TestCase.evaluate", "<builtin>.zip", "framework.constant_op.constant", "framework.ops.IndexedSlices", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "framework.ops.IndexedSlices": [], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testSparseSingleVarDim": ["test.TestCase.assertAllClose", "framework.ops.Graph", "framework.ops.Graph", "ops.variables.Variable", "numpy.array", "test.TestCase.evaluate", "<builtin>.zip", "framework.constant_op.constant", "framework.ops.IndexedSlices", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndices": ["test.TestCase.assertAllClose", "framework.ops.Graph", "ops.variables.Variable", "numpy.array", "test.TestCase.evaluate", "framework.constant_op.constant", "framework.ops.IndexedSlices", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndicesByEmbeddingLookUp": ["framework.ops.Graph", "ops.variables.Variable", "test.TestCase.evaluate", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndicesByEmbeddingLookUp.<lambda1>": ["ops.math_ops.reduce_sum", "ops.embedding_ops.embedding_lookup"], "ops.math_ops.reduce_sum": [], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testSparseRepeatedIndicesByEmbeddingLookUp.<lambda2>": ["ops.math_ops.reduce_sum", "ops.embedding_ops.embedding_lookup"], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testSparseStability": ["framework.ops.Graph", "ops.variables.Variable", "numpy.array", "test.TestCase.evaluate", "<builtin>.zip", "framework.constant_op.constant", "framework.ops.IndexedSlices", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testSharing": ["test.TestCase.assertAllClose", "framework.ops.Graph", "ops.variables.Variable", "numpy.array", "test.TestCase.assertEqual", "test.TestCase.evaluate", "<builtin>.zip", "framework.constant_op.constant", "framework.constant_op.constant", "test.TestCase.assertAllCloseAccordingToType", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad", "<builtin>.range"], "test.TestCase.assertEqual": [], "optimizer_v2.adagrad_test.AdagradOptimizerTest.testConstructAdagradWithLR": ["test.TestCase.assertAllClose", "test.TestCase.evaluate", "test.TestCase.assertIsInstance", "ops.variables.global_variables_initializer", "optimizer_v2.adagrad.Adagrad"], "test.TestCase.assertIsInstance": [], "platform.test.main": []}