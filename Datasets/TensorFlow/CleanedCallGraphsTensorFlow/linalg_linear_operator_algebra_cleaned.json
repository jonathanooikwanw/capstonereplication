{"linalg.linear_operator_algebra": [], "linalg.linear_operator_algebra._registered_function": ["itertools.product", "<builtin>.tuple", "<builtin>.enumerate", "<builtin>.min", "<builtin>.list", "util.tf_inspect.getmro"], "util.tf_inspect.getmro": [], "<builtin>.enumerate": [], "itertools.product": [], "<builtin>.list": [], "linalg.linear_operator_algebra._registered_function.hierarchy_distance": ["<builtin>.sum", "<builtin>.tuple"], "<builtin>.sum": [], "<builtin>.tuple": [], "<builtin>.min": [], "linalg.linear_operator_algebra._registered_adjoint": ["util.tf_inspect.getmro"], "linalg.linear_operator_algebra._registered_cholesky": ["util.tf_inspect.getmro"], "linalg.linear_operator_algebra._registered_matmul": ["util.tf_inspect.getmro"], "linalg.linear_operator_algebra._registered_solve": ["util.tf_inspect.getmro"], "linalg.linear_operator_algebra._registered_inverse": ["util.tf_inspect.getmro"], "linalg.linear_operator_algebra.adjoint": ["<builtin>.type", "framework.ops.name_scope", "<builtin>.ValueError", "framework.ops.name_scope"], "<builtin>.type": [], "<builtin>.ValueError": [], "framework.ops.name_scope": [], "linalg.linear_operator_algebra.cholesky": ["<builtin>.type", "framework.ops.name_scope", "framework.ops.name_scope", "<builtin>.ValueError"], "linalg.linear_operator_algebra.matmul": ["<builtin>.type", "framework.ops.name_scope", "framework.ops.name_scope", "<builtin>.ValueError"], "linalg.linear_operator_algebra.solve": ["framework.ops.name_scope", "<builtin>.type", "framework.ops.name_scope", "<builtin>.ValueError"], "linalg.linear_operator_algebra.inverse": ["<builtin>.type", "framework.ops.name_scope", "<builtin>.ValueError", "framework.ops.name_scope"], "linalg.linear_operator_algebra.RegisterAdjoint.__init__": [], "linalg.linear_operator_algebra.RegisterAdjoint.__call__": ["<builtin>.TypeError", "<builtin>.callable", "<builtin>.ValueError"], "<builtin>.callable": [], "<builtin>.TypeError": [], "linalg.linear_operator_algebra.RegisterCholesky.__init__": [], "linalg.linear_operator_algebra.RegisterCholesky.__call__": ["<builtin>.TypeError", "<builtin>.callable", "<builtin>.ValueError"], "linalg.linear_operator_algebra.RegisterMatmul.__init__": [], "linalg.linear_operator_algebra.RegisterMatmul.__call__": ["<builtin>.TypeError", "<builtin>.callable", "<builtin>.ValueError"], "linalg.linear_operator_algebra.RegisterSolve.__init__": [], "linalg.linear_operator_algebra.RegisterSolve.__call__": ["<builtin>.TypeError", "<builtin>.callable", "<builtin>.ValueError"], "linalg.linear_operator_algebra.RegisterInverse.__init__": [], "linalg.linear_operator_algebra.RegisterInverse.__call__": ["<builtin>.TypeError", "<builtin>.callable", "<builtin>.ValueError"]}