{"ops.xla_ops": ["util.tf_export.tf_export", "util.dispatch.add_dispatch_list", "framework.ops.to_raw_op"], "util.dispatch.add_dispatch_list": [], "util.tf_export.tf_export": [], "ops.xla_ops.xla_cluster_output": ["eager.execute.record_gradient", "python.pywrap_tfe.TFE_Py_FastPathExecute", "<builtin>.dict", "framework.ops.raise_from_not_ok_status", "eager.context.context", "eager.execute.must_record_gradient", "framework.op_def_library._apply_op_helper", "util.dispatch.dispatch", "util.dispatch.dispatch"], "eager.context.context": [], "python.pywrap_tfe.TFE_Py_FastPathExecute": [], "framework.ops.raise_from_not_ok_status": [], "ops.xla_ops.xla_cluster_output_eager_fallback": ["eager.execute.record_gradient", "eager.execute.execute", "eager.execute.must_record_gradient", "eager.execute.args_to_matching_eager"], "<builtin>.dict": [], "util.dispatch.dispatch": [], "framework.op_def_library._apply_op_helper": [], "eager.execute.must_record_gradient": [], "eager.execute.record_gradient": [], "framework.ops.to_raw_op": [], "eager.execute.args_to_matching_eager": [], "eager.execute.execute": [], "ops.xla_ops.xla_launch": ["eager.execute.record_gradient", "python.pywrap_tfe.TFE_Py_FastPathExecute", "<builtin>.dict", "framework.ops.raise_from_not_ok_status", "<builtin>.TypeError", "eager.execute.must_record_gradient", "framework.op_def_library._apply_op_helper", "<builtin>.len", "framework.op_def_library._apply_op_helper", "util.dispatch.dispatch", "eager.execute.make_type", "<builtin>.isinstance", "eager.context.context"], "ops.xla_ops.xla_launch_eager_fallback": ["eager.execute.record_gradient", "<builtin>.list", "eager.execute.execute", "<builtin>.TypeError", "eager.execute.must_record_gradient", "<builtin>.len", "eager.execute.convert_to_mixed_eager_tensors", "eager.execute.make_type", "<builtin>.isinstance", "framework.ops.convert_n_to_tensor"], "<builtin>.isinstance": [], "<builtin>.TypeError": [], "<builtin>.len": [], "eager.execute.make_type": [], "eager.execute.convert_to_mixed_eager_tensors": [], "framework.ops.convert_n_to_tensor": [], "<builtin>.list": []}