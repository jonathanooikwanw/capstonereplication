{"layers.convolutional_recurrent": [], "layers.convolutional_recurrent.ConvRNN2D.__init__": ["<builtin>.super", "engine.input_spec.InputSpec", "<builtin>.isinstance", "<builtin>.TypeError"], "<builtin>.TypeError": [], "<builtin>.isinstance": [], "<builtin>.super": [], "engine.input_spec.InputSpec": [], "layers.convolutional_recurrent.ConvRNN2D": ["utils.tf_utils.shape_type_conversion"], "utils.tf_utils.shape_type_conversion": [], "layers.convolutional_recurrent.ConvRNN2D.compute_output_shape": ["<builtin>.range", "<builtin>.isinstance", "utils.conv_utils.conv_output_length"], "utils.conv_utils.conv_output_length": [], "<builtin>.range": [], "layers.convolutional_recurrent.ConvRNN2D.build": ["<builtin>.list", "<builtin>.hasattr", "utils.conv_utils.conv_output_length", "engine.input_spec.InputSpec", "<builtin>.ValueError", "RNN.cell.build", "<builtin>.isinstance"], "RNN.cell.build": [], "<builtin>.hasattr": [], "<builtin>.list": [], "<builtin>.ValueError": [], "layers.convolutional_recurrent.ConvRNN2D.reset_states": ["keras.backend.set_value", "<builtin>.hasattr", "<builtin>.len", "numpy.zeros", "<builtin>.str", "<builtin>.AttributeError", "keras.backend.set_value", "<builtin>.zip", "<builtin>.enumerate", "keras.backend.set_value", "<builtin>.ValueError", "keras.backend.zeros", "<builtin>.isinstance"], "layers.convolutional_recurrent.ConvRNN2D.get_initial_state": ["keras.backend.sum", "RNN.cell.input_conv", "keras.backend.zeros_like", "<builtin>.list", "<builtin>.hasattr", "<builtin>.tuple", "ops.array_ops.zeros"], "keras.backend.zeros_like": [], "keras.backend.sum": [], "<builtin>.tuple": [], "ops.array_ops.zeros": [], "RNN.cell.input_conv": [], "layers.convolutional_recurrent.ConvRNN2D.call": ["utils.generic_utils.has_arg", "keras.backend.update", "<builtin>.list", "recurrent.RNN.add_update", "keras.backend.rnn", "<builtin>.zip", "<builtin>.ValueError", "recurrent.RNN._process_inputs", "<builtin>.isinstance", "keras.backend.int_shape"], "recurrent.RNN._process_inputs": [], "keras.backend.int_shape": [], "utils.generic_utils.has_arg": [], "layers.convolutional_recurrent.ConvRNN2D.call.step": ["RNN.cell.call"], "RNN.cell.call": [], "keras.backend.rnn": [], "keras.backend.update": [], "<builtin>.zip": [], "recurrent.RNN.add_update": [], "<builtin>.AttributeError": [], "layers.convolutional_recurrent.ConvRNN2D.reset_states.get_tuple_shape": ["<builtin>.tuple", "<builtin>.list"], "keras.backend.zeros": [], "numpy.zeros": [], "keras.backend.set_value": [], "<builtin>.len": [], "<builtin>.str": [], "<builtin>.enumerate": [], "layers.convolutional_recurrent.ConvLSTM2DCell.__init__": ["keras.activations.get", "keras.initializers.get", "keras.constraints.get", "utils.conv_utils.normalize_padding", "utils.conv_utils.normalize_data_format", "<builtin>.max", "<builtin>.min", "<builtin>.super", "keras.regularizers.get", "utils.conv_utils.normalize_tuple"], "utils.conv_utils.normalize_tuple": [], "utils.conv_utils.normalize_padding": [], "utils.conv_utils.normalize_data_format": [], "keras.activations.get": [], "keras.initializers.get": [], "keras.regularizers.get": [], "keras.constraints.get": [], "<builtin>.max": [], "<builtin>.min": [], "layers.convolutional_recurrent.ConvLSTM2DCell.build": ["recurrent.DropoutRNNCellMixin.add_weight", "<builtin>.ValueError"], "recurrent.DropoutRNNCellMixin.add_weight": [], "layers.convolutional_recurrent.ConvLSTM2DCell.build.bias_initializer": ["keras.backend.concatenate", "keras.initializers.get"], "keras.backend.concatenate": [], "layers.convolutional_recurrent.ConvLSTM2DCell.call": ["keras.initializers.get", "ops.array_ops.split", "recurrent.DropoutRNNCellMixin.get_recurrent_dropout_mask_for_cell", "recurrent.DropoutRNNCellMixin.get_dropout_mask_for_cell", "recurrent.DropoutRNNCellMixin.get_dropout_mask_for_cell"], "recurrent.DropoutRNNCellMixin.get_dropout_mask_for_cell": [], "recurrent.DropoutRNNCellMixin.get_recurrent_dropout_mask_for_cell": [], "ops.array_ops.split": [], "layers.convolutional_recurrent.ConvLSTM2DCell.input_conv": ["keras.backend.bias_add", "keras.backend.conv2d"], "layers.convolutional_recurrent.ConvLSTM2DCell.recurrent_conv": ["keras.backend.conv2d"], "keras.backend.conv2d": [], "keras.backend.bias_add": [], "layers.convolutional_recurrent.ConvLSTM2DCell.get_config": ["keras.initializers.serialize", "<builtin>.list", "keras.regularizers.serialize", "keras.activations.serialize", "keras.constraints.serialize", "<builtin>.dict", "<builtin>.super"], "keras.activations.serialize": [], "keras.initializers.serialize": [], "keras.regularizers.serialize": [], "keras.constraints.serialize": [], "<builtin>.dict": [], "layers.convolutional_recurrent.ConvLSTM2D.__init__": ["keras.constraints.serialize", "<builtin>.super", "keras.regularizers.get"], "layers.convolutional_recurrent.ConvLSTM2D.call": ["<builtin>.super"], "layers.convolutional_recurrent.ConvLSTM2D.filters": [], "layers.convolutional_recurrent.ConvLSTM2D.kernel_size": [], "layers.convolutional_recurrent.ConvLSTM2D.strides": [], "layers.convolutional_recurrent.ConvLSTM2D.padding": [], "layers.convolutional_recurrent.ConvLSTM2D.data_format": [], "layers.convolutional_recurrent.ConvLSTM2D.dilation_rate": [], "layers.convolutional_recurrent.ConvLSTM2D.activation": [], "layers.convolutional_recurrent.ConvLSTM2D.recurrent_activation": [], "layers.convolutional_recurrent.ConvLSTM2D.use_bias": [], "layers.convolutional_recurrent.ConvLSTM2D.kernel_initializer": [], "layers.convolutional_recurrent.ConvLSTM2D.recurrent_initializer": [], "layers.convolutional_recurrent.ConvLSTM2D.bias_initializer": [], "layers.convolutional_recurrent.ConvLSTM2D.unit_forget_bias": [], "layers.convolutional_recurrent.ConvLSTM2D.kernel_regularizer": [], "layers.convolutional_recurrent.ConvLSTM2D.recurrent_regularizer": [], "layers.convolutional_recurrent.ConvLSTM2D.bias_regularizer": [], "layers.convolutional_recurrent.ConvLSTM2D.kernel_constraint": [], "layers.convolutional_recurrent.ConvLSTM2D.recurrent_constraint": [], "layers.convolutional_recurrent.ConvLSTM2D.bias_constraint": [], "layers.convolutional_recurrent.ConvLSTM2D.dropout": [], "layers.convolutional_recurrent.ConvLSTM2D.recurrent_dropout": [], "layers.convolutional_recurrent.ConvLSTM2D.get_config": ["keras.initializers.serialize", "<builtin>.list", "keras.regularizers.serialize", "keras.activations.serialize", "keras.constraints.serialize", "<builtin>.dict", "<builtin>.super"], "layers.convolutional_recurrent.ConvLSTM2D.from_config": ["keras.constraints.serialize"]}