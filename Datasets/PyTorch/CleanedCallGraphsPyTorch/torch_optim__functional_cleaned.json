{"_functional": [], "_functional._make_sparse": ["torch.sparse_coo_tensor", "torch.empty_like"], "torch.empty_like": [], "torch.sparse_coo_tensor": [], "_functional.adagrad": ["<builtin>.zip", "<builtin>.RuntimeError", "_functional._make_sparse"], "<builtin>.zip": [], "<builtin>.RuntimeError": [], "_functional.adam": ["torch.maximum", "math.sqrt", "<builtin>.enumerate"], "<builtin>.enumerate": [], "torch.maximum": [], "math.sqrt": [], "_functional.adamw": ["torch.maximum", "math.sqrt", "<builtin>.enumerate"], "_functional.sgd": ["<builtin>.enumerate", "torch.clone"], "torch.clone": [], "_functional.adadelta": ["<builtin>.zip"], "_functional.rmsprop": ["<builtin>.enumerate"], "_functional.rprop": ["<builtin>.enumerate"], "_functional.adamax": ["torch.cat", "torch.amax", "<builtin>.enumerate"], "torch.cat": [], "torch.amax": [], "_functional.asgd": ["<builtin>.enumerate"], "_functional.nadam": ["<builtin>.enumerate"], "_functional.radam": ["math.sqrt", "<builtin>.enumerate"], "_functional.sparse_adam": ["_functional.sparse_adam.make_sparse", "math.sqrt", "<builtin>.enumerate"], "_functional.sparse_adam.make_sparse": []}