{"graph": ["<builtin>.type", "graph._register_custom_builtin", "<builtin>.dict"], "graph._register_custom_builtin": ["typing.NamedTuple.__init__"], "typing.NamedTuple.__init__": [], "<builtin>.type": [], "graph._is_magic": [], "graph._snake_case": [], "graph._is_from_torch": ["<builtin>.getattr"], "<builtin>.getattr": [], "graph._Namespace.__init__": ["<builtin>.set", "re.compile"], "<builtin>.set": [], "re.compile": [], "graph._Namespace.create_name": ["<builtin>.int", "graph._Namespace._is_illegal_name"], "<builtin>.int": [], "graph._Namespace._is_illegal_name": [], "graph._Namespace.associate_name_with_obj": [], "graph._format_args": ["<builtin>.repr"], "<builtin>.repr": [], "graph._format_target": [], "graph._InsertPoint.__init__": [], "graph._InsertPoint.__enter__": [], "graph._InsertPoint.__exit__": [], "graph._node_list.__init__": [], "graph._node_list.__len__": [], "graph._node_list.__iter__": ["<builtin>.getattr"], "graph._node_list.__reversed__": ["graph._node_list.__init__"], "graph.Graph.__init__": ["node.Node", "graph._Namespace.__init__"], "node.Node": [], "graph.Graph.owning_module": [], "graph.Graph.nodes": ["graph._node_list.__init__"], "graph.Graph.graph_copy": ["node.map_arg", "graph.Graph.node_copy"], "graph.Graph.graph_copy.<lambda1>": [], "node.map_arg": [], "graph.Graph.graph_copy.<lambda2>": [], "graph.Graph.node_copy": ["node.map_arg", "<builtin>.isinstance", "copy.copy", "graph.Graph.create_node"], "graph.Graph.__deepcopy__": ["<builtin>.isinstance", "graph.Graph.output", "graph.Graph.__init__", "<builtin>.getattr", "graph.Graph.graph_copy"], "<builtin>.isinstance": [], "graph.Graph.output": ["graph.Graph.create_node"], "graph.Graph.create_node": ["<builtin>.isinstance", "graph._Namespace.create_name", "graph.Graph._target_to_str", "node.Node", "graph._Namespace.associate_name_with_obj"], "graph.Graph._target_to_str": ["graph._snake_case", "<builtin>.callable", "<builtin>.isinstance", "graph._is_magic"], "graph.Graph.flatten_inps": ["torch.utils._pytree.tree_flatten"], "torch.utils._pytree.tree_flatten": [], "graph.Graph.unflatten_outs": ["<builtin>.isinstance", "torch.utils._pytree.tree_unflatten"], "torch.utils._pytree.tree_unflatten": [], "graph.Graph.erase_node": ["node.map_arg", "<builtin>.len", "<builtin>.isinstance", "<builtin>.RuntimeError"], "<builtin>.len": [], "<builtin>.RuntimeError": [], "graph.Graph.erase_node.<lambda1>": [], "graph.Graph.erase_node.<lambda2>": [], "graph.Graph.inserting_before": ["graph._InsertPoint.__init__", "graph.Graph.inserting_after"], "graph.Graph.inserting_after": ["graph._InsertPoint.__init__", "graph.Graph.inserting_before"], "graph.Graph.placeholder": ["graph.Graph.create_node"], "graph.Graph.get_attr": ["warnings.warn", "graph.Graph.get_attr._get_attr_reference_exists", "graph.Graph.create_node"], "graph.Graph.get_attr._get_attr_reference_exists": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.getattr"], "<builtin>.hasattr": [], "warnings.warn": [], "graph.Graph.call_module": ["warnings.warn", "graph.Graph.create_node"], "graph.Graph.call_method": ["graph.Graph.create_node"], "graph.Graph.call_function": ["graph.Graph.create_node"], "copy.copy": [], "<builtin>.callable": [], "graph.Graph.python_code": ["contextlib.contextmanager", "graph.Graph.python_code.override_node_repr", "graph.Graph._python_code", "graph._Namespace.__init__"], "graph.Graph.python_code.node_repr": ["graph._Namespace.create_name"], "contextlib.contextmanager": [], "graph.Graph.python_code.override_node_repr": [], "graph.Graph._python_code": ["graph.Graph._python_code.delete_unused_values", "node.map_arg", "graph.Graph._python_code.emit_node", "<builtin>.len", "<builtin>.reversed", "graph.Graph._python_code.add_global"], "graph.Graph._python_code.add_global": ["node._get_qualified_name", "graph._Namespace.create_name", "graph._is_from_torch"], "node._get_qualified_name": [], "graph.Graph._python_code.type_repr": ["node._type_repr", "<builtin>.hasattr", "graph.Graph._python_code.add_global", "graph.Graph._python_code.type_repr"], "node._type_repr": [], "graph.Graph._python_code.register_last_uses": [], "<builtin>.reversed": [], "graph.Graph._python_code.<lambda1>": ["graph.Graph._python_code.register_last_uses"], "graph.Graph._python_code.<lambda2>": ["graph.Graph._python_code.register_last_uses"], "graph.Graph._python_code.delete_unused_values": ["<builtin>.len", "<builtin>.repr"], "graph.Graph._python_code.emit_node": ["<builtin>.NotImplementedError", "<builtin>.isinstance", "graph.Graph._python_code.add_global", "graph._format_target", "node._get_qualified_name", "<builtin>.repr", "graph._format_args", "<builtin>.callable", "graph.Graph._python_code.type_repr"], "<builtin>.NotImplementedError": [], "graph.Graph.__str__": [], "graph.Graph.print_tabular": ["<builtin>.print", "tabulate.tabulate"], "<builtin>.print": [], "tabulate.tabulate": [], "graph.Graph.lint": ["<builtin>.isinstance", "<builtin>.set", "node.map_arg", "<builtin>.enumerate", "<builtin>.RuntimeError", "<builtin>.getattr", "warnings.warn"], "graph.Graph.lint.check_arg": ["<builtin>.RuntimeError"], "graph.Graph.lint.<lambda1>": ["graph.Graph.lint.check_arg"], "graph.Graph.lint.<lambda2>": ["graph.Graph.lint.check_arg"], "<builtin>.enumerate": [], "graph.Graph.eliminate_dead_code": ["<builtin>.len", "graph.Graph.lint", "graph.Graph.erase_node", "<builtin>.reversed"], "<builtin>.dict": []}