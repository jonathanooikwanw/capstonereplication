{"relaxed_bernoulli": [], "relaxed_bernoulli.LogitRelaxedBernoulli.__init__": ["torch.distributions.utils.broadcast_all", "torch.Size", "<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.super"], "<builtin>.ValueError": [], "<builtin>.isinstance": [], "torch.distributions.utils.broadcast_all": [], "torch.Size": [], "<builtin>.super": [], "relaxed_bernoulli.LogitRelaxedBernoulli.expand": ["torch.distributions.distribution.Distribution._get_checked_instance", "torch.Size", "<builtin>.super"], "torch.distributions.distribution.Distribution._get_checked_instance": [], "relaxed_bernoulli.LogitRelaxedBernoulli._new": [], "relaxed_bernoulli.LogitRelaxedBernoulli": ["torch.distributions.utils.lazy_property"], "torch.distributions.utils.lazy_property": [], "relaxed_bernoulli.LogitRelaxedBernoulli.logits": ["torch.distributions.utils.probs_to_logits"], "torch.distributions.utils.probs_to_logits": [], "relaxed_bernoulli.LogitRelaxedBernoulli.probs": ["torch.distributions.utils.logits_to_probs"], "torch.distributions.utils.logits_to_probs": [], "relaxed_bernoulli.LogitRelaxedBernoulli.param_shape": [], "relaxed_bernoulli.LogitRelaxedBernoulli.rsample": ["torch.rand", "torch.distributions.utils.clamp_probs", "torch.distributions.distribution.Distribution._extended_shape"], "torch.distributions.distribution.Distribution._extended_shape": [], "torch.distributions.utils.clamp_probs": [], "torch.rand": [], "relaxed_bernoulli.LogitRelaxedBernoulli.log_prob": ["torch.distributions.utils.broadcast_all", "torch.distributions.distribution.Distribution._validate_sample"], "torch.distributions.distribution.Distribution._validate_sample": [], "relaxed_bernoulli.RelaxedBernoulli.__init__": ["relaxed_bernoulli.LogitRelaxedBernoulli.__init__", "<builtin>.super", "torch.distributions.transforms.SigmoidTransform"], "torch.distributions.transforms.SigmoidTransform": [], "relaxed_bernoulli.RelaxedBernoulli.expand": ["<builtin>.super", "torch.distributions.transformed_distribution.TransformedDistribution._get_checked_instance"], "torch.distributions.transformed_distribution.TransformedDistribution._get_checked_instance": [], "relaxed_bernoulli.RelaxedBernoulli.temperature": [], "relaxed_bernoulli.RelaxedBernoulli.logits": [], "relaxed_bernoulli.RelaxedBernoulli.probs": []}