{"clang_format_all": ["re.compile", "sys.exit", "clang_format_all.main"], "re.compile": [], "clang_format_all.get_allowlisted_files": ["os.path.join", "<builtin>.set", "os.walk"], "os.walk": [], "os.path.join": [], "<builtin>.set": [], "clang_format_all.run_clang_format_on_file": ["asyncio.create_subprocess_shell", "<builtin>.print"], "asyncio.create_subprocess_shell": [], "<builtin>.print": [], "clang_format_all.file_clang_formatted_correctly": ["asyncio.create_subprocess_shell", "<builtin>.open", "<builtin>.print"], "<builtin>.open": [], "clang_format_all.run_clang_format": ["clang_format_all.file_clang_formatted_correctly", "asyncio.as_completed", "asyncio.gather", "<builtin>.print", "clang_format_all.get_allowlisted_files", "os.path.exists", "asyncio.Semaphore", "clang_format_all.run_clang_format_on_file"], "os.path.exists": [], "asyncio.Semaphore": [], "asyncio.as_completed": [], "asyncio.gather": [], "clang_format_all.parse_args": ["argparse.ArgumentParser"], "argparse.ArgumentParser": [], "clang_format_all.main": ["clang_format_all.run_clang_format", "clang_format_all.parse_args", "clang_format_utils.get_and_check_clang_format", "asyncio.get_event_loop"], "clang_format_utils.get_and_check_clang_format": [], "asyncio.get_event_loop": [], "sys.exit": []}