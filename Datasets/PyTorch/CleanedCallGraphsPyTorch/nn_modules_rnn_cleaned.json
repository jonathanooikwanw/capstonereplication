{"rnn": [], "rnn.apply_permutation": [], "rnn.RNNBase.__init__": ["<builtin>.float", "<builtin>.zip", "<builtin>.setattr", "parameter.Parameter", "<builtin>.super", "rnn.RNNBase.flatten_parameters", "<builtin>.ValueError", "rnn.RNNBase.reset_parameters", "torch.empty", "<builtin>.isinstance", "warnings.warn", "<builtin>.range"], "<builtin>.super": [], "<builtin>.float": [], "<builtin>.isinstance": [], "<builtin>.ValueError": [], "warnings.warn": [], "<builtin>.range": [], "torch.empty": [], "parameter.Parameter": [], "<builtin>.zip": [], "<builtin>.setattr": [], "rnn.RNNBase.__init__.<lambda1>": ["<builtin>.getattr", "<builtin>.hasattr"], "<builtin>.hasattr": [], "<builtin>.getattr": [], "rnn.RNNBase.flatten_parameters": ["<builtin>.set", "torch.cuda.device_of", "<builtin>.bool", "<builtin>.len", "torch.backends.cudnn.is_acceptable", "torch.backends.cudnn.rnn.get_cudnn_mode", "torch._use_cudnn_rnn_flatten_weight", "torch._cudnn_rnn_flatten_weight", "<builtin>.isinstance", "torch.no_grad"], "rnn.RNNBase.reset_parameters": ["math.sqrt", "module.Module.parameters", "init.uniform_"], "rnn.RNNBase.__setattr__": ["<builtin>.super", "<builtin>.hasattr"], "<builtin>.len": [], "torch.backends.cudnn.is_acceptable": [], "<builtin>.set": [], "torch.cuda.device_of": [], "torch.no_grad": [], "torch._use_cudnn_rnn_flatten_weight": [], "torch.backends.cudnn.rnn.get_cudnn_mode": [], "<builtin>.bool": [], "torch._cudnn_rnn_flatten_weight": [], "rnn.RNNBase._apply": ["rnn.RNNBase.flatten_parameters", "<builtin>.super"], "rnn.RNNBase._apply.<lambda1>": ["<builtin>.getattr", "<builtin>.hasattr"], "math.sqrt": [], "module.Module.parameters": [], "init.uniform_": [], "rnn.RNNBase.check_input": ["<builtin>.RuntimeError"], "<builtin>.RuntimeError": [], "rnn.RNNBase.get_expected_hidden_size": ["<builtin>.int"], "<builtin>.int": [], "rnn.RNNBase.check_hidden_size": ["<builtin>.list", "<builtin>.RuntimeError"], "<builtin>.list": [], "rnn.RNNBase.check_forward_args": ["rnn.RNNBase.check_input", "rnn.RNNBase.get_expected_hidden_size", "rnn.RNNBase.check_hidden_size"], "rnn.RNNBase.permute_hidden": ["rnn.apply_permutation"], "rnn.RNNBase.forward": ["torch.zeros", "<builtin>.int", "rnn.RNNBase.check_forward_args", "rnn.RNNBase.permute_hidden", "utils.rnn.PackedSequence", "typing.cast", "<builtin>.isinstance"], "typing.cast": [], "torch.zeros": [], "utils.rnn.PackedSequence": [], "rnn.RNNBase.extra_repr": [], "rnn.RNNBase.__setstate__": ["<builtin>.isinstance", "<builtin>.super", "<builtin>.range"], "rnn.RNNBase.__setstate__.<lambda1>": ["<builtin>.getattr", "<builtin>.hasattr"], "rnn.RNNBase.all_weights": ["<builtin>.getattr"], "rnn.RNNBase._replicate_for_data_parallel": ["<builtin>.super"], "rnn.RNN.__init__": ["<builtin>.super", "<builtin>.ValueError"], "rnn.LSTM.__init__": ["<builtin>.super"], "rnn.LSTM.get_expected_cell_size": ["<builtin>.int"], "rnn.LSTM.check_forward_args": ["rnn.RNNBase.check_input", "rnn.RNNBase.get_expected_hidden_size", "rnn.LSTM.get_expected_cell_size", "rnn.RNNBase.check_hidden_size"], "rnn.LSTM.permute_hidden": ["rnn.apply_permutation"], "rnn.LSTM": ["typing.overload", "torch._jit_internal._overload_method"], "typing.overload": [], "torch._jit_internal._overload_method": [], "rnn.LSTM.forward": ["torch.zeros", "<builtin>.int", "rnn.LSTM.check_forward_args", "_VF.lstm", "utils.rnn.PackedSequence", "<builtin>.isinstance", "rnn.LSTM.permute_hidden"], "_VF.lstm": [], "rnn.GRU.__init__": ["<builtin>.super", "<builtin>.ValueError"], "rnn.GRU": ["typing.overload", "torch._jit_internal._overload_method"], "rnn.GRU.forward": ["_VF.gru", "torch.zeros", "<builtin>.int", "rnn.RNNBase.check_forward_args", "rnn.RNNBase.permute_hidden", "utils.rnn.PackedSequence", "<builtin>.isinstance"], "_VF.gru": [], "rnn.RNNCellBase.__init__": ["parameter.Parameter", "<builtin>.super", "torch.empty", "module.Module.register_parameter", "rnn.RNNCellBase.reset_parameters"], "module.Module.register_parameter": [], "rnn.RNNCellBase.reset_parameters": ["math.sqrt", "module.Module.parameters", "init.uniform_"], "rnn.RNNCellBase.extra_repr": [], "rnn.RNNCell.__init__": ["<builtin>.super"], "rnn.RNNCell.forward": ["_VF.rnn_relu_cell", "torch.zeros", "<builtin>.RuntimeError", "_VF.rnn_tanh_cell"], "_VF.rnn_tanh_cell": [], "_VF.rnn_relu_cell": [], "rnn.LSTMCell.__init__": ["<builtin>.super"], "rnn.LSTMCell.forward": ["torch.zeros", "_VF.lstm_cell"], "_VF.lstm_cell": [], "rnn.GRUCell.__init__": ["<builtin>.super"], "rnn.GRUCell.forward": ["torch.zeros", "_VF.gru_cell"], "_VF.gru_cell": []}