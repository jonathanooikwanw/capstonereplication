{"clang_coverage": [], "clang_coverage.create_corresponding_folder": ["util.utils.create_folder", "util.utils.convert_to_relative_path", "os.path.join"], "util.utils.convert_to_relative_path": [], "os.path.join": [], "util.utils.create_folder": [], "clang_coverage.run_target": ["util.utils.print_log", "utils.run_cpp_test", "oss.utils.run_oss_python_test"], "util.utils.print_log": [], "oss.utils.run_oss_python_test": [], "utils.run_cpp_test": [], "clang_coverage.merge_target": ["subprocess.check_call", "utils.get_tool_path_by_platform", "util.utils.print_log"], "utils.get_tool_path_by_platform": [], "subprocess.check_call": [], "clang_coverage.export_target": ["utils.get_tool_path_by_platform", "<builtin>.Exception", "util.utils.print_log", "os.system"], "<builtin>.Exception": [], "os.system": [], "clang_coverage.merge": ["util.utils.convert_to_relative_path", "os.walk", "util.utils.related_to_test_list", "util.utils.print_time", "util.utils.replace_extension", "<builtin>.print", "clang_coverage.merge_target", "time.time", "os.path.join", "clang_coverage.create_corresponding_folder", "util.utils.get_raw_profiles_folder"], "<builtin>.print": [], "time.time": [], "util.utils.get_raw_profiles_folder": [], "os.walk": [], "util.utils.related_to_test_list": [], "util.utils.replace_extension": [], "util.utils.print_time": [], "clang_coverage.export": ["util.utils.convert_to_relative_path", "oss.utils.get_oss_binary_file", "os.walk", "clang_coverage.export_target", "util.utils.related_to_test_list", "util.utils.check_platform_type", "util.utils.print_time", "util.utils.replace_extension", "<builtin>.print", "time.time", "caffe2.fb.code_coverage.tool.package.fbcode.utils.get_fbcode_binary_folder", "util.utils.get_test_name_from_whole_path", "os.path.join", "oss.utils.get_oss_shared_library", "clang_coverage.create_corresponding_folder"], "util.utils.check_platform_type": [], "caffe2.fb.code_coverage.tool.package.fbcode.utils.get_fbcode_binary_folder": [], "util.utils.get_test_name_from_whole_path": [], "oss.utils.get_oss_binary_file": [], "oss.utils.get_oss_shared_library": []}