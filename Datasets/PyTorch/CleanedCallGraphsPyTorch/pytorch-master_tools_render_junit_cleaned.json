{"render_junit": ["render_junit.main", "<builtin>.ImportError", "<builtin>.print"], "<builtin>.ImportError": [], "<builtin>.print": [], "render_junit.parse_junit_reports": ["os.path.exists", "os.path.join", "os.path.isdir", "<builtin>.FileNotFoundError", "os.path.isfile", "os.walk", "render_junit.parse_junit_reports.parse_file"], "render_junit.parse_junit_reports.parse_file": ["junitparser.JUnitXml.fromfile", "render_junit.convert_junit_to_testcases", "rich.print"], "junitparser.JUnitXml.fromfile": [], "render_junit.convert_junit_to_testcases": ["render_junit.convert_junit_to_testcases", "<builtin>.isinstance"], "rich.print": [], "os.path.exists": [], "<builtin>.FileNotFoundError": [], "os.path.isfile": [], "os.path.isdir": [], "os.walk": [], "os.path.join": [], "<builtin>.isinstance": [], "render_junit.render_tests": ["<builtin>.print", "<builtin>.isinstance", "rich.print"], "render_junit.parse_args": ["argparse.ArgumentParser"], "argparse.ArgumentParser": [], "render_junit.main": ["render_junit.render_tests", "render_junit.parse_junit_reports", "render_junit.parse_args"]}