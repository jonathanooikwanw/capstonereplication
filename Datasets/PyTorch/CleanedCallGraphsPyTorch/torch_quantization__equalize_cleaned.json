{"_equalize": [], "_equalize.set_module_weight": ["torch.nn.Parameter", "<builtin>.type"], "<builtin>.type": [], "torch.nn.Parameter": [], "_equalize.set_module_bias": ["torch.nn.Parameter", "<builtin>.type"], "_equalize.get_module_weight": ["<builtin>.type"], "_equalize.get_module_bias": ["<builtin>.type"], "_equalize.max_over_ndim": [], "_equalize.min_over_ndim": [], "_equalize.channel_range": ["_equalize.max_over_ndim", "_equalize.min_over_ndim", "<builtin>.list", "<builtin>.range"], "<builtin>.range": [], "<builtin>.list": [], "_equalize.cross_layer_equalization": ["_equalize.get_module_bias", "<builtin>.TypeError", "torch.reciprocal", "_equalize.set_module_weight", "torch.sqrt", "_equalize.channel_range", "torch.reshape", "<builtin>.type", "_equalize.get_module_weight", "<builtin>.ValueError", "_equalize.set_module_bias"], "<builtin>.ValueError": [], "<builtin>.TypeError": [], "torch.sqrt": [], "torch.reciprocal": [], "torch.reshape": [], "_equalize.equalize": ["copy.deepcopy", "_equalize.converged", "_equalize.cross_layer_equalization"], "copy.deepcopy": [], "_equalize.converged": ["torch.tensor", "torch.norm", "<builtin>.bool", "_equalize.get_module_weight", "<builtin>.ValueError"], "torch.tensor": [], "torch.norm": [], "<builtin>.bool": []}