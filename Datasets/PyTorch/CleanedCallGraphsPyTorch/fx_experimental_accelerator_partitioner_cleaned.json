{"accelerator_partitioner": [], "accelerator_partitioner.DAGNode.__init__": [], "accelerator_partitioner.DAGNode.__str__": ["<builtin>.str"], "<builtin>.str": [], "accelerator_partitioner.DAG.__init__": [], "accelerator_partitioner.DAG.create_node": ["accelerator_partitioner.DAGNode.__init__"], "accelerator_partitioner.reset_partition_device": [], "accelerator_partitioner.combine_two_partitions": ["accelerator_partitioner.reorganize_partitions", "<builtin>.len", "torch.fx.experimental.partitioner_utils.Partition"], "<builtin>.len": [], "torch.fx.experimental.partitioner_utils.Partition": [], "accelerator_partitioner.reorganize_partitions": ["accelerator_partitioner.set_parents_and_children", "<builtin>.enumerate"], "accelerator_partitioner.set_parents_and_children": ["<builtin>.set"], "<builtin>.set": [], "<builtin>.enumerate": [], "accelerator_partitioner.get_bfs_level_partition": ["<builtin>.set", "<builtin>.len"], "accelerator_partitioner.get_node_to_partition_mapping": [], "accelerator_partitioner.get_logical_id_to_device": [], "accelerator_partitioner.get_device_partition_stats": ["accelerator_partitioner.get_logical_id_to_device"], "accelerator_partitioner.get_device_to_partitions_mapping": ["accelerator_partitioner.get_device_to_partitions_mapping.find_device_for", "<builtin>.sorted", "accelerator_partitioner.get_device_partition_stats"], "accelerator_partitioner.get_device_to_partitions_mapping.calculate_extra_mem_bytes_needed_for": ["<builtin>.set", "<builtin>.len", "torch.fx.experimental.partitioner_utils.get_extra_size_of"], "torch.fx.experimental.partitioner_utils.get_extra_size_of": [], "accelerator_partitioner.get_device_to_partitions_mapping.find_device_for": ["accelerator_partitioner.get_device_to_partitions_mapping.calculate_extra_mem_bytes_needed_for"], "accelerator_partitioner.get_device_to_partitions_mapping.<lambda1>": [], "<builtin>.sorted": [], "accelerator_partitioner.check_dependency": ["<builtin>.set"], "accelerator_partitioner.Partitioner.__init__": [], "accelerator_partitioner.Partitioner.partition_graph": ["accelerator_partitioner.Partitioner.saturate_host", "accelerator_partitioner.Partitioner.aot_based_partition", "accelerator_partitioner.Partitioner.kl_based_partition", "accelerator_partitioner.Partitioner.sparse_nn_partition", "accelerator_partitioner.Partitioner.do_partition", "<builtin>.RuntimeError", "<builtin>.sum", "typing.NamedTuple.__init__", "<builtin>.all", "torch.fx.experimental.graph_manipulation.get_size_of_all_nodes", "accelerator_partitioner.Partitioner.cost_aware_partition", "<builtin>.max", "accelerator_partitioner.Partitioner.size_based_partition", "accelerator_partitioner.Partitioner.find_single_partition", "<builtin>.len", "accelerator_partitioner.Partitioner.dump_dag"], "<builtin>.RuntimeError": [], "torch.fx.experimental.graph_manipulation.get_size_of_all_nodes": [], "<builtin>.all": [], "accelerator_partitioner.Partitioner.partition_graph.<lambda1>": [], "<builtin>.max": [], "accelerator_partitioner.Partitioner.aot_based_partition": ["torch.fx.experimental.partitioner_utils.Partition"], "accelerator_partitioner.Partitioner.find_single_partition": ["accelerator_partitioner.Partitioner.create_partition", "accelerator_partitioner.get_node_to_partition_mapping"], "<builtin>.sum": [], "accelerator_partitioner.Partitioner.sparse_nn_partition": ["accelerator_partitioner.set_parents_and_children", "accelerator_partitioner.Partitioner.sparse_nn_partition.is_embedding_node", "accelerator_partitioner.Partitioner.sparse_nn_partition.combine_partitions_based_on_size", "accelerator_partitioner.Partitioner.sparse_nn_partition.reset_partition_in_sparse_nn", "accelerator_partitioner.Partitioner.create_partition", "<builtin>.RuntimeError", "accelerator_partitioner.get_node_to_partition_mapping", "<builtin>.enumerate", "<builtin>.str", "<builtin>.len", "torch.fx.experimental.partitioner_utils.get_extra_size_of"], "accelerator_partitioner.Partitioner.cost_aware_partition": ["accelerator_partitioner.set_parents_and_children", "accelerator_partitioner.Partitioner.create_single_node_partition", "accelerator_partitioner.reorganize_partitions", "accelerator_partitioner.get_node_to_partition_mapping", "accelerator_partitioner.get_bfs_level_partition", "accelerator_partitioner.Partitioner.cost_aware_partition.search_combination"], "accelerator_partitioner.Partitioner.kl_based_partition": ["accelerator_partitioner.Partitioner.kl_based_partition.swap_nodes", "torch.fx.experimental.partitioner_utils.get_latency_of_partitioned_graph", "accelerator_partitioner.reorganize_partitions", "torch.fx.experimental.partitioner_utils.get_partition_to_latency_mapping", "accelerator_partitioner.Partitioner.kl_based_partition.swap_node_to_partition", "<builtin>.enumerate", "accelerator_partitioner.get_device_to_partitions_mapping", "accelerator_partitioner.Partitioner.size_based_partition", "<builtin>.len"], "accelerator_partitioner.Partitioner.size_based_partition": ["accelerator_partitioner.Partitioner.create_single_node_partition", "accelerator_partitioner.Partitioner.size_based_partition.find_device_based_on_size", "accelerator_partitioner.reorganize_partitions", "accelerator_partitioner.Partitioner.create_partition", "accelerator_partitioner.get_node_to_partition_mapping", "<builtin>.RuntimeError", "accelerator_partitioner.get_device_to_partitions_mapping", "<builtin>.len", "torch.fx.experimental.partitioner_utils.get_extra_size_of"], "accelerator_partitioner.Partitioner.saturate_host": ["<builtin>.min", "<builtin>.len", "<builtin>.print", "accelerator_partitioner.get_device_partition_stats"], "accelerator_partitioner.Partitioner.do_partition": ["torch.fx.passes.split_module.split_module"], "accelerator_partitioner.Partitioner.dump_dag": ["accelerator_partitioner.DAG.create_node", "accelerator_partitioner.DAG.__init__", "<builtin>.list", "<builtin>.int", "<builtin>.len", "torch.fx.node.map_arg"], "typing.NamedTuple.__init__": [], "accelerator_partitioner.Partitioner.create_partition": ["<builtin>.len", "torch.fx.experimental.partitioner_utils.Partition"], "accelerator_partitioner.Partitioner.size_based_partition.find_device_based_on_size": ["<builtin>.RuntimeError", "torch.fx.experimental.partitioner_utils.Device", "<builtin>.set", "<builtin>.str", "torch.fx.experimental.partitioner_utils.get_extra_size_of"], "torch.fx.experimental.partitioner_utils.Device": [], "accelerator_partitioner.Partitioner.create_single_node_partition": ["accelerator_partitioner.Partitioner.create_partition"], "accelerator_partitioner.Partitioner.saturate_host.<lambda1>": [], "<builtin>.min": [], "<builtin>.print": [], "accelerator_partitioner.Partitioner.do_partition.<lambda1>": [], "torch.fx.passes.split_module.split_module": [], "accelerator_partitioner.Partitioner.dump_dag.<lambda1>": [], "torch.fx.node.map_arg": [], "accelerator_partitioner.Partitioner.dump_dag.<lambda2>": [], "<builtin>.list": [], "<builtin>.int": [], "accelerator_partitioner.Partitioner.sparse_nn_partition.combine_partitions_based_on_size": ["<builtin>.sorted", "accelerator_partitioner.Partitioner.sparse_nn_partition.find_partition_to_combine_based_on_size", "accelerator_partitioner.get_bfs_level_partition"], "accelerator_partitioner.Partitioner.sparse_nn_partition.combine_partitions_based_on_size.<lambda1>": [], "accelerator_partitioner.Partitioner.sparse_nn_partition.find_partition_to_combine_based_on_size": ["accelerator_partitioner.combine_two_partitions", "<builtin>.abs", "accelerator_partitioner.Partitioner.sparse_nn_partition.calculate_mem_bytes_needed"], "accelerator_partitioner.Partitioner.sparse_nn_partition.calculate_mem_bytes_needed": ["torch.fx.experimental.partitioner_utils.get_extra_size_of"], "<builtin>.abs": [], "accelerator_partitioner.Partitioner.sparse_nn_partition.reset_partition_in_sparse_nn": ["accelerator_partitioner.Partitioner.create_partition"], "accelerator_partitioner.Partitioner.sparse_nn_partition.is_embedding_node": ["<builtin>.getattr", "<builtin>.str", "<builtin>.RuntimeError", "<builtin>.hasattr"], "<builtin>.hasattr": [], "<builtin>.getattr": [], "accelerator_partitioner.Partitioner.cost_aware_partition.try_combining_partitions": ["accelerator_partitioner.combine_two_partitions", "torch.fx.experimental.partitioner_utils.get_latency_of_partitioned_graph", "accelerator_partitioner.check_dependency", "torch.fx.experimental.partitioner_utils.get_partition_to_latency_mapping", "<builtin>.abs", "accelerator_partitioner.reset_partition_device", "accelerator_partitioner.get_device_to_partitions_mapping", "<builtin>.float"], "<builtin>.float": [], "torch.fx.experimental.partitioner_utils.get_partition_to_latency_mapping": [], "torch.fx.experimental.partitioner_utils.get_latency_of_partitioned_graph": [], "accelerator_partitioner.Partitioner.cost_aware_partition.search_combination": ["accelerator_partitioner.combine_two_partitions", "accelerator_partitioner.Partitioner.cost_aware_partition.try_combining_partitions", "torch.fx.experimental.partitioner_utils.get_latency_of_partitioned_graph", "<builtin>.range", "accelerator_partitioner.reorganize_partitions", "torch.fx.experimental.partitioner_utils.get_partition_to_latency_mapping", "accelerator_partitioner.reset_partition_device", "accelerator_partitioner.get_bfs_level_partition", "accelerator_partitioner.get_device_to_partitions_mapping", "<builtin>.len"], "<builtin>.range": [], "accelerator_partitioner.Partitioner.kl_based_partition.swap_nodes": [], "accelerator_partitioner.Partitioner.kl_based_partition.try_swap_nodes": ["accelerator_partitioner.Partitioner.kl_based_partition.swap_nodes", "torch.fx.experimental.partitioner_utils.get_latency_of_partitioned_graph", "accelerator_partitioner.reorganize_partitions", "accelerator_partitioner.check_dependency", "torch.fx.experimental.partitioner_utils.get_partition_to_latency_mapping", "accelerator_partitioner.reset_partition_device", "accelerator_partitioner.get_device_to_partitions_mapping", "<builtin>.float"], "accelerator_partitioner.Partitioner.kl_based_partition.swap_node_to_partition": ["accelerator_partitioner.Partitioner.kl_based_partition.try_swap_nodes", "<builtin>.list", "<builtin>.float"]}