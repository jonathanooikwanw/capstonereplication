{"storage": ["typing.TypeVar"], "typing.TypeVar": [], "storage._StorageBase.__init__": [], "storage._StorageBase.__len__": [], "storage._StorageBase.__getitem__": [], "storage._StorageBase.copy_": [], "storage._StorageBase.size": [], "storage._StorageBase.type": [], "storage._StorageBase.cuda": [], "storage._StorageBase.element_size": [], "storage._StorageBase.get_device": [], "storage._StorageBase._share_filename_": [], "storage._StorageBase._share_fd_": [], "storage._StorageBase._new_using_filename": [], "storage._StorageBase._new_using_fd": [], "storage._StorageBase.__str__": ["<builtin>.len", "torch.typename", "<builtin>.range", "<builtin>.str"], "<builtin>.str": [], "<builtin>.len": [], "<builtin>.range": [], "torch.typename": [], "storage._StorageBase.__repr__": ["<builtin>.str"], "storage._StorageBase.__iter__": ["<builtin>.iter", "<builtin>.range", "storage._StorageBase.size", "<builtin>.map"], "storage._StorageBase.__iter__.<lambda1>": [], "<builtin>.map": [], "<builtin>.iter": [], "storage._StorageBase.__copy__": ["storage._StorageBase.clone"], "storage._StorageBase.clone": ["storage._StorageBase.type", "torch.cuda.device", "_utils._type", "storage._StorageBase.size", "storage._StorageBase.get_device"], "storage._StorageBase.__deepcopy__": ["storage._StorageBase.clone"], "storage._StorageBase.__reduce__": ["torch.save", "io.BytesIO"], "io.BytesIO": [], "torch.save": [], "storage._StorageBase.__sizeof__": ["<builtin>.super", "storage._StorageBase.element_size", "storage._StorageBase.size"], "<builtin>.super": [], "torch.cuda.device": [], "_utils._type": [], "storage._StorageBase.tolist": ["<builtin>.list"], "<builtin>.list": [], "storage._StorageBase.cpu": ["<builtin>.getattr", "storage._StorageBase.type", "_utils._type"], "<builtin>.getattr": [], "storage._StorageBase.double": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.float": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.half": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.long": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.int": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.short": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.char": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.byte": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.bool": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.bfloat16": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.complex_double": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.complex_float": ["storage._StorageBase.type", "_utils._type"], "storage._StorageBase.pin_memory": ["torch.cuda._host_allocator", "storage._StorageBase.type", "_utils._type", "storage._StorageBase.size", "<builtin>.TypeError"], "<builtin>.TypeError": [], "torch.cuda._host_allocator": [], "storage._StorageBase.share_memory_": ["storage._StorageBase._share_fd_", "torch.multiprocessing.get_sharing_strategy", "storage._StorageBase._share_filename_"], "torch.multiprocessing.get_sharing_strategy": [], "storage._StorageBase._new_shared": ["storage._StorageBase._new_using_fd", "torch.multiprocessing.get_sharing_strategy", "storage._StorageBase._new_using_filename", "storage._StorageBase.__init__"], "storage._load_from_bytes": ["torch.load", "io.BytesIO"], "torch.load": []}