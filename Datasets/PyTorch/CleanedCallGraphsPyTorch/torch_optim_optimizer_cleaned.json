{"optimizer": [], "optimizer._RequiredParameter.__repr__": [], "optimizer.Optimizer.__init__": ["torch._C._log_api_usage_once", "collections.defaultdict", "optimizer.Optimizer.add_param_group", "<builtin>.TypeError", "torch.typename", "<builtin>.ValueError", "optimizer.Optimizer._hook_for_profile", "<builtin>.len", "<builtin>.list", "<builtin>.isinstance"], "torch._C._log_api_usage_once": [], "optimizer.Optimizer._hook_for_profile": ["<builtin>.getattr", "optimizer.Optimizer._hook_for_profile.profile_hook_step"], "<builtin>.isinstance": [], "torch.typename": [], "<builtin>.TypeError": [], "collections.defaultdict": [], "<builtin>.list": [], "<builtin>.len": [], "<builtin>.ValueError": [], "optimizer.Optimizer.add_param_group": ["<builtin>.set", "<builtin>.TypeError", "torch.typename", "warnings.warn", "<builtin>.ValueError", "<builtin>.len", "<builtin>.list", "<builtin>.isinstance"], "optimizer.Optimizer.__getstate__": [], "optimizer.Optimizer.__setstate__": ["optimizer.Optimizer._hook_for_profile"], "optimizer.Optimizer.__repr__": ["<builtin>.enumerate", "<builtin>.sorted"], "<builtin>.enumerate": [], "<builtin>.sorted": [], "optimizer.Optimizer._hook_for_profile.profile_hook_step": ["functools.wraps"], "functools.wraps": [], "optimizer.Optimizer._hook_for_profile.profile_hook_step.wrapper": ["torch.autograd.profiler.record_function"], "torch.autograd.profiler.record_function": [], "<builtin>.getattr": [], "optimizer.Optimizer.state_dict": ["<builtin>.id", "optimizer.Optimizer.state_dict.pack_group", "<builtin>.isinstance"], "optimizer.Optimizer.state_dict.pack_group": ["<builtin>.enumerate", "<builtin>.id", "<builtin>.len"], "<builtin>.id": [], "optimizer.Optimizer.load_state_dict": ["optimizer.Optimizer.load_state_dict.cast", "collections.defaultdict", "optimizer.Optimizer.__setstate__", "itertools.chain.from_iterable", "<builtin>.ValueError", "optimizer.Optimizer.load_state_dict.update_group", "copy.deepcopy", "<builtin>.zip", "<builtin>.len", "<builtin>.any"], "copy.deepcopy": [], "<builtin>.zip": [], "<builtin>.any": [], "itertools.chain.from_iterable": [], "optimizer.Optimizer.load_state_dict.cast": ["<builtin>.type", "optimizer.Optimizer.load_state_dict.cast", "<builtin>.isinstance"], "<builtin>.type": [], "optimizer.Optimizer.load_state_dict.update_group": [], "optimizer.Optimizer.zero_grad": ["optimizer.Optimizer._hook_for_profile", "<builtin>.hasattr", "torch.autograd.profiler.record_function"], "<builtin>.hasattr": [], "optimizer.Optimizer.step": [], "<builtin>.set": [], "warnings.warn": []}