{"benchmark_runner": ["argparse.ArgumentParser", "benchmark_runner.main"], "argparse.ArgumentParser": [], "benchmark_runner.parse_args": ["benchmark_utils.is_pytorch_enabled", "benchmark_utils.set_omp_threads", "torch.set_num_threads", "benchmark_utils.set_mkl_threads"], "benchmark_utils.set_omp_threads": ["<builtin>.str", "<builtin>.print", "os.environ.get"], "benchmark_utils.is_pytorch_enabled": [], "torch.set_num_threads": [], "benchmark_utils.set_mkl_threads": ["<builtin>.str", "<builtin>.print", "os.environ.get"], "benchmark_runner.main": ["benchmark_core.BenchmarkRunner.__init__", "benchmark_core.BenchmarkRunner.run", "benchmark_runner.parse_args"], "benchmark_core.BenchmarkRunner.__init__": ["benchmark_utils.get_operator_range"], "benchmark_core.BenchmarkRunner.run": ["benchmark_core.BenchmarkRunner._measure_time", "benchmark_core.BenchmarkRunner._launch_forward", "benchmark_core.BenchmarkRunner._print_header", "benchmark_core.BenchmarkRunner._print_perf_result", "benchmark_core.BenchmarkRunner._keep_test", "benchmark_core.BenchmarkRunner._launch_backward", "benchmark_core._build_test", "numpy.random.seed", "<builtin>.range", "<builtin>.hash", "benchmark_core.BenchmarkRunner._print_test_case_info", "<builtin>.print"], "benchmark_core": ["collections.namedtuple"], "collections.namedtuple": [], "benchmark_core._register_test": [], "benchmark_core._create_test": ["<builtin>.str", "copy.deepcopy", "ast.literal_eval", "json.dumps"], "copy.deepcopy": [], "<builtin>.str": [], "json.dumps": [], "ast.literal_eval": [], "benchmark_core._build_test": ["<builtin>.str", "copy.deepcopy", "<builtin>.isinstance", "<builtin>.range", "<builtin>.ValueError", "<builtin>.vars", "torch.cuda.is_available", "benchmark_core._create_test"], "torch.cuda.is_available": [], "<builtin>.ValueError": [], "<builtin>.vars": [], "<builtin>.isinstance": [], "<builtin>.range": [], "benchmark_utils.get_operator_range": ["<builtin>.len", "<builtin>.ord", "<builtin>.set", "<builtin>.range", "<builtin>.ValueError", "<builtin>.all", "<builtin>.chr"], "benchmark_core.BenchmarkRunner._print_header": ["<builtin>.print", "<builtin>.set"], "<builtin>.print": [], "<builtin>.set": [], "benchmark_core.BenchmarkRunner._print_perf_result": ["<builtin>.range", "json.dumps", "<builtin>.print"], "benchmark_core.BenchmarkRunner._predict_num_iter_needed": [], "benchmark_core.BenchmarkRunner._iteration_result_is_significant": [], "benchmark_core.BenchmarkRunner._launch_forward": ["functools.partial", "timeit.timeit"], "functools.partial": [], "timeit.timeit": [], "benchmark_core.BenchmarkRunner._launch_backward": ["functools.partial", "timeit.timeit"], "benchmark_core.BenchmarkRunner._measure_time": ["numpy.percentile", "numpy.array", "benchmark_core.BenchmarkRunner._iteration_result_is_significant", "json.dumps", "benchmark_core.BenchmarkRunner._launch_backward", "benchmark_core.BenchmarkRunner._launch_forward", "<builtin>.print", "benchmark_core.BenchmarkRunner._predict_num_iter_needed"], "numpy.array": [], "numpy.percentile": [], "benchmark_core.BenchmarkRunner._check_keep": [], "benchmark_core.BenchmarkRunner._check_operator_first_char": [], "benchmark_core.BenchmarkRunner._check_keep_list": ["<builtin>.any"], "<builtin>.any": [], "benchmark_core.BenchmarkRunner._keep_test": ["benchmark_utils.process_arg_list", "benchmark_core.BenchmarkRunner._check_keep_list", "benchmark_core.BenchmarkRunner._check_keep", "benchmark_core.BenchmarkRunner._check_operator_first_char"], "benchmark_utils.process_arg_list": ["<builtin>.len"], "benchmark_core.BenchmarkRunner._print_test_case_info": ["<builtin>.print"], "<builtin>.hash": [], "numpy.random.seed": [], "benchmark_utils": [], "benchmark_utils.shape_to_string": ["<builtin>.str"], "benchmark_utils.str2bool": ["<builtin>.isinstance"], "benchmark_utils.numpy_random": ["numpy.random.rand"], "numpy.random.rand": [], "os.environ.get": [], "benchmark_utils.cross_product": ["itertools.product", "<builtin>.list"], "itertools.product": [], "<builtin>.list": [], "benchmark_utils.get_n_rand_nums": ["<builtin>.range", "random.sample", "random.seed"], "random.seed": [], "random.sample": [], "benchmark_utils.generate_configs": [], "benchmark_utils.cross_product_configs": ["itertools.product", "<builtin>.list", "benchmark_utils._validate"], "benchmark_utils._validate": [], "benchmark_utils.config_list": ["<builtin>.any", "<builtin>.enumerate", "<builtin>.list", "benchmark_utils._validate", "benchmark_utils.cross_product_configs", "<builtin>.ValueError"], "<builtin>.enumerate": [], "benchmark_utils.attr_probs": [], "benchmark_utils.RandomSample.__init__": [], "benchmark_utils.RandomSample._distribution_func": ["<builtin>.sum"], "<builtin>.sum": [], "benchmark_utils.RandomSample._random_sample": ["benchmark_utils.RandomSample._distribution_func", "random.random", "<builtin>.len", "bisect.bisect"], "<builtin>.len": [], "random.random": [], "bisect.bisect": [], "benchmark_utils.RandomSample.get_one_set_of_inputs": ["<builtin>.str", "benchmark_utils.RandomSample._random_sample"], "benchmark_utils.random_sample_configs": ["<builtin>.range", "<builtin>.ValueError", "benchmark_utils.RandomSample.get_one_set_of_inputs", "benchmark_utils.RandomSample.__init__"], "benchmark_utils.op_list": ["<builtin>.ValueError", "<builtin>.enumerate"], "benchmark_utils.is_caffe2_enabled": [], "<builtin>.all": [], "<builtin>.ord": [], "<builtin>.chr": []}