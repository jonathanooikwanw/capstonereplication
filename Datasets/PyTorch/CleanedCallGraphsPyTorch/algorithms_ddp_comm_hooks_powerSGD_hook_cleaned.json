{"powerSGD_hook": [], "powerSGD_hook._orthogonalize": ["logging.error", "torch.sum", "<builtin>.range", "torch.norm"], "<builtin>.range": [], "torch.norm": [], "logging.error": [], "torch.sum": [], "powerSGD_hook._should_compress": [], "powerSGD_hook._report_compression_stats": ["logging.info"], "logging.info": [], "powerSGD_hook.PowerSGDState.__init__": ["<builtin>.ValueError", "logging.info", "<builtin>.max", "numpy.random.RandomState"], "<builtin>.ValueError": [], "numpy.random.RandomState": [], "<builtin>.max": [], "powerSGD_hook.PowerSGDState.maybe_increase_iter": ["logging.info"], "powerSGD_hook.PowerSGDState.compression_stats": [], "powerSGD_hook.powerSGD_hook": ["torch.cat", "<builtin>.zip", "powerSGD_hook._orthogonalize", "torch.randn", "torch.matmul", "default_hooks._allreduce_fut", "powerSGD_hook._report_compression_stats", "powerSGD_hook._should_compress", "torch.tensor", "torch.distributed.all_reduce", "torch.random.fork_rng", "torch.empty", "<builtin>.min", "torch.manual_seed", "torch.zeros", "logging.info", "torch.clone"], "default_hooks._allreduce_fut": [], "torch.zeros": [], "torch.clone": [], "<builtin>.min": [], "torch.cat": [], "torch.tensor": [], "torch.empty": [], "torch.random.fork_rng": [], "torch.manual_seed": [], "torch.randn": [], "<builtin>.zip": [], "torch.matmul": [], "torch.distributed.all_reduce": [], "powerSGD_hook.powerSGD_hook.unpack_uncompressed_tensors_and_allreduce_ps": ["torch.distributed.all_reduce"], "powerSGD_hook.powerSGD_hook.compute_qs": ["<builtin>.zip", "powerSGD_hook._orthogonalize", "torch.distributed.all_reduce", "torch.matmul"], "powerSGD_hook.powerSGD_hook.decompress": ["torch.cuda.synchronize", "<builtin>.zip", "torch.matmul", "torch.cuda.is_available"], "torch.cuda.is_available": [], "torch.cuda.synchronize": [], "powerSGD_hook.batched_powerSGD_hook": ["torch.matmul", "powerSGD_hook._orthogonalize", "default_hooks._allreduce_fut", "powerSGD_hook._report_compression_stats", "logging.info", "math.ceil", "torch.distributed.all_reduce", "torch.zeros", "math.sqrt", "torch.clone", "powerSGD_hook.batched_powerSGD_hook.create_low_rank_tensor"], "math.sqrt": [], "math.ceil": [], "powerSGD_hook.batched_powerSGD_hook.create_low_rank_tensor": ["torch.randn", "torch.empty", "torch.manual_seed", "torch.random.fork_rng"], "powerSGD_hook.batched_powerSGD_hook.compute_q": ["torch.matmul", "powerSGD_hook._orthogonalize", "torch.distributed.all_reduce"], "powerSGD_hook.batched_powerSGD_hook.decompress": ["torch.cuda.synchronize", "torch.matmul", "torch.cuda.is_available"]}