{"pipe": ["pipe.bench_single_process", "argparse.ArgumentParser", "<builtin>.print"], "pipe.sizeof_fmt": ["<builtin>.abs"], "<builtin>.abs": [], "pipe.init_random_seed": ["numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed"], "torch.manual_seed": [], "torch.cuda.manual_seed": [], "numpy.random.seed": [], "pipe.EmbeddingLayer.__init__": ["<builtin>.super", "torch.nn.Embedding.weight.data.uniform_"], "<builtin>.super": [], "torch.nn.Embedding.weight.data.uniform_": [], "pipe.EmbeddingLayer.forward": ["<builtin>.super", "math.sqrt"], "math.sqrt": [], "pipe.PositionalEncodingLayer.__init__": ["math.log", "torch.sin", "torch.cos", "torch.nn.Dropout", "<builtin>.super", "torch.zeros", "torch.exp", "torch.arange", "torch.nn.Module.register_buffer"], "torch.nn.Dropout": [], "torch.zeros": [], "torch.arange": [], "math.log": [], "torch.exp": [], "torch.sin": [], "torch.cos": [], "torch.nn.Module.register_buffer": [], "pipe.PositionalEncodingLayer.forward": [], "pipe.TransformerDecoderLayer.__init__": ["<builtin>.super"], "pipe.TransformerDecoderLayer.forward": ["<builtin>.super", "torch.nn.Transformer.generate_square_subsequent_mask", "<builtin>.len"], "<builtin>.len": [], "torch.nn.Transformer.generate_square_subsequent_mask": [], "pipe.LinearLayer.__init__": ["<builtin>.super", "torch.nn.Linear.weight.data.uniform_", "torch.nn.Linear.bias.data.zero_"], "torch.nn.Linear.bias.data.zero_": [], "torch.nn.Linear.weight.data.uniform_": [], "pipe.TransformerLMSequential.__init__": ["pipe.EmbeddingLayer.__init__", "pipe.LinearLayer.__init__", "pipe.PositionalEncodingLayer.__init__", "<builtin>.range", "<builtin>.super", "pipe.TransformerDecoderLayer.__init__"], "<builtin>.range": [], "pipe.make_model": ["torch.nn.CrossEntropyLoss", "torch.nn.Sequential.to", "pipe.TransformerLMSequential.__init__"], "torch.nn.Sequential.to": [], "torch.nn.CrossEntropyLoss": [], "pipe.make_model.make_adam": ["torch.optim.Adam"], "torch.optim.Adam": [], "pipe.train": ["torch.cuda.memory_stats", "<builtin>.sum", "pipe.train.get_first_device", "<builtin>.enumerate", "pipe.sizeof_fmt", "torch.distributed.get_rank", "<builtin>.range", "<builtin>.print", "torch.nn.utils.clip_grad_value_", "math.exp", "<builtin>.len", "<builtin>.RuntimeError", "time.time", "pipe.train.get_last_device"], "time.time": [], "pipe.train.get_first_device": ["torch.cuda.current_device"], "torch.cuda.current_device": [], "pipe.train.get_last_device": ["torch.cuda.current_device"], "<builtin>.sum": [], "<builtin>.print": [], "<builtin>.enumerate": [], "torch.distributed.get_rank": [], "<builtin>.RuntimeError": [], "torch.nn.utils.clip_grad_value_": [], "math.exp": [], "torch.cuda.memory_stats": [], "pipe.generate_balance": ["<builtin>.range", "<builtin>.int", "math.ceil"], "<builtin>.int": [], "math.ceil": [], "pipe.make_model_and_data": ["torch.utils.data.DataLoader", "pipe.make_model", "torch.device", "torch.cuda.is_available", "benchmark_dataset.BenchmarkLMDataset.__init__"], "torch.cuda.is_available": [], "torch.device": [], "benchmark_dataset.BenchmarkLMDataset.__init__": [], "torch.utils.data.DataLoader": [], "pipe.bench_single_process": ["torch.device", "pipe.generate_balance", "torch.distributed.rpc.init_rpc", "pipe.make_model_and_data", "pipe.train", "<builtin>.min", "torch.distributed.pipeline.sync.Pipe", "torch.cuda.device_count", "torch.distributed.pipeline.sync.utils.partition_model", "<builtin>.len", "os.environ.update", "pipe.init_random_seed", "torch.cuda.is_available"], "os.environ.update": [], "torch.distributed.rpc.init_rpc": [], "torch.cuda.device_count": [], "<builtin>.min": [], "torch.distributed.pipeline.sync.utils.partition_model": [], "torch.distributed.pipeline.sync.Pipe": [], "argparse.ArgumentParser": [], "benchmark_dataset": [], "benchmark_dataset.collate_sentences_lm": ["torch.LongTensor", "torch.stack", "<builtin>.len"], "torch.LongTensor": [], "torch.stack": [], "benchmark_dataset.BenchmarkLMDataset.__getitem__": ["torch.randint"], "torch.randint": [], "benchmark_dataset.BenchmarkLMDataset.__len__": []}