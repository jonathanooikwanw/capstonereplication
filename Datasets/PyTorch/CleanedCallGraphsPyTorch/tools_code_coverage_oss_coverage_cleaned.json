{"oss_coverage": ["oss_coverage.report_coverage"], "oss_coverage.report_coverage": ["package.oss.init.initialization", "time.time", "package.oss.cov_json.get_json_report", "package.util.utils.print_time", "package.tool.summarize_jsons.summarize_jsons"], "time.time": [], "package.oss.init.initialization": ["package.oss.init.print_init_info", "utils.clean_up_gcda", "util.utils_init.create_folders", "argparse.ArgumentParser", "package.oss.init.add_arguments_oss", "util.utils.clean_up", "package.oss.init.empty_list_if_none", "os.path.join", "util.utils.remove_file", "util.utils_init.add_arguments_utils", "package.oss.init.parse_arguments", "package.oss.init.get_test_list"], "package.oss.cov_json.get_json_report": ["run.clang_run", "run.gcc_run", "util.utils.check_compiler_type", "tool.clang_coverage.export", "tool.clang_coverage.merge", "init.detect_compiler_type"], "package.tool.summarize_jsons.summarize_jsons": ["time.time", "util.utils.print_time", "util.utils.detect_compiler_type", "print_report.line_oriented_report", "package.tool.summarize_jsons.parse_jsons", "print_report.file_oriented_report", "package.tool.summarize_jsons.update_set", "print_report.html_oriented_report"], "package.util.utils.print_time": ["<builtin>.print", "package.util.utils.convert_time", "<builtin>.open", "time.time", "os.path.join"], "package.oss.cov_json": [], "init.detect_compiler_type": [], "util.utils.check_compiler_type": [], "run.clang_run": [], "tool.clang_coverage.merge": [], "tool.clang_coverage.export": [], "run.gcc_run": [], "package.util.setting": ["os.path.realpath", "os.path.join", "os.path.dirname"], "os.path.realpath": [], "os.path.dirname": [], "os.path.join": [], "package.util.setting.Test.__init__": [], "package.oss.run": [], "package.oss.run.clang_run": ["time.time", "util.utils.print_time", "utils.get_oss_binary_file", "tool.clang_coverage.run_target", "os.path.join", "util.utils.get_raw_profiles_folder"], "util.utils.get_raw_profiles_folder": [], "utils.get_oss_binary_file": [], "tool.clang_coverage.run_target": [], "util.utils.print_time": [], "package.oss.run.gcc_run": ["util.utils.print_time", "tool.gcc_coverage.run_target", "utils.get_oss_binary_file", "time.time"], "tool.gcc_coverage.run_target": [], "package.util.utils": [], "package.util.utils.convert_time": ["<builtin>.int", "<builtin>.round"], "<builtin>.round": [], "<builtin>.int": [], "<builtin>.open": [], "<builtin>.print": [], "package.util.utils.print_log": ["<builtin>.print", "os.path.join", "<builtin>.open"], "package.util.utils.print_error": ["<builtin>.print", "os.path.join", "<builtin>.open"], "package.util.utils.remove_file": ["os.path.exists", "os.remove"], "os.path.exists": [], "os.remove": [], "package.util.utils.remove_folder": ["shutil.rmtree"], "shutil.rmtree": [], "package.util.utils.create_folder": ["os.makedirs"], "os.makedirs": [], "package.util.utils.clean_up": ["package.util.utils.remove_folder", "sys.exit"], "sys.exit": [], "package.util.utils.convert_to_relative_path": ["<builtin>.len", "<builtin>.RuntimeError"], "<builtin>.RuntimeError": [], "<builtin>.len": [], "package.util.utils.replace_extension": [], "package.util.utils.related_to_test_list": [], "package.util.utils.get_raw_profiles_folder": ["os.environ.get", "os.path.join"], "os.environ.get": [], "package.util.utils.detect_compiler_type": ["package.oss.utils.detect_compiler_type", "package.util.utils.check_compiler_type", "caffe2.fb.code_coverage.tool.package.fbcode.utils.detect_compiler_type"], "package.oss.utils.detect_compiler_type": ["os.environ.get", "subprocess.check_output", "<builtin>.RuntimeError"], "caffe2.fb.code_coverage.tool.package.fbcode.utils.detect_compiler_type": [], "package.util.utils.check_compiler_type": ["<builtin>.Exception"], "package.util.utils.get_test_name_from_whole_path": [], "<builtin>.Exception": [], "package.util.utils.check_platform_type": ["<builtin>.Exception"], "package.util.utils.check_test_type": ["<builtin>.Exception"], "package.util.utils.raise_no_test_found_exception": ["<builtin>.RuntimeError"], "package.oss.utils": [], "package.oss.utils.get_oss_binary_folder": ["utils.get_pytorch_folder", "os.path.join"], "utils.get_pytorch_folder": [], "package.oss.utils.get_oss_shared_library": ["os.listdir", "utils.get_pytorch_folder", "os.path.join"], "os.listdir": [], "package.oss.utils.get_oss_binary_file": ["package.oss.utils.get_oss_binary_folder", "os.path.join"], "package.oss.utils.get_llvm_tool_path": ["os.environ.get"], "os.path.abspath": [], "subprocess.check_output": [], "package.oss.utils.clean_up_gcda": ["package.oss.utils.get_gcda_files", "util.utils.remove_file"], "package.oss.utils.get_gcda_files": ["os.path.isdir", "utils.get_pytorch_folder", "subprocess.check_output", "os.path.join"], "util.utils.remove_file": [], "os.path.isdir": [], "package.oss.utils.run_oss_python_test": ["util.utils.print_error", "package.oss.utils.get_oss_binary_folder", "subprocess.check_call"], "subprocess.check_call": [], "util.utils.print_error": [], "package.tool.clang_coverage": [], "package.tool.clang_coverage.create_corresponding_folder": ["util.utils.convert_to_relative_path", "util.utils.create_folder", "os.path.join"], "util.utils.convert_to_relative_path": [], "util.utils.create_folder": [], "package.tool.clang_coverage.run_target": ["utils.run_cpp_test", "util.utils.print_log", "oss.utils.run_oss_python_test"], "util.utils.print_log": [], "oss.utils.run_oss_python_test": [], "utils.run_cpp_test": [], "package.tool.clang_coverage.merge_target": ["utils.get_tool_path_by_platform", "util.utils.print_log", "subprocess.check_call"], "utils.get_tool_path_by_platform": [], "package.tool.clang_coverage.export_target": ["os.system", "utils.get_tool_path_by_platform", "util.utils.print_log", "<builtin>.Exception"], "os.system": [], "package.tool.clang_coverage.merge": ["<builtin>.print", "util.utils.convert_to_relative_path", "time.time", "util.utils.print_time", "util.utils.replace_extension", "package.tool.clang_coverage.create_corresponding_folder", "util.utils.get_raw_profiles_folder", "util.utils.related_to_test_list", "os.path.join", "package.tool.clang_coverage.merge_target", "os.walk"], "os.walk": [], "util.utils.related_to_test_list": [], "util.utils.replace_extension": [], "package.tool.clang_coverage.export": ["<builtin>.print", "util.utils.convert_to_relative_path", "oss.utils.get_oss_binary_file", "util.utils.check_platform_type", "package.tool.clang_coverage.export_target", "time.time", "util.utils.print_time", "util.utils.replace_extension", "package.tool.clang_coverage.create_corresponding_folder", "caffe2.fb.code_coverage.tool.package.fbcode.utils.get_fbcode_binary_folder", "util.utils.related_to_test_list", "os.path.join", "util.utils.get_test_name_from_whole_path", "oss.utils.get_oss_shared_library", "os.walk"], "util.utils.check_platform_type": [], "caffe2.fb.code_coverage.tool.package.fbcode.utils.get_fbcode_binary_folder": [], "util.utils.get_test_name_from_whole_path": [], "oss.utils.get_oss_binary_file": [], "oss.utils.get_oss_shared_library": [], "package.util": [], "package.tool.utils": [], "package.tool.utils.run_cpp_test": ["util.utils.print_error", "subprocess.check_call"], "package.tool.utils.get_tool_path_by_platform": ["oss.utils.get_llvm_tool_path", "caffe2.fb.code_coverage.tool.package.fbcode.utils.get_llvm_tool_path"], "oss.utils.get_llvm_tool_path": [], "caffe2.fb.code_coverage.tool.package.fbcode.utils.get_llvm_tool_path": [], "package.tool.gcc_coverage": [], "package.tool.gcc_coverage.update_gzip_dict": ["<builtin>.str"], "<builtin>.str": [], "package.tool.gcc_coverage.run_target": ["oss.utils.run_oss_python_test", "util.utils.print_time", "utils.run_cpp_test", "time.time", "util.utils.print_log"], "package.tool.gcc_coverage.export": ["oss.utils.get_gcda_files", "time.time", "util.utils.print_time", "subprocess.check_output", "os.rename", "subprocess.check_call", "os.path.join", "package.tool.gcc_coverage.update_gzip_dict", "os.path.basename"], "oss.utils.get_gcda_files": [], "os.path.basename": [], "os.rename": [], "package.oss.init": [], "util.utils_init.create_folders": [], "argparse.ArgumentParser": [], "util.utils_init.add_arguments_utils": [], "package.oss.init.add_arguments_oss": [], "package.oss.init.parse_arguments": ["util.utils_init.get_options"], "utils.clean_up_gcda": [], "util.utils.clean_up": [], "package.oss.init.get_test_list": ["utils.get_oss_binary_folder", "util.utils.raise_no_test_found_exception", "package.oss.init.get_python_run_only", "package.oss.init.get_test_list_by_type"], "package.oss.init.empty_list_if_none": [], "package.oss.init.print_init_info": ["utils.detect_compiler_type", "utils.get_oss_binary_folder", "utils.get_pytorch_folder", "util.utils.print_log", "utils.get_llvm_tool_path", "typing.cast"], "util.utils_init.get_options": [], "package.oss.init.get_test_list_by_type": ["os.walk", "utils.get_oss_binary_folder", "util.setting.Test"], "utils.get_oss_binary_folder": [], "util.setting.Test": [], "package.oss.init.get_python_run_only": ["os.walk", "utils.detect_compiler_type", "utils.get_oss_binary_folder"], "util.utils.raise_no_test_found_exception": [], "package.oss.init.gcc_export_init": ["util.utils.remove_folder", "util.utils.create_folder"], "util.utils.remove_folder": [], "utils.detect_compiler_type": [], "typing.cast": [], "utils.get_llvm_tool_path": [], "package.util.utils_init": [], "package.util.utils_init.remove_files": ["os.path.join", "utils.remove_file"], "utils.remove_file": [], "package.util.utils_init.create_folders": ["utils.create_folder", "utils.get_raw_profiles_folder"], "utils.get_raw_profiles_folder": [], "utils.create_folder": [], "package.util.utils_init.add_arguments_utils": [], "package.util.utils_init.have_option": [], "package.util.utils_init.get_options": ["setting.Option", "<builtin>.any", "<builtin>.vars"], "setting.Option": [], "<builtin>.vars": [], "<builtin>.any": [], "package.tool": [], "package.oss": [], "package.tool.summarize_jsons": ["<builtin>.set"], "<builtin>.set": [], "package.tool.summarize_jsons.transform_file_name": ["utils.get_pytorch_folder", "<builtin>.len"], "package.tool.summarize_jsons.is_intrested_file": ["utils.get_pytorch_folder", "<builtin>.any"], "package.tool.summarize_jsons.get_json_obj": ["json.loads", "<builtin>.open"], "json.loads": [], "package.tool.summarize_jsons.parse_json": ["<builtin>.print", "package.tool.summarize_jsons.get_json_obj", "<builtin>.RuntimeError", "parser.gcov_coverage_parser.GcovCoverageParser", "util.utils.detect_compiler_type", "parser.llvm_coverage_parser.LlvmCoverageParser"], "util.utils.detect_compiler_type": [], "parser.llvm_coverage_parser.LlvmCoverageParser": [], "parser.gcov_coverage_parser.GcovCoverageParser": [], "package.tool.summarize_jsons.parse_jsons": ["util.utils.print_error", "util.utils.detect_compiler_type", "package.tool.summarize_jsons.update_coverage", "os.path.join", "util.utils.related_to_test_list", "package.tool.summarize_jsons.parse_json", "os.walk"], "package.tool.summarize_jsons.update_coverage": ["<builtin>.set", "package.tool.summarize_jsons.is_intrested_file", "package.tool.summarize_jsons.transform_file_name"], "package.tool.summarize_jsons.update_set": [], "print_report.html_oriented_report": [], "print_report.line_oriented_report": [], "print_report.file_oriented_report": [], "package.tool.print_report": [], "package.tool.print_report.key_by_percentage": [], "package.tool.print_report.key_by_name": [], "package.tool.print_report.is_intrested_file": [], "package.tool.print_report.is_this_type_of_tests": [], "package.tool.print_report.print_test_by_type": ["<builtin>.print", "package.tool.print_report.is_this_type_of_tests"], "package.tool.print_report.print_test_condition": ["<builtin>.print", "package.tool.print_report.print_test_by_type"], "package.tool.print_report.line_oriented_report": ["package.tool.print_report.print_test_condition", "<builtin>.print", "<builtin>.open", "os.path.join", "<builtin>.sorted"], "<builtin>.sorted": [], "package.tool.print_report.print_file_summary": ["<builtin>.print"], "package.tool.print_report.print_file_oriented_report": ["package.tool.print_report.print_test_condition", "<builtin>.print", "package.tool.print_report.print_file_summary", "<builtin>.str"], "package.tool.print_report.file_oriented_report": ["package.tool.print_report.print_file_oriented_report", "<builtin>.round", "<builtin>.open", "<builtin>.len", "os.path.join"], "package.tool.print_report.get_html_ignored_pattern": [], "package.tool.print_report.html_oriented_report": ["utils.get_pytorch_folder", "subprocess.check_call", "os.path.join", "package.tool.print_report.get_html_ignored_pattern"], "package": []}