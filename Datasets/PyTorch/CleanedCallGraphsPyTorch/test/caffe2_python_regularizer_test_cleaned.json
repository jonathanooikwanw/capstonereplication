{"regularizer_test": [], "caffe2.python.hypothesis_test_util.arrays": [], "regularizer_test.TestRegularizerContext": ["hypothesis.given", "caffe2.python.hypothesis_test_util.arrays"], "hypothesis.given": [], "regularizer_test.TestRegularizerContext.test_regularizer_context": ["caffe2.python.schema.Scalar", "<builtin>.range", "caffe2.python.schema.FeedRecord", "caffe2.python.regularizer.L1Norm", "caffe2.python.regularizer_context.UseRegularizer", "caffe2.python.optimizer.SgdOptimizer", "caffe2.python.layer_model_instantiator.generate_training_nets", "caffe2.python.layer_test_util.LayersTestCase.assertEqual", "caffe2.python.regularizer_context.RegularizerContext.current", "caffe2.python.layer_test_util.LayersTestCase.model.FC", "<builtin>.len", "caffe2.python.schema.Struct", "caffe2.python.layer_test_util.LayersTestCase.new_record"], "caffe2.python.regularizer.L1Norm": [], "caffe2.python.schema.Scalar": [], "caffe2.python.layer_test_util.LayersTestCase.new_record": [], "caffe2.python.schema.FeedRecord": [], "caffe2.python.regularizer_context.UseRegularizer": [], "caffe2.python.regularizer_context.RegularizerContext.current": [], "caffe2.python.optimizer.SgdOptimizer": [], "caffe2.python.layer_test_util.LayersTestCase.model.FC": [], "caffe2.python.schema.Struct": [], "caffe2.python.layer_test_util.LayersTestCase.assertEqual": [], "caffe2.python.layer_model_instantiator.generate_training_nets": [], "<builtin>.len": [], "<builtin>.range": [], "caffe2.python.hypothesis_test_util.floats": [], "regularizer_test.TestRegularizer": ["hypothesis.strategies.booleans", "hypothesis.given", "hypothesis.strategies.data", "hypothesis.strategies.floats", "hypothesis.strategies.integers", "caffe2.python.hypothesis_test_util.floats", "caffe2.python.hypothesis_test_util.arrays"], "regularizer_test.TestRegularizer.test_log_barrier": ["<builtin>.zip", "regularizer_test.TestRegularizer.test_log_barrier.ref", "caffe2.python.workspace.FeedBlob", "caffe2.python.regularizer.LogBarrier", "caffe2.python.core.BlobReference", "caffe2.python.workspace.FetchBlobs", "caffe2.python.layer_test_util.LayersTestCase.get_training_nets", "numpy.testing.assert_allclose", "caffe2.python.workspace.RunNetOnce"], "caffe2.python.core.BlobReference": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.layer_test_util.LayersTestCase.get_training_nets": [], "caffe2.python.regularizer.LogBarrier": [], "caffe2.python.workspace.RunNetOnce": [], "regularizer_test.TestRegularizer.test_log_barrier.ref": ["numpy.sum", "numpy.clip", "numpy.log", "numpy.array"], "numpy.clip": [], "numpy.log": [], "numpy.sum": [], "numpy.array": [], "caffe2.python.workspace.FetchBlobs": [], "<builtin>.zip": [], "numpy.testing.assert_allclose": [], "hypothesis.strategies.booleans": [], "regularizer_test.TestRegularizer.test_bounded_grad_proj": ["regularizer_test.TestRegularizer.test_bounded_grad_proj.ref", "caffe2.python.workspace.FeedBlob", "caffe2.python.core.BlobReference", "caffe2.python.layer_test_util.LayersTestCase.get_training_nets", "caffe2.python.regularizer.BoundedGradientProjection", "numpy.testing.assert_allclose", "caffe2.python.workspace.RunNetOnce"], "caffe2.python.regularizer.BoundedGradientProjection": [], "regularizer_test.TestRegularizer.test_bounded_grad_proj.ref": ["numpy.clip"], "hypothesis.strategies.integers": [], "regularizer_test.TestRegularizer.test_group_l1_norm": ["caffe2.python.regularizer.GroupL1Norm", "regularizer_test.TestRegularizer.test_group_l1_norm.compare_reference", "<builtin>.range", "numpy.random.randint", "caffe2.python.workspace.FeedBlob", "numpy.append", "numpy.sort", "caffe2.python.core.BlobReference", "numpy.random.rand", "numpy.diff", "caffe2.python.layer_test_util.LayersTestCase.get_training_nets", "numpy.random.choice", "caffe2.python.workspace.RunNetOnce"], "regularizer_test.TestRegularizer.test_group_l1_norm.compare_reference": ["numpy.array", "numpy.sqrt", "numpy.multiply", "numpy.testing.assert_almost_equal", "numpy.hsplit", "numpy.sum", "numpy.square"], "numpy.hsplit": [], "numpy.square": [], "numpy.sqrt": [], "numpy.multiply": [], "numpy.testing.assert_almost_equal": [], "numpy.random.rand": [], "numpy.random.randint": [], "numpy.random.choice": [], "numpy.sort": [], "numpy.append": [], "numpy.diff": [], "caffe2.python.regularizer.GroupL1Norm": [], "regularizer_test.TestRegularizer.test_l1_norm_trimmed": ["numpy.absolute", "caffe2.python.workspace.FeedBlob", "caffe2.python.core.BlobReference", "numpy.sort", "caffe2.python.regularizer.L1NormTrimmed", "numpy.random.rand", "numpy.testing.assert_almost_equal", "caffe2.python.layer_test_util.LayersTestCase.get_training_nets", "numpy.sum", "caffe2.python.workspace.RunNetOnce"], "caffe2.python.regularizer.L1NormTrimmed": [], "numpy.absolute": [], "regularizer_test.TestRegularizer.test_elastic_l1_norm_trimmed": ["numpy.absolute", "caffe2.python.workspace.FeedBlob", "caffe2.python.core.BlobReference", "caffe2.python.regularizer.ElasticNetL1NormTrimmed", "numpy.random.rand", "numpy.sort", "numpy.testing.assert_almost_equal", "caffe2.python.layer_test_util.LayersTestCase.get_training_nets", "numpy.sum", "numpy.square", "caffe2.python.workspace.RunNetOnce"], "caffe2.python.regularizer.ElasticNetL1NormTrimmed": [], "hypothesis.strategies.floats": [], "hypothesis.strategies.data": [], "regularizer_test.TestRegularizer.test_fp16_max_norm": ["numpy.arange", "caffe2.python.workspace.RunNetOnce", "caffe2.python.core.GradientSlice", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.FeedBlob", "numpy.sqrt", "caffe2.python.core.BlobReference", "numpy.random.rand", "numpy.testing.assert_almost_equal", "caffe2.python.hypothesis_test_util.tensor", "caffe2.python.layer_test_util.LayersTestCase.get_training_nets", "numpy.sum", "numpy.unique", "numpy.clip", "hypothesis.strategies.sampled_from", "caffe2.python.regularizer.MaxNorm"], "numpy.arange": [], "hypothesis.strategies.sampled_from": [], "caffe2.python.hypothesis_test_util.tensor": [], "numpy.unique": [], "caffe2.python.core.GradientSlice": [], "caffe2.python.regularizer.MaxNorm": [], "caffe2.python.workspace.FetchBlob": []}