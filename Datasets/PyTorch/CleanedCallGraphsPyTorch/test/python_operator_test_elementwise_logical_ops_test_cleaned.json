{"elementwise_logical_ops_test": ["unittest.main"], "elementwise_logical_ops_test.mux": ["numpy.vectorize"], "elementwise_logical_ops_test.mux.<list1>.<lambda1>": [], "numpy.vectorize": [], "elementwise_logical_ops_test.rowmux": ["elementwise_logical_ops_test.mux", "<builtin>.len"], "<builtin>.len": [], "elementwise_logical_ops_test.TestWhere.test_reference": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertTrue", "numpy.array", "elementwise_logical_ops_test.mux"], "numpy.array": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertTrue": [], "hypothesis.strategies.integers": [], "elementwise_logical_ops_test.TestWhere": ["hypothesis.given", "hypothesis.strategies.integers", "hypothesis.strategies.sampled_from", "hypothesis.settings"], "hypothesis.strategies.sampled_from": [], "hypothesis.given": [], "hypothesis.settings": [], "elementwise_logical_ops_test.TestWhere.test_where": ["numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks"], "numpy.random.rand": [], "caffe2.python.core.CreateOperator": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": [], "elementwise_logical_ops_test.TestWhere.test_where_dim2": ["numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks"], "elementwise_logical_ops_test.TestRowWhere.test_reference": ["numpy.array", "elementwise_logical_ops_test.rowmux", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertTrue"], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertTrue": [], "elementwise_logical_ops_test.TestRowWhere": ["hypothesis.given", "hypothesis.strategies.integers", "hypothesis.strategies.sampled_from"], "elementwise_logical_ops_test.TestRowWhere.test_rowwhere": ["numpy.random.rand", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks": [], "elementwise_logical_ops_test.TestRowWhere.test_rowwhere_dim2": ["numpy.random.rand", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_logical_ops_test.TestIsMemberOf": ["hypothesis.given", "hypothesis.strategies.integers", "hypothesis.strategies.sampled_from", "hypothesis.settings"], "elementwise_logical_ops_test.TestIsMemberOf.test_is_member_of": ["caffe2.python.core.CreateOperator", "<builtin>.set", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.random.randint", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "numpy.array"], "numpy.random.randint": [], "<builtin>.set": [], "elementwise_logical_ops_test.TestIsMemberOf.test_is_member_of.test": ["numpy.vectorize"], "elementwise_logical_ops_test.TestIsMemberOf.test_is_member_of.test.<list1>.<lambda1>": [], "unittest.main": []}