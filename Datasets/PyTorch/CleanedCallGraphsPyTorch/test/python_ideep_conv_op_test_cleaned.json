{"conv_op_test": ["unittest.main"], "hypothesis.strategies.integers": [], "conv_op_test.ConvTest": ["hypothesis.settings", "hypothesis.strategies.integers", "hypothesis.given", "hypothesis.strategies.booleans"], "hypothesis.strategies.booleans": [], "hypothesis.given": [], "hypothesis.settings": [], "conv_op_test.ConvTest.test_convolution": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.core.CreateOperator", "<builtin>.range", "<builtin>.len", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "numpy.random.rand"], "caffe2.python.core.CreateOperator": [], "numpy.random.rand": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks": [], "<builtin>.len": [], "<builtin>.range": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks": [], "conv_op_test.ConvTest.test_winograd_convolution": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.core.CreateOperator", "<builtin>.range", "<builtin>.len", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "numpy.random.rand"], "conv_op_test.ConvTest.test_depthwise_convolution": ["caffe2.python.transformations.optimizeForMKLDNN", "caffe2.python.workspace.ResetWorkspace", "caffe2.python.workspace.FetchBlob", "numpy.max", "caffe2.python.workspace.RunOperatorOnce", "<builtin>.print", "caffe2.python.core.CreateOperator", "caffe2.proto.caffe2_pb2.NetDef", "numpy.abs", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertTrue", "caffe2.python.workspace.SwitchWorkspace", "numpy.allclose", "caffe2.python.workspace.FeedBlob", "numpy.random.rand", "caffe2.python.core.Net"], "caffe2.python.workspace.SwitchWorkspace": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.workspace.RunOperatorOnce": [], "caffe2.python.workspace.FetchBlob": [], "caffe2.python.workspace.ResetWorkspace": [], "caffe2.python.core.Net": [], "caffe2.proto.caffe2_pb2.NetDef": [], "caffe2.python.transformations.optimizeForMKLDNN": [], "numpy.allclose": [], "<builtin>.print": [], "numpy.abs": [], "numpy.max": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertTrue": [], "unittest.main": []}