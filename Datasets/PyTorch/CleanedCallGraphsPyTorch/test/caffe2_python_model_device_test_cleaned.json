{"model_device_test": ["unittest.main"], "model_device_test.TestMiniAlexNet._MiniAlexNetNoDropout": ["caffe2.python.brew.group_conv", "caffe2.python.brew.max_pool", "caffe2.python.brew.softmax", "caffe2.python.model_helper.ModelHelper", "caffe2.python.brew.lrn", "caffe2.python.brew.fc", "caffe2.python.brew.relu", "caffe2.python.brew.conv"], "caffe2.python.model_helper.ModelHelper": [], "caffe2.python.brew.conv": [], "caffe2.python.brew.relu": [], "caffe2.python.brew.lrn": [], "caffe2.python.brew.max_pool": [], "caffe2.python.brew.group_conv": [], "caffe2.python.brew.fc": [], "caffe2.python.brew.softmax": [], "model_device_test.TestMiniAlexNet._testMiniAlexNet": ["numpy.array", "<builtin>.str", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.ResetWorkspace", "numpy.random.rand", "caffe2.python.device_checker.DeviceChecker", "<builtin>.dict", "caffe2.python.test_util.TestCase.assertEqual", "caffe2.python.workspace.FetchBlob", "caffe2.proto.caffe2_pb2.DeviceOption", "model_device_test.TestMiniAlexNet._MiniAlexNetNoDropout"], "caffe2.python.workspace.ResetWorkspace": [], "caffe2.python.workspace.RunNetOnce": [], "<builtin>.str": [], "caffe2.python.workspace.FetchBlob": [], "<builtin>.dict": [], "numpy.random.rand": [], "numpy.array": [], "caffe2.proto.caffe2_pb2.DeviceOption": [], "caffe2.python.device_checker.DeviceChecker": [], "caffe2.python.test_util.TestCase.assertEqual": [], "unittest.skipIf": [], "model_device_test.TestMiniAlexNet": ["unittest.skipIf"], "model_device_test.TestMiniAlexNet.testMiniAlexNetNCHW": ["model_device_test.TestMiniAlexNet._testMiniAlexNet"], "unittest.main": []}