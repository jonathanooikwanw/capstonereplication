{"layer_norm_op_test": ["unittest.main"], "layer_norm_op_test._layer_norm_ref": ["numpy.square", "numpy.mean", "numpy.prod", "<builtin>.int", "numpy.sqrt", "numpy.reshape"], "numpy.prod": [], "<builtin>.int": [], "numpy.reshape": [], "numpy.mean": [], "numpy.square": [], "numpy.sqrt": [], "layer_norm_op_test._layer_norm_with_affine_ref": ["layer_norm_op_test._layer_norm_ref"], "layer_norm_op_test._layer_norm_grad_ref": ["numpy.sum", "numpy.prod", "<builtin>.int", "numpy.reshape", "numpy.power"], "numpy.power": [], "numpy.sum": [], "caffe2.python.hypothesis_test_util.tensor": [], "layer_norm_op_test.TestLayerNormOp": ["hypothesis.given", "caffe2.python.hypothesis_test_util.tensor", "hypothesis.settings", "hypothesis.strategies.integers", "unittest.skipIf", "hypothesis.strategies.booleans", "hypothesis.strategies.floats"], "hypothesis.given": [], "hypothesis.settings": [], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_grad_op": ["caffe2.python.core.CreateOperator", "numpy.random.randint", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "functools.partial", "<builtin>.len", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "layer_norm_op_test._layer_norm_ref"], "<builtin>.len": [], "numpy.random.randint": [], "caffe2.python.core.CreateOperator": [], "functools.partial": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks": [], "hypothesis.strategies.floats": [], "hypothesis.strategies.booleans": [], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_op": ["numpy.random.randn", "caffe2.python.core.CreateOperator", "numpy.random.randint", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "functools.partial", "<builtin>.len", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks"], "numpy.random.randn": [], "hypothesis.strategies.integers": [], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_grad": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks", "numpy.random.randn", "caffe2.python.core.CreateOperator", "numpy.random.shuffle", "<builtin>.range", "<builtin>.len", "numpy.arange"], "numpy.arange": [], "numpy.random.shuffle": [], "<builtin>.range": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks": [], "unittest.skipIf": [], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_c10": ["numpy.random.randn", "caffe2.python.core.CreateOperator", "numpy.random.randint", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "functools.partial", "<builtin>.len", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks"], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_c10_preallocated_outputs": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.ws.create_blob", "numpy.random.randn", "caffe2.python.model_helper.ModelHelper", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.ws.create_net", "numpy.random.randint", "torch.testing.assert_allclose", "<builtin>.len", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.ws.fetch_blob", "layer_norm_op_test._layer_norm_ref"], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.ws.create_blob": [], "caffe2.python.model_helper.ModelHelper": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.ws.create_net": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.ws.fetch_blob": [], "torch.testing.assert_allclose": [], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_pytorch": ["torch.tensor", "numpy.random.randn", "numpy.random.randint", "torch.ops._caffe2.LayerNorm", "torch.testing.assert_allclose", "<builtin>.len", "layer_norm_op_test._layer_norm_ref"], "torch.tensor": [], "torch.ops._caffe2.LayerNorm": [], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_pytorch_cuda": ["torch.tensor", "numpy.random.randn", "numpy.random.randint", "torch.ops._caffe2.LayerNorm", "torch.testing.assert_allclose", "<builtin>.len", "layer_norm_op_test._layer_norm_ref"], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_jit": ["torch.tensor", "numpy.random.randn", "numpy.random.randint", "layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_jit.jit_layer_norm", "torch.testing.assert_allclose", "<builtin>.len", "torch.jit.script", "layer_norm_op_test._layer_norm_ref"], "torch.jit.script": [], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_jit.jit_layer_norm": ["torch.ops._caffe2.LayerNorm"], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_brew_wrapper": ["caffe2.python.brew.layer_norm", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.ws.create_blob", "caffe2.python.model_helper.ModelHelper", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.ws.create_net", "numpy.random.randint", "<builtin>.len", "numpy.ndim"], "numpy.ndim": [], "caffe2.python.brew.layer_norm": [], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_with_empty_batch": ["numpy.random.rand", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks", "numpy.random.randn", "caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "<builtin>.range", "<builtin>.len", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks"], "numpy.random.rand": [], "layer_norm_op_test.TestLayerNormOp.test_layer_norm_with_empty_batch.ref": ["numpy.zeros_like", "numpy.zeros"], "numpy.zeros_like": [], "numpy.zeros": [], "unittest.main": []}