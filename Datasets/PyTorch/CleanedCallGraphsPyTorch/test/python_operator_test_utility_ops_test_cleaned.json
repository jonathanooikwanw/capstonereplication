{"utility_ops_test": [], "caffe2.python.hypothesis_test_util.tensor": [], "utility_ops_test.TestUtilityOps": ["caffe2.python.hypothesis_test_util.tensor", "caffe2.python.serialized_test.serialized_test_util.given", "hypothesis.strategies.sampled_from", "hypothesis.given", "hypothesis.strategies.booleans", "caffe2.python.hypothesis_test_util.lengths_tensor", "hypothesis.strategies.integers", "hypothesis.settings"], "hypothesis.strategies.booleans": [], "hypothesis.given": [], "hypothesis.settings": [], "utility_ops_test.TestUtilityOps.test_slice": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.array", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "caffe2.python.core.CreateOperator", "random.randint", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks"], "random.randint": [], "numpy.array": [], "caffe2.python.core.CreateOperator": [], "utility_ops_test.TestUtilityOps.test_slice.slice_ref": ["<builtin>.slice"], "<builtin>.slice": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks": [], "hypothesis.strategies.integers": [], "utility_ops_test.TestUtilityOps.test_resize_like": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.zeros", "caffe2.python.core.CreateOperator"], "numpy.zeros": [], "utility_ops_test.TestUtilityOps.test_resize_like.resize_like": [], "hypothesis.strategies.sampled_from": [], "utility_ops_test.TestUtilityOps.test_transpose": ["numpy.random.permutation", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "hypothesis.assume", "numpy.random.rand", "caffe2.python.workspace.GetCuDNNVersion", "<builtin>.list", "<builtin>.int", "caffe2.python.core.CreateOperator", "numpy.random.seed"], "caffe2.python.workspace.GetCuDNNVersion": [], "hypothesis.assume": [], "numpy.random.rand": [], "<builtin>.int": [], "numpy.random.seed": [], "numpy.random.permutation": [], "<builtin>.list": [], "utility_ops_test.TestUtilityOps.test_transpose.transpose_ref": ["numpy.transpose"], "numpy.transpose": [], "utility_ops_test.TestUtilityOps.test_nan_check": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.array", "numpy.random.rand", "<builtin>.float", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertTrue", "numpy.random.randint", "caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks"], "numpy.random.randint": [], "<builtin>.float": [], "utility_ops_test.TestUtilityOps.test_nan_check.nan_reference": ["numpy.isnan", "numpy.array"], "numpy.isnan": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertTrue": [], "caffe2.python.serialized_test.serialized_test_util.given": [], "utility_ops_test.TestUtilityOps.test_elementwise_max": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "utility_ops_test.TestUtilityOps.test_elementwise_max.max_op": ["numpy.maximum"], "numpy.maximum": [], "utility_ops_test.TestUtilityOps.test_elementwise_max_grad": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.maximum", "numpy.random.rand", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "caffe2.python.core.CreateOperator"], "utility_ops_test.TestUtilityOps.test_elementwise_max_grad.max_grad_op": ["utility_ops_test.TestUtilityOps.test_elementwise_max_grad.max_grad_op.mx_grad"], "utility_ops_test.TestUtilityOps.test_elementwise_max_grad.max_grad_op.mx_grad": [], "utility_ops_test.TestUtilityOps.test_elementwise_min": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "utility_ops_test.TestUtilityOps.test_elementwise_min.min_op": ["numpy.minimum"], "numpy.minimum": [], "utility_ops_test.TestUtilityOps.test_elementwise_min_grad": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "numpy.minimum"], "utility_ops_test.TestUtilityOps.test_elementwise_min_grad.min_grad_op": ["utility_ops_test.TestUtilityOps.test_elementwise_min_grad.min_grad_op.mx_grad"], "utility_ops_test.TestUtilityOps.test_elementwise_min_grad.min_grad_op.mx_grad": [], "utility_ops_test.TestUtilityOps.test_sum": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "<builtin>.str", "caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "numpy.random.rand", "<builtin>.range", "numpy.random.seed", "<builtin>.vars"], "<builtin>.range": [], "<builtin>.str": [], "<builtin>.vars": [], "utility_ops_test.TestUtilityOps.test_sum.sum_op_ref": ["<builtin>.range", "numpy.zeros"], "utility_ops_test.TestUtilityOps.<lambda1>": ["hypothesis.strategies.just", "<builtin>.len", "hypothesis.strategies.integers", "caffe2.python.hypothesis_test_util.arrays", "hypothesis.strategies.tuples"], "hypothesis.strategies.just": [], "<builtin>.len": [], "caffe2.python.hypothesis_test_util.arrays": [], "hypothesis.strategies.tuples": [], "utility_ops_test.TestUtilityOps.<lambda2>": ["hypothesis.strategies.just", "<builtin>.len", "caffe2.python.hypothesis_test_util.dims", "hypothesis.strategies.tuples"], "caffe2.python.hypothesis_test_util.dims": [], "caffe2.python.hypothesis_test_util.lengths_tensor": [], "utility_ops_test.TestUtilityOps.test_lengths_gather": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator"], "utility_ops_test.TestUtilityOps.test_lengths_gather.lengths_gather_op": ["numpy.cumsum", "<builtin>.list", "numpy.concatenate"], "numpy.cumsum": [], "numpy.concatenate": [], "utility_ops_test.TestUtilityOps.test_lengths_to_ranges": ["caffe2.python.workspace.InferShapesAndTypes", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertEqual", "caffe2.python.workspace.FeedBlob", "caffe2.python.workspace.RunNetOnce", "caffe2.python.core.Net", "<builtin>.list", "caffe2.python.core.CreateOperator"], "utility_ops_test.TestUtilityOps.test_lengths_to_ranges.lengths_to_ranges_op": ["numpy.cumsum", "numpy.append", "<builtin>.zip"], "numpy.append": [], "<builtin>.zip": [], "caffe2.python.core.Net": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.workspace.InferShapesAndTypes": [], "caffe2.python.workspace.RunNetOnce": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertEqual": [], "utility_ops_test.TestUtilityOps.test_size_op": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.array", "caffe2.python.core.CreateOperator"], "utility_ops_test.TestUtilityOps.test_size_op.size_op": ["numpy.prod"], "numpy.prod": [], "utility_ops_test.TestUtilityOps.test_alias_op": ["caffe2.python.workspace.FeedBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FetchBlob", "numpy.testing.assert_array_equal", "caffe2.python.core.CreateOperator", "numpy.arange"], "numpy.arange": [], "caffe2.python.workspace.RunOperatorOnce": [], "caffe2.python.workspace.FetchBlob": [], "numpy.testing.assert_array_equal": [], "utility_ops_test.TestUtilityOps.test_range": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.array", "<builtin>.len", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertRaisesRegex", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "caffe2.python.core.CreateOperator", "numpy.float32"], "numpy.float32": [], "utility_ops_test.TestUtilityOps.test_range.<lambda1>": ["numpy.arange"], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertRaisesRegex": [], "utility_ops_test.TestUtilityOps.test_range.<lambda2>": ["numpy.arange"]}