{"common_utils": ["hypothesis.settings.register_profile", "sys.getfilesystemencoding", "os.environ.get", "os.getcwd", "<builtin>.print", "common_utils.is_avx512_vnni_supported", "common_utils._get_test_report_path", "torch.backends.mkl.is_available", "pathlib.Path", "common_utils._check_module_exists", "common_utils.settings", "<builtin>.str", "os.getenv", "torch.backends.disable_global_flags", "argparse.ArgumentParser", "torch.manual_seed", "hypothesis.settings.load_profile", "contextlib.contextmanager", "common_utils.cppProfilingFlagsToProfilingMode", "platform.machine"], "torch.backends.disable_global_flags": [], "os.getenv": [], "common_utils.cppProfilingFlagsToProfilingMode": ["torch._C._jit_set_profiling_executor", "torch._C._jit_set_profiling_mode"], "torch._C._jit_set_profiling_executor": [], "torch._C._jit_set_profiling_mode": [], "contextlib.contextmanager": [], "common_utils.enable_profiling_mode_for_profiling_tests": ["torch._C._jit_set_profiling_executor", "torch._C._jit_set_profiling_mode"], "common_utils.enable_profiling_mode": ["torch._C._jit_set_profiling_executor", "torch._C._jit_set_profiling_mode"], "common_utils.num_profiled_runs": ["torch._C._jit_set_num_profiled_runs"], "torch._C._jit_set_num_profiled_runs": [], "common_utils.prof_callable": ["torch._C.ScriptMethod.__call__", "common_utils.enable_profiling_mode_for_profiling_tests", "torch._C.ScriptFunction.__call__"], "torch._C.ScriptMethod.__call__": [], "torch._C.ScriptFunction.__call__": [], "common_utils.prof_func_call": ["common_utils.prof_callable"], "common_utils.prof_meth_call": ["common_utils.prof_callable"], "common_utils._get_test_report_path": ["os.path.join", "os.environ.get"], "os.environ.get": [], "os.path.join": [], "argparse.ArgumentParser": [], "torch.manual_seed": [], "os.getcwd": [], "pathlib.Path": [], "<builtin>.str": [], "common_utils.wait_for_process": [], "common_utils.shell": ["sys.stdout.flush", "sys.stderr.flush", "common_utils.wait_for_process", "subprocess.Popen", "<builtin>.isinstance"], "sys.stdout.flush": [], "sys.stderr.flush": [], "<builtin>.isinstance": [], "subprocess.Popen": [], "common_utils.repeat_test_for_types": [], "common_utils.repeat_test_for_types.repeat_helper": ["functools.wraps"], "functools.wraps": [], "common_utils.repeat_test_for_types.repeat_helper.call_helper": ["expecttest.TestCase.subTest"], "expecttest.TestCase.subTest": [], "common_utils.discover_test_cases_recursively": ["common_utils.discover_test_cases_recursively", "<builtin>.isinstance"], "common_utils.get_test_names": [], "common_utils.chunk_list": ["<builtin>.range"], "<builtin>.range": [], "common_utils.sanitize_test_filename": ["re.sub", "<builtin>.len"], "<builtin>.len": [], "re.sub": [], "common_utils.run_tests": ["<builtin>.range", "common_utils.chunk_list", "subprocess.Popen", "os.path.join", "os.path.exists", "common_utils.shell", "common_utils.discover_test_cases_recursively", "<builtin>.print", "common_utils.get_test_names", "xmlrunner.XMLTestRunner", "inspect.getfile", "json.load", "sys.exit", "sys._getframe", "<builtin>.len", "unittest.TestLoader", "common_utils.sanitize_test_filename", "unittest.main", "<builtin>.open", "os.makedirs", "common_utils.wait_for_process"], "os.path.exists": [], "<builtin>.open": [], "json.load": [], "<builtin>.print": [], "unittest.TestLoader": [], "sys._getframe": [], "inspect.getfile": [], "os.makedirs": [], "xmlrunner.XMLTestRunner": [], "unittest.main": [], "sys.exit": [], "platform.machine": [], "common_utils.is_avx512_vnni_supported": ["<builtin>.open"], "common_utils.TemporaryFileName": ["<builtin>.UserWarning", "os.unlink", "tempfile.NamedTemporaryFile"], "<builtin>.UserWarning": [], "tempfile.NamedTemporaryFile": [], "os.unlink": [], "common_utils.TemporaryDirectoryName": ["shutil.rmtree", "tempfile.mkdtemp", "tempfile.TemporaryDirectory"], "tempfile.mkdtemp": [], "shutil.rmtree": [], "tempfile.TemporaryDirectory": [], "sys.getfilesystemencoding": [], "common_utils._check_module_exists": [], "torch.backends.mkl.is_available": [], "common_utils.skipIfRocm": ["functools.wraps"], "common_utils.skipIfRocm.wrapper": ["unittest.SkipTest"], "unittest.SkipTest": [], "common_utils.DeterministicGuard.__init__": [], "common_utils.DeterministicGuard.__enter__": ["torch.are_deterministic_algorithms_enabled", "torch.use_deterministic_algorithms"], "torch.are_deterministic_algorithms_enabled": [], "torch.use_deterministic_algorithms": [], "common_utils.DeterministicGuard.__exit__": ["torch.use_deterministic_algorithms"], "common_utils.CudaSyncGuard.__init__": [], "common_utils.CudaSyncGuard.__enter__": ["torch.cuda.get_sync_debug_mode", "torch.cuda.set_sync_debug_mode"], "torch.cuda.get_sync_debug_mode": [], "torch.cuda.set_sync_debug_mode": [], "common_utils.CudaSyncGuard.__exit__": ["torch.cuda.set_sync_debug_mode"], "common_utils.wrapDeterministicFlagAPITest": ["functools.wraps"], "common_utils.wrapDeterministicFlagAPITest.wrapper": ["torch.are_deterministic_algorithms_enabled", "common_utils.DeterministicGuard.__init__"], "common_utils.wrapDeterministicFlagAPITest.wrapper.CuBLASConfigGuard.__enter__": ["torch.version.cuda.split", "<builtin>.int", "os.environ.get"], "<builtin>.int": [], "torch.version.cuda.split": [], "common_utils.wrapDeterministicFlagAPITest.wrapper.CuBLASConfigGuard.__exit__": ["os.environ.get"], "common_utils.skipIfCompiledWithoutNumpy": ["functools.wraps", "torch.from_numpy", "numpy.array"], "numpy.array": [], "torch.from_numpy": [], "common_utils.skipIfCompiledWithoutNumpy.wrapper": ["unittest.SkipTest"], "common_utils._test_function": [], "common_utils._test_function.run_test_function": [], "common_utils.skipIfNoLapack": ["functools.wraps"], "common_utils.skipIfNoLapack.wrapper": ["unittest.SkipTest"], "common_utils.skipIfNotRegistered": ["unittest.skip", "unittest.skipIf"], "unittest.skipIf": [], "unittest.skip": [], "common_utils.skipIfNoSciPy": ["functools.wraps"], "common_utils.skipIfNoSciPy.wrapper": ["unittest.SkipTest"], "common_utils.skipIfOnGHA": ["functools.wraps"], "common_utils.skipIfOnGHA.wrapper": ["unittest.SkipTest"], "common_utils.slowTest": ["functools.wraps"], "common_utils.slowTest.wrapper": ["unittest.SkipTest"], "common_utils.noarchTest": ["functools.wraps"], "common_utils.noarchTest.wrapper": ["unittest.SkipTest"], "common_utils.slowAwareTest": [], "common_utils.skipCUDAMemoryLeakCheckIf": [], "common_utils.skipCUDAMemoryLeakCheckIf.dec": ["<builtin>.getattr"], "<builtin>.getattr": [], "common_utils.skipCUDANonDefaultStreamIf": [], "common_utils.skipCUDANonDefaultStreamIf.dec": ["<builtin>.getattr"], "common_utils.suppress_warnings": ["functools.wraps"], "common_utils.suppress_warnings.wrapper": ["warnings.catch_warnings", "warnings.simplefilter"], "warnings.catch_warnings": [], "warnings.simplefilter": [], "common_utils.to_gpu": ["torch.is_storage", "common_utils.to_gpu", "<builtin>.tuple", "copy.deepcopy", "torch.no_grad", "<builtin>.isinstance"], "torch.no_grad": [], "torch.is_storage": [], "<builtin>.tuple": [], "copy.deepcopy": [], "common_utils.get_function_arglist": ["inspect.getfullargspec"], "inspect.getfullargspec": [], "common_utils.set_rng_seed": ["torch.manual_seed", "numpy.random.seed", "random.seed"], "random.seed": [], "numpy.random.seed": [], "common_utils.freeze_rng_state": ["torch.cuda.set_rng_state", "torch.get_rng_state", "torch.set_rng_state", "torch.cuda.get_rng_state", "torch.cuda.is_available"], "torch.get_rng_state": [], "torch.cuda.is_available": [], "torch.cuda.get_rng_state": [], "torch.cuda.set_rng_state": [], "torch.set_rng_state": [], "common_utils.set_default_dtype": ["torch.set_default_dtype", "torch.get_default_dtype"], "torch.get_default_dtype": [], "torch.set_default_dtype": [], "common_utils.iter_indices": ["<builtin>.range", "itertools.product"], "itertools.product": [], "common_utils.is_iterable": ["<builtin>.iter"], "<builtin>.iter": [], "common_utils.is_iterable_of_tensors": ["<builtin>.iter", "<builtin>.len", "<builtin>.isinstance"], "common_utils.CudaNonDefaultStream.__enter__": ["torch._C._cuda_setStream", "<builtin>.range", "torch.cuda.current_stream", "torch._C._cuda_setDevice", "torch.cuda.current_device", "torch.cuda.device_count", "torch.cuda.Stream"], "torch.cuda.current_device": [], "torch.cuda.device_count": [], "torch.cuda.current_stream": [], "torch.cuda.Stream": [], "torch._C._cuda_setStream": [], "torch._C._cuda_setDevice": [], "common_utils.CudaNonDefaultStream.__exit__": ["torch._C._cuda_setStream", "<builtin>.range", "torch._C._cuda_setDevice", "torch.cuda.current_device", "torch.cuda.device_count"], "common_utils.CudaMemoryLeakCheck.__init__": ["torch.testing._internal.common_cuda.initialize_cuda_context_rng", "expecttest.TestCase.id"], "expecttest.TestCase.id": [], "torch.testing._internal.common_cuda.initialize_cuda_context_rng": [], "common_utils.CudaMemoryLeakCheck.get_cuda_memory_usage": ["<builtin>.range", "torch.cuda.memory_allocated", "torch.cuda.device_count", "<builtin>.tuple", "gc.collect"], "gc.collect": [], "torch.cuda.memory_allocated": [], "common_utils.CudaMemoryLeakCheck.__enter__": ["common_utils.CudaMemoryLeakCheck.get_cuda_memory_usage"], "common_utils.CudaMemoryLeakCheck.__exit__": ["common_utils.CudaMemoryLeakCheck.get_cuda_memory_usage", "<builtin>.enumerate", "common_utils.TestCase.assertEqual", "<builtin>.zip"], "<builtin>.zip": [], "<builtin>.enumerate": [], "common_utils.TestCase.assertEqual": ["<builtin>.repr", "common_utils.TestCase._is_dict", "<builtin>.super", "<builtin>.zip", "common_utils.TestCase._compareScalars", "common_utils.is_iterable", "<builtin>.list", "common_utils.TestCase.assertEqual", "common_utils.TestCase._get_assert_msg", "<builtin>.len", "common_utils.TestCase.assertEqual.maybe_to_list", "common_utils.TestCase.assertEqual.maybe_to_tensor", "<builtin>.set", "common_utils.TestCase._compareTensors", "<builtin>.type", "<builtin>.isinstance"], "common_utils.skip_exception_type": ["unittest.SkipTest"], "common_utils.settings": ["hypothesis.settings"], "hypothesis.settings": [], "hypothesis.settings.register_profile": [], "hypothesis.settings.load_profile": [], "common_utils.check_if_enable": ["<builtin>.getattr", "<builtin>.any", "<builtin>.str", "unittest.SkipTest"], "<builtin>.any": [], "common_utils.get_comparison_dtype": ["torch.promote_types"], "torch.promote_types": [], "common_utils.AssertRaisesContextIgnoreNotImplementedError.__exit__": ["<builtin>.issubclass", "unittest.case._AssertRaisesContext.test_case.skipTest", "<builtin>.super"], "<builtin>.issubclass": [], "unittest.case._AssertRaisesContext.test_case.skipTest": [], "<builtin>.super": [], "common_utils.set_warn_always_context": ["torch.is_warn_always_enabled", "torch.set_warn_always"], "torch.is_warn_always_enabled": [], "torch.set_warn_always": [], "common_utils.TestCase._should_stop_test_suite": ["torch.cuda.synchronize", "torch.cuda.is_initialized"], "torch.cuda.is_initialized": [], "torch.cuda.synchronize": [], "common_utils.TestCase.precision": [], "common_utils.TestCase.rel_tol": [], "common_utils.TestCase.__init__": ["<builtin>.getattr", "common_utils.TestCase.wrap_with_policy", "common_utils.TestCase.wrap_with_cuda_policy", "<builtin>.super"], "common_utils.TestCase.wrap_with_cuda_policy": ["<builtin>.getattr", "expecttest.TestCase.id", "<builtin>.setattr", "common_utils.TestCase.wrap_method_with_policy"], "common_utils.TestCase.__init__.<lambda1>": ["common_utils.skip_exception_type"], "common_utils.TestCase.wrap_with_policy": ["<builtin>.getattr", "<builtin>.setattr", "common_utils.TestCase.wrap_method_with_policy"], "common_utils.TestCase.assertLeaksNoCudaTensors": ["expecttest.TestCase.id", "common_utils.CudaMemoryLeakCheck.__init__"], "common_utils.TestCase.enforceNonDefaultStream": [], "common_utils.TestCase.wrap_method_with_policy": ["functools.wraps", "types.MethodType"], "<builtin>.setattr": [], "common_utils.TestCase.wrap_method_with_policy.wrapper": ["common_utils.TestCase.assertLeaksNoCudaTensors"], "types.MethodType": [], "common_utils.TestCase.wrap_with_cuda_memory_check": ["common_utils.TestCase.wrap_method_with_policy"], "common_utils.TestCase.run": ["<builtin>.super", "common_utils.TestCase._should_stop_test_suite"], "common_utils.TestCase.setUp": ["common_utils.set_rng_seed", "common_utils.check_if_enable"], "common_utils.TestCase._make_crow_indices": ["<builtin>.max", "torch.zeros", "math.sqrt", "<builtin>.int", "torch.arange", "common_utils.TestCase._make_crow_indices.sawteeth", "math.isqrt", "torch.randperm", "<builtin>.divmod", "torch.device"], "common_utils.TestCase._make_crow_indices.sawteeth": [], "torch.device": [], "torch.zeros": [], "<builtin>.max": [], "<builtin>.divmod": [], "math.isqrt": [], "math.sqrt": [], "torch.arange": [], "torch.randperm": [], "common_utils.TestCase.genSparseCSRTensor": ["<builtin>.range", "torch.sparse_csr_tensor", "<builtin>.len", "common_utils.TestCase.genSparseCSRTensor.random_sparse_csr", "<builtin>.all"], "<builtin>.all": [], "common_utils.TestCase.genSparseCSRTensor.random_sparse_csr": ["torch.zeros", "common_utils.TestCase._make_crow_indices", "<builtin>.range", "torch.sort", "torch.randperm", "common_utils.make_tensor"], "torch.sort": [], "common_utils.make_tensor": ["<builtin>.max", "torch.tensor", "torch.finfo", "torch.complex", "torch.randint", "math.ceil", "torch.testing.complex_types", "<builtin>.min", "torch.testing.integral_types", "torch.repeat_interleave", "torch.device", "torch.rand", "math.floor", "torch.testing.floating_types_and"], "torch.sparse_csr_tensor": [], "common_utils.TestCase.genSparseTensor": ["torch.tensor", "torch.randn_like", "torch.sparse_coo_tensor", "<builtin>.range", "torch.cat", "torch.Size", "common_utils.make_tensor", "<builtin>.all", "torch.rand", "<builtin>.list"], "<builtin>.list": [], "torch.rand": [], "torch.tensor": [], "torch.randn_like": [], "torch.cat": [], "torch.Size": [], "torch.sparse_coo_tensor": [], "common_utils.TestCase.safeToDense": [], "common_utils.TestCase.compare_with_reference": ["common_utils.TestCase.assertEqual"], "common_utils.TestCase.compare_with_numpy": ["torch.tensor", "torch.from_numpy", "numpy.array", "copy.copy", "common_utils.TestCase.assertEqual", "<builtin>.isinstance"], "copy.copy": [], "common_utils.TestCase._getDefaultRtolAndAtol": ["<builtin>.max"], "common_utils.TestCase._compareTensors": ["<builtin>.max", "_core._compare_tensors_internal", "common_utils.TestCase._getDefaultRtolAndAtol", "common_utils.get_comparison_dtype", "<builtin>.isinstance"], "_core._compare_tensors_internal": [], "common_utils.TestCase._compareScalars": ["<builtin>.max", "common_utils.TestCase._getDefaultRtolAndAtol", "typing.cast", "_core._compare_scalars_internal", "<builtin>.isinstance"], "typing.cast": [], "_core._compare_scalars_internal": [], "common_utils.TestCase._get_assert_msg": [], "common_utils.TestCase.assertEqualIgnoreType": ["common_utils.TestCase.assertEqual"], "common_utils.TestCase._is_dict": ["<builtin>.isinstance"], "common_utils.TestCase.assertEqual.maybe_to_tensor": ["torch.from_numpy", "<builtin>.isinstance"], "common_utils.TestCase.assertEqual.maybe_to_list": ["<builtin>.isinstance"], "<builtin>.repr": [], "<builtin>.type": [], "<builtin>.set": [], "common_utils.TestCase.assertNotEqual": ["common_utils.TestCase.assertRaises", "common_utils.TestCase.assertEqual"], "common_utils.TestCase.assertRaises": ["<builtin>.super", "unittest.case._AssertRaisesContext.__init__"], "common_utils.TestCase.assertEqualTypeString": ["common_utils.TestCase.assertEqual"], "common_utils.TestCase.assertObjectIn": ["<builtin>.id", "<builtin>.AssertionError"], "<builtin>.id": [], "<builtin>.AssertionError": [], "unittest.case._AssertRaisesContext.__init__": [], "common_utils.TestCase.assertRaisesRegex": ["<builtin>.super", "unittest.case._AssertRaisesContext.__init__", "unittest.case._AssertRaisesContext.handle"], "unittest.case._AssertRaisesContext.handle": [], "common_utils.TestCase.assertExpectedRaises": ["common_utils.TestCase.assertExpected", "expecttest.TestCase.fail", "<builtin>.str"], "common_utils.TestCase.assertExpected": ["os.path.join", "<builtin>.TypeError", "os.path.realpath", "expecttest.TestCase.id", "common_utils.TestCase.assertExpected.remove_prefix", "<builtin>.open", "os.path.dirname", "common_utils.TestCase.assertExpected.accept_output", "<builtin>.RuntimeError", "expecttest.TestCase.assertMultiLineEqual", "common_utils.TestCase.assertEqual", "re.sub", "<builtin>.hasattr", "<builtin>.isinstance"], "expecttest.TestCase.fail": [], "common_utils.TestCase.assertNotWarn": ["expecttest.TestCase.assertTrue", "common_utils.set_warn_always_context", "<builtin>.len", "warnings.simplefilter", "warnings.catch_warnings"], "expecttest.TestCase.assertTrue": [], "common_utils.TestCase": ["contextlib.contextmanager"], "common_utils.TestCase.assertWarnsOnceRegex": ["expecttest.TestCase.assertTrue", "<builtin>.str", "common_utils.set_warn_always_context", "<builtin>.len", "warnings.simplefilter", "re.match", "warnings.catch_warnings", "expecttest.TestCase.fail", "re.compile", "<builtin>.type", "<builtin>.any"], "re.compile": [], "re.match": [], "<builtin>.TypeError": [], "common_utils.TestCase.assertExpected.remove_prefix": ["<builtin>.len"], "os.path.realpath": [], "os.path.dirname": [], "common_utils.TestCase.assertExpected.accept_output": ["<builtin>.print", "<builtin>.open", "re.sub"], "<builtin>.RuntimeError": [], "<builtin>.hasattr": [], "expecttest.TestCase.assertMultiLineEqual": [], "common_utils.TestCase.assertExpectedStripMangled": ["common_utils.TestCase.assertExpected", "re.sub"], "common_utils.TestCase.assertGreaterAlmostEqual": ["<builtin>.TypeError", "<builtin>.round", "expecttest.TestCase.failureException", "expecttest.TestCase._formatMessage"], "<builtin>.round": [], "expecttest.TestCase._formatMessage": [], "expecttest.TestCase.failureException": [], "common_utils.TestCase.run_process_no_exception": ["subprocess.Popen"], "common_utils.TestCase.runWithPytorchAPIUsageStderr": ["os.environ.copy", "common_utils.TestCase.run_process_no_exception"], "os.environ.copy": [], "common_utils.download_file": ["warnings.warn", "os.path.join", "os.path.exists", "<builtin>.open", "os.path.dirname", "urllib.parse.urlsplit", "unittest.SkipTest", "os.path.basename", "urllib.request.urlopen", "torch._utils_internal.get_writable_path"], "urllib.parse.urlsplit": [], "os.path.basename": [], "torch._utils_internal.get_writable_path": [], "urllib.request.urlopen": [], "warnings.warn": [], "common_utils.find_free_port": ["socket.socket", "contextlib.closing"], "socket.socket": [], "contextlib.closing": [], "common_utils.retry_on_connect_failures": ["functools.wraps", "functools.partial"], "functools.partial": [], "common_utils.retry_on_connect_failures.wrapper": ["random.random", "time.sleep", "<builtin>.str"], "random.random": [], "time.sleep": [], "common_utils.retry": [], "common_utils.retry.deco_retry": ["functools.wraps"], "common_utils.retry.deco_retry.f_retry": ["<builtin>.print", "time.sleep", "<builtin>.str", "unittest.SkipTest"], "torch.randint": [], "math.floor": [], "<builtin>.min": [], "math.ceil": [], "torch.testing.integral_types": [], "torch.testing.floating_types_and": [], "torch.testing.complex_types": [], "torch.complex": [], "torch.repeat_interleave": [], "torch.finfo": [], "common_utils.random_square_matrix_of_rank": ["torch.randn", "<builtin>.range", "torch.linalg.svd"], "torch.randn": [], "torch.linalg.svd": [], "common_utils.random_well_conditioned_matrix": ["torch.rand", "<builtin>.min", "torch.randn", "torch.linalg.svd"], "common_utils.random_symmetric_matrix": ["torch.randn"], "common_utils.make_symmetric_matrices": ["common_utils.make_tensor"], "common_utils.random_hermitian_matrix": ["torch.randn"], "common_utils.random_symmetric_psd_matrix": ["torch.randn", "torch.matmul"], "torch.matmul": [], "common_utils.random_hermitian_psd_matrix": ["torch.randn", "torch.matmul"], "common_utils.random_symmetric_pd_matrix": ["torch.eye", "torch.randn", "torch.matmul"], "torch.eye": [], "common_utils.make_symmetric_pd_matrices": ["torch.eye", "torch.matmul", "common_utils.make_tensor"], "common_utils.random_hermitian_pd_matrix": ["torch.eye", "torch.randn", "torch.matmul"], "common_utils.random_fullrank_matrix_distinct_singular_value": ["torch.arange", "torch.randn", "torch.ones", "torch.linalg.svd"], "torch.ones": [], "common_utils.make_fullrank_matrices_with_distinct_singular_values": ["torch.arange", "common_utils.make_tensor", "torch.linalg.svd"], "common_utils.random_matrix": ["torch.ones", "torch.linalg.svd", "<builtin>.min", "torch.linspace", "torch.randn"], "torch.linspace": [], "common_utils.random_lowrank_matrix": ["common_utils.random_matrix"], "common_utils.random_sparse_matrix": ["<builtin>.max", "torch.tensor", "torch.sparse_coo_tensor", "<builtin>.int", "<builtin>.range", "<builtin>.zip", "<builtin>.min", "random.shuffle", "<builtin>.float", "torch.randn"], "random.shuffle": [], "<builtin>.float": [], "common_utils.random_sparse_pd_matrix": ["<builtin>.range", "random.uniform", "<builtin>.len", "<builtin>.dict", "<builtin>.sorted", "math.cos", "math.sin", "<builtin>.float", "<builtin>.globals", "random.randint", "common_utils.random_sparse_pd_matrix.multiply"], "<builtin>.globals": [], "<builtin>.dict": [], "common_utils.random_sparse_pd_matrix.multiply": ["<builtin>.range"], "random.randint": [], "random.uniform": [], "math.cos": [], "math.sin": [], "<builtin>.sorted": [], "common_utils.do_test_dtypes": ["torch.zeros"], "common_utils.do_test_empty_full": ["torch.full", "common_utils.do_test_empty_full.check_value", "torch.Size", "torch.empty", "torch.empty_like", "torch.full_like", "common_utils.do_test_empty_full.get_int64_dtype", "torch.get_default_dtype"], "common_utils.do_test_empty_full.check_value": [], "common_utils.do_test_empty_full.get_int64_dtype": ["operator.attrgetter", "<builtin>.str"], "operator.attrgetter": [], "torch.empty": [], "torch.full": [], "torch.empty_like": [], "torch.full_like": [], "common_utils.clone_input_helper": ["<builtin>.map", "torch.clone", "<builtin>.tuple", "<builtin>.isinstance"], "torch.clone": [], "<builtin>.map": [], "common_utils.set_running_script_path": ["os.path.realpath", "os.path.abspath"], "os.path.abspath": [], "common_utils.check_test_defined_in_running_script": ["os.path.realpath", "os.path.abspath", "inspect.getfile"], "common_utils.load_tests": ["unittest.TestSuite", "common_utils.set_running_script_path", "common_utils.check_test_defined_in_running_script"], "unittest.TestSuite": [], "common_utils.BytesIOContext.__enter__": [], "common_utils.BytesIOContext.__exit__": [], "common_utils.gradcheck": ["torch.autograd.gradcheck", "os.environ.get"], "torch.autograd.gradcheck": [], "common_utils.gradgradcheck": ["torch.autograd.gradgradcheck", "os.environ.get"], "torch.autograd.gradgradcheck": [], "common_utils._assertGradAndGradgradChecks": ["common_utils.gradcheck", "common_utils.gradgradcheck"], "common_utils.set_cwd": ["os.getcwd", "os.chdir"], "os.chdir": [], "common_utils._wrap_warn_once": [], "common_utils._wrap_warn_once.decorator": [], "common_utils._wrap_warn_once.decorator.inner": [], "common_utils.coalescedonoff": ["functools.wraps"], "common_utils.coalescedonoff.wrapped": [], "common_utils.disable_gc": ["gc.isenabled", "gc.disable", "gc.enable"], "gc.isenabled": [], "gc.disable": [], "gc.enable": [], "common_utils.has_breakpad": ["torch._C._get_minidump_directory"], "torch._C._get_minidump_directory": [], "common_utils.find_library_location": ["pathlib.Path", "os.path.exists"], "common_utils.sandcastle_skip": [], "common_utils.sandcastle_skip.decorator": ["functools.wraps"], "common_utils.sandcastle_skip.decorator.wrapper": ["<builtin>.print"], "common_utils.mock_wrapper": ["unittest.mock.MagicMock", "functools.wraps"], "unittest.mock.MagicMock": [], "common_utils.mock_wrapper.wrapper": [], "common_utils.get_tensors_from": ["<builtin>.set", "<builtin>.isinstance"], "common_utils.sandcastle_skip_if": [], "common_utils.sandcastle_skip_if.decorator": ["functools.wraps"], "common_utils.sandcastle_skip_if.decorator.wrapper": ["<builtin>.print"]}