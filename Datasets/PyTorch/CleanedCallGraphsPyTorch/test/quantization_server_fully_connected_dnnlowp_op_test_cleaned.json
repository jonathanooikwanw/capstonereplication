{"fully_connected_dnnlowp_op_test": ["caffe2.python.workspace.GlobalInit", "caffe2.python.dyndep.InitOpsLibrary"], "caffe2.python.dyndep.InitOpsLibrary": [], "caffe2.python.workspace.GlobalInit": [], "hypothesis.strategies.sampled_from": [], "fully_connected_dnnlowp_op_test.DNNLowPFullyConnectedOpTest": ["hypothesis.strategies.integers", "hypothesis.given", "hypothesis.strategies.booleans", "hypothesis.strategies.sampled_from"], "hypothesis.strategies.integers": [], "hypothesis.strategies.booleans": [], "hypothesis.given": [], "fully_connected_dnnlowp_op_test.DNNLowPFullyConnectedOpTest.test_dnnlowp_fully_connected_int": ["numpy.random.rand", "numpy.testing.assert_equal", "caffe2.python.core.CreateOperator", "collections.namedtuple", "caffe2.quantization.server.utils.create_int8_bias_tensor_fill", "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc", "caffe2.quantization.server.dnnlowp_test_utils.avoid_vpmaddubsw_overflow_fc", "numpy.round", "<builtin>.len", "caffe2.python.workspace.InferShapesAndTypes", "caffe2.quantization.server.utils.create_int8_given_tensor_fill", "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close", "caffe2.quantization.server.utils.choose_quantization_params", "caffe2.python.core.Net", "caffe2.quantization.server.utils.add_quantization_param_args", "numpy.random.randn", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual"], "numpy.random.rand": [], "numpy.round": [], "caffe2.quantization.server.dnnlowp_test_utils.avoid_vpmaddubsw_overflow_fc": [], "numpy.random.randn": [], "collections.namedtuple": [], "caffe2.python.core.Net": [], "<builtin>.len": [], "caffe2.python.core.CreateOperator": [], "caffe2.quantization.server.utils.choose_quantization_params": [], "caffe2.quantization.server.utils.create_int8_given_tensor_fill": [], "caffe2.quantization.server.utils.create_int8_bias_tensor_fill": [], "caffe2.quantization.server.utils.add_quantization_param_args": [], "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc": [], "numpy.testing.assert_equal": [], "caffe2.python.workspace.InferShapesAndTypes": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual": [], "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close": []}