{"conversion_test": [], "conversion_test.TestConversion._run_command": ["textwrap.dedent", "caffe2.python.onnx.tests.test_utils.TestCase.assertEqual", "traceback.format_exception", "click.testing.CliRunner"], "click.testing.CliRunner": [], "traceback.format_exception": [], "textwrap.dedent": [], "caffe2.python.onnx.tests.test_utils.TestCase.assertEqual": [], "conversion_test.TestConversion.test_caffe2_to_onnx": ["tempfile.NamedTemporaryFile", "numpy.zeros", "<builtin>.len", "caffe2.python.brew.relu", "onnx.ModelProto", "caffe2.python.onnx.tests.test_utils.TestCase.assertEqual", "conversion_test.TestConversion._run_command", "caffe2.python.model_helper.ModelHelper"], "tempfile.NamedTemporaryFile": [], "caffe2.python.model_helper.ModelHelper": [], "caffe2.python.brew.relu": [], "numpy.zeros": [], "onnx.ModelProto": [], "<builtin>.len": [], "conversion_test.TestConversion.test_caffe2_to_onnx_value_info": ["tempfile.NamedTemporaryFile", "<builtin>.len", "caffe2.python.brew.relu", "onnx.ModelProto", "caffe2.python.onnx.tests.test_utils.TestCase.assertEqual", "conversion_test.TestConversion._run_command", "caffe2.python.model_helper.ModelHelper", "caffe2.python.onnx.tests.test_utils.TestCase.assertRaisesRegex"], "caffe2.python.onnx.tests.test_utils.TestCase.assertRaisesRegex": [], "unittest.skip": [], "conversion_test.TestConversion": ["unittest.skip"], "conversion_test.TestConversion.test_onnx_to_caffe2": ["tempfile.NamedTemporaryFile", "<builtin>.sum", "numpy.zeros", "<builtin>.list", "<builtin>.len", "<builtin>.set", "onnx.helper.make_tensor_value_info", "caffe2.python.onnx.tests.test_utils.TestCase.assertEqual", "conversion_test.TestConversion._run_command", "caffe2.proto.caffe2_pb2.NetDef", "onnx.helper.make_node", "onnx.helper.make_graph", "onnx.helper.make_tensor", "onnx.helper.make_model"], "onnx.helper.make_node": [], "onnx.helper.make_tensor_value_info": [], "onnx.helper.make_tensor": [], "onnx.helper.make_graph": [], "onnx.helper.make_model": [], "caffe2.proto.caffe2_pb2.NetDef": [], "<builtin>.list": [], "<builtin>.sum": [], "<builtin>.set": [], "conversion_test.TestConversion.test_onnx_to_caffe2_zipfile": ["tempfile.NamedTemporaryFile", "zipfile.ZipFile", "numpy.testing.assert_allclose", "numpy.matmul", "onnx.helper.make_tensor_value_info", "caffe2.python.onnx.backend.prepare_zip_archive", "onnx.helper.make_node", "onnx.helper.make_graph", "onnx.helper.make_tensor", "onnx.helper.make_model", "numpy.random.rand"], "zipfile.ZipFile": [], "numpy.random.rand": [], "numpy.matmul": [], "caffe2.python.onnx.backend.prepare_zip_archive": [], "numpy.testing.assert_allclose": [], "conversion_test.TestConversion._make_fake_if_op": ["onnx.helper.make_node", "onnx.helper.make_graph", "onnx.helper.make_tensor", "onnx.helper.make_tensor_value_info"], "conversion_test.TestConversion.test_onnx_to_caffe2_if": ["numpy.testing.assert_allclose", "numpy.matmul", "onnx.helper.make_opsetid", "onnx.helper.make_tensor_value_info", "caffe2.python.onnx.backend.prepare", "conversion_test.TestConversion._make_fake_if_op", "onnx.helper.make_node", "onnx.helper.make_graph", "onnx.helper.make_tensor", "onnx.helper.make_model", "numpy.random.rand"], "onnx.helper.make_opsetid": [], "caffe2.python.onnx.backend.prepare": [], "conversion_test.TestConversion._make_fake_loop_op": ["onnx.helper.make_node", "onnx.helper.make_graph", "onnx.helper.make_tensor", "onnx.helper.make_tensor_value_info"], "conversion_test.TestConversion.test_onnx_to_caffe2_loop": ["conversion_test.TestConversion._make_fake_loop_op", "<builtin>.range", "numpy.testing.assert_allclose", "numpy.matmul", "onnx.helper.make_tensor_value_info", "caffe2.python.onnx.backend.prepare", "onnx.helper.make_node", "onnx.helper.make_graph", "onnx.helper.make_tensor", "onnx.helper.make_model", "numpy.random.rand"], "<builtin>.range": [], "conversion_test.TestConversion.test_convert_end2end": ["tempfile.NamedTemporaryFile", "<builtin>.range", "numpy.testing.assert_almost_equal", "numpy.matmul", "onnx.ModelProto", "caffe2.python.onnx.backend.run_model", "numpy.random.randn", "caffe2.proto.caffe2_pb2.NetDef", "conversion_test.TestConversion._run_command", "json.dumps", "caffe2.python.core.CreateOperator", "caffe2.python.onnx.helper.c2_native_run_net"], "caffe2.python.core.CreateOperator": [], "numpy.random.randn": [], "json.dumps": [], "caffe2.python.onnx.backend.run_model": [], "numpy.testing.assert_almost_equal": [], "caffe2.python.onnx.helper.c2_native_run_net": []}