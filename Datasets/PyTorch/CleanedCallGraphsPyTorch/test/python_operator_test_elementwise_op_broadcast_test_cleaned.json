{"elementwise_op_broadcast_test": ["unittest.main"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.__generate_test_cases": ["numpy.random.rand", "<builtin>.dict"], "numpy.random.rand": [], "<builtin>.dict": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast.__test_binary_op": ["operator.mul", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.core.CreateOperator", "numpy.testing.assert_array_almost_equal", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks", "operator.sub", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.FeedBlob", "elementwise_op_broadcast_test.TestElementwiseBroadcast.__generate_test_cases", "operator.add", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks"], "caffe2.python.core.CreateOperator": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.workspace.RunOperatorOnce": [], "caffe2.python.workspace.FetchBlob": [], "operator.mul": [], "operator.add": [], "operator.sub": [], "numpy.testing.assert_array_almost_equal": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks": [], "hypothesis.strategies.booleans": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast": ["hypothesis.given", "hypothesis.strategies.booleans", "unittest.skipIf", "hypothesis.settings"], "hypothesis.given": [], "hypothesis.settings": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_Add": ["elementwise_op_broadcast_test.TestElementwiseBroadcast.__test_binary_op"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_Mul": ["elementwise_op_broadcast_test.TestElementwiseBroadcast.__test_binary_op"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_Sub": ["elementwise_op_broadcast_test.TestElementwiseBroadcast.__test_binary_op"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.random.rand", "numpy.random.seed", "caffe2.python.core.CreateOperator"], "numpy.random.seed": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op": ["numpy.power"], "numpy.power": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad": ["numpy.power", "numpy.log"], "numpy.log": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_broadcast": ["numpy.sum", "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad"], "numpy.sum": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op_axis1": ["elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_axis1": ["numpy.sum", "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op_axis0": ["elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_axis0": ["numpy.sum", "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op_mixed": ["elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_mixed": ["numpy.sum", "numpy.reshape", "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad"], "numpy.reshape": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_scalar": ["caffe2.python.workspace.RunOperatorOnce", "numpy.random.rand", "caffe2.python.core.CreateOperator", "numpy.testing.assert_array_almost_equal", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.FeedBlob", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_semantic_broadcast": ["caffe2.python.workspace.RunOperatorOnce", "numpy.random.rand", "caffe2.python.core.CreateOperator", "numpy.testing.assert_array_almost_equal", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.FeedBlob", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks"], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce_empty_blob": ["caffe2.python.core.Net", "caffe2.python.workspace.RunNetOnce", "caffe2.python.core.DeviceScope"], "caffe2.python.core.Net": [], "caffe2.python.core.DeviceScope": [], "caffe2.python.workspace.RunNetOnce": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce": ["caffe2.python.workspace.RunOperatorOnce", "numpy.random.rand", "caffe2.python.core.CreateOperator", "numpy.testing.assert_array_almost_equal", "numpy.array", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.FeedBlob", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "numpy.sum"], "numpy.array": [], "unittest.skipIf": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce_fp16": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.random.rand", "caffe2.python.core.CreateOperator", "hypothesis.assume", "caffe2.python.core.IsGPUDeviceType"], "caffe2.python.core.IsGPUDeviceType": [], "hypothesis.assume": [], "elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce_fp16.ref_op": ["numpy.sum"], "unittest.main": []}