{"ddp_under_dist_autograd_test": ["<builtin>.range", "threading.Condition", "<builtin>.list", "ddp_under_dist_autograd_test.init_logger"], "<builtin>.range": [], "<builtin>.list": [], "enum.auto": [], "ddp_under_dist_autograd_test.DdpMode": ["enum.auto"], "ddp_under_dist_autograd_test.init_logger": ["logging.StreamHandler", "logging.Formatter", "logging.getLogger"], "logging.getLogger": [], "logging.StreamHandler": [], "logging.Formatter": [], "ddp_under_dist_autograd_test._call_method": [], "ddp_under_dist_autograd_test._remote_method": ["torch.distributed.rpc.rpc_sync", "<builtin>.list", "<builtin>.tuple"], "<builtin>.tuple": [], "torch.distributed.rpc.rpc_sync": [], "ddp_under_dist_autograd_test._remote_method_async": ["torch.distributed.rpc.rpc_async", "<builtin>.list", "<builtin>.tuple"], "torch.distributed.rpc.rpc_async": [], "ddp_under_dist_autograd_test.RemoteEM.__init__": ["torch.tensor", "torch.nn.EmbeddingBag", "<builtin>.super"], "<builtin>.super": [], "torch.tensor": [], "torch.nn.EmbeddingBag": [], "ddp_under_dist_autograd_test.RemoteEM.forward": ["<builtin>.range", "torch.LongTensor"], "torch.LongTensor": [], "ddp_under_dist_autograd_test.getLinear": ["torch.ones", "torch.nn.Linear"], "torch.nn.Linear": [], "torch.ones": [], "ddp_under_dist_autograd_test.RemoteNet.__init__": ["ddp_under_dist_autograd_test.getLinear", "torch.nn.ReLU", "<builtin>.super"], "torch.nn.ReLU": [], "ddp_under_dist_autograd_test.RemoteNet.forward": [], "ddp_under_dist_autograd_test.HybridModel.__init__": ["torch.nn.parallel.DistributedDataParallel", "<builtin>.list", "torch.nn.Module.parameters", "<builtin>.super", "<builtin>.len", "<builtin>.tuple", "ddp_under_dist_autograd_test.getLinear"], "torch.nn.parallel.DistributedDataParallel": [], "torch.nn.Module.parameters": [], "<builtin>.len": [], "ddp_under_dist_autograd_test.HybridModel.forward": ["torch.cat", "ddp_under_dist_autograd_test._remote_method"], "torch.cat": [], "ddp_under_dist_autograd_test.Trainer.__init__": ["torch.distributed.new_group", "<builtin>.len", "ddp_under_dist_autograd_test.HybridModel.__init__", "torch.nn.parallel.DistributedDataParallel"], "torch.distributed.new_group": [], "ddp_under_dist_autograd_test.Trainer.destroy_pg": ["torch.distributed.destroy_process_group"], "torch.distributed.destroy_process_group": [], "ddp_under_dist_autograd_test.Trainer.train_batch": ["contextlib.suppress", "typing.NamedTuple.__init__", "torch.distributed.autograd.context", "torch.distributed.autograd.get_gradients", "ddp_under_dist_autograd_test.HybridModel.forward", "<builtin>.zip", "torch.nn.Module.join", "torch.distributed.autograd.backward", "<builtin>.tuple", "torch.split", "<builtin>.len"], "torch.split": [], "<builtin>.zip": [], "typing.NamedTuple.__init__": [], "torch.nn.Module.join": [], "contextlib.suppress": [], "torch.distributed.autograd.context": [], "torch.distributed.autograd.backward": [], "torch.distributed.autograd.get_gradients": [], "ddp_under_dist_autograd_test.get_training_examples": ["torch.tensor", "<builtin>.int", "torch.zeros", "<builtin>.range", "typing.NamedTuple.__init__"], "torch.zeros": [], "<builtin>.int": [], "threading.Condition": [], "ddp_under_dist_autograd_test.set_shutdown_signal": [], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.world_size": [], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.remote_worker_name": [], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.trainer_name": [], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._remote_worker_process": ["torch.distributed.new_group", "torch.distributed.destroy_process_group", "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format", "torch.distributed.init_process_group"], "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format": [], "torch.distributed.init_process_group": [], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._trainer_process": ["torch.distributed.destroy_process_group", "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format", "torch.distributed.init_process_group"], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._master_process": ["ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.do_test_on_master", "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.remote_worker_name", "torch.distributed.rpc.remote", "torch.distributed.init_process_group", "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format"], "torch.distributed.rpc.remote": [], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.do_test_on_master": ["torch.distributed.new_group", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertNotEqual", "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.trainer_name", "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.remote_worker_name", "torch.distributed.rpc.remote", "ddp_under_dist_autograd_test.get_training_examples", "torch.zeros_like", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertEqual", "torch.distributed.rpc.rpc_sync", "<builtin>.range", "ddp_under_dist_autograd_test._remote_method_async", "<builtin>.enumerate", "<builtin>.len"], "<builtin>.enumerate": [], "torch.zeros_like": [], "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertEqual": [], "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertNotEqual": [], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._do_test": ["ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._master_process", "<builtin>.RuntimeError", "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._remote_worker_process", "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._trainer_process"], "<builtin>.RuntimeError": [], "torch.testing._internal.common_distributed.requires_gloo": [], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest": ["torch.testing._internal.dist_utils.dist_init", "torch.testing._internal.common_distributed.requires_gloo"], "torch.testing._internal.dist_utils.dist_init": [], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.test_backward_no_ddp": ["ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._do_test"], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.test_backward_ddp_outside": ["ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._do_test"], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.test_backward_ddp_outside_uneven_inputs": ["ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._do_test"], "ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.test_backward_ddp_inside": ["ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._do_test"], "ddp_under_dist_autograd_test.CommonDdpComparisonTest.world_size": [], "ddp_under_dist_autograd_test.CommonDdpComparisonTest.trainer_name": [], "ddp_under_dist_autograd_test.CommonDdpComparisonTest.get_remote_grads": ["torch.distributed.autograd.get_gradients"], "ddp_under_dist_autograd_test.DdpComparisonTest._run_test_ddp_comparision": ["torch.nn.parallel.DistributedDataParallel", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertTrue", "torch.distributed.autograd.get_gradients", "torch.distributed.autograd.context", "torch.distributed.init_process_group", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertEqual", "torch.distributed.destroy_process_group", "<builtin>.range", "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format", "torch.distributed.autograd.backward", "torch.rand", "<builtin>.enumerate", "torch.nn.Linear", "torch.manual_seed", "<builtin>.len"], "torch.manual_seed": [], "torch.rand": [], "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertTrue": [], "ddp_under_dist_autograd_test.DdpComparisonTest": ["torch.testing._internal.dist_utils.dist_init", "torch.testing._internal.common_distributed.requires_gloo"], "ddp_under_dist_autograd_test.DdpComparisonTest.test_ddp_comparison": ["ddp_under_dist_autograd_test.DdpComparisonTest._run_test_ddp_comparision"], "ddp_under_dist_autograd_test.DdpComparisonTest.test_ddp_comparison_uneven_inputs": ["ddp_under_dist_autograd_test.DdpComparisonTest._run_test_ddp_comparision"], "ddp_under_dist_autograd_test.DdpComparisonTest.test_ddp_dist_autograd_sparse_grads": ["torch.nn.parallel.DistributedDataParallel", "torch.distributed.autograd.get_gradients", "torch.distributed.autograd.context", "torch.distributed.init_process_group", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertEqual", "torch.distributed.autograd.backward", "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format", "torch.LongTensor", "torch.nn.EmbeddingBag", "torch.manual_seed", "<builtin>.len"], "ddp_under_dist_autograd_test.DdpComparisonTest.test_ddp_dist_autograd_local_vs_remote": ["torch.nn.parallel.DistributedDataParallel", "torch.distributed.autograd.get_gradients", "torch.distributed.autograd.context", "torch.distributed.init_process_group", "torch.distributed.barrier", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertEqual", "torch.distributed.rpc.rpc_sync", "torch.distributed.autograd.backward", "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format", "torch.rand", "torch.distributed.nn.RemoteModule", "torch.nn.Linear", "torch.manual_seed"], "torch.distributed.nn.RemoteModule": [], "torch.distributed.barrier": [], "torch.testing._internal.common_distributed.skip_if_lt_x_gpu": [], "ddp_under_dist_autograd_test.CudaDdpComparisonTest": ["torch.testing._internal.dist_utils.dist_init", "torch.testing._internal.common_distributed.skip_if_rocm", "torch.testing._internal.common_distributed.requires_nccl", "torch.testing._internal.common_distributed.skip_if_lt_x_gpu"], "torch.testing._internal.common_distributed.requires_nccl": [], "torch.testing._internal.common_distributed.skip_if_rocm": [], "ddp_under_dist_autograd_test.CudaDdpComparisonTest.test_ddp_dist_autograd_local_vs_remote_gpu": ["torch.nn.parallel.DistributedDataParallel", "torch.distributed.autograd.get_gradients", "torch.distributed.autograd.context", "torch.distributed.init_process_group", "torch.distributed.barrier", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertEqual", "torch.distributed.rpc.rpc_sync", "torch.distributed.autograd.backward", "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format", "torch.rand", "torch.distributed.nn.RemoteModule", "torch.nn.Linear", "torch.manual_seed"]}