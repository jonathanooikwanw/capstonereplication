{"_core": [], "_core.is_integral": ["_core.get_all_complex_dtypes", "_core.get_all_dtypes"], "_core.get_all_dtypes": ["_core.get_all_int_dtypes", "_core.get_all_fp_dtypes", "_core.get_all_complex_dtypes"], "_core.get_all_complex_dtypes": [], "_core.is_quantized": [], "_core._unravel_index": ["<builtin>.tuple", "torch.Size", "operator.index", "<builtin>.len"], "operator.index": [], "torch.Size": [], "<builtin>.len": [], "<builtin>.tuple": [], "_core._compare_tensors_internal": ["_core.is_quantized", "_core.is_integral", "torch.abs", "_core._compare_tensors_internal", "_core._unravel_index", "torch.allclose", "torch.isclose", "torch.sum", "typing.cast", "torch.isnan", "torch.argmax"], "torch.sum": [], "torch.abs": [], "torch.argmax": [], "typing.cast": [], "torch.allclose": [], "torch.isclose": [], "torch.isnan": [], "_core._compare_scalars_internal": ["<builtin>.isinstance", "_core._compare_scalars_internal._helper", "cmath.isnan", "<builtin>.complex"], "_core._compare_scalars_internal._helper": ["<builtin>.abs", "math.isinf"], "<builtin>.abs": [], "math.isinf": [], "<builtin>.isinstance": [], "<builtin>.complex": [], "cmath.isnan": [], "_core.assert_allclose": ["<builtin>.ValueError", "_core._get_default_tolerance", "torch.tensor", "_core._compare_tensors_internal", "<builtin>.isinstance", "<builtin>.AssertionError"], "torch.tensor": [], "<builtin>.AssertionError": [], "<builtin>.ValueError": [], "_core._get_default_tolerance": ["_core._get_default_tolerance", "<builtin>.str", "<builtin>.max"], "_core.make_non_contiguous": ["<builtin>.len", "<builtin>.list", "torch.Size", "<builtin>.range", "random.randint"], "<builtin>.list": [], "<builtin>.range": [], "random.randint": [], "_core._validate_dtypes": ["<builtin>.isinstance"], "_core._dispatch_dtypes.__add__": ["<builtin>.isinstance"], "_core.empty_types": [], "_core.floating_types": [], "_core.floating_types_and_half": [], "_core.floating_types_and": ["_core._validate_dtypes"], "_core.floating_and_complex_types": [], "_core.floating_and_complex_types_and": ["_core._validate_dtypes"], "_core.double_types": [], "_core.integral_types": [], "_core.integral_types_and": ["_core._validate_dtypes"], "_core.all_types": [], "_core.all_types_and": ["_core._validate_dtypes"], "_core.complex_types": [], "_core.all_types_and_complex": [], "_core.all_types_and_complex_and": ["_core._validate_dtypes"], "_core.all_types_and_half": [], "_core.get_all_int_dtypes": [], "_core.get_all_fp_dtypes": [], "_core.get_all_math_dtypes": ["_core.get_all_int_dtypes", "_core.get_all_fp_dtypes", "_core.get_all_complex_dtypes"], "_core.get_all_device_types": ["torch.cuda.is_available"], "torch.cuda.is_available": [], "<builtin>.str": [], "<builtin>.max": []}