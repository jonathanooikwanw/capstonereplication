{"reduce_ops_test": [], "reduce_ops_test.TestReduceOps.run_reduce_op_test_impl": ["caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "<builtin>.dict", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.set_disable_serialized_check"], "<builtin>.dict": [], "caffe2.python.core.CreateOperator": [], "reduce_ops_test.TestReduceOps.run_reduce_op_test_impl.ref": ["<builtin>.tuple", "numpy.max", "reduce_ops_test.getNorm.norm", "numpy.mean", "numpy.min", "numpy.sum"], "<builtin>.tuple": [], "numpy.max": [], "numpy.mean": [], "reduce_ops_test.getNorm.norm": ["numpy.abs", "numpy.power", "numpy.sum", "numpy.sqrt"], "numpy.min": [], "numpy.sum": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.set_disable_serialized_check": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks": [], "reduce_ops_test.TestReduceOps.run_reduce_op_test": ["<builtin>.range", "<builtin>.len", "itertools.combinations", "reduce_ops_test.TestReduceOps.run_reduce_op_test_impl"], "<builtin>.len": [], "<builtin>.range": [], "itertools.combinations": [], "caffe2.python.hypothesis_test_util.tensor": [], "reduce_ops_test.TestReduceOps": ["hypothesis.given", "caffe2.python.hypothesis_test_util.tensor", "hypothesis.settings", "hypothesis.strategies.booleans", "hypothesis.strategies.integers", "caffe2.python.serialized_test.serialized_test_util.given"], "hypothesis.strategies.booleans": [], "hypothesis.strategies.integers": [], "caffe2.python.serialized_test.serialized_test_util.given": [], "reduce_ops_test.TestReduceOps.test_reduce_min": ["numpy.arange", "reduce_ops_test.TestReduceOps.run_reduce_op_test", "numpy.random.shuffle"], "numpy.arange": [], "numpy.random.shuffle": [], "reduce_ops_test.TestReduceOps.test_reduce_max": ["numpy.arange", "reduce_ops_test.TestReduceOps.run_reduce_op_test", "numpy.random.shuffle"], "hypothesis.given": [], "hypothesis.settings": [], "reduce_ops_test.TestReduceOps.test_reduce_sum": ["numpy.random.randn", "reduce_ops_test.TestReduceOps.run_reduce_op_test"], "numpy.random.randn": [], "reduce_ops_test.TestReduceOps.test_reduce_mean": ["reduce_ops_test.TestReduceOps.run_reduce_op_test"], "reduce_ops_test.TestReduceOps.test_reduce_l1": ["numpy.arange", "reduce_ops_test.TestReduceOps.run_reduce_op_test", "numpy.random.shuffle", "reduce_ops_test.getNorm"], "reduce_ops_test.getNorm": ["<builtin>.RuntimeError"], "reduce_ops_test.TestReduceOps.test_reduce_l2": ["numpy.random.randn", "reduce_ops_test.TestReduceOps.run_reduce_op_test", "reduce_ops_test.getNorm"], "numpy.abs": [], "numpy.power": [], "numpy.sqrt": [], "<builtin>.RuntimeError": [], "reduce_ops_test.TestReduceFrontReductions.grad_variant_input_test": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_sum.ref_sum", "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum_empty_batch.ref_sum", "numpy.array", "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_mean.ref_mean", "caffe2.python.workspace.FeedBlob", "caffe2.python.workspace.RunOperatorOnce", "numpy.testing.assert_array_equal", "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_mean.ref_mean", "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum.ref_sum", "caffe2.python.workspace.ResetWorkspace", "numpy.random.rand"], "caffe2.python.workspace.ResetWorkspace": [], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_mean.ref_mean": ["numpy.mean"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_sum.ref_sum": ["numpy.sum"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum.ref_sum": ["<builtin>.range", "<builtin>.tuple", "numpy.sum"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum_empty_batch.ref_sum": ["<builtin>.range", "<builtin>.tuple", "numpy.sum"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_mean.ref_mean": ["<builtin>.range", "<builtin>.tuple", "numpy.mean"], "numpy.array": [], "numpy.random.rand": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.workspace.RunOperatorOnce": [], "caffe2.python.workspace.FetchBlob": [], "numpy.testing.assert_array_equal": [], "reduce_ops_test.TestReduceFrontReductions.max_op_test": ["caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_max.ref_backmax", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_max.ref_frontmax", "numpy.array", "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_max_with_length.ref_max", "<builtin>.len", "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_max_with_length.ref_max", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_max.ref_frontmax": ["<builtin>.range", "<builtin>.tuple", "numpy.max"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_max.ref_backmax": ["numpy.max"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_max_with_length.ref_max": ["<builtin>.range", "numpy.max", "numpy.zeros"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_max_with_length.ref_max": ["<builtin>.range", "numpy.max", "numpy.zeros"], "reduce_ops_test.TestReduceFrontReductions.reduce_op_test": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks", "caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks"], "reduce_ops_test.TestReduceFrontReductions": ["hypothesis.given", "hypothesis.strategies.integers", "caffe2.python.serialized_test.serialized_test_util.given", "hypothesis.settings"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum": ["reduce_ops_test.TestReduceFrontReductions.reduce_op_test", "reduce_ops_test.TestReduceFrontReductions.grad_variant_input_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum_empty_batch": ["caffe2.python.workspace.FetchBlob", "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum_empty_batch.ref_sum", "caffe2.python.workspace.FeedBlob", "caffe2.python.core.DeviceScope", "caffe2.python.core.Net", "caffe2.python.workspace.RunNet", "numpy.testing.assert_allclose", "reduce_ops_test.TestReduceFrontReductions.reduce_op_test", "caffe2.python.workspace.CreateNet", "numpy.random.seed", "caffe2.python.workspace.GetNetName", "reduce_ops_test.TestReduceFrontReductions.grad_variant_input_test", "numpy.random.rand"], "numpy.random.seed": [], "caffe2.python.core.Net": [], "caffe2.python.core.DeviceScope": [], "caffe2.python.workspace.CreateNet": [], "caffe2.python.workspace.GetNetName": [], "caffe2.python.workspace.RunNet": [], "numpy.testing.assert_allclose": [], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum_with_length": ["numpy.random.randint", "numpy.prod", "<builtin>.int", "reduce_ops_test.TestReduceFrontReductions.reduce_op_test", "numpy.random.rand"], "numpy.prod": [], "<builtin>.int": [], "numpy.random.randint": [], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum_with_length.ref_sum": ["<builtin>.range", "numpy.sum", "numpy.zeros"], "numpy.zeros": [], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_mean": ["reduce_ops_test.TestReduceFrontReductions.reduce_op_test", "reduce_ops_test.TestReduceFrontReductions.grad_variant_input_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_mean_with_length": ["numpy.random.randint", "numpy.prod", "<builtin>.int", "reduce_ops_test.TestReduceFrontReductions.reduce_op_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_mean_with_length.ref_mean": ["<builtin>.range", "numpy.mean", "numpy.zeros"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_max": ["reduce_ops_test.TestReduceFrontReductions.max_op_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_front_max_with_length": ["numpy.random.randint", "numpy.prod", "<builtin>.int", "reduce_ops_test.TestReduceFrontReductions.max_op_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_max": ["reduce_ops_test.TestReduceFrontReductions.max_op_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_max_with_length": ["numpy.random.randint", "numpy.prod", "<builtin>.int", "reduce_ops_test.TestReduceFrontReductions.max_op_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_sum": ["reduce_ops_test.TestReduceFrontReductions.reduce_op_test", "reduce_ops_test.TestReduceFrontReductions.grad_variant_input_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_sum_with_length": ["numpy.random.randint", "numpy.prod", "<builtin>.int", "reduce_ops_test.TestReduceFrontReductions.reduce_op_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_sum_with_length.ref_sum": ["<builtin>.range", "numpy.sum", "numpy.zeros"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_mean": ["reduce_ops_test.TestReduceFrontReductions.reduce_op_test", "reduce_ops_test.TestReduceFrontReductions.grad_variant_input_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_mean_with_length": ["numpy.random.randint", "numpy.prod", "<builtin>.int", "reduce_ops_test.TestReduceFrontReductions.reduce_op_test", "numpy.random.rand"], "reduce_ops_test.TestReduceFrontReductions.test_reduce_back_mean_with_length.ref_mean": ["<builtin>.range", "numpy.mean", "numpy.zeros"]}