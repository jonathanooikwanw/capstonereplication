{"workspace_test": ["unittest.main"], "workspace_test.TestWorkspace.setUp": ["caffe2.python.workspace.ResetWorkspace", "caffe2.python.core.Net"], "caffe2.python.core.Net": [], "caffe2.python.workspace.ResetWorkspace": [], "workspace_test.TestWorkspace.testRootFolder": ["caffe2.python.workspace.ResetWorkspace", "caffe2.python.workspace.RootFolder", "unittest.TestCase.assertEqual"], "unittest.TestCase.assertEqual": [], "caffe2.python.workspace.RootFolder": [], "workspace_test.TestWorkspace.testWorkspaceHasBlobWithNonexistingName": ["unittest.TestCase.assertEqual", "caffe2.python.workspace.HasBlob"], "caffe2.python.workspace.HasBlob": [], "workspace_test.TestWorkspace.testRunOperatorOnce": ["unittest.TestCase.assertEqual", "caffe2.python.workspace.HasBlob", "caffe2.python.workspace.Blobs", "<builtin>.len", "caffe2.python.workspace.RunOperatorOnce"], "caffe2.python.workspace.RunOperatorOnce": [], "caffe2.python.workspace.Blobs": [], "<builtin>.len": [], "workspace_test.TestWorkspace.testGetOperatorCost": ["numpy.zeros", "unittest.TestCase.assertTupleEqual", "caffe2.python.workspace.GetOperatorCost", "caffe2.python.core.CreateOperator", "collections.namedtuple", "caffe2.python.workspace.FeedBlob"], "caffe2.python.core.CreateOperator": [], "numpy.zeros": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.workspace.GetOperatorCost": [], "collections.namedtuple": [], "unittest.TestCase.assertTupleEqual": [], "workspace_test.TestWorkspace.testRunNetOnce": ["caffe2.python.workspace.RunNetOnce", "unittest.TestCase.assertEqual", "caffe2.python.workspace.HasBlob"], "caffe2.python.workspace.RunNetOnce": [], "workspace_test.TestWorkspace.testCurrentWorkspaceWrapper": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertNotIn", "caffe2.python.workspace.HasBlob", "caffe2.python.workspace.RunNetOnce", "unittest.TestCase.assertIn", "caffe2.python.workspace.ResetWorkspace"], "unittest.TestCase.assertNotIn": [], "unittest.TestCase.assertIn": [], "workspace_test.TestWorkspace.testRunPlan": ["caffe2.python.workspace.RunPlan", "unittest.TestCase.assertEqual", "caffe2.python.workspace.HasBlob", "caffe2.python.core.ExecutionStep", "caffe2.python.core.Plan"], "caffe2.python.core.Plan": [], "caffe2.python.core.ExecutionStep": [], "caffe2.python.workspace.RunPlan": [], "workspace_test.TestWorkspace.testRunPlanInBackground": ["caffe2.python.workspace.RunPlanInBackground", "unittest.TestCase.assertEqual", "caffe2.python.workspace.HasBlob", "caffe2.python.core.ExecutionStep", "caffe2.python.core.Plan"], "caffe2.python.workspace.RunPlanInBackground": [], "workspace_test.TestWorkspace.testConstructPlanFromSteps": ["caffe2.python.workspace.RunPlan", "caffe2.python.core.ExecutionStep", "unittest.TestCase.assertEqual", "caffe2.python.workspace.HasBlob"], "workspace_test.TestWorkspace.testResetWorkspace": ["caffe2.python.workspace.RunNetOnce", "unittest.TestCase.assertEqual", "caffe2.python.workspace.HasBlob", "caffe2.python.workspace.ResetWorkspace"], "workspace_test.TestWorkspace.testTensorAccess": ["<builtin>.range", "caffe2.python.workspace.C.Workspace", "unittest.TestCase.assertEquals", "numpy.testing.assert_array_equal", "unittest.TestCase.assertRaises", "numpy.zeros", "numpy.array"], "caffe2.python.workspace.C.Workspace": [], "numpy.array": [], "numpy.testing.assert_array_equal": [], "<builtin>.range": [], "unittest.TestCase.assertRaises": [], "unittest.TestCase.assertEquals": [], "workspace_test.TestWorkspace.testFetchFeedBlob": ["caffe2.python.workspace.FetchBlob", "unittest.TestCase.assertEqual", "caffe2.python.workspace.RunNetOnce", "numpy.testing.assert_array_equal", "caffe2.python.workspace.FeedBlob"], "caffe2.python.workspace.FetchBlob": [], "workspace_test.TestWorkspace.testFetchFeedBlobViaBlobReference": ["caffe2.python.workspace.FetchBlob", "unittest.TestCase.assertEqual", "caffe2.python.workspace.RunNetOnce", "numpy.testing.assert_array_equal", "caffe2.python.workspace.FeedBlob"], "workspace_test.TestWorkspace.testFetchFeedBlobTypes": ["caffe2.python.workspace.FetchBlob", "unittest.TestCase.assertEqual", "numpy.testing.assert_array_equal", "numpy.random.rand", "numpy.iinfo", "caffe2.python.workspace.FeedBlob"], "numpy.iinfo": [], "numpy.random.rand": [], "workspace_test.TestWorkspace.testFetchFeedBlobBool": ["caffe2.python.workspace.FetchBlob", "unittest.TestCase.assertEqual", "numpy.testing.assert_array_equal", "numpy.zeros", "caffe2.python.workspace.FeedBlob"], "workspace_test.TestWorkspace.testGetBlobSizeBytes": ["unittest.TestCase.assertEqual", "numpy.random.randn", "unittest.TestCase.assertTrue", "numpy.array", "<builtin>.len", "caffe2.python.workspace.GetBlobSizeBytes", "numpy.dtype", "caffe2.python.workspace.FeedBlob"], "numpy.random.randn": [], "unittest.TestCase.assertTrue": [], "caffe2.python.workspace.GetBlobSizeBytes": [], "numpy.dtype": [], "workspace_test.TestWorkspace.testFetchFeedBlobZeroDim": ["numpy.empty", "unittest.TestCase.assertEqual", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.FeedBlob"], "numpy.empty": [], "workspace_test.TestWorkspace.testFetchFeedLongStringTensor": ["caffe2.python.workspace.FetchBlob", "unittest.TestCase.assertEqual", "<builtin>.range", "numpy.array", "caffe2.python.workspace.FeedBlob"], "workspace_test.TestWorkspace.testFetchFeedShortStringTensor": ["caffe2.python.workspace.FetchBlob", "unittest.TestCase.assertEqual", "<builtin>.range", "numpy.array", "caffe2.python.workspace.FeedBlob"], "workspace_test.TestWorkspace.testFetchFeedPlainString": ["caffe2.python.workspace.FetchBlob", "unittest.TestCase.assertEqual", "caffe2.python.workspace.FeedBlob"], "workspace_test.TestWorkspace.testFetchBlobs": ["unittest.TestCase.assertEquals", "caffe2.python.workspace.FetchBlobs", "caffe2.python.workspace.FeedBlob"], "caffe2.python.workspace.FetchBlobs": [], "workspace_test.TestWorkspace.testFetchFeedViaBlobDict": ["unittest.TestCase.assertEqual", "caffe2.python.workspace.RunNetOnce", "numpy.testing.assert_array_equal", "unittest.TestCase.assertTrue", "unittest.TestCase.assertFalse", "<builtin>.len"], "unittest.TestCase.assertFalse": [], "workspace_test.TestWorkspace.testTorchInterop": ["caffe2.python.workspace.FetchBlob", "torch.ones", "numpy.testing.assert_array_equal", "caffe2.python.workspace.FetchTorch", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob", "caffe2.python.core.CreateOperator", "numpy.array"], "caffe2.python.workspace.FetchTorch": [], "torch.ones": [], "workspace_test.TestMultiWorkspaces.setUp": ["caffe2.python.workspace.ResetWorkspace", "caffe2.python.workspace.SwitchWorkspace"], "caffe2.python.workspace.SwitchWorkspace": [], "workspace_test.TestMultiWorkspaces.testCreateWorkspace": ["unittest.TestCase.assertEqual", "caffe2.python.workspace.HasBlob", "caffe2.python.workspace.RunNetOnce", "unittest.TestCase.assertTrue", "caffe2.python.workspace.Workspaces", "caffe2.python.core.Net", "caffe2.python.workspace.SwitchWorkspace"], "caffe2.python.workspace.Workspaces": [], "workspace_test.TestWorkspaceGPU.setUp": ["caffe2.python.workspace.ResetWorkspace", "caffe2.python.core.Net"], "workspace_test.TestWorkspaceGPU.testFetchBlobGPU": ["caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunNetOnce", "numpy.testing.assert_array_equal", "caffe2.python.test_util.TestCase.assertEqual", "caffe2.python.workspace.FeedBlob"], "caffe2.python.test_util.TestCase.assertEqual": [], "workspace_test.TestWorkspaceGPU.testGetGpuPeerAccessPattern": ["<builtin>.type", "caffe2.python.workspace.GetGpuPeerAccessPattern", "caffe2.python.test_util.TestCase.assertEqual", "caffe2.python.workspace.NumGpuDevices"], "caffe2.python.workspace.GetGpuPeerAccessPattern": [], "<builtin>.type": [], "caffe2.python.workspace.NumGpuDevices": [], "unittest.skipIf": [], "workspace_test.TestWorkspaceGPU": ["unittest.skipIf"], "workspace_test.TestWorkspaceGPU.testTorchInterop": ["caffe2.python.workspace.FetchBlob", "torch.ones", "caffe2.python.workspace.ResetWorkspace", "numpy.testing.assert_array_equal", "caffe2.python.core.DeviceOption", "numpy.array", "caffe2.python.test_util.TestCase.assertEqual", "caffe2.python.workspace.FetchTorch", "caffe2.python.workspace.RunOperatorOnce", "torch.cuda.memory_allocated", "caffe2.python.workspace.FeedBlob", "caffe2.python.core.CreateOperator", "caffe2.python.test_util.TestCase.assertGreater", "caffe2.python.test_util.TestCase.assertTrue"], "torch.cuda.memory_allocated": [], "caffe2.python.core.DeviceOption": [], "caffe2.python.test_util.TestCase.assertTrue": [], "caffe2.python.test_util.TestCase.assertGreater": [], "workspace_test.TestWorkspaceIDEEP.testFeedFetchBlobIDEEP": ["caffe2.python.workspace.FetchBlob", "numpy.random.randn", "numpy.testing.assert_array_equal", "caffe2.python.core.DeviceOption", "caffe2.python.workspace.FeedBlob"], "workspace_test.TestImmedibate.testImmediateEnterExit": ["caffe2.python.workspace.StopImmediate", "caffe2.python.workspace.IsImmediate", "caffe2.python.test_util.TestCase.assertFalse", "caffe2.python.workspace.StartImmediate", "caffe2.python.test_util.TestCase.assertTrue"], "caffe2.python.workspace.StartImmediate": [], "caffe2.python.workspace.IsImmediate": [], "caffe2.python.workspace.StopImmediate": [], "caffe2.python.test_util.TestCase.assertFalse": [], "workspace_test.TestImmedibate.testImmediateRunsCorrectly": ["caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.FetchImmediate", "caffe2.python.workspace.StopImmediate", "numpy.testing.assert_array_equal", "caffe2.python.workspace.ImmediateBlobs", "caffe2.python.test_util.TestCase.assertRaises", "caffe2.python.workspace.FeedImmediate", "caffe2.python.test_util.TestCase.assertEqual", "caffe2.python.core.Net", "caffe2.python.workspace.StartImmediate", "caffe2.python.test_util.TestCase.assertTrue"], "caffe2.python.workspace.ImmediateBlobs": [], "caffe2.python.workspace.FetchImmediate": [], "caffe2.python.test_util.TestCase.assertRaises": [], "caffe2.python.workspace.FeedImmediate": [], "workspace_test.TestImmedibate.testImmediateRootFolder": ["caffe2.python.workspace.StopImmediate", "os.path.isdir", "<builtin>.len", "caffe2.python.test_util.TestCase.assertFalse", "os.path.exists", "caffe2.python.workspace.StartImmediate", "caffe2.python.test_util.TestCase.assertTrue"], "os.path.isdir": [], "os.path.exists": [], "workspace_test.TestCppEnforceAsException.testEnforce": ["caffe2.python.workspace.RunOperatorOnce", "caffe2.python.test_util.TestCase.assertRaises", "caffe2.python.core.CreateOperator"], "workspace_test.TestCWorkspace.test_net_execution": ["caffe2.python.workspace.C.Workspace", "numpy.testing.assert_array_equal", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertRaises", "<builtin>.len", "numpy.ones", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertIn", "caffe2.python.core.Net", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual"], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertRaises": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertIn": [], "numpy.ones": [], "hypothesis.strategies.text": [], "workspace_test.TestCWorkspace": ["caffe2.python.hypothesis_test_util.tensor", "hypothesis.strategies.text", "hypothesis.strategies.sampled_from", "hypothesis.strategies.floats", "hypothesis.given"], "hypothesis.strategies.floats": [], "hypothesis.given": [], "workspace_test.TestCWorkspace.test_operator_run": ["numpy.testing.assert_allclose", "caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertIn", "caffe2.python.workspace.C.Workspace"], "numpy.testing.assert_allclose": [], "workspace_test.TestCWorkspace.test_net_run": ["caffe2.python.workspace.C.Workspace", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertNotIn", "numpy.testing.assert_allclose", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertIn", "caffe2.python.core.Net"], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertNotIn": [], "workspace_test.TestCWorkspace.test_plan_run": ["caffe2.python.workspace.C.Workspace", "caffe2.python.core.ExecutionStep", "numpy.testing.assert_allclose", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertIn", "caffe2.python.core.Net", "caffe2.python.core.Plan"], "workspace_test.TestCWorkspace.test_net_create": ["numpy.testing.assert_allclose", "caffe2.python.core.Net", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertIn", "caffe2.python.workspace.C.Workspace"], "caffe2.python.hypothesis_test_util.tensor": [], "hypothesis.strategies.sampled_from": [], "workspace_test.TestCWorkspace.test_array_serde": ["numpy.testing.assert_equal", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertIn", "caffe2.python.workspace.C.Workspace"], "numpy.testing.assert_equal": [], "workspace_test.TestCWorkspace.test_string_serde": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertIn", "caffe2.python.workspace.C.Workspace"], "workspace_test.TestCWorkspace.test_exception": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertRaises", "caffe2.python.workspace.C.Workspace"], "workspace_test.TestPredictor._create_model": ["caffe2.python.brew.fc", "<builtin>.dict", "caffe2.python.model_helper.ModelHelper"], "caffe2.python.model_helper.ModelHelper": [], "<builtin>.dict": [], "caffe2.python.brew.fc": [], "workspace_test.TestPredictor.test_predictor_memory_model": ["caffe2.python.workspace.Predictor", "numpy.array", "numpy.testing.assert_array_almost_equal", "workspace_test.TestPredictor._create_model", "caffe2.python.workspace.ResetWorkspace", "caffe2.python.workspace.FeedBlob", "numpy.zeros", "caffe2.python.workspace.StringifyProto"], "caffe2.python.workspace.StringifyProto": [], "caffe2.python.workspace.Predictor": [], "numpy.testing.assert_array_almost_equal": [], "hypothesis.strategies.integers": [], "workspace_test.TestTransform": ["hypothesis.given", "hypothesis.strategies.floats", "hypothesis.settings", "hypothesis.strategies.integers"], "workspace_test.TestTransform.test_simple_transform": ["caffe2.python.workspace.ApplyTransform", "caffe2.python.brew.conv", "caffe2.python.model_helper.ModelHelper", "caffe2.python.brew.fc", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual"], "caffe2.python.brew.conv": [], "caffe2.python.workspace.ApplyTransform": [], "hypothesis.settings": [], "workspace_test.TestTransform.test_registry_invalid": ["caffe2.python.brew.fc", "caffe2.python.model_helper.ModelHelper", "caffe2.python.workspace.ApplyTransform", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertRaises"], "workspace_test.TestTransform.test_apply_transform_if_faster": ["caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.ApplyTransformIfFaster", "caffe2.python.brew.conv", "caffe2.python.model_helper.ModelHelper", "caffe2.python.core.Net", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual"], "caffe2.python.workspace.ApplyTransformIfFaster": [], "workspace_test.MyModule.__init__": ["torch.nn.Parameter", "<builtin>.super", "torch.tensor"], "<builtin>.super": [], "torch.tensor": [], "torch.nn.Parameter": [], "workspace_test.MyModule": ["torch.jit.script_method"], "torch.jit.script_method": [], "workspace_test.MyModule.forward": [], "workspace_test.MyModule.multi_input": [], "workspace_test.MyModule.multi_input_tensor_list": [], "workspace_test.MyModule.multi_output": [], "workspace_test.TestScriptModule._createFeedModule": ["workspace_test.MyModule.__init__", "caffe2.python.workspace.FeedBlob"], "workspace_test.TestScriptModule.testCreation": ["caffe2.python.workspace.FetchBlob", "caffe2.python.test_util.TestCase.assertTrue", "workspace_test.MyModule.__init__", "caffe2.python.workspace.FeedBlob"], "workspace_test.TestScriptModule.testForward": ["workspace_test.TestScriptModule._createFeedModule", "caffe2.python.workspace.FetchBlob", "numpy.testing.assert_almost_equal", "caffe2.python.workspace.RunOperatorOnce", "numpy.array", "numpy.matmul", "numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.workspace.FeedBlob"], "numpy.matmul": [], "numpy.testing.assert_almost_equal": [], "workspace_test.TestScriptModule.testMultiInputOutput": ["workspace_test.TestScriptModule._createFeedModule", "caffe2.python.workspace.FetchBlob", "numpy.testing.assert_almost_equal", "caffe2.python.workspace.RunOperatorOnce", "numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.workspace.FeedBlob"], "workspace_test.TestScriptModule.testMultiTensorListInput": ["workspace_test.TestScriptModule._createFeedModule", "caffe2.python.workspace.FetchBlob", "numpy.testing.assert_almost_equal", "caffe2.python.workspace.RunOperatorOnce", "numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.workspace.FeedBlob"], "workspace_test.TestScriptModule.testSerialization": ["workspace_test.TestScriptModule._createFeedModule", "caffe2.python.workspace.ResetWorkspace", "numpy.random.rand", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.HasBlob", "os.path.join", "tempfile.mkdtemp", "numpy.testing.assert_almost_equal", "numpy.array", "numpy.matmul", "shutil.rmtree", "caffe2.python.test_util.TestCase.assertFalse", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob", "caffe2.python.core.CreateOperator", "caffe2.python.test_util.TestCase.assertTrue"], "tempfile.mkdtemp": [], "os.path.join": [], "shutil.rmtree": [], "workspace_test.TestScriptModuleFromString._createFeedModule": ["caffe2.python.workspace.RunOperatorOnce", "caffe2.python.core.CreateOperator", "workspace_test.TestScriptModuleFromString._get_modules_bytes", "workspace_test.MyModule.__init__"], "workspace_test.TestScriptModuleFromString._get_modules_bytes": ["io.BytesIO", "torch.jit.save"], "io.BytesIO": [], "torch.jit.save": [], "unittest.main": []}