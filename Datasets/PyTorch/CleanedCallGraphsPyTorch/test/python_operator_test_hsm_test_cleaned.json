{"hsm_test": ["unittest.main", "caffe2.proto.hsm_pb2.TreeProto", "caffe2.python.hsm_util.create_node_with_words", "caffe2.python.hsm_util.create_hierarchy", "caffe2.python.hsm_util.create_node_with_nodes", "caffe2.proto.caffe2_pb2.Argument"], "caffe2.proto.hsm_pb2.TreeProto": [], "caffe2.python.hsm_util.create_node_with_words": [], "caffe2.python.hsm_util.create_node_with_nodes": [], "caffe2.python.hsm_util.create_hierarchy": [], "caffe2.proto.caffe2_pb2.Argument": [], "hsm_test.TestHsm.test_hsm_search": ["hsm_test.TestHsm.test_hsm_search.simulation_hsm_search", "numpy.array", "caffe2.python.workspace.FeedBlob", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEquals", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.GlobalInit", "numpy.sort", "caffe2.python.workspace.RunOperatorOnce", "numpy.argsort", "caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertAlmostEqual", "numpy.random.rand", "<builtin>.range", "numpy.random.randint"], "numpy.random.rand": [], "numpy.random.randint": [], "<builtin>.range": [], "numpy.array": [], "caffe2.python.workspace.GlobalInit": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.core.CreateOperator": [], "caffe2.python.workspace.RunOperatorOnce": [], "caffe2.python.workspace.FetchBlob": [], "hsm_test.TestHsm.test_hsm_search.simulation_hsm_search": ["numpy.vstack", "numpy.log", "numpy.max", "numpy.dot", "<builtin>.enumerate", "numpy.exp"], "numpy.dot": [], "numpy.max": [], "numpy.exp": [], "numpy.log": [], "<builtin>.enumerate": [], "numpy.vstack": [], "numpy.argsort": [], "numpy.sort": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEquals": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertAlmostEqual": [], "hsm_test.TestHsm.test_hsm_run_once": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertTrue", "caffe2.python.workspace.FeedBlob", "caffe2.python.workspace.GlobalInit", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.core.CreateOperator", "numpy.random.randn", "numpy.random.rand"], "numpy.random.randn": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertTrue": [], "hsm_test.TestHsm.test_hsm_forward": ["numpy.array", "caffe2.python.workspace.FeedBlob", "caffe2.proto.caffe2_pb2.DeviceOption", "numpy.zeros", "caffe2.python.workspace.GlobalInit", "caffe2.python.core.GradientRegistry.GetGradientForOp", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertAlmostEqual", "caffe2.python.core.CreateOperator", "caffe2.python.gradient_checker.GradientChecker", "<builtin>.range"], "caffe2.proto.caffe2_pb2.DeviceOption": [], "caffe2.python.gradient_checker.GradientChecker": [], "numpy.zeros": [], "caffe2.python.core.GradientRegistry.GetGradientForOp": [], "hypothesis.given": [], "hsm_test.TestHsm": ["hypothesis.given", "hypothesis.settings"], "hypothesis.settings": [], "hsm_test.TestHsm.test_hsm_gradient": ["numpy.array", "caffe2.python.workspace.FeedBlob", "caffe2.python.workspace.GlobalInit", "caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "numpy.random.rand", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "<builtin>.range", "numpy.random.randint"], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks": [], "hsm_test.TestHsm.test_huffman_tree_hierarchy": ["<builtin>.list", "numpy.array", "caffe2.python.workspace.FeedBlob", "<builtin>.sum", "caffe2.proto.hsm_pb2.TreeProto", "hsm_test.TestHsm.test_huffman_tree_hierarchy.checkPath", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.GlobalInit", "<builtin>.zip", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.core.CreateOperator", "caffe2.python.hsm_util.create_hierarchy", "<builtin>.range", "caffe2.proto.caffe2_pb2.Argument"], "<builtin>.list": [], "<builtin>.zip": [], "<builtin>.sum": [], "hsm_test.TestHsm.test_huffman_tree_hierarchy.checkPath": ["<builtin>.zip", "<builtin>.len", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual"], "<builtin>.len": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual": [], "unittest.main": []}