{"gradient_check_test": ["caffe2.python.workspace.NumGpuDevices", "caffe2.python.workspace.GlobalInit", "caffe2.python.gradient_checker.GradientChecker", "unittest.main", "caffe2.python.device_checker.DeviceChecker", "caffe2.proto.caffe2_pb2.DeviceOption"], "caffe2.python.workspace.NumGpuDevices": [], "caffe2.proto.caffe2_pb2.DeviceOption": [], "caffe2.python.device_checker.DeviceChecker": [], "caffe2.python.gradient_checker.GradientChecker": [], "gradient_check_test.TestLRN.setUp": [], "gradient_check_test.TestLRN.testLRN": ["caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "caffe2.python.core.CreateOperator": [], "numpy.random.rand": [], "caffe2.python.device_checker.CheckSimple": [], "caffe2.python.test_util.TestCase.assertTrue": [], "gradient_check_test.TestFlatten.testFlatten": ["caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "gradient_check_test.TestConcat.setUp": [], "gradient_check_test.TestConcat.testConcatNHWC": ["<builtin>.range", "caffe2.python.core.CreateOperator", "caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "numpy.random.rand"], "<builtin>.range": [], "gradient_check_test.TestConcat.testConcatNCHW": ["<builtin>.range", "caffe2.python.core.CreateOperator", "caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "numpy.random.rand"], "gradient_check_test.TestRelu.setUp": [], "gradient_check_test.TestRelu.testRelu": ["caffe2.python.core.CreateOperator", "numpy.sign", "caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "numpy.random.rand"], "numpy.sign": [], "gradient_check_test.TestTanh.setUp": [], "gradient_check_test.TestTanh.testTanh": ["caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "gradient_check_test.TestAbs.setUp": [], "gradient_check_test.TestAbs.testAbs": ["caffe2.python.core.CreateOperator", "numpy.sign", "caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "numpy.random.rand"], "gradient_check_test.TestExp.setUp": [], "gradient_check_test.TestExp.testExp": ["caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "gradient_check_test.TestCos.setUp": [], "gradient_check_test.TestCos.testCos": ["caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "gradient_check_test.TestSin.setUp": [], "gradient_check_test.TestSin.testSin": ["caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "gradient_check_test.TestSigmoid.setUp": [], "gradient_check_test.TestSigmoid.testSigmoid": ["caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "gradient_check_test.TestSum.setUp": [], "gradient_check_test.TestSum.testSum": ["caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "gradient_check_test.TestMakeTwoClass.setUp": [], "gradient_check_test.TestMakeTwoClass.testMakeTwoClass": ["caffe2.python.device_checker.CheckSimple", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.core.CreateOperator", "numpy.random.rand"], "gradient_check_test.TestNetGradientChecker.test_net_gradient_checker": ["caffe2.python.workspace.RunNetOnce", "caffe2.python.brew.fc", "caffe2.python.model_helper.ModelHelper", "caffe2.python.gradient_checker.NetGradientChecker.Check"], "caffe2.python.model_helper.ModelHelper": [], "caffe2.python.brew.fc": [], "caffe2.python.workspace.RunNetOnce": [], "caffe2.python.gradient_checker.NetGradientChecker.Check": [], "gradient_check_test.TestNetGradientChecker.test_net_comparison": ["numpy.array", "caffe2.python.gradient_checker.NetGradientChecker.CompareNets", "<builtin>.enumerate", "caffe2.python.core.Net"], "caffe2.python.core.Net": [], "numpy.array": [], "<builtin>.enumerate": [], "caffe2.python.gradient_checker.NetGradientChecker.CompareNets": [], "gradient_check_test.TestIf.testIf": ["caffe2.python.net_builder.ops.UniformFill", "caffe2.python.workspace.RunNetOnce", "<builtin>.len", "caffe2.python.net_builder.ops.IfNet", "caffe2.python.net_builder.ops.Else", "caffe2.python.workspace.CreateNet", "<builtin>.range", "caffe2.python.net_builder.ops.Add", "caffe2.python.net_builder.NetBuilder", "caffe2.python.net_builder.ops.SquaredL2Distance", "caffe2.python.workspace.FetchBlob", "caffe2.python.net_builder.ops.LT", "<builtin>.abs", "caffe2.python.net_builder.ops.GaussianFill", "caffe2.python.net_builder.ops.FC", "caffe2.python.net_builder.ops.ConstantFill", "caffe2.python.workspace.RunNet", "caffe2.python.net_builder.ops.GivenTensorFill", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.test_util.TestCase.assertEqual"], "caffe2.python.net_builder.NetBuilder": [], "caffe2.python.net_builder.ops.UniformFill": [], "caffe2.python.net_builder.ops.ConstantFill": [], "caffe2.python.net_builder.ops.GivenTensorFill": [], "caffe2.python.net_builder.ops.GaussianFill": [], "caffe2.python.net_builder.ops.LT": [], "caffe2.python.net_builder.ops.IfNet": [], "caffe2.python.net_builder.ops.FC": [], "caffe2.python.net_builder.ops.Add": [], "caffe2.python.net_builder.ops.Else": [], "caffe2.python.net_builder.ops.SquaredL2Distance": [], "<builtin>.len": [], "caffe2.python.workspace.CreateNet": [], "caffe2.python.workspace.RunNet": [], "caffe2.python.workspace.FetchBlob": [], "caffe2.python.test_util.TestCase.assertEqual": [], "<builtin>.abs": [], "unittest.skip": [], "gradient_check_test.TestWhile": ["unittest.skip"], "gradient_check_test.TestWhile.testWhile": ["caffe2.python.net_builder.ops.Condition", "caffe2.python.net_builder.ops.LE", "<builtin>.len", "caffe2.python.test_util.TestCase.assertAlmostEqual", "caffe2.python.net_builder.ops.WhileNet", "caffe2.python.net_builder.ops.IfNet", "caffe2.python.net_builder.ops.Add", "caffe2.python.workspace.RunNetOnce", "caffe2.python.net_builder.NetBuilder", "caffe2.python.workspace.FetchBlob", "caffe2.python.net_builder.ops.Copy", "caffe2.python.net_builder.ops.Const", "caffe2.python.net_builder.ops.Else", "caffe2.python.net_builder.ops.Pow", "caffe2.python.net_builder.ops.LT"], "caffe2.python.net_builder.ops.Const": [], "caffe2.python.net_builder.ops.Copy": [], "caffe2.python.net_builder.ops.WhileNet": [], "caffe2.python.net_builder.ops.Condition": [], "caffe2.python.net_builder.ops.LE": [], "caffe2.python.net_builder.ops.Pow": [], "caffe2.python.test_util.TestCase.assertAlmostEqual": [], "caffe2.python.workspace.GlobalInit": [], "unittest.main": []}