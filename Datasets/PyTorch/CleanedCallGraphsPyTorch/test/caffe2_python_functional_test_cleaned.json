{"functional_test": ["hypothesis.strategies.composite", "unittest.main"], "hypothesis.strategies.composite": [], "functional_test._tensor_splits": ["hypothesis.strategies.integers", "numpy.array", "numpy.ones", "hypothesis.strategies.lists", "<builtin>.sorted", "numpy.diff", "caffe2.python.hypothesis_test_util.tensor", "<builtin>.len", "<builtin>.range"], "caffe2.python.hypothesis_test_util.tensor": [], "<builtin>.len": [], "hypothesis.strategies.integers": [], "numpy.ones": [], "numpy.array": [], "<builtin>.range": [], "hypothesis.strategies.lists": [], "<builtin>.sorted": [], "numpy.diff": [], "functional_test.TestFunctional": ["hypothesis.strategies.sampled_from", "functional_test._tensor_splits", "caffe2.python.hypothesis_test_util.tensor", "hypothesis.given", "hypothesis.strategies.booleans"], "hypothesis.strategies.sampled_from": [], "hypothesis.given": [], "functional_test.TestFunctional.test_relu": ["caffe2.python.workspace.WorkspaceGuard", "caffe2.python.workspace.FeedBlob", "numpy.sign", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.core.CreateOperator", "caffe2.python.functional.Functional.Relu", "numpy.testing.assert_array_equal"], "numpy.sign": [], "caffe2.python.functional.Functional.Relu": [], "caffe2.python.workspace.WorkspaceGuard": [], "caffe2.python.core.CreateOperator": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.workspace.RunOperatorOnce": [], "caffe2.python.workspace.FetchBlob": [], "numpy.testing.assert_array_equal": [], "functional_test.TestFunctional.test_concat": ["caffe2.python.functional.Functional.Concat", "numpy.array", "numpy.concatenate", "numpy.testing.assert_array_equal"], "caffe2.python.functional.Functional.Concat": [], "numpy.concatenate": [], "hypothesis.strategies.booleans": [], "functional_test.TestFunctional.test_split": ["numpy.concatenate", "<builtin>.dict", "caffe2.python.functional.Functional.Split", "functional_test.TestFunctional.test_split.split_ref", "<builtin>.enumerate", "<builtin>.len", "numpy.testing.assert_array_equal"], "<builtin>.dict": [], "caffe2.python.functional.Functional.Split": [], "functional_test.TestFunctional.test_split.split_ref": ["<builtin>.list", "numpy.array", "numpy.cumsum", "numpy.arange", "<builtin>.len", "<builtin>.range"], "<builtin>.list": [], "numpy.cumsum": [], "numpy.arange": [], "<builtin>.enumerate": [], "unittest.main": []}