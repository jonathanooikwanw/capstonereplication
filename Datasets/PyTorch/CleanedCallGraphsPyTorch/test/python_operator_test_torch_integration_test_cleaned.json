{"torch_integration_test": ["numpy.vectorize", "unittest.main"], "torch_integration_test.generate_rois": ["numpy.random.uniform", "numpy.maximum", "<builtin>.enumerate", "numpy.vstack", "<builtin>.len", "numpy.empty", "numpy.minimum"], "<builtin>.len": [], "<builtin>.enumerate": [], "numpy.random.uniform": [], "numpy.minimum": [], "numpy.maximum": [], "numpy.vstack": [], "numpy.empty": [], "torch_integration_test.generate_rois_rotated": ["numpy.empty", "torch_integration_test.generate_rois", "numpy.random.uniform"], "torch_integration_test.create_bbox_transform_inputs": ["numpy.random.randint", "torch_integration_test.generate_rois", "numpy.random.randn", "<builtin>.len", "torch_integration_test.generate_rois_rotated", "numpy.zeros", "<builtin>.sum"], "<builtin>.sum": [], "numpy.random.randint": [], "numpy.random.randn": [], "numpy.zeros": [], "numpy.vectorize": [], "torch_integration_test.bytes_to_floats": ["<builtin>.bytearray", "struct.unpack", "<builtin>.enumerate", "numpy.shape", "numpy.empty"], "numpy.shape": [], "<builtin>.bytearray": [], "struct.unpack": [], "torch_integration_test.floats_to_bytes": ["<builtin>.ord", "struct.pack", "<builtin>.enumerate", "<builtin>.list", "numpy.shape", "<builtin>.isinstance", "numpy.empty"], "<builtin>.isinstance": [], "struct.pack": [], "<builtin>.list": [], "<builtin>.ord": [], "torch_integration_test.fused_rowwise_8bit_quantize_reference": ["numpy.max", "numpy.concatenate", "torch_integration_test.floats_to_bytes", "numpy.min"], "numpy.min": [], "numpy.max": [], "numpy.concatenate": [], "torch_integration_test.fused_rowwise_8bit_quantize_dequantize_reference": ["torch_integration_test.fused_rowwise_8bit_quantize_reference", "torch_integration_test.bytes_to_floats"], "hypothesis.strategies.integers": [], "torch_integration_test.TorchIntegration": ["hypothesis.given", "hypothesis.strategies.integers", "hypothesis.strategies.booleans", "hypothesis.strategies.lists", "unittest.skipIf", "caffe2.python.hypothesis_test_util.tensor", "hypothesis.strategies.floats", "caffe2.python.hypothesis_test_util.lengths_tensor", "hypothesis.strategies.sampled_from", "hypothesis.settings"], "hypothesis.strategies.lists": [], "hypothesis.strategies.booleans": [], "hypothesis.strategies.sampled_from": [], "hypothesis.given": [], "torch_integration_test.TorchIntegration.test_bbox_transform": ["torch.tensor", "torch.testing.assert_allclose", "torch_integration_test.create_bbox_transform_inputs", "torch_integration_test.TorchIntegration.test_bbox_transform.bbox_transform_ref", "torch.ops._caffe2.BBoxTransform"], "torch_integration_test.TorchIntegration.test_bbox_transform.bbox_transform_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "caffe2.python.core.CreateOperator": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.workspace.RunOperatorOnce": [], "caffe2.python.workspace.FetchBlob": [], "torch.tensor": [], "torch.ops._caffe2.BBoxTransform": [], "torch.testing.assert_allclose": [], "torch_integration_test.TorchIntegration.test_box_with_nms_limits": ["torch.tensor", "<builtin>.int", "torch.testing.assert_allclose", "torch_integration_test.TorchIntegration.test_box_with_nms_limits.box_with_nms_limit_ref", "<builtin>.float", "<builtin>.zip", "torch_integration_test.create_bbox_transform_inputs", "numpy.random.randn", "torch.ops._caffe2.BoxWithNMSLimit", "<builtin>.sum", "torch.ops._caffe2.BBoxTransform"], "torch_integration_test.TorchIntegration.test_box_with_nms_limits.box_with_nms_limit_ref": ["caffe2.python.core.CreateOperator", "<builtin>.float", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.FeedBlob", "<builtin>.int"], "<builtin>.float": [], "<builtin>.int": [], "torch.ops._caffe2.BoxWithNMSLimit": [], "<builtin>.zip": [], "torch_integration_test.TorchIntegration.test_sparse_to_dense_mask": ["torch.tensor", "numpy.array", "torch.testing.assert_allclose", "numpy.random.rand", "torch_integration_test.TorchIntegration.test_sparse_to_dense_mask.sparse_to_dense_mask_ref", "numpy.zeros", "torch.ops._caffe2.SparseToDenseMask", "<builtin>.range"], "<builtin>.range": [], "numpy.array": [], "numpy.random.rand": [], "torch_integration_test.TorchIntegration.test_sparse_to_dense_mask.sparse_to_dense_mask_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.SparseToDenseMask": [], "torch_integration_test.TorchIntegration.test_generate_proposals": ["torch.tensor", "torch.ops._caffe2.GenerateProposals", "torch.testing.assert_allclose", "numpy.linspace", "numpy.ones", "torch_integration_test.TorchIntegration.test_generate_proposals.generate_proposals_ref"], "numpy.ones": [], "numpy.linspace": [], "torch_integration_test.TorchIntegration.test_generate_proposals.generate_proposals_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.GenerateProposals": [], "torch_integration_test.TorchIntegration.test_inference_lstm": ["torch.tensor", "torch.testing.assert_allclose", "torch_integration_test.TorchIntegration.test_inference_lstm.inference_lstm_ref", "torch.from_numpy", "numpy.random.randn", "numpy.zeros", "torch.nn.LSTM", "torch.ops._caffe2.InferenceLSTM"], "torch.nn.LSTM": [], "torch_integration_test.TorchIntegration.test_inference_lstm.inference_lstm_ref": ["caffe2.python.core.CreateOperator", "<builtin>.enumerate", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.FeedBlob"], "torch.from_numpy": [], "torch.ops._caffe2.InferenceLSTM": [], "unittest.skipIf": [], "torch_integration_test.TorchIntegration.test_generate_proposals_cuda": ["torch.tensor", "torch.ops._caffe2.GenerateProposals", "torch.testing.assert_allclose", "numpy.linspace", "numpy.ones", "torch_integration_test.TorchIntegration.test_generate_proposals_cuda.generate_proposals_ref"], "torch_integration_test.TorchIntegration.test_generate_proposals_cuda.generate_proposals_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch_integration_test.TorchIntegration._test_roi_align": ["torch.tensor", "numpy.array", "torch.testing.assert_allclose", "torch_integration_test.TorchIntegration._test_roi_align.roi_align_ref", "torch_integration_test.TorchIntegration._test_roi_align.rand_roi", "numpy.random.randn", "torch.ops._caffe2.RoIAlign", "<builtin>.range"], "torch_integration_test.TorchIntegration._test_roi_align.rand_roi": ["numpy.array", "numpy.random.rand", "<builtin>.float", "<builtin>.int"], "torch_integration_test.TorchIntegration._test_roi_align.roi_align_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.RoIAlign": [], "torch_integration_test.TorchIntegration.test_roi_align_cpu": ["torch_integration_test.TorchIntegration._test_roi_align"], "torch_integration_test.TorchIntegration.test_roi_align_cuda": ["torch_integration_test.TorchIntegration._test_roi_align"], "torch_integration_test.TorchIntegration._test_roi_align_rotated": ["torch.tensor", "torch.ops._caffe2.RoIAlignRotated", "numpy.array", "torch_integration_test.TorchIntegration._test_roi_align_rotated.rand_rotated_roi", "torch.testing.assert_allclose", "torch_integration_test.TorchIntegration._test_roi_align_rotated.roi_align_ref", "numpy.random.randn", "<builtin>.range"], "torch_integration_test.TorchIntegration._test_roi_align_rotated.rand_rotated_roi": ["numpy.array", "numpy.random.rand", "<builtin>.float", "<builtin>.int"], "torch_integration_test.TorchIntegration._test_roi_align_rotated.roi_align_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.RoIAlignRotated": [], "torch_integration_test.TorchIntegration.test_roi_align_rotated_cpu": ["torch_integration_test.TorchIntegration._test_roi_align_rotated"], "torch_integration_test.TorchIntegration.test_roi_align_rotated_cuda": ["torch_integration_test.TorchIntegration._test_roi_align_rotated"], "torch_integration_test.TorchIntegration.test_collect_and_distribute_fpn_rpn_proposals_op": ["torch.tensor", "numpy.random.randint", "torch.ops._caffe2.CollectAndDistributeFpnRpnProposals", "torch.ops._caffe2.CollectRpnProposals", "torch.testing.assert_allclose", "<builtin>.zip", "torch_integration_test.generate_rois", "torch.ops._caffe2.DistributeFpnProposals", "<builtin>.len", "torch.rand", "<builtin>.sum", "<builtin>.range"], "torch.rand": [], "torch.ops._caffe2.CollectRpnProposals": [], "torch.ops._caffe2.DistributeFpnProposals": [], "torch.ops._caffe2.CollectAndDistributeFpnRpnProposals": [], "caffe2.python.hypothesis_test_util.tensor": [], "torch_integration_test.TorchIntegration._test_gelu_op": ["torch.tensor", "torch_integration_test.TorchIntegration._test_gelu_op._gelu_ref", "torch.ops._caffe2.Gelu", "torch.testing.assert_allclose"], "torch_integration_test.TorchIntegration._test_gelu_op._gelu_ref": ["scipy.stats.norm.cdf"], "scipy.stats.norm.cdf": [], "torch.ops._caffe2.Gelu": [], "torch_integration_test.TorchIntegration.test_gelu_op": ["torch_integration_test.TorchIntegration._test_gelu_op"], "torch_integration_test.TorchIntegration.test_gelu_op_cuda": ["torch_integration_test.TorchIntegration._test_gelu_op"], "caffe2.python.hypothesis_test_util.lengths_tensor": [], "torch_integration_test.TorchIntegration._test_lengths_op": ["torch.tensor", "torch.testing.assert_allclose", "torch_integration_test.TorchIntegration._test_lengths_op._lengths_ref"], "torch_integration_test.TorchIntegration._test_lengths_op._lengths_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch_integration_test.TorchIntegration._test_lengths_sum_op": ["torch_integration_test.TorchIntegration._test_lengths_op"], "torch_integration_test.TorchIntegration.test_lengths_sum_op": ["torch_integration_test.TorchIntegration._test_lengths_sum_op"], "torch_integration_test.TorchIntegration.test_lengths_sum_op_cuda": ["torch_integration_test.TorchIntegration._test_lengths_sum_op"], "torch_integration_test.TorchIntegration._test_lengths_mean_op": ["torch_integration_test.TorchIntegration._test_lengths_op"], "torch_integration_test.TorchIntegration.test_lengths_mean_op": ["torch_integration_test.TorchIntegration._test_lengths_mean_op"], "torch_integration_test.TorchIntegration.test_lengths_mean_op_cuda": ["torch_integration_test.TorchIntegration._test_lengths_mean_op"], "torch_integration_test.TorchIntegration._test_lengths_max_op": ["torch_integration_test.TorchIntegration._test_lengths_op"], "torch_integration_test.TorchIntegration.test_lengths_max_op": ["torch_integration_test.TorchIntegration._test_lengths_max_op"], "torch_integration_test.TorchIntegration.test_lengths_max_op_cuda": ["torch_integration_test.TorchIntegration._test_lengths_max_op"], "torch_integration_test.TorchIntegration._test_resize_nearest_op": ["torch.tensor", "torch_integration_test.TorchIntegration._test_resize_nearest_op._resize_nearest_ref", "torch.ops._caffe2.ResizeNearest", "torch.testing.assert_allclose", "numpy.random.rand"], "torch_integration_test.TorchIntegration._test_resize_nearest_op._resize_nearest_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.ResizeNearest": [], "torch_integration_test.TorchIntegration.test_resize_nearest_op_cpu": ["torch_integration_test.TorchIntegration._test_resize_nearest_op"], "torch_integration_test.TorchIntegration.test_resize_nearest_op_cuda": ["torch_integration_test.TorchIntegration._test_resize_nearest_op"], "torch_integration_test.TorchIntegration.test_Fused8BitRowwiseQuantizedToFloat": ["caffe2.python.core.CreateOperator", "torch.tensor", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FetchBlob", "torch_integration_test.fused_rowwise_8bit_quantize_dequantize_reference", "caffe2.python.workspace.FeedBlob", "numpy.testing.assert_array_almost_equal", "torch.ops._caffe2.Fused8BitRowwiseQuantizedToFloat"], "torch.ops._caffe2.Fused8BitRowwiseQuantizedToFloat": [], "numpy.testing.assert_array_almost_equal": [], "torch_integration_test.TorchIntegration.test_piecewise_linear_op": ["torch.tensor", "numpy.sort", "torch.testing.assert_allclose", "torch_integration_test.TorchIntegration.test_piecewise_linear_op._piecewise_linear_ref", "numpy.random.rand", "numpy.zeros", "torch.ops._caffe2.PiecewiseLinearTransform"], "numpy.sort": [], "torch_integration_test.TorchIntegration.test_piecewise_linear_op._piecewise_linear_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.PiecewiseLinearTransform": [], "torch_integration_test.TorchIntegration.test_alias_with_name_is_in_place": ["torch.tensor", "torch.ops._caffe2.AliasWithName", "torch.testing.assert_allclose"], "torch.ops._caffe2.AliasWithName": [], "torch_integration_test.TorchIntegration.test_copy_between_cpu_and_gpu": ["torch.tensor", "torch.testing.assert_allclose", "torch.ops._caffe2.CopyGPUToCPU", "torch.ops._caffe2.CopyCPUToGPU"], "torch.ops._caffe2.CopyCPUToGPU": [], "torch.ops._caffe2.CopyGPUToCPU": [], "torch_integration_test.TorchIntegration.test_index_hash_op": ["torch.tensor", "numpy.random.randint", "torch.ops._caffe2.IndexHash", "torch_integration_test.TorchIntegration.test_index_hash_op._index_hash_ref", "torch.testing.assert_allclose"], "torch_integration_test.TorchIntegration.test_index_hash_op._index_hash_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.IndexHash": [], "torch_integration_test.TorchIntegration.test_bucketize_op": ["torch.tensor", "torch.ops._caffe2.Bucketize", "numpy.array", "torch.testing.assert_allclose", "numpy.random.rand", "torch_integration_test.TorchIntegration.test_bucketize_op._bucketize_ref"], "torch_integration_test.TorchIntegration.test_bucketize_op._bucketize_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.Bucketize": [], "hypothesis.strategies.floats": [], "torch_integration_test.TorchIntegration.test_logit": ["torch.tensor", "torch.testing.assert_allclose", "torch.ops._caffe2.Logit", "torch_integration_test.TorchIntegration.test_logit.ref"], "torch_integration_test.TorchIntegration.test_logit.ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.Logit": [], "torch_integration_test.TorchIntegration.test_percentile": ["torch.tensor", "numpy.array", "torch.testing.assert_allclose", "torch_integration_test.TorchIntegration.test_percentile._percentile_ref", "torch.ops._caffe2.Percentile"], "torch_integration_test.TorchIntegration.test_percentile._percentile_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.Percentile": [], "torch_integration_test.TorchIntegration.test_batch_bucket_one_hot_op": ["torch.tensor", "numpy.array", "torch.ops._caffe2.BatchBucketOneHot", "torch.testing.assert_allclose", "torch_integration_test.TorchIntegration.test_batch_bucket_one_hot_op._batch_bucket_one_hot_ref"], "torch_integration_test.TorchIntegration.test_batch_bucket_one_hot_op._batch_bucket_one_hot_ref": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "torch.ops._caffe2.BatchBucketOneHot": [], "torch_integration_test.TorchIntegration.test_gather_ranges_to_dense_op": ["caffe2.python.core.CreateOperator", "numpy.array", "<builtin>.len", "torch.ops._caffe2.GatherRangesToDense", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FetchBlob", "torch.from_numpy", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual", "caffe2.python.workspace.FeedBlob", "numpy.testing.assert_array_almost_equal", "<builtin>.range"], "torch.ops._caffe2.GatherRangesToDense": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual": [], "hypothesis.settings": [], "torch_integration_test.TorchIntegration.test_merge_id_lists": ["torch.tensor", "numpy.array", "torch.testing.assert_allclose", "numpy.arange", "torch_integration_test.TorchIntegration.test_merge_id_lists._merge_id_lists", "numpy.random.choice", "torch.ops._caffe2.MergeIdLists"], "torch_integration_test.TorchIntegration.test_merge_id_lists._merge_id_lists": ["caffe2.python.core.CreateOperator", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.RunOperatorOnce", "caffe2.python.workspace.FeedBlob"], "numpy.arange": [], "numpy.random.choice": [], "torch.ops._caffe2.MergeIdLists": [], "torch_integration_test.TorchIntegration.test_learning_rate": ["torch.tensor", "torch.ops._caffe2.LearningRate", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertAlmostEqual"], "torch.ops._caffe2.LearningRate": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertAlmostEqual": [], "torch_integration_test.TorchIntegration.test_pack_segments": ["torch.tensor", "torch.testing.assert_allclose", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual", "torch.ops._caffe2.UnpackSegments", "torch.ops._caffe2.PackSegments", "torch.rand"], "torch.ops._caffe2.PackSegments": [], "torch.ops._caffe2.UnpackSegments": [], "unittest.main": []}