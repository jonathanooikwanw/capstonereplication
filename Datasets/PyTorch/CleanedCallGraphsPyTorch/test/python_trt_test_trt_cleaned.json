{"test_trt": [], "test_trt._print_net": ["<builtin>.print"], "<builtin>.print": [], "test_trt._base_url": [], "test_trt._download_onnx_model": ["six.moves.urllib.request.urlretrieve", "test_trt._base_url", "tarfile.open", "tempfile.NamedTemporaryFile", "shutil.move", "<builtin>.print"], "shutil.move": [], "tempfile.NamedTemporaryFile": [], "six.moves.urllib.request.urlretrieve": [], "tarfile.open": [], "test_trt.TensorRTOpTest.setUp": ["onnx.defs.onnx_opset_version"], "onnx.defs.onnx_opset_version": [], "test_trt.TensorRTOpTest._test_relu_graph": ["onnx.helper.make_model", "onnx.helper.make_graph", "onnx.backend.base.namedtupledict", "caffe2.python.core.DeviceScope", "onnx.helper.make_tensor_value_info", "caffe2.python.core.DeviceOption", "caffe2.python.onnx.backend.run_node", "caffe2.python.trt.transform.convert_onnx_model_to_trt_op", "numpy.testing.assert_almost_equal", "onnx.helper.make_node", "caffe2.python.onnx.workspace.Workspace"], "onnx.helper.make_node": [], "caffe2.python.onnx.backend.run_node": [], "onnx.helper.make_tensor_value_info": [], "onnx.helper.make_graph": [], "onnx.helper.make_model": [], "caffe2.python.trt.transform.convert_onnx_model_to_trt_op": [], "caffe2.python.core.DeviceOption": [], "caffe2.python.onnx.workspace.Workspace": [], "caffe2.python.core.DeviceScope": [], "onnx.backend.base.namedtupledict": [], "numpy.testing.assert_almost_equal": [], "unittest.skipIf": [], "test_trt.TensorRTOpTest": ["unittest.skipIf", "unittest.skip"], "test_trt.TensorRTOpTest.test_relu_graph_simple": ["numpy.random.randn", "test_trt.TensorRTOpTest._test_relu_graph"], "numpy.random.randn": [], "test_trt.TensorRTOpTest.test_relu_graph_big_batch": ["numpy.random.randn", "test_trt.TensorRTOpTest._test_relu_graph"], "test_trt.TensorRTOpTest._test_onnx_importer": ["onnx.backend.base.namedtupledict", "caffe2.python.core.DeviceScope", "caffe2.python.core.DeviceOption", "<builtin>.int", "caffe2.python.onnx.workspace.Workspace", "test_trt._download_onnx_model", "caffe2.python.onnx.backend.run_model", "caffe2.python.trt.transform.convert_onnx_model_to_trt_op", "numpy.random.randn", "<builtin>.print", "numpy.testing.assert_allclose", "onnx.load"], "onnx.load": [], "<builtin>.int": [], "caffe2.python.onnx.backend.run_model": [], "numpy.testing.assert_allclose": [], "test_trt.TensorRTOpTest.test_resnet50": ["test_trt.TensorRTOpTest._test_onnx_importer"], "test_trt.TensorRTOpTest.test_bvlc_alexnet": ["test_trt.TensorRTOpTest._test_onnx_importer"], "unittest.skip": [], "test_trt.TensorRTOpTest.test_densenet121": ["test_trt.TensorRTOpTest._test_onnx_importer"], "test_trt.TensorRTOpTest.test_inception_v1": ["test_trt.TensorRTOpTest._test_onnx_importer"], "test_trt.TensorRTOpTest.test_inception_v2": ["test_trt.TensorRTOpTest._test_onnx_importer"], "test_trt.TensorRTOpTest.test_shufflenet": ["test_trt.TensorRTOpTest._test_onnx_importer"], "test_trt.TensorRTOpTest.test_squeezenet": ["test_trt.TensorRTOpTest._test_onnx_importer"], "test_trt.TensorRTOpTest.test_vgg16": ["test_trt.TensorRTOpTest._test_onnx_importer"], "test_trt.TensorRTOpTest.test_vgg19": ["test_trt.TensorRTOpTest._test_onnx_importer"], "test_trt.TensorRTTransformTest.setUp": ["caffe2.python.models.download.ModelDownloader"], "caffe2.python.models.download.ModelDownloader": [], "test_trt.TensorRTTransformTest._add_head_tail": ["caffe2.proto.caffe2_pb2.OperatorDef", "caffe2.proto.caffe2_pb2.NetDef"], "caffe2.proto.caffe2_pb2.OperatorDef": [], "caffe2.proto.caffe2_pb2.NetDef": [], "test_trt.TensorRTTransformTest": ["unittest.skipIf"], "test_trt.TensorRTTransformTest.test_resnet50_core": ["onnx.backend.base.namedtupledict", "caffe2.python.core.DeviceScope", "caffe2.python.core.DeviceOption", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.ResetWorkspace", "time.time", "caffe2.python.workspace.SwitchWorkspace", "caffe2.python.workspace.FeedBlob", "caffe2.python.trt.transform.transform_caffe2_net", "caffe2.python.workspace.RunNet", "test_trt.TensorRTTransformTest._add_head_tail", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.CreateNet", "numpy.random.randn", "<builtin>.range", "<builtin>.print", "numpy.testing.assert_allclose"], "caffe2.python.workspace.SwitchWorkspace": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.workspace.RunNetOnce": [], "caffe2.python.workspace.CreateNet": [], "<builtin>.range": [], "caffe2.python.workspace.RunNet": [], "time.time": [], "caffe2.python.workspace.FetchBlob": [], "caffe2.python.workspace.ResetWorkspace": [], "caffe2.python.trt.transform.transform_caffe2_net": []}