{"elementwise_ops_test": ["unittest.main"], "caffe2.python.hypothesis_test_util.tensor": [], "elementwise_ops_test.TestElementwiseOps": ["hypothesis.given", "caffe2.python.hypothesis_test_util.tensor", "hypothesis.strategies.sampled_from", "hypothesis.strategies.booleans", "caffe2.python.hypothesis_test_util.floats", "hypothesis.settings", "hypothesis.strategies.integers"], "hypothesis.given": [], "hypothesis.settings": [], "elementwise_ops_test.TestElementwiseOps.test_abs": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "caffe2.python.core.CreateOperator": [], "elementwise_ops_test.TestElementwiseOps.test_abs.abs_ref": ["numpy.absolute"], "numpy.absolute": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks": [], "hypothesis.strategies.booleans": [], "elementwise_ops_test.TestElementwiseOps.test_exp": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_exp.exp_ref": ["numpy.exp"], "numpy.exp": [], "hypothesis.strategies.integers": [], "elementwise_ops_test.TestElementwiseOps.test_log": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks", "numpy.random.seed", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "numpy.random.rand", "caffe2.python.core.CreateOperator"], "numpy.random.seed": [], "numpy.random.rand": [], "elementwise_ops_test.TestElementwiseOps.test_log.log_op": ["numpy.log"], "numpy.log": [], "elementwise_ops_test.TestElementwiseOps.test_powt": ["numpy.random.seed", "numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_powt.powt_op": ["numpy.power"], "numpy.power": [], "elementwise_ops_test.TestElementwiseOps.test_powt.powt_grad": ["numpy.log", "numpy.power"], "elementwise_ops_test.TestElementwiseOps.test_sqr": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks", "numpy.random.seed", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "numpy.random.rand", "caffe2.python.core.CreateOperator"], "elementwise_ops_test.TestElementwiseOps.test_sqr.sqr_op": ["numpy.square"], "numpy.square": [], "caffe2.python.hypothesis_test_util.floats": [], "elementwise_ops_test.TestElementwiseOps.test_sqrt": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_sqrt.sqrt_op": ["numpy.sqrt"], "numpy.sqrt": [], "elementwise_ops_test.TestElementwiseOps.test_softsign": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_softsign.softsign_ref": ["numpy.absolute"], "elementwise_ops_test.TestElementwiseOps.test_rsqrt": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_rsqrt.rsqrt_ref": ["numpy.sqrt"], "elementwise_ops_test.TestElementwiseOps.test_cube": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_cube.cube_ref": ["numpy.power"], "elementwise_ops_test.TestElementwiseOps.test_cube.cube_grad_ref": ["numpy.square"], "elementwise_ops_test.TestElementwiseOps.test_cbrt": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_cbrt.cbrt_ref": ["numpy.cbrt"], "numpy.cbrt": [], "elementwise_ops_test.TestElementwiseOps.test_cbrt_grad": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks"], "elementwise_ops_test.TestElementwiseOps.test_swish": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks", "numpy.random.seed", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "numpy.random.rand", "caffe2.python.core.CreateOperator"], "elementwise_ops_test.TestElementwiseOps.test_swish.swish": ["numpy.divide", "numpy.exp"], "numpy.divide": [], "elementwise_ops_test.TestElementwiseOps.test_swish_gradient_inplace": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks", "numpy.random.seed", "numpy.random.rand", "elementwise_ops_test.TestElementwiseOps.test_swish_gradient_inplace.swish", "caffe2.python.core.CreateOperator"], "elementwise_ops_test.TestElementwiseOps.test_swish_gradient_inplace.swish": ["numpy.divide", "numpy.exp"], "elementwise_ops_test.TestElementwiseOps.test_swish_gradient_inplace.swish_gradient": ["numpy.divide", "numpy.exp"], "elementwise_ops_test.TestElementwiseOps.test_mul_gradient_inplace_or_broadcast": ["numpy.random.seed", "numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_mul_gradient_inplace_or_broadcast.mul_gradient": ["numpy.sum"], "numpy.sum": [], "elementwise_ops_test.TestElementwiseOps.test_div_gradient_inplace_or_broadcast": ["numpy.random.seed", "numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_div_gradient_inplace_or_broadcast.div_gradient": ["numpy.sum"], "elementwise_ops_test.TestElementwiseOps.test_add_gradient_inplace_or_broadcast": ["numpy.random.seed", "numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_add_gradient_inplace_or_broadcast.add_gradient": ["numpy.sum"], "elementwise_ops_test.TestElementwiseOps.test_sub_gradient_inplace_or_broadcast": ["numpy.random.seed", "numpy.random.rand", "caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_sub_gradient_inplace_or_broadcast.sub_gradient": ["numpy.sum"], "hypothesis.strategies.sampled_from": [], "elementwise_ops_test.TestElementwiseOps.test_sigmoid": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_sigmoid.sigmoid_ref": ["numpy.exp"], "elementwise_ops_test.TestElementwiseOps.test_tanh": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_tanh.tanh_ref": ["numpy.tanh"], "numpy.tanh": [], "elementwise_ops_test.TestElementwiseOps.test_hard_sigmoid": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "<builtin>.abs", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "numpy.sign", "caffe2.python.core.CreateOperator", "hypothesis.assume"], "hypothesis.assume": [], "elementwise_ops_test.TestElementwiseOps.test_hard_sigmoid.hard_sigmoid_ref": ["numpy.maximum", "numpy.minimum"], "numpy.maximum": [], "numpy.minimum": [], "<builtin>.abs": [], "numpy.sign": [], "elementwise_ops_test.TestElementwiseOps.test_eq": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks", "<builtin>.list", "caffe2.python.workspace.FeedBlob", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual", "numpy.random.randint", "caffe2.python.core.Net", "caffe2.python.workspace.RunNetOnce", "caffe2.python.core.CreateOperator", "caffe2.python.workspace.InferShapesAndTypes"], "numpy.random.randint": [], "elementwise_ops_test.TestElementwiseOps.test_eq.eq": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.core.Net": [], "caffe2.python.workspace.InferShapesAndTypes": [], "caffe2.python.workspace.RunNetOnce": [], "<builtin>.list": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual": [], "elementwise_ops_test.TestElementwiseOps.test_eq_bcast": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks", "<builtin>.str", "<builtin>.list", "caffe2.python.workspace.FeedBlob", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertEqual", "numpy.random.randint", "caffe2.python.core.Net", "caffe2.python.workspace.RunNetOnce", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertTrue", "caffe2.python.core.CreateOperator", "caffe2.python.workspace.InferShapesAndTypes"], "elementwise_ops_test.TestElementwiseOps.test_eq_bcast.eq": [], "<builtin>.str": [], "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertTrue": [], "elementwise_ops_test.TestElementwiseOps._run_single_test": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks", "<builtin>.len", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "<builtin>.range"], "<builtin>.len": [], "<builtin>.range": [], "elementwise_ops_test.TestElementwiseOps._test_binary_op": ["caffe2.python.core.CreateOperator", "numpy.random.rand", "elementwise_ops_test.TestElementwiseOps._run_single_test"], "elementwise_ops_test.TestElementwiseOps._test_binary_op.ref": ["numpy.multiply", "numpy.divide", "numpy.subtract", "numpy.add"], "numpy.multiply": [], "numpy.subtract": [], "numpy.add": [], "elementwise_ops_test.TestElementwiseOps._test_binary_op_in_place": ["caffe2.python.core.CreateOperator", "numpy.random.rand", "elementwise_ops_test.TestElementwiseOps._run_single_test"], "elementwise_ops_test.TestElementwiseOps._test_binary_op_in_place.ref": ["numpy.divide", "numpy.subtract", "numpy.add"], "elementwise_ops_test.TestElementwiseOps.test_add": ["elementwise_ops_test.TestElementwiseOps._test_binary_op", "elementwise_ops_test.TestElementwiseOps._test_binary_op_in_place"], "elementwise_ops_test.TestElementwiseOps.test_sub": ["elementwise_ops_test.TestElementwiseOps._test_binary_op", "elementwise_ops_test.TestElementwiseOps._test_binary_op_in_place"], "elementwise_ops_test.TestElementwiseOps.test_mul": ["elementwise_ops_test.TestElementwiseOps._test_binary_op"], "elementwise_ops_test.TestElementwiseOps.test_div": ["elementwise_ops_test.TestElementwiseOps._test_binary_op", "elementwise_ops_test.TestElementwiseOps._test_binary_op_in_place"], "elementwise_ops_test.TestElementwiseOps.test_div_legacy_grad": ["caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks", "numpy.random.rand", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.core.CreateOperator", "numpy.random.randn"], "elementwise_ops_test.TestElementwiseOps.test_div_legacy_grad.div_grad_ref": ["numpy.sum"], "numpy.random.randn": [], "elementwise_ops_test.TestElementwiseOps._test_bitwise_binary_op": ["caffe2.python.core.CreateOperator", "elementwise_ops_test.TestElementwiseOps._run_single_test", "numpy.random.randint"], "elementwise_ops_test.TestElementwiseOps._test_bitwise_binary_op.ref": ["numpy.bitwise_and", "numpy.bitwise_xor", "numpy.bitwise_or"], "numpy.bitwise_and": [], "numpy.bitwise_xor": [], "numpy.bitwise_or": [], "elementwise_ops_test.TestElementwiseOps.test_bitwise_and": ["elementwise_ops_test.TestElementwiseOps._test_bitwise_binary_op"], "elementwise_ops_test.TestElementwiseOps.test_bitwise_or": ["elementwise_ops_test.TestElementwiseOps._test_bitwise_binary_op"], "elementwise_ops_test.TestElementwiseOps.test_bitwise_xor": ["elementwise_ops_test.TestElementwiseOps._test_bitwise_binary_op"], "elementwise_ops_test.TestElementwiseOps.test_reciprocal": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_reciprocal.reciprocal_op": ["numpy.reciprocal"], "numpy.reciprocal": [], "elementwise_ops_test.TestElementwiseOps.test_not": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_not.not_op": ["numpy.logical_not"], "numpy.logical_not": [], "elementwise_ops_test.TestElementwiseOps.test_log1p": ["caffe2.python.core.CreateOperator", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks", "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks"], "elementwise_ops_test.TestElementwiseOps.test_log1p.ref_log1p": ["numpy.log1p"], "numpy.log1p": [], "elementwise_ops_test.TestElementwiseOps.test_log1p.ref_log1p_grad": [], "unittest.main": []}