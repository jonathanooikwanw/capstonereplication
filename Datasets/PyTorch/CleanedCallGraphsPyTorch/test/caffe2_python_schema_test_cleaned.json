{"schema_test": [], "schema_test.TestField.testInitShouldSetEmptyParent": ["caffe2.python.schema.Field", "unittest.TestCase.assertTupleEqual"], "caffe2.python.schema.Field": [], "unittest.TestCase.assertTupleEqual": [], "schema_test.TestField.testInitShouldSetFieldOffsets": ["caffe2.python.schema.Field", "unittest.TestCase.assertListEqual", "caffe2.python.schema.Struct", "caffe2.python.schema.List", "caffe2.python.schema.Scalar"], "caffe2.python.schema.Scalar": [], "caffe2.python.schema.List": [], "caffe2.python.schema.Struct": [], "unittest.TestCase.assertListEqual": [], "schema_test.TestField.testInitShouldSetFieldOffsetsIfNoChildren": ["caffe2.python.schema.Field", "unittest.TestCase.assertListEqual"], "schema_test.TestDB.testPicklable": ["<builtin>.getattr", "caffe2.python.schema.Struct", "caffe2.python.schema.List", "pickle.loads", "<builtin>.isinstance", "unittest.TestCase.assertTrue", "pickle.dumps", "caffe2.python.schema.Scalar"], "pickle.dumps": [], "pickle.loads": [], "<builtin>.isinstance": [], "unittest.TestCase.assertTrue": [], "<builtin>.getattr": [], "schema_test.TestDB.testListSubclassClone": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertIsInstance", "caffe2.python.schema.List.clone", "caffe2.python.schema.List.__init__", "caffe2.python.schema.Scalar", "unittest.TestCase.assertIsNot"], "caffe2.python.schema.List.__init__": [], "caffe2.python.schema.List.clone": [], "unittest.TestCase.assertIsInstance": [], "unittest.TestCase.assertEqual": [], "unittest.TestCase.assertIsNot": [], "schema_test.TestDB.testListWithEvictedSubclassClone": ["caffe2.python.schema.ListWithEvicted.clone", "unittest.TestCase.assertEqual", "unittest.TestCase.assertIsInstance", "caffe2.python.schema.ListWithEvicted.__init__", "caffe2.python.schema.Scalar", "unittest.TestCase.assertIsNot"], "caffe2.python.schema.ListWithEvicted.__init__": [], "caffe2.python.schema.ListWithEvicted.clone": [], "schema_test.TestDB.testStructSubclassClone": ["unittest.TestCase.assertEqual", "caffe2.python.schema.Struct.clone", "unittest.TestCase.assertIsInstance", "caffe2.python.schema.Struct.__init__", "caffe2.python.schema.Scalar", "unittest.TestCase.assertIsNot"], "caffe2.python.schema.Struct.__init__": [], "caffe2.python.schema.Struct.clone": [], "schema_test.TestDB.testNormalizeField": ["caffe2.python.schema.Struct", "caffe2.python.schema.Scalar", "unittest.TestCase.assertEquals"], "unittest.TestCase.assertEquals": [], "schema_test.TestDB.testTuple": ["caffe2.python.schema.Struct", "unittest.TestCase.assertEquals", "<builtin>.enumerate", "caffe2.python.schema.Tuple", "caffe2.python.schema.Scalar", "<builtin>.zip"], "caffe2.python.schema.Tuple": [], "<builtin>.zip": [], "<builtin>.enumerate": [], "schema_test.TestDB.testRawTuple": ["caffe2.python.schema.Struct", "caffe2.python.schema.RawTuple", "caffe2.python.schema.Scalar", "unittest.TestCase.assertEquals"], "caffe2.python.schema.RawTuple": [], "schema_test.TestDB.testStructIndexing": ["caffe2.python.schema.Struct", "caffe2.python.schema.Scalar", "caffe2.python.schema.List", "unittest.TestCase.assertEquals"], "schema_test.TestDB.testListInStructIndexing": ["unittest.TestCase.assertRaises", "caffe2.python.schema.Struct", "caffe2.python.schema.List", "unittest.TestCase.assertEquals", "caffe2.python.schema.Scalar"], "unittest.TestCase.assertRaises": [], "schema_test.TestDB.testListWithEvictedInStructIndexing": ["caffe2.python.schema.ListWithEvicted", "unittest.TestCase.assertRaises", "caffe2.python.schema.Struct", "unittest.TestCase.assertEquals", "caffe2.python.schema.Scalar"], "caffe2.python.schema.ListWithEvicted": [], "schema_test.TestDB.testMapInStructIndexing": ["unittest.TestCase.assertRaises", "caffe2.python.schema.Struct", "caffe2.python.schema.Map", "unittest.TestCase.assertEquals", "caffe2.python.schema.Scalar"], "caffe2.python.schema.Map": [], "schema_test.TestDB.testPreservesMetadata": ["numpy.array", "caffe2.python.schema.Metadata", "caffe2.python.schema.from_blob_list", "unittest.TestCase.assertEqual", "caffe2.python.schema.Struct", "caffe2.python.schema.List", "caffe2.python.schema.Scalar"], "caffe2.python.schema.Metadata": [], "numpy.array": [], "caffe2.python.schema.from_blob_list": [], "schema_test.TestDB.testDupField": ["caffe2.python.schema.Struct", "unittest.TestCase.assertRaises", "caffe2.python.schema.Scalar"], "schema_test.TestDB.testAssignToField": ["caffe2.python.schema.Struct", "unittest.TestCase.assertRaises", "caffe2.python.schema.Scalar"], "schema_test.TestDB.testPreservesEmptyFields": ["numpy.array", "caffe2.python.schema.from_blob_list", "unittest.TestCase.assertEqual", "caffe2.python.schema.Struct", "<builtin>.len", "unittest.TestCase.assertIn", "caffe2.python.schema.Scalar"], "unittest.TestCase.assertIn": [], "<builtin>.len": [], "schema_test.TestDB.testStructSubstraction": ["caffe2.python.schema.Struct", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "caffe2.python.schema.Scalar"], "schema_test.TestDB.testStructNestedSubstraction": ["caffe2.python.schema.Struct", "unittest.TestCase.assertEqual", "caffe2.python.schema.Scalar"], "schema_test.TestDB.testStructAddition": ["caffe2.python.schema.Struct", "unittest.TestCase.assertIn", "unittest.TestCase.assertRaises", "caffe2.python.schema.Scalar"], "schema_test.TestDB.testStructNestedAddition": ["caffe2.python.schema.Struct", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "caffe2.python.schema.Scalar"], "schema_test.TestDB.testGetFieldByNestedName": ["unittest.TestCase.assertRaises", "caffe2.python.schema.Struct", "unittest.TestCase.assertIn", "unittest.TestCase.assertTrue", "<builtin>.isinstance", "caffe2.python.schema.Scalar"], "schema_test.TestDB.testAddFieldByNestedName": ["unittest.TestCase.assertRaises", "unittest.TestCase.assertEqual", "caffe2.python.schema.Struct", "caffe2.python.schema.Scalar", "caffe2.python.core.BlobReference"], "caffe2.python.core.BlobReference": [], "schema_test.TestDB.testContains": ["caffe2.python.schema.Struct", "unittest.TestCase.assertTrue", "caffe2.python.schema.Scalar", "unittest.TestCase.assertFalse"], "unittest.TestCase.assertFalse": [], "schema_test.TestDB.testFromEmptyColumnList": ["unittest.TestCase.assertEqual", "caffe2.python.schema.Struct", "caffe2.python.schema.from_column_list"], "caffe2.python.schema.from_column_list": [], "schema_test.TestDB.testFromColumnList": ["<builtin>.sorted", "caffe2.python.schema.from_column_list", "unittest.TestCase.assertEqual", "caffe2.python.schema.Struct", "caffe2.python.schema.Map", "caffe2.python.schema.List", "random.shuffle", "unittest.TestCase.assertTrue", "<builtin>.str", "<builtin>.range", "caffe2.python.schema.Scalar", "caffe2.python.core.BlobReference"], "<builtin>.range": [], "<builtin>.sorted": [], "<builtin>.str": [], "random.shuffle": [], "schema_test.TestDB.testStructGet": ["caffe2.python.schema.NewRecord", "caffe2.python.schema.Scalar", "caffe2.python.core.Net", "caffe2.python.schema.Tuple"], "caffe2.python.core.Net": [], "caffe2.python.schema.NewRecord": [], "schema_test.TestDB.testScalarForVoidType": ["unittest.TestCase.assertRaises", "caffe2.python.schema.Scalar"], "schema_test.TestDB.testScalarShape": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "caffe2.python.schema.Scalar"], "schema_test.TestDB.testDtypeForCoreType": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "caffe2.python.schema.dtype_for_core_type"], "caffe2.python.schema.dtype_for_core_type": []}