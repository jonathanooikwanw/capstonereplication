{"sinusoid_position_encoding_op_test": [], "hypothesis.strategies.integers": [], "sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp": ["hypothesis.strategies.floats", "hypothesis.settings", "caffe2.python.hypothesis_test_util.arrays", "hypothesis.strategies.integers", "hypothesis.given"], "caffe2.python.hypothesis_test_util.arrays": [], "hypothesis.strategies.floats": [], "hypothesis.given": [], "hypothesis.settings": [], "sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp.test_sinusoid_embedding": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator", "numpy.tile"], "numpy.tile": [], "caffe2.python.core.CreateOperator": [], "sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp.test_sinusoid_embedding.sinusoid_encoding": ["math.pow", "math.cos", "math.sin"], "math.pow": [], "math.sin": [], "math.cos": [], "sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp.test_sinusoid_embedding.sinusoid_embedding_op": ["numpy.zeros", "sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp.test_sinusoid_embedding.sinusoid_encoding", "<builtin>.enumerate", "<builtin>.len", "<builtin>.range"], "<builtin>.len": [], "numpy.zeros": [], "<builtin>.enumerate": [], "<builtin>.range": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": []}