{"benchmark_all_other_test": ["benchmark_runner.main"], "benchmark_runner.main": ["benchmark_core.BenchmarkRunner.__init__", "benchmark_core.BenchmarkRunner.run", "benchmark_runner.parse_args"], "pt": [], "pt.pool_test": ["operator_benchmark.generate_pt_tests_from_op_list", "operator_benchmark.op_list", "benchmark_runner.main", "operator_benchmark.cross_product_configs", "operator_benchmark.config_list"], "operator_benchmark.config_list": [], "operator_benchmark.cross_product_configs": [], "operator_benchmark.op_list": [], "pt.pool_test.Pool1dBenchmark.init": ["torch.rand"], "torch.rand": [], "pt.pool_test.Pool1dBenchmark.forward": [], "operator_benchmark.generate_pt_tests_from_op_list": [], "pt.pool_test.<list25>.<list3>.<lambda1>": [], "torch.nn.AdaptiveMaxPool2d": [], "pt.pool_test.<lambda1>": ["torch.nn.FractionalMaxPool3d", "torch.nn.FractionalMaxPool2d", "torch.nn.AdaptiveMaxPool2d", "torch.nn.AdaptiveMaxPool3d"], "pt.pool_test.<list25>.<list4>.<lambda1>": [], "torch.nn.FractionalMaxPool2d": [], "pt.pool_test.Pool2dBenchmark.init": ["torch.rand"], "pt.pool_test.Pool2dBenchmark.forward": [], "pt.pool_test.<list39>.<list3>.<lambda1>": [], "torch.nn.AdaptiveMaxPool3d": [], "pt.pool_test.<list39>.<list4>.<lambda1>": [], "torch.nn.FractionalMaxPool3d": [], "pt.pool_test.Pool3dBenchmark.init": ["torch.rand"], "pt.pool_test.Pool3dBenchmark.forward": [], "operator_benchmark": [], "benchmark_runner": ["benchmark_runner.main", "argparse.ArgumentParser"], "argparse.ArgumentParser": [], "benchmark_runner.parse_args": ["torch.set_num_threads", "benchmark_utils.is_pytorch_enabled", "benchmark_utils.set_mkl_threads", "benchmark_utils.set_omp_threads"], "benchmark_utils.set_omp_threads": ["<builtin>.str", "<builtin>.print", "os.environ.get"], "benchmark_utils.is_pytorch_enabled": [], "torch.set_num_threads": [], "benchmark_utils.set_mkl_threads": ["<builtin>.str", "<builtin>.print", "os.environ.get"], "benchmark_core.BenchmarkRunner.__init__": ["benchmark_utils.get_operator_range"], "benchmark_core.BenchmarkRunner.run": ["benchmark_core.BenchmarkRunner._launch_backward", "benchmark_core.BenchmarkRunner._print_header", "<builtin>.hash", "benchmark_core.BenchmarkRunner._print_perf_result", "benchmark_core.BenchmarkRunner._keep_test", "numpy.random.seed", "benchmark_core.BenchmarkRunner._print_test_case_info", "benchmark_core._build_test", "benchmark_core.BenchmarkRunner._measure_time", "benchmark_core.BenchmarkRunner._launch_forward", "<builtin>.print", "<builtin>.range"], "benchmark_utils": [], "benchmark_utils.shape_to_string": ["<builtin>.str"], "<builtin>.str": [], "benchmark_utils.str2bool": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "benchmark_utils.numpy_random": ["numpy.random.rand"], "numpy.random.rand": [], "os.environ.get": [], "<builtin>.print": [], "benchmark_utils.cross_product": ["<builtin>.list", "itertools.product"], "itertools.product": [], "<builtin>.list": [], "benchmark_utils.get_n_rand_nums": ["<builtin>.range", "random.seed", "random.sample"], "random.seed": [], "<builtin>.range": [], "random.sample": [], "benchmark_utils.generate_configs": [], "benchmark_utils.cross_product_configs": ["<builtin>.list", "benchmark_utils._validate", "itertools.product"], "benchmark_utils._validate": [], "benchmark_utils.config_list": ["benchmark_utils.cross_product_configs", "<builtin>.ValueError", "benchmark_utils._validate", "<builtin>.list", "<builtin>.any", "<builtin>.enumerate"], "<builtin>.any": [], "<builtin>.ValueError": [], "<builtin>.enumerate": [], "benchmark_utils.attr_probs": [], "benchmark_utils.RandomSample.__init__": [], "benchmark_utils.RandomSample._distribution_func": ["<builtin>.sum"], "<builtin>.sum": [], "benchmark_utils.RandomSample._random_sample": ["benchmark_utils.RandomSample._distribution_func", "random.random", "<builtin>.len", "bisect.bisect"], "<builtin>.len": [], "random.random": [], "bisect.bisect": [], "benchmark_utils.RandomSample.get_one_set_of_inputs": ["<builtin>.str", "benchmark_utils.RandomSample._random_sample"], "benchmark_utils.random_sample_configs": ["benchmark_utils.RandomSample.__init__", "benchmark_utils.RandomSample.get_one_set_of_inputs", "<builtin>.range", "<builtin>.ValueError"], "benchmark_utils.op_list": ["<builtin>.enumerate", "<builtin>.ValueError"], "benchmark_utils.is_caffe2_enabled": [], "benchmark_utils.get_operator_range": ["<builtin>.ord", "<builtin>.chr", "<builtin>.set", "<builtin>.ValueError", "<builtin>.len", "<builtin>.all", "<builtin>.range"], "<builtin>.all": [], "<builtin>.set": [], "<builtin>.ord": [], "<builtin>.chr": [], "benchmark_utils.process_arg_list": ["<builtin>.len"], "benchmark_core": ["collections.namedtuple"], "collections.namedtuple": [], "benchmark_core._register_test": [], "benchmark_core._create_test": ["<builtin>.str", "ast.literal_eval", "json.dumps", "copy.deepcopy"], "copy.deepcopy": [], "json.dumps": [], "ast.literal_eval": [], "benchmark_core._build_test": ["<builtin>.str", "<builtin>.vars", "copy.deepcopy", "<builtin>.ValueError", "<builtin>.isinstance", "torch.cuda.is_available", "benchmark_core._create_test", "<builtin>.range"], "torch.cuda.is_available": [], "<builtin>.vars": [], "benchmark_core.BenchmarkRunner._print_header": ["<builtin>.print", "<builtin>.set"], "benchmark_core.BenchmarkRunner._print_perf_result": ["json.dumps", "<builtin>.print", "<builtin>.range"], "benchmark_core.BenchmarkRunner._predict_num_iter_needed": [], "benchmark_core.BenchmarkRunner._iteration_result_is_significant": [], "benchmark_core.BenchmarkRunner._launch_forward": ["functools.partial", "timeit.timeit"], "functools.partial": [], "timeit.timeit": [], "benchmark_core.BenchmarkRunner._launch_backward": ["functools.partial", "timeit.timeit"], "benchmark_core.BenchmarkRunner._measure_time": ["benchmark_core.BenchmarkRunner._launch_backward", "benchmark_core.BenchmarkRunner._iteration_result_is_significant", "numpy.array", "benchmark_core.BenchmarkRunner._predict_num_iter_needed", "json.dumps", "numpy.percentile", "benchmark_core.BenchmarkRunner._launch_forward", "<builtin>.print"], "numpy.array": [], "numpy.percentile": [], "benchmark_core.BenchmarkRunner._check_keep": [], "benchmark_core.BenchmarkRunner._check_operator_first_char": [], "benchmark_core.BenchmarkRunner._check_keep_list": ["<builtin>.any"], "benchmark_core.BenchmarkRunner._keep_test": ["benchmark_core.BenchmarkRunner._check_keep", "benchmark_core.BenchmarkRunner._check_operator_first_char", "benchmark_core.BenchmarkRunner._check_keep_list", "benchmark_utils.process_arg_list"], "benchmark_core.BenchmarkRunner._print_test_case_info": ["<builtin>.print"], "<builtin>.hash": [], "numpy.random.seed": [], "benchmark_test_generator": [], "benchmark_test_generator.generate_pt_test": ["benchmark_core._register_test"], "benchmark_test_generator.generate_pt_gradient_test": ["benchmark_core._register_test"], "benchmark_test_generator.generate_pt_tests_from_op_list": ["benchmark_core._register_test"], "benchmark_test_generator.generate_pt_gradient_tests_from_op_list": ["benchmark_core._register_test"], "benchmark_pytorch": [], "TorchBenchmarkBase.__init__": ["<builtin>.super"], "<builtin>.super": [], "TorchBenchmarkBase._set_backward_test": [], "TorchBenchmarkBase.auto_set": [], "TorchBenchmarkBase.extract_inputs_tuple": ["<builtin>.tuple"], "<builtin>.tuple": [], "benchmark_pytorch.TorchBenchmarkBase": ["torch.jit.export"], "torch.jit.export": [], "TorchBenchmarkBase.get_inputs": [], "TorchBenchmarkBase.forward_impl": ["TorchBenchmarkBase.get_inputs", "torch.nn.Module.forward"], "torch.nn.Module.forward": [], "TorchBenchmarkBase.forward_consume": ["torch.ops.operator_benchmark._consume", "TorchBenchmarkBase.forward_impl", "<builtin>.range"], "torch.ops.operator_benchmark._consume": [], "TorchBenchmarkBase.module_name": [], "TorchBenchmarkBase.set_module_name": [], "TorchBenchmarkBase.test_name": ["<builtin>.str", "<builtin>.int", "TorchBenchmarkBase.module_name", "<builtin>.type", "torch.nn.Module.__class__.__name__.replace"], "<builtin>.type": [], "<builtin>.int": [], "torch.nn.Module.__class__.__name__.replace": [], "PyTorchOperatorTestCase.__init__": ["torch.ones"], "torch.ones": [], "PyTorchOperatorTestCase._generate_jit_forward_graph": ["torch.jit.script"], "torch.jit.script": [], "PyTorchOperatorTestCase.run_jit_forward": ["PyTorchOperatorTestCase._generate_jit_forward_graph"], "PyTorchOperatorTestCase._print_per_iter": ["<builtin>.min", "json.dumps", "<builtin>.len", "<builtin>.print", "<builtin>.range"], "<builtin>.min": [], "PyTorchOperatorTestCase.run_forward": ["torch.cuda.synchronize", "torch.cuda.current_device", "<builtin>.range", "time.time"], "time.time": [], "torch.cuda.current_device": [], "torch.cuda.synchronize": [], "PyTorchOperatorTestCase._output_mean": [], "PyTorchOperatorTestCase.run_backward": ["<builtin>.range"], "benchmark_pytorch.create_pytorch_op_test_case": ["<builtin>.str", "PyTorchOperatorTestCase.__init__"], "pt.hardsigmoid_test": ["operator_benchmark.generate_pt_tests_from_op_list", "operator_benchmark.op_list", "benchmark_runner.main", "operator_benchmark.cross_product_configs", "operator_benchmark.config_list"], "pt.hardsigmoid_test.HardsigmoidBenchmark.init": ["torch.rand"], "pt.hardsigmoid_test.HardsigmoidBenchmark.forward": [], "pt.groupnorm_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main"], "pt.groupnorm_test.GroupNormBenchmark.init": ["torch.rand"], "pt.groupnorm_test.GroupNormBenchmark.forward": ["torch.nn.functional.group_norm"], "torch.nn.functional.group_norm": [], "operator_benchmark.generate_pt_test": [], "pt.remainder_test": ["operator_benchmark.generate_pt_tests_from_op_list", "operator_benchmark.op_list", "benchmark_runner.main", "operator_benchmark.cross_product_configs", "operator_benchmark.config_list"], "pt.remainder_test.RemainderOpBenchmark.init": ["torch.rand"], "pt.remainder_test.RemainderOpBenchmark.forward": [], "pt.sum_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main"], "pt.sum_test.SumBenchmark.init": ["torch.rand", "torch.empty", "TorchBenchmarkBase.set_module_name"], "torch.empty": [], "pt.sum_test.SumBenchmark.forward": [], "pt.batchnorm_test": ["operator_benchmark.generate_pt_test", "benchmark_runner.main", "operator_benchmark.cross_product_configs", "operator_benchmark.generate_pt_gradient_test", "pt.batchnorm_test.cudnn_benchmark_configs", "operator_benchmark.config_list"], "pt.batchnorm_test.cudnn_benchmark_configs": ["<builtin>.dict", "<builtin>.any"], "<builtin>.dict": [], "pt.batchnorm_test.BatchNormBenchmark.init": ["TorchBenchmarkBase.auto_set", "torch.rand", "TorchBenchmarkBase.set_module_name"], "pt.batchnorm_test.BatchNormBenchmark.forward": ["torch.backends.cudnn.flags", "torch.nn.functional.batch_norm"], "torch.backends.cudnn.flags": [], "torch.nn.functional.batch_norm": [], "operator_benchmark.generate_pt_gradient_test": [], "pt.batchnorm_test.BatchNorm1dBenchmark.init": ["TorchBenchmarkBase.auto_set", "torch.rand", "TorchBenchmarkBase.set_module_name"], "pt.batchnorm_test.BatchNorm1dBenchmark.forward": ["torch.backends.cudnn.flags", "torch.nn.functional.batch_norm"], "pt.as_strided_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main", "operator_benchmark.config_list"], "pt.as_strided_test.As_stridedBenchmark.init": ["torch.rand", "TorchBenchmarkBase.set_module_name"], "pt.as_strided_test.As_stridedBenchmark.forward": ["torch.as_strided"], "torch.as_strided": [], "pt.split_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main", "operator_benchmark.config_list"], "pt.split_test.SplitBenchmark.init": ["torch.rand", "TorchBenchmarkBase.set_module_name", "<builtin>.int"], "pt.split_test.SplitBenchmark.forward": ["torch.split"], "torch.split": [], "pt.fill_test": ["operator_benchmark.generate_pt_test", "benchmark_runner.main", "operator_benchmark.cross_product_configs", "torch.testing.get_all_device_types", "operator_benchmark.config_list"], "torch.testing.get_all_device_types": [], "pt.fill_test.Fill_Benchmark.init": ["torch.zeros", "TorchBenchmarkBase.set_module_name"], "torch.zeros": [], "pt.fill_test.Fill_Benchmark.forward": [], "pt.cat_test": ["operator_benchmark.generate_pt_test", "benchmark_runner.main", "operator_benchmark.config_list"], "pt.cat_test.<list8>.<list4>.<list1>.<lambda1>": [], "random.randint": [], "pt.cat_test.<lambda1>": ["random.randint"], "pt.cat_test.<list8>.<list5>.<list1>.<lambda1>": [], "pt.cat_test.<list8>.<list6>.<list1>.<lambda1>": [], "pt.cat_test.<list8>.<list7>.<list1>.<lambda1>": [], "pt.cat_test.<list8>.<list8>.<list1>.<lambda1>": [], "pt.cat_test.<list8>.<list9>.<list1>.<lambda1>": [], "pt.cat_test.<list14>.<list1>.<list1>.<lambda1>": [], "pt.cat_test.<list14>.<list2>.<list1>.<lambda1>": [], "pt.cat_test.<list14>.<list3>.<list1>.<lambda1>": [], "pt.cat_test.<list14>.<list4>.<list1>.<lambda1>": [], "pt.cat_test.CatBenchmark.init": ["torch.rand", "random.seed", "TorchBenchmarkBase.set_module_name", "<builtin>.callable", "torch.empty", "<builtin>.type", "<builtin>.range"], "<builtin>.callable": [], "pt.cat_test.CatBenchmark.forward": ["torch.cat"], "torch.cat": [], "pt.tensor_to_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main"], "pt.tensor_to_test.FloatToHalfTensorConversionBenchmark.init": ["torch.rand"], "pt.tensor_to_test.FloatToHalfTensorConversionBenchmark.forward": [], "pt.tensor_to_test.HalfToFloatTensorConversionBenchmark.init": ["torch.rand"], "pt.tensor_to_test.HalfToFloatTensorConversionBenchmark.forward": [], "pt.matmul_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main", "operator_benchmark.config_list"], "pt.matmul_test.MatMulBenchmark.init": ["torch.rand", "TorchBenchmarkBase.set_module_name"], "pt.matmul_test.MatMulBenchmark.forward": ["torch.matmul"], "torch.matmul": [], "pt.linear_test": ["operator_benchmark.generate_pt_test", "benchmark_runner.main"], "pt.linear_test.LinearBenchmark.init": ["torch.rand", "torch.nn.Linear", "TorchBenchmarkBase.set_module_name"], "torch.nn.Linear": [], "pt.linear_test.LinearBenchmark.forward": [], "pt.configs": ["operator_benchmark.cross_product_configs", "operator_benchmark.config_list"], "pt.configs.remove_cuda": [], "pt.layernorm_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main"], "pt.layernorm_test.LayerNormBenchmark.init": ["torch.rand"], "pt.layernorm_test.LayerNormBenchmark.forward": ["torch.nn.functional.layer_norm"], "torch.nn.functional.layer_norm": [], "pt.embeddingbag_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.generate_pt_gradient_test", "benchmark_runner.main"], "pt.embeddingbag_test.EmbeddingBagBenchmark.init": ["torch.tensor", "torch.cat", "torch.LongTensor", "numpy.random.seed", "TorchBenchmarkBase.set_module_name", "torch.nn.EmbeddingBag", "numpy.random.randint"], "torch.nn.EmbeddingBag": [], "torch.LongTensor": [], "numpy.random.randint": [], "torch.tensor": [], "pt.embeddingbag_test.EmbeddingBagBenchmark.forward": [], "pt.instancenorm_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main"], "pt.instancenorm_test.InstanceNormBenchmark.init": ["torch.rand"], "pt.instancenorm_test.InstanceNormBenchmark.forward": ["torch.nn.functional.instance_norm"], "torch.nn.functional.instance_norm": [], "pt.gather_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main", "operator_benchmark.config_list"], "pt.gather_test.GatherBenchmark.init": ["torch.rand", "torch.tensor", "numpy.random.seed", "TorchBenchmarkBase.set_module_name", "numpy.random.randint"], "pt.gather_test.GatherBenchmark.forward": ["torch.gather"], "torch.gather": [], "pt.chunk_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main", "operator_benchmark.config_list"], "pt.chunk_test.ChunkBenchmark.init": ["torch.rand", "TorchBenchmarkBase.set_module_name"], "pt.chunk_test.ChunkBenchmark.forward": ["torch.chunk"], "torch.chunk": [], "pt.interpolate_test": ["operator_benchmark.generate_pt_test", "benchmark_runner.main", "operator_benchmark.config_list"], "pt.interpolate_test.InterpolateBenchmark.init": ["TorchBenchmarkBase.auto_set", "torch.randint", "TorchBenchmarkBase.set_module_name", "<builtin>.ValueError"], "torch.randint": [], "pt.interpolate_test.InterpolateBenchmark.forward": ["torch.nn.functional.interpolate"], "torch.nn.functional.interpolate": [], "pt.hardswish_test": ["operator_benchmark.generate_pt_tests_from_op_list", "operator_benchmark.op_list", "benchmark_runner.main", "operator_benchmark.cross_product_configs", "operator_benchmark.config_list"], "pt.hardswish_test.HardswishBenchmark.init": ["torch.rand"], "pt.hardswish_test.HardswishBenchmark.forward": [], "pt.binary_test": ["operator_benchmark.generate_pt_tests_from_op_list", "operator_benchmark.op_list", "benchmark_runner.main", "operator_benchmark.cross_product_configs", "operator_benchmark.config_list"], "pt.binary_test.BinaryOpBcastBenchmark.init": ["torch.randn"], "torch.randn": [], "pt.binary_test.BinaryOpBcastBenchmark.forward": [], "pt.binary_test.copy": [], "pt.binary_test.BinaryOpBenchmark.init": ["torch.randn"], "pt.binary_test.BinaryOpBenchmark.forward": [], "pt.nan_to_num_test": ["operator_benchmark.generate_pt_tests_from_op_list", "operator_benchmark.op_list", "benchmark_runner.main", "operator_benchmark.cross_product_configs", "<builtin>.range"], "pt.nan_to_num_test.ReplaceNaNBenchmark.init": ["torch.randn", "TorchBenchmarkBase.set_module_name", "<builtin>.float"], "<builtin>.float": [], "pt.nan_to_num_test.ReplaceNaNBenchmark.forward": [], "pt.conv_test": ["operator_benchmark.generate_pt_test", "benchmark_runner.main"], "pt.conv_test.Conv1dBenchmark.init": ["TorchBenchmarkBase.auto_set", "torch.rand", "TorchBenchmarkBase.set_module_name", "torch.nn.Conv1d"], "torch.nn.Conv1d": [], "pt.conv_test.Conv1dBenchmark.forward": [], "pt.conv_test.ConvTranspose1dBenchmark.init": ["torch.rand", "TorchBenchmarkBase.set_module_name", "torch.nn.ConvTranspose1d"], "torch.nn.ConvTranspose1d": [], "pt.conv_test.ConvTranspose1dBenchmark.forward": [], "pt.conv_test.Conv2dBenchmark.init": ["torch.nn.Conv2d", "torch.rand", "TorchBenchmarkBase.set_module_name"], "torch.nn.Conv2d": [], "pt.conv_test.Conv2dBenchmark.forward": [], "pt.conv_test.ConvTranspose2dBenchmark.init": ["torch.rand", "torch.nn.ConvTranspose2d", "TorchBenchmarkBase.set_module_name"], "torch.nn.ConvTranspose2d": [], "pt.conv_test.ConvTranspose2dBenchmark.forward": [], "pt.conv_test.Conv3dBenchmark.init": ["torch.rand", "torch.nn.Conv3d", "TorchBenchmarkBase.set_module_name"], "torch.nn.Conv3d": [], "pt.conv_test.Conv3dBenchmark.forward": [], "pt.conv_test.ConvTranspose3dBenchmark.init": ["torch.nn.ConvTranspose3d", "torch.rand", "TorchBenchmarkBase.set_module_name"], "torch.nn.ConvTranspose3d": [], "pt.conv_test.ConvTranspose3dBenchmark.forward": [], "pt.channel_shuffle_test": ["operator_benchmark.generate_pt_test", "operator_benchmark.cross_product_configs", "benchmark_runner.main", "operator_benchmark.config_list"], "pt.channel_shuffle_test.ChannelSHuffleBenchmark.init": ["torch.rand", "TorchBenchmarkBase.set_module_name"], "pt.channel_shuffle_test.ChannelSHuffleBenchmark.forward": ["torch.channel_shuffle"], "torch.channel_shuffle": [], "pt.diag_test": ["operator_benchmark.generate_pt_test", "benchmark_runner.main", "operator_benchmark.config_list"], "pt.diag_test.DiagBenchmark.init": ["torch.rand", "torch.tensor", "TorchBenchmarkBase.set_module_name"], "pt.diag_test.DiagBenchmark.forward": ["torch.diag"], "torch.diag": [], "pt.add_test": ["operator_benchmark.generate_pt_test", "benchmark_runner.main", "operator_benchmark.cross_product_configs", "operator_benchmark.generate_pt_gradient_test", "operator_benchmark.config_list"], "pt.add_test.AddBenchmark.init": ["TorchBenchmarkBase.auto_set", "torch.rand", "TorchBenchmarkBase.set_module_name"], "pt.add_test.AddBenchmark.forward": ["torch.add"], "torch.add": [], "pt.add_test.AddmmBenchmark.init": ["TorchBenchmarkBase.auto_set", "torch.rand", "TorchBenchmarkBase.set_module_name"], "pt.add_test.AddmmBenchmark.forward": ["torch.addmm"], "torch.addmm": [], "pt.add_test.AddrBenchmark.init": ["TorchBenchmarkBase.auto_set", "torch.rand", "TorchBenchmarkBase.set_module_name"], "pt.add_test.AddrBenchmark.forward": ["torch.addr"], "torch.addr": [], "pt.add_test.AddbmmBenchmark.init": ["TorchBenchmarkBase.auto_set", "torch.rand", "TorchBenchmarkBase.set_module_name"], "pt.add_test.AddbmmBenchmark.forward": ["torch.addbmm"], "torch.addbmm": [], "pt.softmax_test": ["operator_benchmark.generate_pt_tests_from_op_list", "operator_benchmark.op_list", "benchmark_runner.main", "operator_benchmark.cross_product_configs", "operator_benchmark.config_list"], "pt.softmax_test.SoftmaxBenchmark.init": ["torch.rand"], "pt.softmax_test.SoftmaxBenchmark.forward": []}