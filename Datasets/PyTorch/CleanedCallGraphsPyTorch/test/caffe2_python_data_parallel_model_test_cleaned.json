{"data_parallel_model_test": ["caffe2.python.dyndep.InitOpsLibrary", "unittest.main"], "caffe2.python.dyndep.InitOpsLibrary": [], "data_parallel_model_test.TemporaryDirectory.__enter__": ["tempfile.mkdtemp"], "tempfile.mkdtemp": [], "data_parallel_model_test.TemporaryDirectory.__exit__": ["shutil.rmtree"], "shutil.rmtree": [], "data_parallel_model_test.DataParallelModelTest.run_model": ["caffe2.python.data_parallel_model.GetLearningRateBlobNames", "caffe2.python.workspace.FetchBlob", "<builtin>.len", "<builtin>.range", "caffe2.python.data_parallel_model.Parallelize", "caffe2.python.test_util.TestCase.assertGreater", "numpy.random.seed", "caffe2.python.workspace.FeedBlob", "numpy.random.rand", "caffe2.python.cnn.CNNModelHelper", "caffe2.python.workspace.ResetWorkspace", "caffe2.python.core.DeviceOption", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.RunNet", "numpy.array", "numpy.round", "<builtin>.abs", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.data_parallel_model.AddBlobSync", "caffe2.python.core.DeviceScope", "<builtin>.enumerate", "caffe2.python.workspace.CreateNet"], "data_parallel_model_test.DataParallelModelTest.run_model.input_builder_fun": [], "data_parallel_model_test.DataParallelModelTest.run_model.model_build_fun": [], "data_parallel_model_test.DataParallelModelTest.run_model.add_optimizer": ["caffe2.python.optimizer.build_sgd"], "caffe2.python.optimizer.build_sgd": [], "caffe2.python.workspace.ResetWorkspace": [], "caffe2.python.cnn.CNNModelHelper": [], "caffe2.python.data_parallel_model.Parallelize": [], "caffe2.python.data_parallel_model.AddBlobSync": [], "caffe2.python.data_parallel_model.GetLearningRateBlobNames": [], "<builtin>.len": [], "caffe2.python.test_util.TestCase.assertGreater": [], "numpy.random.seed": [], "<builtin>.range": [], "numpy.random.rand": [], "numpy.round": [], "<builtin>.enumerate": [], "caffe2.python.core.DeviceOption": [], "caffe2.python.core.DeviceScope": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.workspace.RunNetOnce": [], "caffe2.python.workspace.CreateNet": [], "numpy.array": [], "caffe2.python.workspace.RunNet": [], "caffe2.python.workspace.FetchBlob": [], "<builtin>.abs": [], "caffe2.python.test_util.TestCase.assertTrue": [], "data_parallel_model_test.DataParallelModelTest.run_test_locally": ["<builtin>.range", "<builtin>.len", "multiprocessing.Process", "multiprocessing.Queue"], "multiprocessing.Queue": [], "data_parallel_model_test.DataParallelModelTest.run_test_locally.run_fn": ["data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run", "caffe2.python.workspace.ResetWorkspace", "caffe2.python.core.DeviceScope", "data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run"], "data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run": ["caffe2.python.data_parallel_model.RunInitNet", "time.sleep", "caffe2.python.core.CreateOperator", "caffe2.python.cnn.CNNModelHelper", "caffe2.python.workspace.ResetWorkspace", "caffe2.python.data_parallel_model.Parallelize_CPU", "caffe2.python.workspace.RunOperatorOnce", "<builtin>.dict", "caffe2.python.data_parallel_model.RunNet"], "data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run": ["caffe2.python.data_parallel_model.Synchronize", "caffe2.python.data_parallel_model.RunInitNet", "caffe2.python.core.CreateOperator", "caffe2.python.cnn.CNNModelHelper", "<builtin>.range", "caffe2.python.workspace.RunOperatorOnce", "<builtin>.dict", "caffe2.python.data_parallel_model.Parallelize_CPU"], "multiprocessing.Process": [], "data_parallel_model_test.DataParallelModelTest.test_equiv": ["caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.workspace.NumCudaDevices", "numpy.allclose", "data_parallel_model_test.DataParallelModelTest.run_model", "<builtin>.range", "<builtin>.list"], "caffe2.python.workspace.NumCudaDevices": [], "numpy.allclose": [], "<builtin>.list": [], "data_parallel_model_test.DataParallelModelTest.test_checkpoint_params": ["caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.core.BlobReference", "caffe2.python.cnn.CNNModelHelper", "caffe2.python.test_util.TestCase.assertFalse", "caffe2.python.data_parallel_model.Parallelize_CPU", "caffe2.python.data_parallel_model.GetCheckpointParams"], "data_parallel_model_test.DataParallelModelTest.test_checkpoint_params.add_input_ops": [], "data_parallel_model_test.DataParallelModelTest.test_checkpoint_params.add_model_ops": [], "data_parallel_model_test.DataParallelModelTest.test_checkpoint_params.add_optimizer": ["caffe2.python.optimizer.build_sgd"], "caffe2.python.data_parallel_model.Parallelize_CPU": [], "caffe2.python.data_parallel_model.GetCheckpointParams": [], "caffe2.python.test_util.TestCase.assertFalse": [], "caffe2.python.core.BlobReference": [], "data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net": ["caffe2.python.workspace.CreateNet", "caffe2.python.cnn.CNNModelHelper", "<builtin>.range", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.RunNet", "caffe2.python.brew.fc", "caffe2.python.data_parallel_model.Parallelize_CPU", "caffe2.python.model_helper.ModelHelper"], "caffe2.python.model_helper.ModelHelper": [], "caffe2.python.brew.fc": [], "data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net.add_input_ops": [], "data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net.add_model_ops": ["caffe2.python.data_parallel_model.ConvertNetForDevice"], "caffe2.python.data_parallel_model.ConvertNetForDevice": [], "data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net.add_optimizer": ["caffe2.python.optimizer.build_sgd"], "unittest.skip": [], "data_parallel_model_test.DataParallelModelTest": ["hypothesis.strategies.integers", "caffe2.python.workspace.NumCudaDevices", "unittest.skip", "hypothesis.settings", "hypothesis.given", "unittest.skipIf"], "data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier": ["data_parallel_model_test.DataParallelModelTest.run_test_locally"], "data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run.add_input_ops": [], "data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run.add_model_ops": [], "data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run.add_optimizer": [], "caffe2.python.core.CreateOperator": [], "caffe2.python.workspace.RunOperatorOnce": [], "<builtin>.dict": [], "caffe2.python.data_parallel_model.RunInitNet": [], "caffe2.python.data_parallel_model.Synchronize": [], "data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier": ["data_parallel_model_test.DataParallelModelTest.run_test_locally"], "data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run.add_input_ops": [], "data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run.add_model_ops": [], "data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run.add_optimizer": [], "caffe2.python.data_parallel_model.RunNet": [], "time.sleep": [], "data_parallel_model_test.DataParallelModelTest.test_device_scope_check": ["caffe2.python.data_parallel_model.Parallelize_GPU", "caffe2.python.test_util.TestCase.assertRaises", "caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope"], "caffe2.python.test_util.TestCase.assertRaises": [], "caffe2.python.data_parallel_model.Parallelize_GPU": [], "data_parallel_model_test.DataParallelModelTest.test_net_transformer_function": ["caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.test_util.TestCase.assertEqual", "mock.Mock", "caffe2.python.data_parallel_model.Parallelize_CPU", "caffe2.python.model_helper.ModelHelper"], "data_parallel_model_test.DataParallelModelTest.test_net_transformer_function.add_input_ops": [], "data_parallel_model_test.DataParallelModelTest.test_net_transformer_function.add_optimizer": ["caffe2.python.optimizer.build_sgd"], "data_parallel_model_test.DataParallelModelTest.test_net_transformer_function.add_model_ops": ["caffe2.python.brew.fc"], "mock.Mock": [], "caffe2.python.test_util.TestCase.assertEqual": [], "hypothesis.strategies.integers": [], "hypothesis.given": [], "hypothesis.settings": [], "data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_op_level_cpu": ["data_parallel_model_test.DataParallelModelTest._bn_check_op_level"], "data_parallel_model_test.DataParallelModelTest._bn_check_op_level": ["numpy.random.seed", "caffe2.python.workspace.FetchBlob", "data_parallel_model_test.DataParallelModelTest._bn_check_op_level._test_forward_pass", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.ResetWorkspace", "caffe2.python.cnn.CNNModelHelper", "caffe2.python.data_parallel_model.Parallelize", "numpy.array", "data_parallel_model_test.DataParallelModelTest._bn_check_op_level._test_backward_pass"], "unittest.skipIf": [], "data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_op_level_gpu": ["data_parallel_model_test.DataParallelModelTest._bn_check_op_level"], "data_parallel_model_test.DataParallelModelTest._bn_check_op_level._test_forward_pass": ["numpy.mean", "caffe2.python.test_util.TestCase.assertTrue", "numpy.var", "caffe2.python.workspace.FetchBlob", "numpy.linalg.norm", "numpy.concatenate", "numpy.sqrt"], "numpy.concatenate": [], "numpy.mean": [], "numpy.var": [], "numpy.sqrt": [], "numpy.linalg.norm": [], "data_parallel_model_test.DataParallelModelTest._bn_check_op_level._test_backward_pass": ["caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.workspace.FetchBlob", "<builtin>.len", "numpy.sum", "numpy.array", "numpy.isclose"], "numpy.sum": [], "numpy.isclose": [], "data_parallel_model_test.DataParallelModelTest._bn_check_op_level.add_input_ops": ["caffe2.python.workspace.FeedBlob", "numpy.random.rand"], "data_parallel_model_test.DataParallelModelTest._bn_check_op_level.add_model_ops": [], "data_parallel_model_test.DataParallelModelTest._bn_check_op_level.add_optimizer": ["caffe2.python.optimizer.build_sgd"], "data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_net_lvl_cpu": ["data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl"], "data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl": ["numpy.random.seed", "caffe2.python.workspace.FetchBlob", "numpy.random.rand", "data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._verify_bn_outputs", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.ResetWorkspace", "numpy.reshape", "data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model"], "data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_net_lvl_gpu": ["data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl"], "data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._verify_bn_outputs": ["caffe2.python.test_util.TestCase.assertTrue", "numpy.concatenate", "numpy.linalg.norm", "numpy.isclose"], "data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model": ["caffe2.python.data_parallel_model.Parallelize", "caffe2.python.cnn.CNNModelHelper"], "data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_input_ops_no_combine": ["caffe2.python.workspace.FeedBlob"], "data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_input_ops_combine": ["caffe2.python.workspace.FeedBlob", "<builtin>.int"], "<builtin>.int": [], "data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_model_ops": [], "data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_optimizer": ["caffe2.python.optimizer.build_sgd"], "numpy.reshape": [], "data_parallel_model_test.RecurrentNetworkParallelTest.run_model": ["numpy.random.seed", "caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope", "caffe2.python.workspace.FeedBlob", "caffe2.python.workspace.FetchBlob", "<builtin>.len", "numpy.random.rand", "caffe2.python.cnn.CNNModelHelper", "caffe2.python.workspace.ResetWorkspace", "<builtin>.range", "<builtin>.enumerate", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.RunNet", "caffe2.python.data_parallel_model.Parallelize", "caffe2.python.workspace.CreateNet"], "data_parallel_model_test.RecurrentNetworkParallelTest.run_model.input_builder_fun": [], "data_parallel_model_test.RecurrentNetworkParallelTest.run_model.model_build_fun": ["caffe2.python.core.ScopedBlobReference", "numpy.array", "caffe2.python.workspace.FeedBlob", "caffe2.python.rnn_cell.LSTM"], "caffe2.python.core.ScopedBlobReference": [], "caffe2.python.rnn_cell.LSTM": [], "data_parallel_model_test.RecurrentNetworkParallelTest.run_model.param_update_fun": ["<builtin>.len"], "data_parallel_model_test.RecurrentNetworkParallelTest": ["unittest.skip"], "data_parallel_model_test.RecurrentNetworkParallelTest.test_equiv_recurrent": ["caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.workspace.NumCudaDevices", "numpy.allclose", "<builtin>.list", "<builtin>.range", "data_parallel_model_test.RecurrentNetworkParallelTest.run_model"], "data_parallel_model_test.SparseDataParallelModelTest.run_model": ["numpy.allclose", "caffe2.python.core.NameScope", "caffe2.python.workspace.FetchBlob", "<builtin>.len", "<builtin>.range", "<builtin>.list", "<builtin>.set", "numpy.random.seed", "caffe2.python.workspace.FeedBlob", "numpy.random.rand", "caffe2.python.cnn.CNNModelHelper", "caffe2.python.workspace.ResetWorkspace", "numpy.random.permutation", "caffe2.python.test_util.TestCase.assertFalse", "caffe2.python.core.DeviceOption", "caffe2.python.data_parallel_model.Parallelize_GPU", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.RunNet", "caffe2.python.core.DeviceScope", "<builtin>.enumerate", "caffe2.python.workspace.CreateNet"], "data_parallel_model_test.SparseDataParallelModelTest.run_model.input_builder_fun": [], "data_parallel_model_test.SparseDataParallelModelTest.run_model.model_build_fun": ["caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope"], "data_parallel_model_test.SparseDataParallelModelTest.run_model.param_update_fun": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "caffe2.python.core.NameScope": [], "numpy.random.permutation": [], "<builtin>.set": [], "data_parallel_model_test.SparseDataParallelModelTest._test_equiv_sparse": ["caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.workspace.NumCudaDevices", "numpy.allclose", "data_parallel_model_test.SparseDataParallelModelTest.run_model", "<builtin>.range", "<builtin>.list"], "data_parallel_model_test.SparseDataParallelModelTest.test_equiv_sparse": ["data_parallel_model_test.SparseDataParallelModelTest._test_equiv_sparse"], "data_parallel_model_test.ParallelizeBMUFTest._run_model": [], "data_parallel_model_test.ParallelizeBMUFTest._run_model.input_builder_fun": [], "data_parallel_model_test.ParallelizeBMUFTest._model_build_fun": [], "data_parallel_model_test.ParallelizeBMUFTest._param_update_fun": [], "data_parallel_model_test.ParallelizeBMUFTest._generate_data": ["numpy.round", "numpy.random.seed", "caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope", "caffe2.python.workspace.FeedBlob", "<builtin>.len", "numpy.random.rand", "<builtin>.enumerate", "<builtin>.range"], "hypothesis.strategies.booleans": [], "data_parallel_model_test.ParallelizeBMUFTest": ["hypothesis.strategies.booleans", "hypothesis.settings", "hypothesis.given"], "data_parallel_model_test.ParallelizeBMUFTest.test_parallelize_bmuf": ["caffe2.python.test_util.TestCase.assertEqual", "caffe2.python.data_parallel_model.RunInitNet", "caffe2.python.workspace.FetchBlob", "caffe2.python.data_parallel_model.Parallelize_BMUF", "numpy.zeros", "caffe2.python.cnn.CNNModelHelper", "caffe2.python.workspace.ResetWorkspace", "future.utils.viewkeys", "caffe2.python.workspace.RunNetOnce", "data_parallel_model_test.ParallelizeBMUFTest._generate_data", "<builtin>.list", "hypothesis.assume", "numpy.testing.assert_equal", "caffe2.python.data_parallel_model.RunNet"], "hypothesis.assume": [], "data_parallel_model_test.ParallelizeBMUFTest.test_parallelize_bmuf.input_builder_fun": [], "caffe2.python.data_parallel_model.Parallelize_BMUF": [], "future.utils.viewkeys": [], "numpy.zeros": [], "numpy.testing.assert_equal": [], "data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model": ["<builtin>.zip", "numpy.random.seed", "caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope", "caffe2.python.core.NameScope", "caffe2.python.workspace.FeedBlob", "caffe2.python.workspace.FetchBlob", "<builtin>.len", "caffe2.python.data_parallel_model.Parallelize_GPU", "caffe2.python.cnn.CNNModelHelper", "caffe2.python.workspace.ResetWorkspace", "<builtin>.range", "<builtin>.enumerate", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.RunNet", "numpy.random.permutation", "caffe2.python.workspace.CreateNet"], "data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model.input_builder_fun": [], "data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model.model_build_fun": ["<builtin>.len", "<builtin>.enumerate"], "data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model.param_update_fun": ["<builtin>.isinstance"], "<builtin>.zip": [], "data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.test_sparse_shared_indices_gpu": ["data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model", "<builtin>.list", "<builtin>.range", "caffe2.python.workspace.NumGpuDevices"], "caffe2.python.workspace.NumGpuDevices": [], "unittest.main": []}