{"sequence_ops_test": ["unittest.main"], "sequence_ops_test._gen_test_add_padding": ["hypothesis.strategies.lists", "hypothesis.strategies.tuples", "hypothesis.strategies.integers"], "sequence_ops_test._gen_test_add_padding.gen_with_size": ["hypothesis.strategies.just", "<builtin>.sum", "caffe2.python.hypothesis_test_util.arrays", "numpy.array", "hypothesis.strategies.tuples"], "<builtin>.sum": [], "numpy.array": [], "hypothesis.strategies.just": [], "caffe2.python.hypothesis_test_util.arrays": [], "hypothesis.strategies.tuples": [], "hypothesis.strategies.integers": [], "hypothesis.strategies.lists": [], "sequence_ops_test._add_padding_ref": ["numpy.zeros", "numpy.ndarray", "<builtin>.len"], "numpy.zeros": [], "<builtin>.len": [], "numpy.ndarray": [], "sequence_ops_test._remove_padding_ref": ["numpy.ndarray", "<builtin>.len"], "sequence_ops_test._gather_padding_ref": ["numpy.zeros", "<builtin>.range"], "<builtin>.range": [], "sequence_ops_test.TestSequenceOps": ["hypothesis.strategies.integers", "hypothesis.settings", "sequence_ops_test._gen_test_add_padding", "unittest.skip", "caffe2.python.hypothesis_test_util.floats", "hypothesis.strategies.lists", "hypothesis.given", "caffe2.python.hypothesis_test_util.tensor", "hypothesis.strategies.booleans"], "hypothesis.strategies.booleans": [], "hypothesis.given": [], "hypothesis.settings": [], "sequence_ops_test.TestSequenceOps.test_add_padding": ["functools.partial", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator", "numpy.array"], "caffe2.python.core.CreateOperator": [], "functools.partial": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": [], "sequence_ops_test.TestSequenceOps._local_test_add_padding_shape_and_type": ["caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.InferShapesAndTypes", "<builtin>.len", "caffe2.python.workspace.FeedBlob", "<builtin>.list", "numpy.array", "caffe2.python.core.Net", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertEqual", "caffe2.python.core.CreateOperator", "caffe2.python.workspace.ResetWorkspace"], "caffe2.python.workspace.ResetWorkspace": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.core.Net": [], "caffe2.python.workspace.RunNetOnce": [], "caffe2.python.workspace.InferShapesAndTypes": [], "<builtin>.list": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertEqual": [], "sequence_ops_test.TestSequenceOps.test_add_padding_shape_and_type_3": ["numpy.random.rand", "sequence_ops_test.TestSequenceOps._local_test_add_padding_shape_and_type", "<builtin>.range"], "numpy.random.rand": [], "sequence_ops_test.TestSequenceOps.test_add_padding_shape_and_type_4": ["numpy.random.rand", "sequence_ops_test.TestSequenceOps._local_test_add_padding_shape_and_type", "<builtin>.range"], "sequence_ops_test.TestSequenceOps.test_add_padding_shape_and_type_5": ["numpy.random.rand", "sequence_ops_test.TestSequenceOps._local_test_add_padding_shape_and_type", "<builtin>.range"], "sequence_ops_test.TestSequenceOps.test_add_padding_shape_and_type": ["<builtin>.len", "numpy.random.seed", "<builtin>.sum", "numpy.random.randint", "sequence_ops_test.TestSequenceOps._local_test_add_padding_shape_and_type", "<builtin>.range", "numpy.random.randn"], "numpy.random.seed": [], "numpy.random.randint": [], "numpy.random.randn": [], "sequence_ops_test.TestSequenceOps.test_add_zero_padding": ["functools.partial", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator"], "caffe2.python.hypothesis_test_util.tensor": [], "sequence_ops_test.TestSequenceOps.test_add_padding_no_length": ["functools.partial", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator", "numpy.array"], "unittest.skip": [], "sequence_ops_test.TestSequenceOps.test_remove_padding": ["functools.partial", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator"], "sequence_ops_test.TestSequenceOps.test_gather_padding": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "functools.partial", "sequence_ops_test._add_padding_ref", "caffe2.python.core.CreateOperator"], "caffe2.python.hypothesis_test_util.floats": [], "sequence_ops_test.TestSequenceOps.test_reverse_packed_segs": ["caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.random.randint"], "sequence_ops_test.TestSequenceOps.test_reverse_packed_segs.op_ref": ["<builtin>.range", "numpy.array"], "sequence_ops_test.TestSequenceOps.test_reverse_packed_segs.op_grad_ref": ["sequence_ops_test.TestSequenceOps.test_reverse_packed_segs.op_ref"], "sequence_ops_test.TestSequenceOps.test_remove_data_blocks": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator", "numpy.array"], "sequence_ops_test.TestSequenceOps.test_remove_data_blocks.op_ref": ["numpy.sort", "numpy.unique", "numpy.delete"], "numpy.unique": [], "numpy.sort": [], "numpy.delete": [], "sequence_ops_test.TestSequenceOps.test_find_duplicate_elements": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator", "numpy.array"], "sequence_ops_test.TestSequenceOps.test_find_duplicate_elements.op_ref": ["numpy.array", "<builtin>.enumerate"], "<builtin>.enumerate": [], "unittest.main": []}