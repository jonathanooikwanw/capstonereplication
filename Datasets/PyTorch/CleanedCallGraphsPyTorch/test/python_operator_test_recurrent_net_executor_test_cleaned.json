{"recurrent_net_executor_test": ["caffe2.python.workspace.GlobalInit", "unittest.main", "random.seed"], "recurrent_net_executor_test.TestRNNExecutor.setUp": ["<builtin>.super"], "<builtin>.super": [], "hypothesis.strategies.integers": [], "recurrent_net_executor_test.TestRNNExecutor": ["hypothesis.given", "hypothesis.settings", "hypothesis.strategies.integers", "hypothesis.strategies.booleans"], "hypothesis.strategies.booleans": [], "hypothesis.given": [], "hypothesis.settings": [], "recurrent_net_executor_test.TestRNNExecutor.test_lstm_with_attention_equal_simplenet": ["recurrent_net_executor_test.TestRNNExecutor._compare", "numpy.array", "caffe2.python.model_helper.ModelHelper", "caffe2.python.core.DeviceScope", "caffe2.python.workspace.ResetWorkspace", "<builtin>.print", "numpy.random.rand", "caffe2.python.rnn_cell.LSTMWithAttention", "caffe2.python.workspace.FeedBlob", "numpy.zeros"], "caffe2.python.workspace.ResetWorkspace": [], "caffe2.python.core.DeviceScope": [], "<builtin>.print": [], "numpy.array": [], "caffe2.python.workspace.FeedBlob": [], "numpy.random.rand": [], "numpy.zeros": [], "caffe2.python.model_helper.ModelHelper": [], "caffe2.python.rnn_cell.LSTMWithAttention": [], "recurrent_net_executor_test.TestRNNExecutor._compare": ["<builtin>.str", "<builtin>.range", "caffe2.python.test_util.TestCase.assertEqual", "<builtin>.print", "numpy.random.seed", "caffe2.python.test_util.TestCase.assertFalse", "numpy.allclose", "caffe2.python.workspace.RunNet", "<builtin>.list", "caffe2.python.workspace.RunNetOnce", "<builtin>.type", "recurrent_net_executor_test.TestRNNExecutor.enable_rnn_executor", "caffe2.python.workspace.FeedBlob", "caffe2.python.workspace.CreateNet", "caffe2.python.workspace.FetchBlob", "<builtin>.len", "caffe2.python.workspace.Blobs", "caffe2.python.workspace.ResetWorkspace", "numpy.random.rand"], "recurrent_net_executor_test.TestRNNExecutor.init_lstm_model": ["caffe2.python.rnn_cell.LSTM", "caffe2.python.model_helper.ModelHelper", "numpy.array", "<builtin>.range", "numpy.random.rand", "caffe2.python.workspace.FeedBlob", "numpy.zeros"], "<builtin>.range": [], "caffe2.python.rnn_cell.LSTM": [], "recurrent_net_executor_test.TestRNNExecutor.test_empty_sequence": ["caffe2.python.workspace.RunNetOnce", "recurrent_net_executor_test.TestRNNExecutor.init_lstm_model", "caffe2.python.core.DeviceScope", "caffe2.python.test_util.TestCase.assertEqual", "caffe2.proto.caffe2_pb2.DeviceOption", "caffe2.python.workspace.ResetWorkspace", "numpy.random.rand", "caffe2.python.workspace.RunNet", "recurrent_net_executor_test.TestRNNExecutor.enable_rnn_executor", "caffe2.python.workspace.FeedBlob", "numpy.random.seed", "caffe2.python.workspace.CreateNet", "caffe2.python.workspace.FetchBlob"], "caffe2.proto.caffe2_pb2.DeviceOption": [], "caffe2.python.workspace.RunNetOnce": [], "recurrent_net_executor_test.TestRNNExecutor.enable_rnn_executor": ["caffe2.python.test_util.TestCase.assertEqual"], "numpy.random.seed": [], "caffe2.python.workspace.CreateNet": [], "caffe2.python.workspace.RunNet": [], "caffe2.python.workspace.FetchBlob": [], "caffe2.python.test_util.TestCase.assertEqual": [], "recurrent_net_executor_test.TestRNNExecutor.test_lstm_equal_simplenet": ["recurrent_net_executor_test.TestRNNExecutor.init_lstm_model", "recurrent_net_executor_test.TestRNNExecutor._compare", "caffe2.python.core.DeviceScope", "caffe2.python.workspace.ResetWorkspace", "<builtin>.print"], "caffe2.python.workspace.Blobs": [], "<builtin>.len": [], "<builtin>.str": [], "<builtin>.list": [], "<builtin>.type": [], "numpy.allclose": [], "caffe2.python.test_util.TestCase.assertFalse": [], "random.seed": [], "caffe2.python.workspace.GlobalInit": [], "unittest.main": []}