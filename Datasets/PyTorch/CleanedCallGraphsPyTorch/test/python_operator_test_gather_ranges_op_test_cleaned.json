{"gather_ranges_op_test": ["hypothesis.strategies.composite", "unittest.main"], "gather_ranges_op_test.batched_boarders_and_data": ["hypothesis.strategies.tuples", "hypothesis.strategies.integers"], "hypothesis.strategies.integers": [], "hypothesis.strategies.tuples": [], "gather_ranges_op_test.batched_boarders_and_data.<lambda1>": ["hypothesis.strategies.tuples", "caffe2.python.hypothesis_test_util.arrays", "hypothesis.strategies.integers"], "caffe2.python.hypothesis_test_util.arrays": [], "hypothesis.strategies.composite": [], "gather_ranges_op_test._tensor_splits": ["numpy.array", "<builtin>.range", "<builtin>.len", "hypothesis.strategies.floats", "hypothesis.strategies.lists", "hypothesis.strategies.integers", "hypothesis.strategies.permutations"], "hypothesis.strategies.lists": [], "<builtin>.range": [], "<builtin>.len": [], "hypothesis.strategies.permutations": [], "hypothesis.strategies.floats": [], "numpy.array": [], "gather_ranges_op_test._bad_tensor_splits": ["numpy.array", "<builtin>.range", "<builtin>.len", "hypothesis.strategies.floats", "hypothesis.strategies.lists", "hypothesis.strategies.integers", "hypothesis.strategies.permutations"], "gather_ranges_op_test.gather_ranges": ["<builtin>.len"], "gather_ranges_op_test.gather_ranges_to_dense": ["numpy.array", "<builtin>.range", "<builtin>.len"], "gather_ranges_op_test.gather_ranges_to_dense_with_key": ["numpy.array", "<builtin>.range", "<builtin>.len", "<builtin>.zip", "<builtin>.sorted"], "<builtin>.zip": [], "gather_ranges_op_test.gather_ranges_to_dense_with_key.<lambda1>": [], "<builtin>.sorted": [], "gather_ranges_op_test.TestGatherRanges": ["hypothesis.given", "gather_ranges_op_test._bad_tensor_splits", "hypothesis.settings", "gather_ranges_op_test.batched_boarders_and_data", "gather_ranges_op_test._tensor_splits"], "hypothesis.given": [], "hypothesis.settings": [], "gather_ranges_op_test.TestGatherRanges.test_gather_ranges": ["numpy.apply_along_axis", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.core.CreateOperator"], "gather_ranges_op_test.TestGatherRanges.test_gather_ranges.boarders_to_range": ["<builtin>.sorted", "<builtin>.len"], "numpy.apply_along_axis": [], "caffe2.python.core.CreateOperator": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": [], "gather_ranges_op_test.TestGatherRanges.test_gather_ranges_split": ["caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "<builtin>.range", "<builtin>.len"], "gather_ranges_op_test.TestGatherRanges.test_gather_ranges_with_key_split": ["caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "<builtin>.range", "<builtin>.len"], "gather_ranges_op_test.TestGatherRanges.test_shape_and_type_inference": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertEqual", "caffe2.python.workspace.InferShapesAndTypes", "caffe2.python.hypothesis_test_util.temp_workspace", "caffe2.python.core.Net"], "caffe2.python.hypothesis_test_util.temp_workspace": [], "caffe2.python.core.Net": [], "caffe2.python.workspace.InferShapesAndTypes": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertEqual": [], "gather_ranges_op_test.TestGatherRanges.test_empty_range_check": ["caffe2.python.workspace.FeedBlob", "caffe2.python.workspace.RunOperatorOnce", "gather_ranges_op_test.TestGatherRanges.test_empty_range_check.getOpWithThreshold", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertRaises"], "caffe2.python.workspace.FeedBlob": [], "gather_ranges_op_test.TestGatherRanges.test_empty_range_check.getOpWithThreshold": ["caffe2.python.core.CreateOperator", "<builtin>.range", "<builtin>.len"], "caffe2.python.workspace.RunOperatorOnce": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertRaises": [], "unittest.main": []}