{"collect_and_distribute_fpn_rpn_proposals_op_test": ["unittest.main"], "collect_and_distribute_fpn_rpn_proposals_op_test.boxes_area": ["numpy.all"], "numpy.all": [], "collect_and_distribute_fpn_rpn_proposals_op_test.map_rois_to_fpn_levels": ["collect_and_distribute_fpn_rpn_proposals_op_test.boxes_area", "numpy.clip", "numpy.floor", "numpy.log2", "numpy.sqrt"], "numpy.sqrt": [], "numpy.log2": [], "numpy.floor": [], "numpy.clip": [], "collect_and_distribute_fpn_rpn_proposals_op_test.collect": ["numpy.concatenate", "numpy.argsort"], "numpy.concatenate": [], "numpy.argsort": [], "collect_and_distribute_fpn_rpn_proposals_op_test.distribute": ["numpy.where", "numpy.empty", "collect_and_distribute_fpn_rpn_proposals_op_test.map_rois_to_fpn_levels", "<builtin>.range", "numpy.argsort", "numpy.concatenate", "<builtin>.enumerate"], "numpy.empty": [], "<builtin>.range": [], "<builtin>.enumerate": [], "numpy.where": [], "collect_and_distribute_fpn_rpn_proposals_op_test.collect_and_distribute_fpn_rpn_ref": ["collect_and_distribute_fpn_rpn_proposals_op_test.collect", "<builtin>.len", "collect_and_distribute_fpn_rpn_proposals_op_test.distribute", "<builtin>.range"], "<builtin>.len": [], "collect_and_distribute_fpn_rpn_proposals_op_test.collect_rpn_ref": ["collect_and_distribute_fpn_rpn_proposals_op_test.collect"], "collect_and_distribute_fpn_rpn_proposals_op_test.distribute_fpn_ref": ["collect_and_distribute_fpn_rpn_proposals_op_test.distribute"], "collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals._create_input": ["numpy.random.rand", "numpy.random.seed", "<builtin>.range"], "numpy.random.seed": [], "numpy.random.rand": [], "hypothesis.strategies.integers": [], "collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals": ["hypothesis.given", "hypothesis.strategies.integers", "hypothesis.settings"], "hypothesis.given": [], "hypothesis.settings": [], "collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals.test_collect_and_dist": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.utils.MakeArgument", "caffe2.python.core.CreateOperator", "<builtin>.range", "collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals._create_input"], "caffe2.python.utils.MakeArgument": [], "caffe2.python.core.CreateOperator": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": [], "collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals.test_collect_and_dist_separately": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "caffe2.python.utils.MakeArgument", "caffe2.python.core.CreateOperator", "collect_and_distribute_fpn_rpn_proposals_op_test.collect", "<builtin>.range", "collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals._create_input"], "unittest.main": []}