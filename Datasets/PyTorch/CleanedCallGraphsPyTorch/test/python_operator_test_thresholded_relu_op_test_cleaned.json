{"thresholded_relu_op_test": ["unittest.main"], "caffe2.python.hypothesis_test_util.tensor": [], "thresholded_relu_op_test.TestThresholdedRelu": ["caffe2.python.serialized_test.serialized_test_util.given", "caffe2.python.hypothesis_test_util.tensor", "hypothesis.strategies.floats", "hypothesis.strategies.sampled_from", "hypothesis.settings", "hypothesis.given"], "hypothesis.strategies.sampled_from": [], "caffe2.python.serialized_test.serialized_test_util.given": [], "thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_1": ["caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks"], "caffe2.python.core.CreateOperator": [], "thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_1.defaultRef": ["numpy.copy"], "numpy.copy": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": [], "hypothesis.strategies.floats": [], "hypothesis.given": [], "thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_2": ["caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertDeviceChecks", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks"], "thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_2.ref": ["numpy.copy"], "hypothesis.settings": [], "thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_3": ["caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks", "caffe2.python.core.CreateOperator", "<builtin>.float", "thresholded_relu_op_test.TestThresholdedRelu.fix_input"], "thresholded_relu_op_test.TestThresholdedRelu.fix_input": ["numpy.sign"], "<builtin>.float": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertGradientChecks": [], "numpy.sign": [], "unittest.main": []}