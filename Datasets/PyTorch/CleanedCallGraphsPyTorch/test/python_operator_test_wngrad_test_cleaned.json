{"wngrad_test": ["logging.getLogger"], "logging.getLogger": [], "wngrad_test.ref_wngrad": ["numpy.sum"], "numpy.sum": [], "wngrad_test.wngrad_sparse_test_helper": ["numpy.random.randint", "numpy.random.choice", "numpy.array", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "numpy.arange", "caffe2.python.core.CreateOperator"], "numpy.array": [], "numpy.arange": [], "numpy.random.randint": [], "numpy.random.choice": [], "caffe2.python.core.CreateOperator": [], "wngrad_test.wngrad_sparse_test_helper.ref_sparse": ["numpy.sum", "<builtin>.enumerate", "numpy.copy"], "numpy.copy": [], "<builtin>.enumerate": [], "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": [], "caffe2.python.hypothesis_test_util.tensors": [], "wngrad_test.TestWngrad": ["hypothesis.given", "caffe2.python.hypothesis_test_util.tensors", "hypothesis.settings", "hypothesis.strategies.floats"], "hypothesis.strategies.floats": [], "hypothesis.given": [], "hypothesis.settings": [], "wngrad_test.TestWngrad.test_wngrad_dense_base": ["functools.partial", "numpy.array", "caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks"], "functools.partial": [], "wngrad_test.TestWngrad.test_wngrad_dense_output_effective_lr": ["functools.partial", "numpy.array", "caffe2.python.core.CreateOperator", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks"], "wngrad_test.TestWngrad.test_wngrad_dense_output_effective_lr_and_update": ["numpy.array", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "functools.partial", "numpy.abs", "caffe2.python.core.CreateOperator"], "numpy.abs": [], "wngrad_test.TestWngrad.test_sparse_wngrad": ["wngrad_test.wngrad_sparse_test_helper"], "wngrad_test.TestWngrad.test_sparse_wngrad_empty": ["hypothesis.note", "<builtin>.print", "numpy.array", "numpy.empty", "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks", "<builtin>.str", "caffe2.python.core.CreateOperator"], "numpy.empty": [], "<builtin>.str": [], "hypothesis.note": [], "wngrad_test.TestWngrad.test_sparse_wngrad_empty.ref_sparse": ["numpy.copy"], "<builtin>.print": []}