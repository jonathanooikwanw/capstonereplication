{"dist_optimizer_test": [], "threading.Lock": [], "dist_optimizer_test.MyModule": ["threading.Lock"], "dist_optimizer_test.MyModule.__init__": ["torch.Generator", "torch.rand"], "torch.Generator": [], "torch.rand": [], "dist_optimizer_test.MyModule.forward": ["torch.mm"], "torch.mm": [], "dist_optimizer_test.MyModule.get_w": [], "dist_optimizer_test.FailingOptimizer.__init__": ["<builtin>.super"], "<builtin>.super": [], "dist_optimizer_test.FailingOptimizer.step": ["<builtin>.ValueError"], "<builtin>.ValueError": [], "dist_optimizer_test.OptimizerFailingOnConstructor.__init__": ["<builtin>.super", "<builtin>.ValueError"], "dist_optimizer_test.OptimizerFailingOnConstructor.step": [], "dist_optimizer_test._call_method": [], "dist_optimizer_test.remote_method": ["<builtin>.list", "torch.distributed.rpc.remote"], "<builtin>.list": [], "torch.distributed.rpc.remote": [], "dist_optimizer_test.rpc_async_method": ["<builtin>.list", "torch.distributed.rpc.rpc_async"], "torch.distributed.rpc.rpc_async": [], "torch.testing._internal.dist_utils.dist_init": [], "dist_optimizer_test.DistOptimizerTest": ["torch.testing._internal.dist_utils.dist_init"], "dist_optimizer_test.DistOptimizerTest.test_dist_optim_exception": ["torch.Generator", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertRaisesRegex", "torch.rand", "torch.distributed.autograd.context", "torch.distributed.autograd.backward", "torch.distributed.optim.DistributedOptimizer", "torch.add", "dist_optimizer_test.remote_method", "torch.distributed.rpc.remote", "dist_optimizer_test.rpc_async_method"], "torch.distributed.optim.DistributedOptimizer": [], "torch.distributed.autograd.context": [], "torch.add": [], "torch.distributed.autograd.backward": [], "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertRaisesRegex": [], "dist_optimizer_test.DistOptimizerTest.test_dist_optim_exception_on_constructor": ["torch.distributed.optim.DistributedOptimizer", "dist_optimizer_test.remote_method", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertRaisesRegex", "torch.distributed.rpc.remote"], "dist_optimizer_test.DistOptimizerTest._test_dist_optim_base": ["torch.optim.Adagrad", "torch.optim.RMSprop", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertEqual", "dist_optimizer_test.MyModule.get_w", "torch.optim.AdamW", "torch.distributed.autograd.context", "dist_optimizer_test.remote_method", "torch.optim.Adamax", "torch.optim.SGD", "torch.optim.Adam", "torch.optim.Adadelta", "torch.distributed.optim.DistributedOptimizer", "torch.optim.Rprop", "torch.distributed.rpc.remote", "torch.Generator", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertNotEqual", "torch.rand", "dist_optimizer_test.MyModule.forward", "torch.distributed.autograd.backward", "torch.add", "dist_optimizer_test.MyModule.__init__", "dist_optimizer_test.rpc_async_method"], "torch.optim.Adadelta": [], "torch.optim.RMSprop": [], "torch.optim.Rprop": [], "torch.optim.AdamW": [], "torch.optim.Adagrad": [], "torch.optim.SGD": [], "torch.optim.Adamax": [], "torch.optim.Adam": [], "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertEqual": [], "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertNotEqual": [], "dist_optimizer_test.DistOptimizerTest.test_dist_optim": ["dist_optimizer_test.DistOptimizerTest._test_dist_optim_base"], "dist_optimizer_test.DistOptimizerTest._test_dist_optim_none_grads": ["dist_optimizer_test.MyModule.get_w", "torch.Generator", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertNotEqual", "torch.rand", "dist_optimizer_test.MyModule.forward", "torch.distributed.autograd.backward", "torch.optim.SGD", "torch.optim.Adadelta", "torch.optim.RMSprop", "torch.add", "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.assertEqual", "torch.distributed.optim.DistributedOptimizer", "torch.distributed.autograd.context", "torch.optim.Rprop", "dist_optimizer_test.MyModule.__init__", "torch.distributed.rpc.remote"], "dist_optimizer_test.DistOptimizerTest.test_dist_optim_none_grads": ["dist_optimizer_test.DistOptimizerTest._test_dist_optim_none_grads"]}