{"optimizer_test": [], "optimizer_test.TestLars.testSparse": ["unittest.SkipTest"], "unittest.SkipTest": [], "optimizer_test.TestLars.build_optimizer": ["caffe2.python.optimizer.build_sgd"], "caffe2.python.optimizer.build_sgd": [], "optimizer_test.TestLars.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.workspace.FetchBlob", "numpy.testing.assert_allclose", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "numpy.array"], "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue": [], "caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse": [], "caffe2.python.workspace.FetchBlob": [], "numpy.array": [], "numpy.testing.assert_allclose": [], "optimizer_test.TestMomentumSgd.build_optimizer": ["caffe2.python.optimizer.build_sgd"], "optimizer_test.TestMomentumSgd.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "caffe2.python.workspace.FetchBlob", "numpy.array", "numpy.testing.assert_allclose"], "optimizer_test.TestSgd.build_optimizer": ["caffe2.python.optimizer.build_sgd"], "optimizer_test.TestSgd.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.workspace.FetchBlob", "numpy.testing.assert_allclose", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "numpy.array"], "optimizer_test.TestMultiPrecisionSgd.build_optimizer": ["caffe2.python.optimizer.build_multi_precision_sgd"], "caffe2.python.optimizer.build_multi_precision_sgd": [], "optimizer_test.TestMultiPrecisionSgd.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.workspace.FetchBlob", "numpy.testing.assert_allclose", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "numpy.array"], "unittest.skipIf": [], "optimizer_test.TestMultiPrecisionSgd": ["unittest.skipIf"], "optimizer_test.TestMultiPrecisionSgd.testGPUDense": ["<builtin>.super"], "<builtin>.super": [], "optimizer_test.TestFtrl.build_optimizer": ["caffe2.python.optimizer.build_ftrl"], "caffe2.python.optimizer.build_ftrl": [], "optimizer_test.TestFtrl.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "caffe2.python.workspace.FetchBlob"], "optimizer_test.TestGFtrl.testSparse": ["unittest.SkipTest"], "optimizer_test.TestGFtrl.build_optimizer": ["caffe2.python.optimizer.build_gftrl"], "caffe2.python.optimizer.build_gftrl": [], "optimizer_test.TestGFtrl.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "caffe2.python.workspace.FetchBlob"], "optimizer_test.TestAdagrad.build_optimizer": ["caffe2.python.optimizer.build_adagrad"], "caffe2.python.optimizer.build_adagrad": [], "optimizer_test.TestAdagrad.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "caffe2.python.workspace.FetchBlob"], "optimizer_test.TestRowWiseAdagrad.build_optimizer": ["caffe2.python.optimizer.build_adagrad"], "optimizer_test.TestRowWiseAdagrad.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "caffe2.python.workspace.FetchBlob"], "optimizer_test.TestRowWiseAdagrad.testDense": ["unittest.SkipTest"], "optimizer_test.TestRowWiseAdagrad.testGPUDense": ["unittest.SkipTest"], "optimizer_test.TestRowWiseAdagradWithCounter.build_optimizer": ["caffe2.python.optimizer.build_adagrad"], "optimizer_test.TestRowWiseAdagradWithCounter.check_optimizer": ["caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.HasBlob", "numpy.testing.assert_allclose", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "numpy.array"], "caffe2.python.workspace.HasBlob": [], "optimizer_test.TestRowWiseAdagradWithCounter.testDense": ["unittest.SkipTest"], "optimizer_test.TestRowWiseAdagradWithCounter.testGPUDense": ["unittest.SkipTest"], "optimizer_test.TestWngrad.build_optimizer": ["caffe2.python.optimizer.build_wngrad"], "caffe2.python.optimizer.build_wngrad": [], "optimizer_test.TestWngrad.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "caffe2.python.workspace.FetchBlob"], "optimizer_test.TestStorm.build_optimizer": ["caffe2.python.optimizer.build_storm"], "caffe2.python.optimizer.build_storm": [], "optimizer_test.TestStorm.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "caffe2.python.workspace.FetchBlob"], "optimizer_test.TestAdadelta.build_optimizer": ["caffe2.python.optimizer.build_adadelta"], "caffe2.python.optimizer.build_adadelta": [], "optimizer_test.TestAdadelta.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "caffe2.python.workspace.FetchBlob"], "optimizer_test.TestAdam.build_optimizer": ["caffe2.python.optimizer.build_adam"], "caffe2.python.optimizer.build_adam": [], "optimizer_test.TestAdam.check_optimizer": ["caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.HasBlob", "numpy.testing.assert_allclose", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "numpy.array"], "optimizer_test.TestSmartDecayAdam.build_optimizer": ["caffe2.python.optimizer.build_adam"], "optimizer_test.TestSmartDecayAdam.check_optimizer": ["<builtin>.any", "caffe2.python.workspace.Blobs", "caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.HasBlob", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue"], "caffe2.python.workspace.Blobs": [], "<builtin>.any": [], "optimizer_test.TestDecayAdagrad.build_optimizer": ["caffe2.python.optimizer.build_decay_adagrad"], "caffe2.python.optimizer.build_decay_adagrad": [], "optimizer_test.TestDecayAdagrad.check_optimizer": ["caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.HasBlob", "numpy.testing.assert_allclose", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "numpy.array"], "optimizer_test.TestDecayAdagrad.testSparse": ["unittest.SkipTest"], "optimizer_test.TestSparseRAdam.build_optimizer": ["caffe2.python.optimizer.build_adam"], "optimizer_test.TestSparseRAdam.check_optimizer": ["caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.HasBlob", "numpy.testing.assert_allclose", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "numpy.array"], "optimizer_test.TestYellowFin.build_optimizer": ["caffe2.python.optimizer.build_yellowfin"], "caffe2.python.optimizer.build_yellowfin": [], "optimizer_test.TestYellowFin.check_optimizer": ["caffe2.python.workspace.FetchBlob", "caffe2.python.workspace.HasBlob", "numpy.testing.assert_allclose", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "numpy.array"], "optimizer_test.TestYellowFin.testSparse": ["unittest.SkipTest"], "optimizer_test.TestYellowFin.deb": [], "optimizer_test.TestYellowFin.get_lr_mu": ["<builtin>.min", "math.fabs", "math.sqrt", "<builtin>.max", "math.pow", "numpy.sqrt"], "numpy.sqrt": [], "math.sqrt": [], "math.fabs": [], "math.pow": [], "<builtin>.min": [], "<builtin>.max": [], "optimizer_test.TestYellowFin.caffe2_yellowfin": ["caffe2.python.workspace.CreateNet", "<builtin>.range", "caffe2.python.core.DeviceOption", "caffe2.python.workspace.ResetWorkspace", "caffe2.python.optimizer.YellowFinOptimizer", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.RunNet", "caffe2.python.workspace.FetchBlob", "caffe2.python.core.Net", "<builtin>.max", "optimizer_test.TestYellowFin.deb", "numpy.exp", "caffe2.python.core.DeviceScope"], "caffe2.python.core.Net": [], "caffe2.python.workspace.ResetWorkspace": [], "caffe2.python.core.DeviceOption": [], "caffe2.python.core.DeviceScope": [], "optimizer_test.TestYellowFin.caffe2_yellowfin.<lambda1>": [], "caffe2.python.optimizer.YellowFinOptimizer": [], "caffe2.python.workspace.RunNetOnce": [], "caffe2.python.workspace.CreateNet": [], "<builtin>.range": [], "caffe2.python.workspace.RunNet": [], "numpy.exp": [], "optimizer_test.TestYellowFin.numpy_yellowfin": ["<builtin>.range", "numpy.linalg.norm", "numpy.log", "numpy.ones", "<builtin>.max", "optimizer_test.TestYellowFin.get_lr_mu", "numpy.exp", "numpy.sum"], "numpy.ones": [], "numpy.sum": [], "numpy.linalg.norm": [], "numpy.log": [], "optimizer_test.TestYellowFin.compare_yellowfin_models": ["numpy.testing.assert_equal", "<builtin>.len", "<builtin>.range", "<builtin>.str", "optimizer_test.TestYellowFin.numpy_yellowfin", "numpy.testing.assert_allclose", "optimizer_test.TestYellowFin.caffe2_yellowfin"], "<builtin>.len": [], "numpy.testing.assert_equal": [], "<builtin>.str": [], "unittest.skip": [], "optimizer_test.TestYellowFin": ["unittest.skipIf", "unittest.skip"], "optimizer_test.TestYellowFin.test_caffe2_cpu_vs_numpy": ["caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope", "optimizer_test.TestYellowFin.compare_yellowfin_models"], "optimizer_test.TestYellowFin.test_caffe2_gpu_vs_numpy": ["caffe2.python.core.DeviceOption", "caffe2.python.core.DeviceScope", "optimizer_test.TestYellowFin.compare_yellowfin_models"], "optimizer_test.TestRmsProp.build_optimizer": ["caffe2.python.optimizer.build_rms_prop"], "caffe2.python.optimizer.build_rms_prop": [], "optimizer_test.TestRmsProp.check_optimizer": ["caffe2.python.optimizer_test_util.OptimizerTestBase.assertFalse", "caffe2.python.optimizer_test_util.OptimizerTestBase.assertTrue", "caffe2.python.workspace.FetchBlob"], "optimizer_test.TestRmsProp.testSparse": ["unittest.SkipTest"], "optimizer_test.TestMultiOptimizers.test_multiple_optimizers": ["caffe2.python.test_util.TestCase.assertEqual", "caffe2.python.model_helper.ModelHelper", "caffe2.python.brew.fc", "optimizer_test.TestMultiOptimizers.test_multiple_optimizers.infer_blob_device", "caffe2.python.optimizer._get_param_to_device", "caffe2.python.optimizer.AdagradOptimizer", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.optimizer.SgdOptimizer", "caffe2.python.core.DeviceScope"], "caffe2.python.model_helper.ModelHelper": [], "caffe2.python.brew.fc": [], "caffe2.python.optimizer._get_param_to_device": [], "optimizer_test.TestMultiOptimizers.test_multiple_optimizers.infer_blob_device": ["caffe2.python.optimizer.get_param_device"], "caffe2.python.optimizer.get_param_device": [], "caffe2.python.optimizer.SgdOptimizer": [], "caffe2.python.optimizer.AdagradOptimizer": [], "caffe2.python.test_util.TestCase.assertEqual": [], "caffe2.python.test_util.TestCase.assertTrue": [], "optimizer_test.TestWeightDecay.test_weight_decay": ["caffe2.python.test_util.TestCase.assertEqual", "caffe2.python.model_helper.ModelHelper", "caffe2.python.brew.fc", "caffe2.python.brew.conv", "caffe2.python.optimizer.add_weight_decay", "<builtin>.print", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.optimizer.build_sgd", "<builtin>.set"], "caffe2.python.brew.conv": [], "caffe2.python.optimizer.add_weight_decay": [], "<builtin>.print": [], "<builtin>.set": [], "optimizer_test.TestOptimizerContext.test_optimizer_context": ["caffe2.python.test_util.TestCase.assertEqual", "caffe2.python.optimizer_context.UseOptimizer", "caffe2.python.model_helper.ModelHelper", "caffe2.python.brew.fc", "caffe2.python.brew.conv", "caffe2.python.optimizer.add_weight_decay", "<builtin>.print", "caffe2.python.test_util.TestCase.assertTrue", "caffe2.python.optimizer.build_sgd", "<builtin>.set", "caffe2.python.test_util.TestCase.assertAlmostEqual", "caffe2.python.optimizer.SgdOptimizer"], "caffe2.python.optimizer_context.UseOptimizer": [], "caffe2.python.test_util.TestCase.assertAlmostEqual": []}