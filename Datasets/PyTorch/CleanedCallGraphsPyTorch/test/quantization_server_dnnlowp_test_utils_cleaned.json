{"dnnlowp_test_utils": [], "dnnlowp_test_utils.check_quantized_results_close": ["<builtin>.min", "numpy.min", "<builtin>.abs", "<builtin>.max", "numpy.testing.assert_allclose", "numpy.max"], "numpy.min": [], "<builtin>.min": [], "numpy.max": [], "<builtin>.max": [], "<builtin>.abs": [], "numpy.testing.assert_allclose": [], "dnnlowp_test_utils.pairwise": ["<builtin>.zip", "<builtin>.next", "itertools.tee"], "itertools.tee": [], "<builtin>.next": [], "<builtin>.zip": [], "dnnlowp_test_utils.avoid_vpmaddubsw_overflow_fc": ["<builtin>.float", "<builtin>.int", "<builtin>.range", "numpy.ndindex"], "numpy.ndindex": [], "<builtin>.range": [], "<builtin>.float": [], "<builtin>.int": [], "dnnlowp_test_utils.avoid_vpmaddubsw_overflow": ["<builtin>.all", "numpy.ndindex", "<builtin>.int", "<builtin>.len", "<builtin>.range", "dnnlowp_test_utils.pairwise", "<builtin>.float", "<builtin>.tuple"], "<builtin>.len": [], "<builtin>.tuple": [], "<builtin>.all": [], "dnnlowp_test_utils.generate_convnd_inputs": ["dnnlowp_test_utils.avoid_vpmaddubsw_overflow", "caffe2.python.utils.NHWC2NCHW", "<builtin>.all", "<builtin>.slice", "numpy.random.randn", "<builtin>.len", "<builtin>.range", "numpy.round", "hypothesis.assume", "numpy.random.rand", "<builtin>.tuple"], "hypothesis.assume": [], "numpy.random.rand": [], "numpy.round": [], "<builtin>.slice": [], "caffe2.python.utils.NHWC2NCHW": [], "numpy.random.randn": [], "dnnlowp_test_utils.generate_conv_inputs": ["dnnlowp_test_utils.generate_convnd_inputs"], "dnnlowp_test_utils.run_conv_or_fc": ["collections.namedtuple", "caffe2.python.workspace.CreateNet", "caffe2.python.workspace.RunNet", "caffe2.python.workspace.RunNetOnce", "caffe2.python.workspace.WorkspaceGuard", "<builtin>.int", "<builtin>.range", "caffe2.python.workspace.FetchBlob", "<builtin>.float", "caffe2.python.workspace.FeedBlob", "caffe2.quantization.server.dnnlowp_pybind11.CreateInt8QuantParamsBlob"], "collections.namedtuple": [], "caffe2.python.workspace.WorkspaceGuard": [], "caffe2.quantization.server.dnnlowp_pybind11.CreateInt8QuantParamsBlob": [], "caffe2.python.workspace.FeedBlob": [], "caffe2.python.workspace.RunNetOnce": [], "caffe2.python.workspace.CreateNet": [], "caffe2.python.workspace.RunNet": [], "caffe2.python.workspace.FetchBlob": []}