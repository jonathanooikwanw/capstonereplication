{"nomnigraph": [], "nomnigraph.NNModule.__init__": ["caffe2.python._import_c_extension.NNModule", "<builtin>.Exception", "caffe2.python._import_c_extension.NNModuleFromProtobuf", "<builtin>.isinstance", "caffe2.python._import_c_extension.NNModuleFromProtobufDistributed"], "<builtin>.isinstance": [], "caffe2.python._import_c_extension.NNModuleFromProtobufDistributed": [], "caffe2.python._import_c_extension.NNModuleFromProtobuf": [], "<builtin>.Exception": [], "caffe2.python._import_c_extension.NNModule": [], "nomnigraph.NNModule.dataFlow": [], "nomnigraph.NNModule.controlFlow": [], "nomnigraph.NNModule.nodes": [], "nomnigraph.NNModule.operators": [], "nomnigraph.NNModule.tensors": [], "nomnigraph.NNModule.createNode": [], "nomnigraph.NNModule.deleteNode": [], "nomnigraph.NNModule.createEdge": [], "nomnigraph.NNModule.deleteEdge": [], "nomnigraph.NNModule.replaceNode": [], "nomnigraph.NNModule.replaceProducer": ["caffe2.python._import_c_extension.replaceProducer"], "caffe2.python._import_c_extension.replaceProducer": [], "nomnigraph.NNModule.replaceAllUsesWith": ["caffe2.python._import_c_extension.replaceAllUsesWith"], "caffe2.python._import_c_extension.replaceAllUsesWith": [], "nomnigraph.NNModule.replaceAsConsumer": ["caffe2.python._import_c_extension.replaceAsConsumer"], "caffe2.python._import_c_extension.replaceAsConsumer": [], "nomnigraph.NNModule.replaceSubgraph": [], "nomnigraph.NNModule.deleteSubgraph": [], "nomnigraph.NNModule.createUniqueDataNode": [], "nomnigraph.NNModule.convertToCaffe2Proto": ["caffe2.proto.caffe2_pb2.NetDef"], "caffe2.proto.caffe2_pb2.NetDef": [], "nomnigraph.NNModule.match": ["caffe2.python._import_c_extension.matchSubgraph"], "caffe2.python._import_c_extension.matchSubgraph": [], "nomnigraph.render": ["nomnigraph.render.<lambda1>", "<builtin>.str", "subprocess.Popen", "<builtin>.print"], "<builtin>.str": [], "nomnigraph.render.<lambda1>": ["<builtin>.any", "os.getenv", "os.access", "os.path.join"], "os.path.join": [], "os.access": [], "os.getenv": [], "<builtin>.any": [], "subprocess.Popen": [], "<builtin>.print": []}