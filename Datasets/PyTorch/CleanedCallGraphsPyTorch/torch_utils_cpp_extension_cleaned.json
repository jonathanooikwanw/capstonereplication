{"cpp_extension": ["<builtin>.tuple", "_cpp_extension_versioner.ExtensionVersioner", "cpp_extension._find_rocm_home", "torch.version.hip.split", "os.path.dirname", "os.path.join", "os.getenv", "<builtin>.int", "cpp_extension._find_cuda_home", "re.compile", "os.environ.get", "os.path.abspath", "os.path.exists", "cpp_extension._join_rocm_home"], "os.path.abspath": [], "os.path.dirname": [], "os.path.join": [], "os.getenv": [], "os.path.exists": [], "cpp_extension._nt_quote_args": [], "cpp_extension._find_cuda_home": ["glob.glob", "torch.cuda.is_available", "os.path.dirname", "os.path.exists", "os.environ.get", "subprocess.check_output", "<builtin>.print", "<builtin>.open", "<builtin>.len"], "os.environ.get": [], "<builtin>.open": [], "subprocess.check_output": [], "glob.glob": [], "<builtin>.len": [], "torch.cuda.is_available": [], "<builtin>.print": [], "cpp_extension._find_rocm_home": ["os.path.dirname", "subprocess.Popen", "os.environ.get", "<builtin>.print", "os.path.basename", "os.path.exists"], "subprocess.Popen": [], "os.path.basename": [], "cpp_extension._join_rocm_home": ["<builtin>.EnvironmentError", "os.path.join"], "<builtin>.EnvironmentError": [], "<builtin>.int": [], "torch.version.hip.split": [], "<builtin>.tuple": [], "re.compile": [], "_cpp_extension_versioner.ExtensionVersioner": [], "cpp_extension._is_binary_build": [], "cpp_extension._accepted_compilers_for_platform": ["sys.platform.startswith"], "sys.platform.startswith": [], "cpp_extension.get_default_build_root": ["os.path.realpath", "torch._appdirs.user_cache_dir"], "torch._appdirs.user_cache_dir": [], "os.path.realpath": [], "cpp_extension.check_compiler_ok_for_platform": ["cpp_extension._accepted_compilers_for_platform", "sys.platform.startswith", "re.compile", "os.path.realpath", "<builtin>.any", "subprocess.check_output", "re.findall", "<builtin>.len"], "<builtin>.any": [], "re.findall": [], "cpp_extension.check_compiler_abi_compatibility": ["cpp_extension._accepted_compilers_for_platform", "sys.platform.startswith", "<builtin>.tuple", "cpp_extension._is_binary_build", "sys.exc_info", "cpp_extension.check_compiler_ok_for_platform", "re.search", "os.environ.get", "<builtin>.map", "subprocess.check_output", "warnings.warn"], "warnings.warn": [], "re.search": [], "sys.exc_info": [], "<builtin>.map": [], "cpp_extension.BuildExtension.with_options": [], "cpp_extension.BuildExtension.with_options.cls_with_options.__init__": ["<builtin>.super"], "<builtin>.super": [], "cpp_extension.BuildExtension.__init__": ["cpp_extension.is_ninja_available", "<builtin>.super", "warnings.warn"], "cpp_extension.is_ninja_available": ["subprocess.check_output"], "cpp_extension.BuildExtension.finalize_options": ["<builtin>.super"], "cpp_extension.BuildExtension.build_extensions": ["cpp_extension.BuildExtension._define_torch_extension_name", "cpp_extension.BuildExtension._add_compile_flag", "cpp_extension.BuildExtension._add_gnu_cpp_abi_flag", "cpp_extension.BuildExtension._check_abi", "<builtin>.iter", "<builtin>.getattr", "setuptools.command.build_ext.build_ext.build_extensions", "os.path.splitext", "cpp_extension.BuildExtension._check_cuda_version", "<builtin>.isinstance", "<builtin>.next"], "cpp_extension.BuildExtension._check_abi": ["cpp_extension.check_compiler_abi_compatibility", "os.environ.get", "<builtin>.hasattr", "<builtin>.UserWarning"], "<builtin>.iter": [], "<builtin>.next": [], "os.path.splitext": [], "cpp_extension.BuildExtension._check_cuda_version": ["pkg_resources.packaging.version.parse", "os.path.join", "<builtin>.float", "re.search", "subprocess.check_output", "<builtin>.RuntimeError", "<builtin>.getattr", "warnings.warn"], "<builtin>.isinstance": [], "cpp_extension.BuildExtension._add_compile_flag": ["copy.deepcopy", "<builtin>.isinstance", "setuptools.command.build_ext.build_ext.extensions.extra_compile_args.append", "setuptools.command.build_ext.build_ext.extensions.extra_compile_args.values"], "<builtin>.getattr": [], "cpp_extension.BuildExtension._define_torch_extension_name": ["cpp_extension.BuildExtension._add_compile_flag", "setuptools.command.build_ext.build_ext.extensions.name.split"], "cpp_extension.BuildExtension._add_gnu_cpp_abi_flag": ["cpp_extension.BuildExtension._add_compile_flag", "<builtin>.int", "<builtin>.str"], "cpp_extension.BuildExtension.build_extensions.append_std14_if_no_std_present": ["<builtin>.any"], "cpp_extension.BuildExtension.build_extensions.unix_cuda_flags": ["cpp_extension._get_cuda_arch_flags", "<builtin>.any", "os.getenv"], "cpp_extension._get_cuda_arch_flags": ["torch.cuda.get_device_capability", "torch.cuda.get_arch_list", "<builtin>.range", "<builtin>.min", "<builtin>.max", "<builtin>.int", "os.environ.get", "torch.cuda.device_count", "<builtin>.list", "<builtin>.set", "<builtin>.sorted", "<builtin>.ValueError", "collections.OrderedDict"], "cpp_extension.BuildExtension.build_extensions.convert_to_absolute_paths_inplace": ["os.path.abspath", "os.path.isabs", "<builtin>.len", "<builtin>.range"], "<builtin>.range": [], "os.path.isabs": [], "cpp_extension.BuildExtension.build_extensions.unix_wrap_single_compile": ["cpp_extension.BuildExtension.build_extensions.append_std14_if_no_std_present", "setuptools.command.build_ext.build_ext.compiler.set_executable", "cpp_extension._is_cuda_file", "setuptools.command.build_ext.build_ext.compiler._compile", "cpp_extension._join_cuda_home", "copy.deepcopy", "<builtin>.isinstance", "cpp_extension._get_rocm_arch_flags", "cpp_extension.BuildExtension.build_extensions.unix_cuda_flags", "cpp_extension._join_rocm_home"], "copy.deepcopy": [], "cpp_extension._is_cuda_file": ["os.path.splitext"], "cpp_extension._join_cuda_home": ["<builtin>.EnvironmentError", "os.path.join"], "setuptools.command.build_ext.build_ext.compiler.set_executable": [], "cpp_extension._get_rocm_arch_flags": ["os.environ.get"], "setuptools.command.build_ext.build_ext.compiler._compile": [], "cpp_extension.BuildExtension.build_extensions.unix_wrap_ninja_compile": ["shlex.quote", "cpp_extension._write_ninja_file_and_compile_objects", "cpp_extension.BuildExtension.build_extensions.append_std14_if_no_std_present", "setuptools.command.build_ext.build_ext.compiler._setup_compile", "<builtin>.map", "<builtin>.any", "os.path.abspath", "<builtin>.list", "cpp_extension.BuildExtension.build_extensions.convert_to_absolute_paths_inplace", "<builtin>.isinstance", "cpp_extension._get_rocm_arch_flags", "setuptools.command.build_ext.build_ext.compiler._get_cc_args", "cpp_extension.BuildExtension.build_extensions.unix_cuda_flags"], "setuptools.command.build_ext.build_ext.compiler._setup_compile": [], "setuptools.command.build_ext.build_ext.compiler._get_cc_args": [], "<builtin>.list": [], "shlex.quote": [], "cpp_extension._write_ninja_file_and_compile_objects": ["cpp_extension.check_compiler_abi_compatibility", "cpp_extension._run_ninja_build", "cpp_extension.verify_ninja_availability", "os.path.join", "os.environ.get", "<builtin>.any", "<builtin>.map", "cpp_extension._write_ninja_file", "<builtin>.print"], "cpp_extension.BuildExtension.build_extensions.win_cuda_flags": ["cpp_extension._get_cuda_arch_flags"], "cpp_extension.BuildExtension.build_extensions.win_wrap_single_compile": ["copy.deepcopy", "setuptools.command.build_ext.build_ext.compiler._compile"], "cpp_extension.BuildExtension.build_extensions.win_wrap_single_compile.spawn": ["cpp_extension.BuildExtension.build_extensions.win_cuda_flags", "re.compile", "setuptools.command.build_ext.build_ext.compiler.spawn", "cpp_extension._join_cuda_home", "cpp_extension._is_cuda_file", "<builtin>.isinstance", "<builtin>.len"], "setuptools.command.build_ext.build_ext.compiler.spawn": [], "cpp_extension.BuildExtension.build_extensions.win_wrap_ninja_compile": ["cpp_extension._write_ninja_file_and_compile_objects", "cpp_extension.BuildExtension.build_extensions.append_std14_if_no_std_present", "cpp_extension.BuildExtension.build_extensions.win_cuda_flags", "setuptools.command.build_ext.build_ext.compiler._setup_compile", "setuptools.command.build_ext.build_ext.compiler.initialize", "<builtin>.map", "<builtin>.any", "os.path.abspath", "<builtin>.list", "cpp_extension.BuildExtension.build_extensions.convert_to_absolute_paths_inplace", "<builtin>.isinstance", "cpp_extension._nt_quote_args"], "setuptools.command.build_ext.build_ext.compiler.initialize": [], "setuptools.command.build_ext.build_ext.build_extensions": [], "cpp_extension.BuildExtension.get_ext_filename": ["<builtin>.super"], "<builtin>.hasattr": [], "<builtin>.UserWarning": [], "pkg_resources.packaging.version.parse": [], "<builtin>.float": [], "<builtin>.RuntimeError": [], "setuptools.command.build_ext.build_ext.extensions.extra_compile_args.values": [], "setuptools.command.build_ext.build_ext.extensions.extra_compile_args.append": [], "setuptools.command.build_ext.build_ext.extensions.name.split": [], "<builtin>.str": [], "cpp_extension.CppExtension": ["cpp_extension.include_paths", "setuptools.Extension", "cpp_extension.library_paths"], "cpp_extension.include_paths": ["cpp_extension._join_cuda_home", "os.path.join", "cpp_extension._join_rocm_home"], "cpp_extension.library_paths": ["os.path.join", "cpp_extension._join_cuda_home", "os.path.exists", "cpp_extension._join_rocm_home"], "setuptools.Extension": [], "cpp_extension.CUDAExtension": ["setuptools.Extension", "os.getcwd", "os.path.join", "cpp_extension.include_paths", "cpp_extension.library_paths", "<builtin>.list", "os.path.abspath", "hipify.hipify_python.hipify", "os.path.relpath", "<builtin>.set"], "os.getcwd": [], "os.path.relpath": [], "hipify.hipify_python.hipify": [], "<builtin>.set": [], "cpp_extension.load": ["cpp_extension._jit_compile", "<builtin>.isinstance", "cpp_extension._get_build_directory"], "cpp_extension._get_build_directory": ["torch.version.cuda.replace", "os.path.join", "os.environ.get", "cpp_extension.get_default_build_root", "<builtin>.print", "os.makedirs", "os.path.exists"], "cpp_extension._jit_compile": ["cpp_extension._import_module_from_library", "cpp_extension._get_exec_path", "hipify.hipify_python.GeneratedFileCleaner", "file_baton.FileBaton", "os.path.join", "cpp_extension._write_ninja_file_and_build_library", "<builtin>.map", "<builtin>.any", "os.path.abspath", "hipify.hipify_python.hipify", "<builtin>.print", "<builtin>.ValueError"], "cpp_extension.load_inline": ["<builtin>.type", "<builtin>.dict", "cpp_extension._jit_compile", "os.path.join", "cpp_extension._get_build_directory", "<builtin>.isinstance", "<builtin>.open", "<builtin>.ValueError"], "<builtin>.dict": [], "<builtin>.type": [], "<builtin>.ValueError": [], "file_baton.FileBaton": [], "hipify.hipify_python.GeneratedFileCleaner": [], "cpp_extension._write_ninja_file_and_build_library": ["cpp_extension.check_compiler_abi_compatibility", "cpp_extension._run_ninja_build", "cpp_extension.verify_ninja_availability", "cpp_extension._prepare_ldflags", "os.path.join", "os.environ.get", "<builtin>.any", "<builtin>.map", "<builtin>.print", "cpp_extension._write_ninja_file_to_build_library"], "cpp_extension._get_exec_path": ["os.path.join", "os.getenv", "<builtin>.any", "os.path.samefile", "os.path.exists"], "cpp_extension._import_module_from_library": ["torch.ops.load_library", "importlib.util.module_from_spec", "os.path.join", "importlib.util.spec_from_file_location", "<builtin>.isinstance"], "cpp_extension.verify_ninja_availability": ["cpp_extension.is_ninja_available", "<builtin>.RuntimeError"], "cpp_extension._write_ninja_file": ["pkg_resources.packaging.version.parse", "<builtin>.zip", "os.path.dirname", "cpp_extension._write_ninja_file.sanitize_flags", "os.environ.get", "os.path.abspath", "subprocess.check_output", "cpp_extension._join_cuda_home", "<builtin>.RuntimeError", "cpp_extension._is_cuda_file", "<builtin>.open", "<builtin>.len", "cpp_extension._join_rocm_home"], "cpp_extension._run_ninja_build": ["sys.exc_info", "os.environ.copy", "setuptools.distutils.util.get_platform", "cpp_extension._get_num_workers", "subprocess.run", "<builtin>.RuntimeError", "setuptools.distutils._msvccompiler._get_vc_env", "sys.stderr.flush", "<builtin>.hasattr", "sys.stdout.flush"], "cpp_extension._prepare_ldflags": ["torch.__config__.parallel_info", "os.path.join", "os.path.dirname", "cpp_extension._join_cuda_home", "<builtin>.print", "cpp_extension._join_rocm_home"], "cpp_extension._write_ninja_file_to_build_library": ["sys.platform.startswith", "cpp_extension._get_cuda_arch_flags", "cpp_extension._write_ninja_file_to_build_library.object_file_path", "os.path.join", "<builtin>.int", "hipify.hipify_python.get_hip_file_path", "cpp_extension.include_paths", "os.getenv", "cpp_extension._write_ninja_file", "<builtin>.any", "os.path.abspath", "<builtin>.str", "os.path.relpath", "cpp_extension._is_cuda_file", "<builtin>.getattr", "cpp_extension._get_rocm_arch_flags", "sysconfig.get_path", "cpp_extension._nt_quote_args"], "torch.__config__.parallel_info": [], "collections.OrderedDict": [], "torch.cuda.device_count": [], "torch.cuda.get_device_capability": [], "torch.cuda.get_arch_list": [], "<builtin>.max": [], "<builtin>.min": [], "<builtin>.sorted": [], "torch.version.cuda.replace": [], "os.makedirs": [], "cpp_extension._get_num_workers": ["<builtin>.print", "os.environ.get", "<builtin>.int"], "os.environ.copy": [], "setuptools.distutils.util.get_platform": [], "setuptools.distutils._msvccompiler._get_vc_env": [], "sys.stdout.flush": [], "sys.stderr.flush": [], "subprocess.run": [], "os.path.samefile": [], "importlib.util.spec_from_file_location": [], "importlib.util.module_from_spec": [], "torch.ops.load_library": [], "sysconfig.get_path": [], "hipify.hipify_python.get_hip_file_path": [], "cpp_extension._write_ninja_file_to_build_library.object_file_path": ["os.path.splitext", "cpp_extension._is_cuda_file", "os.path.basename"], "cpp_extension._write_ninja_file.sanitize_flags": [], "<builtin>.zip": []}