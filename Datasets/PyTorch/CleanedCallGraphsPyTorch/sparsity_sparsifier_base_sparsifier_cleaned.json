{"base_sparsifier": [], "base_sparsifier._module_to_fqn": ["base_sparsifier._module_to_fqn"], "base_sparsifier._fqn_to_module": ["<builtin>.getattr"], "<builtin>.getattr": [], "base_sparsifier.BaseSparsifier.__init__": ["<builtin>.dict", "collections.defaultdict", "<builtin>.super"], "<builtin>.super": [], "<builtin>.dict": [], "collections.defaultdict": [], "base_sparsifier.BaseSparsifier.__getstate__": [], "base_sparsifier.BaseSparsifier.__setstate__": ["abc.ABC.__dict__.update"], "abc.ABC.__dict__.update": [], "base_sparsifier.BaseSparsifier.__repr__": ["<builtin>.enumerate", "<builtin>.sorted"], "<builtin>.enumerate": [], "<builtin>.sorted": [], "base_sparsifier.BaseSparsifier._pack_state": ["collections.defaultdict", "<builtin>.isinstance"], "<builtin>.isinstance": [], "base_sparsifier.BaseSparsifier.state_dict": ["base_sparsifier.BaseSparsifier._pack_state", "<builtin>.dict", "<builtin>.filter"], "base_sparsifier.BaseSparsifier.state_dict.<lambda1>": [], "<builtin>.filter": [], "base_sparsifier.BaseSparsifier.load_state_dict": ["<builtin>.RuntimeError", "torch.ones", "torch.nn.utils.parametrize.register_parametrization", "copy.deepcopy", "utils.FakeSparsity", "<builtin>.isinstance", "base_sparsifier._fqn_to_module", "base_sparsifier.BaseSparsifier.__setstate__"], "copy.deepcopy": [], "<builtin>.RuntimeError": [], "torch.ones": [], "utils.FakeSparsity": [], "torch.nn.utils.parametrize.register_parametrization": [], "base_sparsifier.BaseSparsifier.prepare": ["copy.deepcopy", "<builtin>.type", "<builtin>.isinstance", "base_sparsifier.BaseSparsifier._prepare", "base_sparsifier._module_to_fqn"], "<builtin>.type": [], "base_sparsifier.BaseSparsifier._prepare": ["torch.ones", "torch.nn.utils.parametrize.register_parametrization"], "base_sparsifier.BaseSparsifier.squash_mask": ["torch.nn.utils.parametrize.remove_parametrizations"], "torch.nn.utils.parametrize.remove_parametrizations": [], "base_sparsifier.BaseSparsifier.convert": ["<builtin>.NotImplementedError"], "<builtin>.NotImplementedError": [], "base_sparsifier.BaseSparsifier.step": ["base_sparsifier.BaseSparsifier.update_mask", "torch.no_grad"], "torch.no_grad": [], "base_sparsifier.BaseSparsifier.update_mask": [], "base_sparsifier.BaseSparsifier": ["abc.abstractmethod"], "abc.abstractmethod": []}