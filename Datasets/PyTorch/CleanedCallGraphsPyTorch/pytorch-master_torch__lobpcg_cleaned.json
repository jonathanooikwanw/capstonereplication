{"_lobpcg": [], "_lobpcg._symeig_backward_complete_eigenspace": ["torch.matmul", "<builtin>.float", "torch.diag_embed"], "<builtin>.float": [], "torch.diag_embed": [], "torch.matmul": [], "_lobpcg._polynomial_coefficients_given_roots": ["<builtin>.range", "<builtin>.list"], "<builtin>.list": [], "<builtin>.range": [], "_lobpcg._polynomial_value": ["_lobpcg._vector_polynomial_value.transition", "<builtin>.range", "_lobpcg._matrix_polynomial_value.transition"], "_lobpcg._vector_polynomial_value.transition": ["torch.addcmul"], "_lobpcg._matrix_polynomial_value.transition": [], "_lobpcg._matrix_polynomial_value": ["_lobpcg._polynomial_value", "torch.eye", "<builtin>.len", "<builtin>.list"], "<builtin>.len": [], "torch.eye": [], "_lobpcg._vector_polynomial_value": ["_lobpcg._polynomial_value"], "torch.addcmul": [], "_lobpcg._symeig_backward_partial_eigenspace": ["torch.Generator", "torch.randn", "torch.linalg.cholesky", "torch.matmul", "_lobpcg._polynomial_coefficients_given_roots", "_lobpcg._symeig_backward_complete_eigenspace", "_lobpcg._matrix_polynomial_value", "torch.cholesky_solve", "_lobpcg._vector_polynomial_value", "<builtin>.range"], "torch.Generator": [], "torch.randn": [], "torch.linalg.cholesky": [], "torch.cholesky_solve": [], "_lobpcg._symeig_backward": ["_lobpcg._symeig_backward_complete_eigenspace", "_lobpcg._symeig_backward_partial_eigenspace"], "_lobpcg.LOBPCGAutogradFunction.forward": ["_lobpcg._lobpcg"], "_lobpcg._lobpcg": ["<builtin>.int", "torch.empty", "torch.randn", "<builtin>.len", "_lobpcg.LOBPCG.run", "torch.prod", "_lobpcg.LOBPCG.__init__", "torch.jit.is_scripting", "_linalg_utils.get_floating_dtype", "torch.tensor", "<builtin>.range", "<builtin>.ValueError"], "_lobpcg.LOBPCGAutogradFunction.backward": ["_lobpcg._symeig_backward", "<builtin>.tuple", "<builtin>.ValueError"], "<builtin>.ValueError": [], "<builtin>.tuple": [], "_lobpcg.lobpcg": ["<builtin>.map", "<builtin>.RuntimeError", "<builtin>.type", "overrides.handle_torch_function", "torch.jit.is_scripting", "overrides.has_torch_function", "torch._jit_internal.is_scripting", "torch.autograd.Function.apply", "_lobpcg._lobpcg", "<builtin>.set"], "torch.jit.is_scripting": [], "<builtin>.type": [], "<builtin>.map": [], "<builtin>.set": [], "overrides.has_torch_function": [], "overrides.handle_torch_function": [], "torch._jit_internal.is_scripting": [], "torch.autograd.Function.apply": [], "<builtin>.RuntimeError": [], "_linalg_utils.get_floating_dtype": [], "torch.tensor": [], "torch.prod": [], "<builtin>.int": [], "torch.empty": [], "_lobpcg.LOBPCG.__init__": ["torch.zeros"], "_lobpcg.LOBPCG.run": ["_lobpcg.LOBPCG.update", "torch.jit.is_scripting", "_lobpcg.LOBPCG_call_tracker", "_lobpcg.LOBPCG.call_tracker", "_lobpcg.LOBPCG.stop_iteration"], "torch.zeros": [], "_lobpcg.LOBPCG.__str__": [], "_lobpcg.LOBPCG.update": ["<builtin>.float", "_lobpcg.LOBPCG._update_ortho", "_lobpcg.LOBPCG._update_basic", "torch.norm", "_linalg_utils.matmul"], "torch.norm": [], "_linalg_utils.matmul": [], "_lobpcg.LOBPCG._update_ortho": ["_linalg_utils.transpose", "_linalg_utils.basis", "torch.matmul", "_lobpcg.LOBPCG.update_residual", "_lobpcg.LOBPCG._get_rayleigh_ritz_transform", "_linalg_utils.qform", "_lobpcg.LOBPCG.update_converged_count", "_lobpcg.LOBPCG._get_ortho", "_linalg_utils.symeig"], "_lobpcg.LOBPCG._update_basic": ["torch.matmul", "_lobpcg.LOBPCG.update_residual", "_lobpcg.LOBPCG._get_rayleigh_ritz_transform", "_linalg_utils.qform", "_lobpcg.LOBPCG.update_converged_count", "_linalg_utils.matmul", "_linalg_utils.symeig"], "_lobpcg.LOBPCG.update_residual": ["_linalg_utils.matmul"], "_lobpcg.LOBPCG.update_converged_count": ["torch.norm"], "_lobpcg.LOBPCG.stop_iteration": [], "_lobpcg.LOBPCG_call_tracker": [], "_lobpcg.LOBPCG.call_tracker": [], "_lobpcg.LOBPCG": ["torch.jit.unused"], "torch.jit.unused": [], "_lobpcg.LOBPCG._get_rayleigh_ritz_transform": ["torch.inverse", "_linalg_utils.qform", "torch.linalg.cholesky"], "_linalg_utils.qform": [], "_linalg_utils.symeig": [], "_lobpcg.LOBPCG._get_ortho": ["_linalg_utils.transpose", "<builtin>.float", "torch.numel", "torch.norm", "torch.matmul", "<builtin>.list", "torch.eye", "_linalg_utils.matmul", "<builtin>.range", "_lobpcg.LOBPCG._get_svqb", "<builtin>.ValueError"], "_linalg_utils.transpose": [], "_linalg_utils.basis": [], "torch.inverse": [], "_lobpcg.LOBPCG._get_svqb": ["_linalg_utils.transpose", "<builtin>.len", "<builtin>.abs", "torch.numel", "torch.matmul", "_linalg_utils.qform", "torch.where", "_linalg_utils.symeig"], "torch.numel": [], "<builtin>.abs": [], "torch.where": []}