{"broadcast": ["broadcast.register_broadcast_ops"], "broadcast.BroadcastMulBench.__init__": ["<builtin>.super", "<builtin>.ValueError", "benchmark.Benchmark.rand"], "<builtin>.super": [], "benchmark.Benchmark.rand": [], "<builtin>.ValueError": [], "broadcast.BroadcastMulBench.forward": [], "broadcast.BroadcastMulBench.reference": ["benchmark.Benchmark.numpy"], "benchmark.Benchmark.numpy": [], "broadcast.BroadcastMulBench.config": [], "broadcast.BroadcastMulBench.default_configs": [], "broadcast.BroadcastMulBench.memory_workload": [], "broadcast.BroadcastRowBench.__init__": ["<builtin>.super"], "broadcast.BroadcastRowBench.module": [], "broadcast.BroadcastMidBench.__init__": ["<builtin>.super"], "broadcast.BroadcastMidBench.module": [], "broadcast.BroadcastColBench.__init__": ["<builtin>.super"], "broadcast.BroadcastColBench.module": [], "broadcast.BroadcastThreeArgs.__init__": ["<builtin>.super", "benchmark.Benchmark.rand"], "broadcast.BroadcastThreeArgs.forward": [], "broadcast.BroadcastThreeArgs.reference": ["benchmark.Benchmark.numpy"], "broadcast.BroadcastThreeArgs.config": [], "broadcast.BroadcastThreeArgs.default_configs": [], "broadcast.BroadcastThreeArgs.memory_workload": [], "broadcast.BroadcastThreeArgs.module": [], "broadcast.BroadcastBench.__init__": ["<builtin>.super", "benchmark.Benchmark.rand"], "broadcast.BroadcastBench._eval": ["benchmark.Benchmark.__class__.binary_op_pt_func", "benchmark.Benchmark.__class__.unary_op_np_func", "benchmark.Benchmark.__class__.binary_op_np_func", "benchmark.Benchmark.__class__.unary_op_pt_func"], "broadcast.BroadcastBench._eval.binary_op": [], "broadcast.BroadcastBench._eval.unary_op": [], "benchmark.Benchmark.__class__.unary_op_np_func": [], "benchmark.Benchmark.__class__.unary_op_pt_func": [], "benchmark.Benchmark.__class__.binary_op_pt_func": [], "benchmark.Benchmark.__class__.binary_op_np_func": [], "broadcast.BroadcastBench.forward": ["broadcast.BroadcastBench._eval"], "broadcast.BroadcastBench.reference": ["broadcast.BroadcastBench._eval", "benchmark.Benchmark.numpy"], "broadcast.BroadcastBench.config": [], "broadcast.BroadcastBench.module": [], "broadcast.BroadcastBench.memory_workload": ["<builtin>.len"], "<builtin>.len": [], "broadcast.BroadcastBench.default_configs": [], "broadcast.register_broadcast_ops": ["benchmark.register_benchmark_class", "<builtin>.type", "itertools.product", "<builtin>.len"], "broadcast.register_broadcast_ops.<list1>.<list1>.<lambda1>": [], "broadcast.register_broadcast_ops.<list1>.<list2>.<lambda1>": [], "broadcast.register_broadcast_ops.<list1>.<list3>.<lambda1>": [], "broadcast.register_broadcast_ops.<list1>.<list4>.<lambda1>": [], "broadcast.register_broadcast_ops.<list1>.<list5>.<lambda1>": [], "torch.pow": [], "broadcast.register_broadcast_ops.<lambda1>": ["torch.min", "torch.sin", "torch.pow", "torch.max", "torch.cos", "torch.exp", "torch.erf"], "broadcast.register_broadcast_ops.<list1>.<list5>.<lambda2>": [], "numpy.power": [], "broadcast.register_broadcast_ops.<lambda2>": ["numpy.power", "numpy.maximum", "numpy.erf", "numpy.minimum", "numpy.sin", "numpy.exp", "numpy.cos"], "broadcast.register_broadcast_ops.<list1>.<list6>.<lambda1>": [], "torch.max": [], "broadcast.register_broadcast_ops.<list1>.<list6>.<lambda2>": [], "numpy.maximum": [], "broadcast.register_broadcast_ops.<list1>.<list7>.<lambda1>": [], "torch.min": [], "broadcast.register_broadcast_ops.<list1>.<list7>.<lambda2>": [], "numpy.minimum": [], "broadcast.register_broadcast_ops.<list2>.<list1>.<lambda1>": [], "torch.erf": [], "broadcast.register_broadcast_ops.<list2>.<list1>.<lambda2>": [], "numpy.erf": [], "broadcast.register_broadcast_ops.<list2>.<list2>.<lambda1>": [], "torch.exp": [], "broadcast.register_broadcast_ops.<list2>.<list2>.<lambda2>": [], "numpy.exp": [], "broadcast.register_broadcast_ops.<list2>.<list3>.<lambda1>": [], "torch.sin": [], "broadcast.register_broadcast_ops.<list2>.<list3>.<lambda2>": [], "numpy.sin": [], "broadcast.register_broadcast_ops.<list2>.<list4>.<lambda1>": [], "torch.cos": [], "broadcast.register_broadcast_ops.<list2>.<list4>.<lambda2>": [], "numpy.cos": [], "itertools.product": [], "<builtin>.type": [], "benchmark.register_benchmark_class": []}