{"operator_benchmark": [], "benchmark_test_generator": [], "benchmark_test_generator.generate_pt_test": ["benchmark_core._register_test"], "benchmark_core._register_test": [], "benchmark_test_generator.generate_pt_gradient_test": ["benchmark_core._register_test"], "benchmark_test_generator.generate_pt_tests_from_op_list": ["benchmark_core._register_test"], "benchmark_test_generator.generate_pt_gradient_tests_from_op_list": ["benchmark_core._register_test"], "benchmark_pytorch": [], "TorchBenchmarkBase.__init__": ["<builtin>.super"], "<builtin>.super": [], "TorchBenchmarkBase._set_backward_test": [], "TorchBenchmarkBase.auto_set": [], "TorchBenchmarkBase.extract_inputs_tuple": ["<builtin>.tuple"], "<builtin>.tuple": [], "benchmark_pytorch.TorchBenchmarkBase": ["torch.jit.export"], "torch.jit.export": [], "TorchBenchmarkBase.get_inputs": [], "TorchBenchmarkBase.forward_impl": ["TorchBenchmarkBase.get_inputs", "torch.nn.Module.forward"], "torch.nn.Module.forward": [], "TorchBenchmarkBase.forward_consume": ["<builtin>.range", "TorchBenchmarkBase.forward_impl", "torch.ops.operator_benchmark._consume"], "<builtin>.range": [], "torch.ops.operator_benchmark._consume": [], "TorchBenchmarkBase.module_name": [], "TorchBenchmarkBase.set_module_name": [], "TorchBenchmarkBase.test_name": ["torch.nn.Module.__class__.__name__.replace", "TorchBenchmarkBase.module_name", "<builtin>.str", "<builtin>.type", "<builtin>.int"], "<builtin>.type": [], "<builtin>.int": [], "<builtin>.str": [], "torch.nn.Module.__class__.__name__.replace": [], "PyTorchOperatorTestCase.__init__": ["torch.ones"], "torch.ones": [], "PyTorchOperatorTestCase._generate_jit_forward_graph": ["torch.jit.script"], "torch.jit.script": [], "PyTorchOperatorTestCase.run_jit_forward": ["PyTorchOperatorTestCase._generate_jit_forward_graph"], "PyTorchOperatorTestCase._print_per_iter": ["json.dumps", "<builtin>.print", "<builtin>.min", "<builtin>.len", "<builtin>.range"], "<builtin>.len": [], "<builtin>.min": [], "json.dumps": [], "<builtin>.print": [], "PyTorchOperatorTestCase.run_forward": ["torch.cuda.synchronize", "<builtin>.range", "torch.cuda.current_device", "time.time"], "time.time": [], "torch.cuda.current_device": [], "torch.cuda.synchronize": [], "PyTorchOperatorTestCase._output_mean": [], "PyTorchOperatorTestCase.run_backward": ["<builtin>.range"], "benchmark_pytorch.create_pytorch_op_test_case": ["<builtin>.str", "PyTorchOperatorTestCase.__init__"], "benchmark_core": ["collections.namedtuple"], "collections.namedtuple": [], "benchmark_core._create_test": ["<builtin>.str", "json.dumps", "copy.deepcopy", "ast.literal_eval"], "copy.deepcopy": [], "ast.literal_eval": [], "benchmark_core._build_test": ["<builtin>.vars", "copy.deepcopy", "<builtin>.isinstance", "<builtin>.ValueError", "benchmark_core._create_test", "<builtin>.str", "torch.cuda.is_available", "<builtin>.range"], "torch.cuda.is_available": [], "<builtin>.ValueError": [], "<builtin>.vars": [], "<builtin>.isinstance": [], "benchmark_core.BenchmarkRunner.__init__": ["benchmark_utils.get_operator_range"], "benchmark_utils.get_operator_range": ["<builtin>.ord", "<builtin>.all", "<builtin>.set", "<builtin>.chr", "<builtin>.ValueError", "<builtin>.len", "<builtin>.range"], "benchmark_core.BenchmarkRunner._print_header": ["<builtin>.set", "<builtin>.print"], "<builtin>.set": [], "benchmark_core.BenchmarkRunner._print_perf_result": ["<builtin>.range", "json.dumps", "<builtin>.print"], "benchmark_core.BenchmarkRunner._predict_num_iter_needed": [], "benchmark_core.BenchmarkRunner._iteration_result_is_significant": [], "benchmark_core.BenchmarkRunner._launch_forward": ["functools.partial", "timeit.timeit"], "functools.partial": [], "timeit.timeit": [], "benchmark_core.BenchmarkRunner._launch_backward": ["functools.partial", "timeit.timeit"], "benchmark_core.BenchmarkRunner._measure_time": ["benchmark_core.BenchmarkRunner._launch_forward", "<builtin>.print", "json.dumps", "benchmark_core.BenchmarkRunner._launch_backward", "benchmark_core.BenchmarkRunner._predict_num_iter_needed", "numpy.array", "benchmark_core.BenchmarkRunner._iteration_result_is_significant", "numpy.percentile"], "numpy.array": [], "numpy.percentile": [], "benchmark_core.BenchmarkRunner._check_keep": [], "benchmark_core.BenchmarkRunner._check_operator_first_char": [], "benchmark_core.BenchmarkRunner._check_keep_list": ["<builtin>.any"], "<builtin>.any": [], "benchmark_core.BenchmarkRunner._keep_test": ["benchmark_utils.process_arg_list", "benchmark_core.BenchmarkRunner._check_keep_list", "benchmark_core.BenchmarkRunner._check_operator_first_char", "benchmark_core.BenchmarkRunner._check_keep"], "benchmark_utils.process_arg_list": ["<builtin>.len"], "benchmark_core.BenchmarkRunner._print_test_case_info": ["<builtin>.print"], "benchmark_core.BenchmarkRunner.run": ["numpy.random.seed", "benchmark_core._build_test", "benchmark_core.BenchmarkRunner._launch_forward", "<builtin>.hash", "<builtin>.print", "benchmark_core.BenchmarkRunner._keep_test", "benchmark_core.BenchmarkRunner._print_header", "benchmark_core.BenchmarkRunner._print_perf_result", "benchmark_core.BenchmarkRunner._launch_backward", "<builtin>.range", "benchmark_core.BenchmarkRunner._measure_time", "benchmark_core.BenchmarkRunner._print_test_case_info"], "<builtin>.hash": [], "numpy.random.seed": [], "benchmark_utils": [], "benchmark_utils.shape_to_string": ["<builtin>.str"], "benchmark_utils.str2bool": ["<builtin>.isinstance"], "benchmark_utils.numpy_random": ["numpy.random.rand"], "numpy.random.rand": [], "benchmark_utils.set_omp_threads": ["<builtin>.str", "<builtin>.print", "os.environ.get"], "os.environ.get": [], "benchmark_utils.set_mkl_threads": ["<builtin>.str", "<builtin>.print", "os.environ.get"], "benchmark_utils.cross_product": ["<builtin>.list", "itertools.product"], "itertools.product": [], "<builtin>.list": [], "benchmark_utils.get_n_rand_nums": ["random.sample", "<builtin>.range", "random.seed"], "random.seed": [], "random.sample": [], "benchmark_utils.generate_configs": [], "benchmark_utils.cross_product_configs": ["<builtin>.list", "benchmark_utils._validate", "itertools.product"], "benchmark_utils._validate": [], "benchmark_utils.config_list": ["benchmark_utils._validate", "benchmark_utils.cross_product_configs", "<builtin>.any", "<builtin>.ValueError", "<builtin>.enumerate", "<builtin>.list"], "<builtin>.enumerate": [], "benchmark_utils.attr_probs": [], "benchmark_utils.RandomSample.__init__": [], "benchmark_utils.RandomSample._distribution_func": ["<builtin>.sum"], "<builtin>.sum": [], "benchmark_utils.RandomSample._random_sample": ["bisect.bisect", "<builtin>.len", "benchmark_utils.RandomSample._distribution_func", "random.random"], "random.random": [], "bisect.bisect": [], "benchmark_utils.RandomSample.get_one_set_of_inputs": ["<builtin>.str", "benchmark_utils.RandomSample._random_sample"], "benchmark_utils.random_sample_configs": ["<builtin>.ValueError", "<builtin>.range", "benchmark_utils.RandomSample.get_one_set_of_inputs", "benchmark_utils.RandomSample.__init__"], "benchmark_utils.op_list": ["<builtin>.ValueError", "<builtin>.enumerate"], "benchmark_utils.is_caffe2_enabled": [], "benchmark_utils.is_pytorch_enabled": [], "<builtin>.all": [], "<builtin>.ord": [], "<builtin>.chr": [], "benchmark_runner": ["benchmark_runner.main", "argparse.ArgumentParser"], "argparse.ArgumentParser": [], "benchmark_runner.parse_args": ["benchmark_utils.is_pytorch_enabled", "torch.set_num_threads", "benchmark_utils.set_mkl_threads", "benchmark_utils.set_omp_threads"], "torch.set_num_threads": [], "benchmark_runner.main": ["benchmark_runner.parse_args", "benchmark_core.BenchmarkRunner.__init__", "benchmark_core.BenchmarkRunner.run"]}