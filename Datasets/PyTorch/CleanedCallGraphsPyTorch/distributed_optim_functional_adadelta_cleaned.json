{"functional_adadelta": [], "functional_adadelta._FunctionalAdadelta.__init__": ["torch.jit.annotate", "<builtin>.ValueError", "<builtin>.len"], "<builtin>.len": [], "<builtin>.ValueError": [], "torch.jit.annotate": [], "functional_adadelta._FunctionalAdadelta.step": ["<builtin>.ValueError", "<builtin>.len", "torch.optim._functional.adadelta", "torch.tensor", "<builtin>.zip", "torch.no_grad", "torch.zeros_like"], "<builtin>.zip": [], "torch.tensor": [], "torch.zeros_like": [], "torch.no_grad": [], "torch.optim._functional.adadelta": []}