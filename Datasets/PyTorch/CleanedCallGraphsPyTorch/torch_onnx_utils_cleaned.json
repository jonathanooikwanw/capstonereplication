{"utils": ["re.compile", "contextlib.contextmanager"], "utils.is_in_onnx_export": [], "contextlib.contextmanager": [], "utils.select_model_mode_for_export": ["warnings.warn", "torch.onnx.symbolic_helper._set_training_mode", "<builtin>.isinstance"], "<builtin>.isinstance": [], "warnings.warn": [], "torch.onnx.symbolic_helper._set_training_mode": [], "utils.export": ["utils._export"], "utils._export": ["utils._decide_input_format", "utils._model_to_graph", "<builtin>.len", "utils.select_model_mode_for_export", "<builtin>.RuntimeError", "zipfile.ZipFile", "utils._decide_constant_folding", "torch.serialization._open_file_like", "<builtin>.isinstance", "utils._decide_keep_init_as_input", "utils._decide_external_data_format", "os.path.exists", "os.path.isdir", "os.makedirs", "torch.onnx.symbolic_helper._set_operator_export_type", "utils._decide_add_node_names", "<builtin>.ValueError", "torch._C._check_onnx_proto", "os.path.join", "utils._validate_dynamic_axes", "torch.onnx.symbolic_helper._set_onnx_shape_inference", "torch.onnx.symbolic_helper._set_opset_version"], "utils._is_constant_tensor_list": ["torch._C.ListType", "torch._C.OptionalType.ofTensor", "torch._C.ListType.ofTensors"], "torch._C.ListType.ofTensors": [], "torch._C.OptionalType.ofTensor": [], "torch._C.ListType": [], "utils._split_tensor_list_constants": ["utils._is_constant_tensor_list", "utils._split_tensor_list_constants", "torch._C.ListType.ofTensors"], "utils._optimize_graph": ["torch._C._jit_pass_inline_fork_wait", "torch._C._jit_pass_onnx_set_dynamic_input_shape", "torch._C._jit_pass_constant_propagation", "torch._C._jit_pass_inline", "torch._C._jit_pass_peephole", "torch._C._jit_pass_onnx", "torch._C._jit_pass_onnx_fold_if", "utils._split_tensor_list_constants", "torch._C._jit_pass_onnx_scalar_type_analysis", "torch._C._jit_pass_onnx_preprocess", "torch._C._jit_pass_dce_allow_deleting_nodes_with_side_effects", "torch._C._jit_pass_onnx_peephole", "torch._C._jit_pass_onnx_preprocess_caffe2", "torch._C._jit_pass_onnx_remove_inplace_ops_for_onnx", "torch._C._jit_pass_lower_all_tuples", "torch._C._jit_pass_canonicalize_graph_fuser_ops", "torch._C._jit_pass_onnx_unpack_quantized_weights", "torch.onnx.symbolic_helper._quantized_ops.clear", "torch._C._jit_pass_onnx_graph_shape_type_inference", "torch._C._jit_pass_custom_pattern_based_rewrite_graph", "torch._C._jit_pass_lint", "torch._C._jit_pass_dce", "torch._C._jit_pass_onnx_remove_print", "torch._C._jit_pass_fuse_addmm", "torch._C._jit_pass_prepare_division_for_onnx", "torch._C._jit_pass_canonicalize", "torch._C._jit_pass_onnx_quantization_insert_permutes", "torch._C._jit_pass_erase_number_types"], "torch._C._jit_pass_inline": [], "torch._C._jit_pass_inline_fork_wait": [], "torch._C._jit_pass_lint": [], "torch._C._jit_pass_lower_all_tuples": [], "torch._C._jit_pass_constant_propagation": [], "torch._C._jit_pass_dce": [], "torch._C._jit_pass_canonicalize_graph_fuser_ops": [], "torch._C._jit_pass_peephole": [], "torch._C._jit_pass_fuse_addmm": [], "torch._C._jit_pass_onnx_remove_inplace_ops_for_onnx": [], "torch._C._jit_pass_onnx_preprocess": [], "torch._C._jit_pass_prepare_division_for_onnx": [], "torch._C._jit_pass_onnx_remove_print": [], "torch._C._jit_pass_onnx_preprocess_caffe2": [], "torch.onnx.symbolic_helper._quantized_ops.clear": [], "torch._C._jit_pass_onnx_unpack_quantized_weights": [], "torch._C._jit_pass_onnx_quantization_insert_permutes": [], "torch._C._jit_pass_custom_pattern_based_rewrite_graph": [], "torch._C._jit_pass_erase_number_types": [], "torch._C._jit_pass_onnx_set_dynamic_input_shape": [], "torch._C._jit_pass_onnx": [], "torch._C._jit_pass_onnx_scalar_type_analysis": [], "torch._C._jit_pass_onnx_fold_if": [], "torch._C._jit_pass_onnx_peephole": [], "torch._C._jit_pass_dce_allow_deleting_nodes_with_side_effects": [], "torch._C._jit_pass_canonicalize": [], "torch._C._jit_pass_onnx_graph_shape_type_inference": [], "utils.warn_on_static_input_change": ["<builtin>.list", "warnings.warn", "<builtin>.isinstance", "<builtin>.zip"], "<builtin>.zip": [], "<builtin>.list": [], "utils._resolve_args_by_export_type": ["warnings.warn"], "utils._decide_keep_init_as_input": ["warnings.warn"], "utils._decide_add_node_names": ["utils._resolve_args_by_export_type"], "utils._decide_constant_folding": ["warnings.warn", "utils._resolve_args_by_export_type"], "utils._decide_external_data_format": ["<builtin>.str", "utils._resolve_args_by_export_type", "<builtin>.isinstance"], "<builtin>.str": [], "utils._decide_input_format": ["<builtin>.tuple", "warnings.warn", "<builtin>.len", "<builtin>.isinstance", "<builtin>.list", "inspect.signature"], "inspect.signature": [], "<builtin>.len": [], "<builtin>.tuple": [], "utils._trace": ["utils.warn_on_static_input_change", "<builtin>.isinstance", "utils._optimize_graph", "torch.jit._get_trace_graph"], "torch.jit._get_trace_graph": [], "utils._trace_and_get_graph_from_model": ["utils.warn_on_static_input_change", "torch.jit._unique_state_dict", "<builtin>.RuntimeError", "torch.jit._get_trace_graph"], "torch.jit._unique_state_dict": [], "<builtin>.RuntimeError": [], "utils._get_param_count_list": ["<builtin>.len", "<builtin>.str", "<builtin>.zip", "torch.jit._flatten"], "torch.jit._flatten": [], "utils._create_jit_graph": ["<builtin>.tuple", "utils._get_param_count_list", "torch.jit._unique_state_dict", "torch._C._freeze_module", "torch._C._jit_pass_onnx_function_substitution", "<builtin>.isinstance", "utils._trace_and_get_graph_from_model", "<builtin>.len", "torch._C._propagate_and_assign_input_shapes", "<builtin>.RuntimeError", "<builtin>.list", "torch._C._jit_onnx_list_model_parameters", "<builtin>.enumerate", "torch.jit._flatten"], "torch._C._jit_pass_onnx_function_substitution": [], "torch._C._freeze_module": [], "torch._C._jit_onnx_list_model_parameters": [], "torch._C._propagate_and_assign_input_shapes": [], "<builtin>.enumerate": [], "utils._get_named_param_dict": ["<builtin>.dict", "<builtin>.zip", "<builtin>.len"], "<builtin>.dict": [], "utils._model_to_graph": ["<builtin>.len", "<builtin>.sum", "torch._C._jit_pass_onnx_eval_peephole", "<builtin>.tuple", "torch._C._jit_pass_filter_non_tensor_arguments", "<builtin>.isinstance", "torch._C._jit_pass_onnx_constant_fold", "torch._C._jit_pass_dce_allow_deleting_nodes_with_side_effects", "torch._C._jit_pass_onnx_eliminate_unused_items", "torch.jit._flatten", "utils._optimize_graph", "<builtin>.print", "utils._get_named_param_dict", "torch._C._jit_pass_onnx_cast_all_constant_to_floating", "utils._set_input_and_output_names", "torch._C._jit_pass_onnx_graph_shape_type_inference", "utils._create_jit_graph", "torch._C._jit_decay_packed_param_input_types", "torch._C._jit_flatten", "torch._C._jit_pass_onnx_assign_output_shape"], "torch._C._jit_pass_onnx_assign_output_shape": [], "torch._C._jit_flatten": [], "utils._set_input_and_output_names": ["<builtin>.list", "utils._set_input_and_output_names.set_names"], "<builtin>.sum": [], "torch._C._jit_pass_onnx_eval_peephole": [], "torch._C._jit_pass_onnx_constant_fold": [], "torch._C._jit_pass_onnx_eliminate_unused_items": [], "torch._C._jit_pass_onnx_cast_all_constant_to_floating": [], "<builtin>.print": [], "torch._C._jit_pass_filter_non_tensor_arguments": [], "torch._C._jit_decay_packed_param_input_types": [], "utils.export_to_pretty_string": ["utils._export_to_pretty_string"], "utils._export_to_pretty_string": ["utils._decide_input_format", "utils._model_to_graph", "utils._decide_add_node_names", "utils._decide_keep_init_as_input", "utils.select_model_mode_for_export", "torch.onnx.symbolic_helper._set_opset_version", "utils._decide_constant_folding", "torch.onnx.symbolic_helper._set_onnx_shape_inference", "torch.onnx.symbolic_helper._set_operator_export_type"], "torch.onnx.symbolic_helper._set_opset_version": [], "torch.onnx.symbolic_helper._set_operator_export_type": [], "torch.onnx.symbolic_helper._set_onnx_shape_inference": [], "utils._find_missing_ops_onnx_export": ["utils._decide_input_format", "utils._model_to_graph", "utils.select_model_mode_for_export", "<builtin>.list", "torch.onnx.symbolic_helper._set_opset_version"], "<builtin>.ValueError": [], "utils._validate_dynamic_axes": ["warnings.warn", "<builtin>.ValueError", "<builtin>.set", "<builtin>.isinstance", "<builtin>.len", "<builtin>.hasattr", "<builtin>.str", "<builtin>.enumerate"], "torch._C._check_onnx_proto": [], "torch.serialization._open_file_like": [], "zipfile.ZipFile": [], "os.path.exists": [], "os.path.isdir": [], "os.makedirs": [], "os.path.join": [], "utils._set_input_and_output_names.set_names": ["<builtin>.RuntimeError", "<builtin>.zip", "<builtin>.len"], "re.compile": [], "utils._run_symbolic_method": [], "utils._is_onnx_list": ["<builtin>.isinstance"], "utils._add_attribute": ["<builtin>.IndexError", "utils._is_onnx_list", "<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.getattr", "utils._scalar"], "<builtin>.IndexError": [], "utils._scalar": [], "<builtin>.getattr": [], "utils._newNode": ["<builtin>.sorted", "utils._add_attribute"], "<builtin>.sorted": [], "utils._graph_op": ["torch._C._jit_pass_onnx_node_shape_type_inference", "<builtin>.tuple", "<builtin>.dict", "<builtin>.list", "utils._graph_op.const_if_tensor", "utils._newNode"], "utils._graph_op.const_if_tensor": ["<builtin>.isinstance"], "torch._C._jit_pass_onnx_node_shape_type_inference": [], "utils._block_op": ["<builtin>.tuple", "utils._add_attribute", "<builtin>.len", "<builtin>.sorted", "<builtin>.list"], "utils._add_block": [], "utils._add_input_to_block": [], "utils._add_output_to_block": [], "utils._find_symbolic_in_registry": ["torch.onnx.symbolic_registry.get_registered_op", "torch.onnx.symbolic_registry.is_registered_op"], "torch.onnx.symbolic_registry.is_registered_op": [], "torch.onnx.symbolic_registry.get_registered_op": [], "utils._run_symbolic_function": ["torch.tensor", "<builtin>.len", "torch._C.ListType.ofInts", "<builtin>.RuntimeError", "torch.onnx.symbolic_registry.is_registered_op", "torch.onnx.symbolic_caffe2.register_quantized_ops", "<builtin>.range", "torch.stack", "<builtin>.all", "<builtin>.isinstance", "torch._C.ListType.ofFloats", "<builtin>.list", "torch._C._jit_pass_fixup_onnx_controlflow_node", "<builtin>.bool", "torch.onnx.symbolic_registry.register_version", "torch._C._jit_pass_onnx_block", "torch._C._jit_pass_onnx_node_shape_type_inference", "utils._find_symbolic_in_registry", "torch.onnx.symbolic_registry.is_registered_version", "utils._graph_at", "<builtin>.enumerate", "torch._C._jit_onnx_convert_pattern_from_subblock"], "torch.onnx.symbolic_registry.register_version": [], "torch.onnx.symbolic_caffe2.register_quantized_ops": [], "torch._C._jit_onnx_convert_pattern_from_subblock": [], "utils._graph_at": [], "torch._C.ListType.ofInts": [], "torch._C.ListType.ofFloats": [], "torch.tensor": [], "torch.stack": [], "<builtin>.all": [], "<builtin>.bool": [], "torch._C._jit_pass_onnx_block": [], "<builtin>.range": [], "torch._C._jit_pass_fixup_onnx_controlflow_node": [], "torch.onnx.symbolic_registry.is_registered_version": [], "utils._graph_constant": ["torch.CharTensor", "torch.IntTensor", "torch.DoubleTensor", "torch.HalfTensor", "torch.ShortTensor", "torch.FloatTensor", "<builtin>.ValueError", "<builtin>.set", "<builtin>.isinstance", "torch.LongTensor"], "<builtin>.set": [], "torch.CharTensor": [], "torch.ShortTensor": [], "torch.IntTensor": [], "torch.LongTensor": [], "torch.HalfTensor": [], "torch.FloatTensor": [], "torch.DoubleTensor": [], "utils._node_getitem": ["<builtin>.getattr"], "utils.register_custom_op_symbolic": ["<builtin>.bool", "<builtin>.RuntimeError", "torch.onnx.symbolic_registry.register_op", "re.match"], "re.match": [], "torch.onnx.symbolic_registry.register_op": [], "<builtin>.hasattr": []}