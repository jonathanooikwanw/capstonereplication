{"_jit_internal": ["contextlib.contextmanager", "<builtin>.globals", "torch.distributed.rpc.is_available", "weakref.WeakKeyDictionary", "<builtin>.range"], "weakref.WeakKeyDictionary": [], "_jit_internal.createResolutionCallbackFromEnv": [], "_jit_internal.createResolutionCallbackFromEnv.lookupInModule": ["_jit_internal.createResolutionCallbackFromEnv.lookupInModule", "<builtin>.getattr"], "<builtin>.getattr": [], "_jit_internal.createResolutionCallbackFromEnv.parseNestedExpr": ["_jit_internal.createResolutionCallbackFromEnv.lookupInModule", "<builtin>.tuple", "_jit_internal.createResolutionCallbackFromEnv.parseNestedExpr", "<builtin>.len"], "<builtin>.len": [], "<builtin>.tuple": [], "_jit_internal.createResolutionCallbackFromEnv.parseExpr": ["_jit_internal.createResolutionCallbackFromEnv.parseNestedExpr", "<builtin>.len"], "_jit_internal.createResolutionCallbackFromEnv.<lambda1>": ["_jit_internal.createResolutionCallbackFromEnv.parseExpr"], "_jit_internal.createResolutionCallbackFromFrame": ["inspect.currentframe", "_jit_internal.createResolutionCallbackFromEnv"], "inspect.currentframe": [], "_jit_internal.createResolutionCallbackFromFrame.env.__getattr__": ["<builtin>.dir", "<builtin>.getattr"], "<builtin>.dir": [], "_jit_internal.get_closure": ["<builtin>.enumerate"], "<builtin>.enumerate": [], "_jit_internal.createResolutionCallbackFromClosure": ["_jit_internal.createResolutionCallbackFromEnv", "_jit_internal.get_closure"], "_jit_internal.createResolutionCallbackFromClosure.closure_lookup.__getattr__": ["<builtin>.hasattr", "<builtin>.getattr"], "<builtin>.hasattr": [], "_jit_internal.can_compile_class": ["<builtin>.hasattr", "<builtin>.issubclass", "_jit_internal.is_ignored_fn", "<builtin>.getattr", "inspect.isroutine", "<builtin>.all"], "_jit_internal.is_ignored_fn": ["_jit_internal.get_torchscript_modifier"], "<builtin>.issubclass": [], "inspect.isroutine": [], "<builtin>.all": [], "_jit_internal.get_callable_argument_names": ["inspect.signature"], "inspect.signature": [], "_jit_internal.get_annotation_str": ["_jit_internal.get_annotation_str", "<builtin>.isinstance"], "<builtin>.isinstance": [], "_jit_internal.get_type_hint_captures": ["<builtin>.isinstance", "<builtin>.RuntimeError", "textwrap.dedent", "inspect.getsource", "<builtin>.len", "_jit_internal.get_annotation_str", "ast.parse", "inspect.signature"], "inspect.getsource": [], "textwrap.dedent": [], "ast.parse": [], "<builtin>.RuntimeError": [], "_jit_internal.createResolutionCallbackForClassMethods": ["_jit_internal.get_closure", "inspect.isroutine", "_jit_internal.get_type_hint_captures", "<builtin>.getattr"], "_jit_internal.createResolutionCallbackForClassMethods.lookup_in_class": ["<builtin>.getattr"], "_jit_internal.boolean_dispatch": ["<builtin>.RuntimeError"], "_jit_internal.boolean_dispatch.fn": ["<builtin>.len"], "_jit_internal.export": [], "_jit_internal.unused": ["<builtin>.setattr", "<builtin>.isinstance"], "<builtin>.setattr": [], "_jit_internal._IgnoreContextManager.__init__": [], "_jit_internal._IgnoreContextManager.__exit__": [], "_jit_internal.ignore": ["<builtin>.RuntimeError", "warnings.warn", "<builtin>.callable", "<builtin>.isinstance"], "<builtin>.callable": [], "warnings.warn": [], "_jit_internal.ignore.decorator": [], "_jit_internal._copy_to_script_wrapper": [], "_jit_internal.module_has_exports": ["_jit_internal.get_torchscript_modifier", "<builtin>.hasattr", "<builtin>.callable", "<builtin>.dir", "<builtin>.getattr"], "_jit_internal.get_torchscript_modifier": ["<builtin>.hasattr", "<builtin>.callable", "<builtin>.getattr"], "_jit_internal.should_drop": ["_jit_internal.get_torchscript_modifier"], "_jit_internal.is_static_fn": ["inspect.getattr_static", "<builtin>.isinstance"], "inspect.getattr_static": [], "_jit_internal.get_static_fn": ["inspect.getattr_static"], "_jit_internal.copy_torchscript_modifier": ["_jit_internal.get_torchscript_modifier"], "_jit_internal.get_overload_no_implementation_error_message": ["_jit_internal._qualified_name", "torch._sources.get_source_lines_and_file"], "torch._sources.get_source_lines_and_file": [], "_jit_internal._qualified_name": ["torch.package._mangling.demangle", "<builtin>.isinstance", "<builtin>.RuntimeError", "<builtin>.hasattr", "<builtin>.getattr"], "_jit_internal._check_overload_body": ["_jit_internal._check_overload_body.is_ellipsis", "_jit_internal._check_overload_body.is_pass", "<builtin>.RuntimeError", "warnings.warn", "torch._sources.parse_def", "<builtin>.len"], "torch._sources.parse_def": [], "_jit_internal._check_overload_body.is_pass": ["<builtin>.isinstance"], "_jit_internal._check_overload_body.is_ellipsis": ["<builtin>.isinstance"], "_jit_internal._overload": ["_jit_internal._check_overload_body", "_jit_internal._qualified_name"], "_jit_internal._get_fn_overloads": [], "_jit_internal._clear_fn_overloads": [], "_jit_internal.get_class_name_lineno": ["<builtin>.range", "inspect.currentframe"], "<builtin>.range": [], "_jit_internal._overload_method": ["<builtin>.RuntimeError", "_jit_internal._check_overload_body", "_jit_internal._qualified_name", "_jit_internal.get_class_name_lineno"], "_jit_internal._get_overloaded_methods": ["torch._sources.get_source_lines_and_file", "<builtin>.hasattr", "<builtin>.Exception", "<builtin>.len", "<builtin>.str", "_jit_internal._qualified_name"], "<builtin>.str": [], "<builtin>.Exception": [], "_jit_internal.is_tuple": ["<builtin>.hasattr", "_jit_internal.raise_error_container_parameter_missing", "<builtin>.getattr"], "_jit_internal.raise_error_container_parameter_missing": ["<builtin>.RuntimeError"], "_jit_internal.is_list": ["<builtin>.hasattr", "_jit_internal.raise_error_container_parameter_missing", "<builtin>.getattr"], "_jit_internal.is_dict": ["<builtin>.hasattr", "_jit_internal.raise_error_container_parameter_missing", "<builtin>.getattr"], "_jit_internal.is_optional": ["_jit_internal.is_optional.safe_is_subclass", "<builtin>.type", "<builtin>.getattr", "<builtin>.hasattr", "<builtin>.len", "_jit_internal.raise_error_container_parameter_missing"], "_jit_internal.is_optional.safe_is_subclass": ["<builtin>.issubclass", "inspect.isclass"], "inspect.isclass": [], "<builtin>.type": [], "_jit_internal.is_future": ["<builtin>.RuntimeError", "<builtin>.getattr"], "torch.distributed.rpc.is_available": [], "_jit_internal.is_rref": ["<builtin>.RuntimeError", "<builtin>.getattr"], "_jit_internal.is_rref_instance": ["<builtin>.isinstance"], "_jit_internal.is_final": ["<builtin>.isinstance", "<builtin>.type", "<builtin>.getattr"], "_jit_internal.BroadcastingListCls.__getitem__": [], "<builtin>.globals": [], "_jit_internal.is_scripting": [], "torch.package._mangling.demangle": [], "_jit_internal._try_get_dispatched_fn": ["<builtin>.callable"], "_jit_internal._get_named_tuple_properties": ["torch._sources.fake_range", "<builtin>.type", "torch._C.TensorType.getInferred", "<builtin>.hasattr", "<builtin>.issubclass", "torch.jit.annotations.ann_to_type"], "torch._sources.fake_range": [], "torch.jit.annotations.ann_to_type": [], "torch._C.TensorType.getInferred": [], "_jit_internal._create_named_tuple": ["collections.namedtuple"], "collections.namedtuple": [], "contextlib.contextmanager": [], "_jit_internal._disable_emit_hooks": ["torch._C._jit_get_emit_hooks", "torch._C._jit_set_emit_hooks"], "torch._C._jit_get_emit_hooks": [], "torch._C._jit_set_emit_hooks": [], "_jit_internal._disable_emit_hooks_decorator": [], "_jit_internal._disable_emit_hooks_decorator.__enter__": ["torch._C._jit_get_emit_hooks", "torch._C._jit_set_emit_hooks"], "_jit_internal._disable_emit_hooks_decorator.__exit__": ["torch._C._jit_set_emit_hooks"], "_jit_internal._is_exception": ["<builtin>.issubclass", "inspect.isclass"], "_jit_internal.get_origin": ["<builtin>.getattr"], "_jit_internal.get_args": ["<builtin>.getattr"], "_jit_internal.check_args_exist": ["_jit_internal.raise_error_container_parameter_missing"], "_jit_internal.container_checker": ["_jit_internal.container_checker", "_jit_internal.get_args", "<builtin>.isinstance", "<builtin>.zip", "_jit_internal.get_origin", "<builtin>.len", "_jit_internal.check_args_exist"], "<builtin>.zip": [], "_jit_internal._isinstance": ["_jit_internal.container_checker", "_jit_internal._isinstance", "<builtin>.isinstance", "<builtin>.RuntimeError", "_jit_internal.get_origin", "_jit_internal.check_args_exist"], "_jit_internal._TensorExtractor.__init__": ["<builtin>.super"], "<builtin>.super": [], "_jit_internal._TensorExtractor.persistent_id": ["_jit_internal.is_rref_instance", "<builtin>.isinstance"], "_jit_internal._extract_tensors": ["io.BytesIO", "_jit_internal._TensorExtractor.__init__", "pickle.Pickler.dump"], "io.BytesIO": [], "pickle.Pickler.dump": []}