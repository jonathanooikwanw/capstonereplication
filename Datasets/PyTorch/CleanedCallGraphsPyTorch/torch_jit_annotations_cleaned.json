{"annotations": ["torch.distributed.rpc.is_available"], "torch.distributed.rpc.is_available": [], "annotations.Module.__init__": [], "annotations.Module.__getattr__": ["<builtin>.RuntimeError"], "<builtin>.RuntimeError": [], "annotations.EvalEnv": ["annotations.Module.__init__"], "annotations.EvalEnv.__init__": ["torch.distributed.rpc.is_available"], "annotations.EvalEnv.__getitem__": ["<builtin>.getattr"], "<builtin>.getattr": [], "annotations.get_signature": ["annotations.get_type_line", "annotations.try_real_annotations", "torch._sources.get_source_lines_and_file", "annotations.parse_type_line", "textwrap.dedent"], "annotations.try_real_annotations": ["<builtin>.all", "annotations.ann_to_type", "inspect.signature"], "torch._sources.get_source_lines_and_file": [], "textwrap.dedent": [], "annotations.get_type_line": ["<builtin>.enumerate", "<builtin>.filter", "<builtin>.list", "<builtin>.map", "re.compile", "<builtin>.len", "<builtin>.RuntimeError", "<builtin>.str"], "annotations.parse_type_line": ["annotations.EvalEnv.__init__", "<builtin>.isinstance", "<builtin>.eval", "annotations.split_type_line", "annotations.ann_to_type", "<builtin>.RuntimeError"], "annotations.is_function_or_method": ["inspect.isfunction", "inspect.ismethod"], "inspect.isfunction": [], "inspect.ismethod": [], "annotations.is_vararg": ["<builtin>.hasattr", "inspect.getfullargspec", "annotations.is_function_or_method"], "<builtin>.hasattr": [], "inspect.getfullargspec": [], "annotations.get_param_names": ["<builtin>.range", "<builtin>.hasattr", "inspect.getfullargspec", "annotations.is_function_or_method", "inspect.unwrap", "_jit_internal.is_ignored_fn", "<builtin>.str"], "_jit_internal.is_ignored_fn": [], "inspect.unwrap": [], "<builtin>.str": [], "<builtin>.range": [], "annotations.check_fn": ["<builtin>.isinstance", "torch._sources.get_source_lines_and_file", "torch.jit.frontend.FrontendError", "<builtin>.len", "textwrap.dedent", "ast.parse"], "ast.parse": [], "<builtin>.len": [], "<builtin>.isinstance": [], "torch.jit.frontend.FrontendError": [], "annotations.split_type_line": ["<builtin>.RuntimeError", "<builtin>.len"], "<builtin>.eval": [], "annotations.ann_to_type": ["annotations.try_ann_to_type", "<builtin>.ValueError"], "<builtin>.enumerate": [], "annotations.get_type_line.<lambda1>": [], "<builtin>.filter": [], "<builtin>.list": [], "re.compile": [], "annotations.get_type_line.<lambda2>": [], "annotations.get_type_line.<lambda3>": [], "annotations.get_type_line.get_parameter_type": ["<builtin>.len"], "<builtin>.map": [], "inspect.signature": [], "<builtin>.all": [], "annotations.get_enum_value_type": ["torch._C.unify_type_list", "<builtin>.list", "annotations.try_ann_to_type", "<builtin>.ValueError", "<builtin>.type"], "<builtin>.ValueError": [], "<builtin>.type": [], "annotations.try_ann_to_type": ["<builtin>.issubclass", "torch._C.EnumType", "torch._C.AnyType.get", "torch._C.OptionalType", "torch.distributed.rpc.is_available", "<builtin>.ValueError", "torch.jit._script._recursive_compile_class", "annotations.is_tensor", "torch._C.BoolType.get", "<builtin>.type", "torch._jit_internal.can_compile_class", "torch._C._resolve_type_from_object", "_jit_internal.is_dict", "torch._C.NoneType.get", "torch._C.RRefType", "<builtin>.hasattr", "<builtin>.repr", "torch._C.TupleType", "_jit_internal.is_future", "torch._C.TensorType.getInferred", "_jit_internal.is_list", "torch._C.IntType.get", "torch._C.ComplexType.get", "torch._C.ListType", "_jit_internal.is_optional", "_jit_internal.is_tuple", "annotations.try_ann_to_type", "<builtin>.len", "torch._C.DictType", "torch._C.DeviceObjType.get", "_jit_internal._qualified_name", "annotations.get_enum_value_type", "torch._C.StreamObjType.get", "<builtin>.list", "torch._C.FloatType.get", "_state._get_script_class", "torch._C.InterfaceType", "torch._C.StringType.get", "inspect.isclass", "_jit_internal.is_rref", "torch._C.FutureType", "torch._C.TensorType.get"], "torch._C.unify_type_list": [], "annotations.is_tensor": ["<builtin>.issubclass", "warnings.warn"], "<builtin>.issubclass": [], "warnings.warn": [], "torch._C.TensorType.getInferred": [], "torch._C.NoneType.get": [], "inspect.isclass": [], "torch._C.TensorType.get": [], "_jit_internal.is_tuple": [], "torch._C.TupleType": [], "_jit_internal.is_list": [], "torch._C.ListType": [], "_jit_internal.is_dict": [], "torch._C.DictType": [], "_jit_internal.is_optional": [], "<builtin>.repr": [], "torch._C.OptionalType": [], "_jit_internal.is_rref": [], "torch._C.RRefType": [], "_jit_internal.is_future": [], "torch._C.FutureType": [], "torch._C.FloatType.get": [], "torch._C.ComplexType.get": [], "torch._C.IntType.get": [], "torch._C.StringType.get": [], "torch._C.BoolType.get": [], "torch._C.AnyType.get": [], "torch._C.InterfaceType": [], "torch._C.DeviceObjType.get": [], "torch._C.StreamObjType.get": [], "_state._get_script_class": [], "torch.jit._script._recursive_compile_class": [], "_jit_internal._qualified_name": [], "torch._C.EnumType": [], "torch._jit_internal.can_compile_class": [], "annotations.try_ann_to_type.fake_rcb": [], "torch._C._resolve_type_from_object": []}