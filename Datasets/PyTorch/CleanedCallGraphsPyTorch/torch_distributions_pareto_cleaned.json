{"pareto": [], "pareto.Pareto.__init__": ["<builtin>.super", "torch.distributions.utils.broadcast_all", "torch.distributions.transforms.AffineTransform", "torch.distributions.exponential.Exponential", "torch.distributions.transforms.ExpTransform"], "torch.distributions.utils.broadcast_all": [], "torch.distributions.exponential.Exponential": [], "torch.distributions.transforms.ExpTransform": [], "torch.distributions.transforms.AffineTransform": [], "<builtin>.super": [], "pareto.Pareto.expand": ["torch.distributions.transformed_distribution.TransformedDistribution.scale.expand", "<builtin>.super", "torch.distributions.transformed_distribution.TransformedDistribution.alpha.expand", "torch.distributions.transformed_distribution.TransformedDistribution._get_checked_instance"], "torch.distributions.transformed_distribution.TransformedDistribution._get_checked_instance": [], "torch.distributions.transformed_distribution.TransformedDistribution.scale.expand": [], "torch.distributions.transformed_distribution.TransformedDistribution.alpha.expand": [], "pareto.Pareto.mean": ["torch.distributions.transformed_distribution.TransformedDistribution.alpha.clamp"], "torch.distributions.transformed_distribution.TransformedDistribution.alpha.clamp": [], "pareto.Pareto.variance": ["torch.distributions.transformed_distribution.TransformedDistribution.alpha.clamp", "torch.distributions.transformed_distribution.TransformedDistribution.scale.pow"], "torch.distributions.transformed_distribution.TransformedDistribution.scale.pow": [], "torch.distributions.constraints.dependent_property": [], "pareto.Pareto": ["torch.distributions.constraints.dependent_property"], "pareto.Pareto.support": ["torch.distributions.constraints.greater_than"], "torch.distributions.constraints.greater_than": [], "pareto.Pareto.entropy": ["torch.distributions.transformed_distribution.TransformedDistribution.alpha.reciprocal", "torch.distributions.transformed_distribution.TransformedDistribution.scale.log"], "torch.distributions.transformed_distribution.TransformedDistribution.scale.log": [], "torch.distributions.transformed_distribution.TransformedDistribution.alpha.reciprocal": []}