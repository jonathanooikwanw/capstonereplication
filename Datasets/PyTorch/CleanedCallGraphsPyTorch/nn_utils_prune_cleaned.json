{"prune": [], "prune.BasePruningMethod.__init__": [], "prune.BasePruningMethod.__call__": ["prune.BasePruningMethod.apply_mask", "<builtin>.setattr"], "prune.BasePruningMethod.apply_mask": ["<builtin>.getattr"], "<builtin>.setattr": [], "prune.BasePruningMethod": ["abc.abstractmethod"], "abc.abstractmethod": [], "prune.BasePruningMethod.compute_mask": [], "<builtin>.getattr": [], "prune.BasePruningMethod.apply": ["prune.PruningContainer.compute_mask", "<builtin>.setattr", "<builtin>.getattr", "prune.BasePruningMethod.apply._get_composite_method", "<builtin>.isinstance", "torch.ones_like", "prune.BasePruningMethod.apply_mask"], "prune.BasePruningMethod.apply._get_composite_method": ["prune.PruningContainer.__init__", "prune.PruningContainer.add_pruning_method", "<builtin>.isinstance", "prune.BasePruningMethod.__init__"], "<builtin>.isinstance": [], "prune.PruningContainer.__init__": ["<builtin>.len", "<builtin>.tuple", "prune.PruningContainer.add_pruning_method", "<builtin>.isinstance"], "prune.PruningContainer.add_pruning_method": ["<builtin>.type", "<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.ValueError"], "torch.ones_like": [], "prune.PruningContainer.compute_mask": ["prune.PruningContainer.compute_mask._combine_masks"], "prune.BasePruningMethod.prune": ["torch.ones_like", "prune.BasePruningMethod.compute_mask", "prune.PruningContainer.compute_mask"], "prune.BasePruningMethod.remove": ["prune.BasePruningMethod.apply_mask", "<builtin>.delattr", "<builtin>.hasattr", "<builtin>.setattr"], "<builtin>.hasattr": [], "<builtin>.delattr": [], "<builtin>.tuple": [], "<builtin>.len": [], "<builtin>.type": [], "<builtin>.TypeError": [], "<builtin>.ValueError": [], "prune.PruningContainer.__len__": ["<builtin>.len"], "prune.PruningContainer.__iter__": ["<builtin>.iter"], "<builtin>.iter": [], "prune.PruningContainer.__getitem__": [], "prune.PruningContainer.compute_mask._combine_masks": ["<builtin>.AttributeError", "<builtin>.len", "<builtin>.IndexError", "<builtin>.ValueError", "<builtin>.slice", "<builtin>.hasattr", "<builtin>.range"], "<builtin>.AttributeError": [], "<builtin>.IndexError": [], "<builtin>.range": [], "<builtin>.slice": [], "prune.Identity.compute_mask": [], "prune.Identity.apply": ["<builtin>.super"], "<builtin>.super": [], "prune.RandomUnstructured.__init__": ["prune._validate_pruning_amount_init"], "prune._validate_pruning_amount_init": ["<builtin>.TypeError", "<builtin>.float", "<builtin>.isinstance", "<builtin>.ValueError"], "prune.RandomUnstructured.compute_mask": ["prune._validate_pruning_amount", "torch.rand_like", "torch.topk", "prune._compute_nparams_toprune"], "prune._compute_nparams_toprune": ["<builtin>.round", "<builtin>.int", "<builtin>.isinstance"], "prune._validate_pruning_amount": ["<builtin>.isinstance", "<builtin>.ValueError"], "torch.rand_like": [], "torch.topk": [], "prune.RandomUnstructured.apply": ["<builtin>.super"], "prune.L1Unstructured.__init__": ["prune._validate_pruning_amount_init"], "prune.L1Unstructured.compute_mask": ["prune._validate_pruning_amount", "torch.abs", "torch.topk", "prune._compute_nparams_toprune"], "torch.abs": [], "prune.L1Unstructured.apply": ["<builtin>.super"], "prune.RandomStructured.__init__": ["prune._validate_pruning_amount_init"], "prune.RandomStructured.compute_mask": ["prune.RandomStructured.compute_mask.make_mask", "prune._validate_pruning_dim", "prune._compute_nparams_toprune", "prune._validate_pruning_amount", "prune._validate_structured_pruning"], "prune._validate_structured_pruning": ["<builtin>.len", "<builtin>.ValueError"], "prune._validate_pruning_dim": ["<builtin>.IndexError"], "prune.RandomStructured.compute_mask.make_mask": ["torch.zeros_like", "torch.kthvalue", "<builtin>.len", "<builtin>.slice", "torch.rand"], "torch.rand": [], "torch.kthvalue": [], "torch.zeros_like": [], "prune.RandomStructured.apply": ["<builtin>.super"], "prune.LnStructured.__init__": ["prune._validate_pruning_amount_init"], "prune.LnStructured.compute_mask": ["torch.topk", "prune._validate_pruning_dim", "prune._compute_nparams_toprune", "prune.LnStructured.compute_mask.make_mask", "prune._validate_pruning_amount", "prune._compute_norm", "prune._validate_structured_pruning"], "prune._compute_norm": ["torch.norm", "<builtin>.list", "<builtin>.range"], "prune.LnStructured.compute_mask.make_mask": ["<builtin>.slice", "torch.zeros_like", "<builtin>.len"], "prune.LnStructured.apply": ["<builtin>.super"], "prune.CustomFromMask.__init__": [], "prune.CustomFromMask.compute_mask": [], "prune.CustomFromMask.apply": ["<builtin>.super"], "prune.identity": ["prune.Identity.apply"], "prune.random_unstructured": ["prune.RandomUnstructured.apply"], "prune.l1_unstructured": ["prune.L1Unstructured.apply"], "prune.random_structured": ["prune.RandomStructured.apply"], "prune.ln_structured": ["prune.LnStructured.apply"], "prune.global_unstructured": ["prune.PruningContainer.compute_mask", "prune.PruningContainer.__init__", "torch.nn.utils.parameters_to_vector", "<builtin>.getattr", "prune.PruningContainer.add_pruning_method", "<builtin>.isinstance", "prune.custom_from_mask", "<builtin>.TypeError", "torch.ones_like"], "torch.nn.utils.parameters_to_vector": [], "prune.custom_from_mask": ["prune.CustomFromMask.apply"], "prune.remove": ["<builtin>.isinstance", "<builtin>.ValueError"], "prune.is_pruned": ["<builtin>.isinstance"], "<builtin>.float": [], "<builtin>.round": [], "<builtin>.int": [], "<builtin>.list": [], "torch.norm": []}